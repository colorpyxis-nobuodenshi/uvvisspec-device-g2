
uvvisspec.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000128  00800100  000045c6  0000465a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000045c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000708  00800228  00800228  00004782  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00004782  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004794  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000380  00000000  00000000  000047d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00007341  00000000  00000000  00004b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001ffb  00000000  00000000  0000be95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003a20  00000000  00000000  0000de90  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b94  00000000  00000000  000118b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000293b  00000000  00000000  00012444  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000478a  00000000  00000000  00014d7f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  00019509  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	bc c7       	rjmp	.+3960   	; 0xf7a <__ctors_end>
       2:	00 00       	nop
       4:	d6 c7       	rjmp	.+4012   	; 0xfb2 <__bad_interrupt>
       6:	00 00       	nop
       8:	d4 c7       	rjmp	.+4008   	; 0xfb2 <__bad_interrupt>
       a:	00 00       	nop
       c:	d2 c7       	rjmp	.+4004   	; 0xfb2 <__bad_interrupt>
       e:	00 00       	nop
      10:	d0 c7       	rjmp	.+4000   	; 0xfb2 <__bad_interrupt>
      12:	00 00       	nop
      14:	ce c7       	rjmp	.+3996   	; 0xfb2 <__bad_interrupt>
      16:	00 00       	nop
      18:	cc c7       	rjmp	.+3992   	; 0xfb2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	ca c7       	rjmp	.+3988   	; 0xfb2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c8 c7       	rjmp	.+3984   	; 0xfb2 <__bad_interrupt>
      22:	00 00       	nop
      24:	c6 c7       	rjmp	.+3980   	; 0xfb2 <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 5b 12 	jmp	0x24b6	; 0x24b6 <__vector_10>
      2c:	0c 94 28 13 	jmp	0x2650	; 0x2650 <__vector_11>
      30:	c0 c7       	rjmp	.+3968   	; 0xfb2 <__bad_interrupt>
      32:	00 00       	nop
      34:	be c7       	rjmp	.+3964   	; 0xfb2 <__bad_interrupt>
      36:	00 00       	nop
      38:	bc c7       	rjmp	.+3960   	; 0xfb2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	ba c7       	rjmp	.+3956   	; 0xfb2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	b8 c7       	rjmp	.+3952   	; 0xfb2 <__bad_interrupt>
      42:	00 00       	nop
      44:	b6 c7       	rjmp	.+3948   	; 0xfb2 <__bad_interrupt>
      46:	00 00       	nop
      48:	b4 c7       	rjmp	.+3944   	; 0xfb2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	b2 c7       	rjmp	.+3940   	; 0xfb2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	b0 c7       	rjmp	.+3936   	; 0xfb2 <__bad_interrupt>
      52:	00 00       	nop
      54:	ae c7       	rjmp	.+3932   	; 0xfb2 <__bad_interrupt>
      56:	00 00       	nop
      58:	ac c7       	rjmp	.+3928   	; 0xfb2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	aa c7       	rjmp	.+3924   	; 0xfb2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a8 c7       	rjmp	.+3920   	; 0xfb2 <__bad_interrupt>
      62:	00 00       	nop
      64:	a6 c7       	rjmp	.+3916   	; 0xfb2 <__bad_interrupt>
      66:	00 00       	nop
      68:	a4 c7       	rjmp	.+3912   	; 0xfb2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	a2 c7       	rjmp	.+3908   	; 0xfb2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	a0 c7       	rjmp	.+3904   	; 0xfb2 <__bad_interrupt>
      72:	00 00       	nop
      74:	9e c7       	rjmp	.+3900   	; 0xfb2 <__bad_interrupt>
      76:	00 00       	nop
      78:	9c c7       	rjmp	.+3896   	; 0xfb2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	9a c7       	rjmp	.+3892   	; 0xfb2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	98 c7       	rjmp	.+3888   	; 0xfb2 <__bad_interrupt>
      82:	00 00       	nop
      84:	96 c7       	rjmp	.+3884   	; 0xfb2 <__bad_interrupt>
      86:	00 00       	nop
      88:	94 c7       	rjmp	.+3880   	; 0xfb2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	92 c7       	rjmp	.+3876   	; 0xfb2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	90 c7       	rjmp	.+3872   	; 0xfb2 <__bad_interrupt>
      92:	00 00       	nop
      94:	8e c7       	rjmp	.+3868   	; 0xfb2 <__bad_interrupt>
      96:	00 00       	nop
      98:	8c c7       	rjmp	.+3864   	; 0xfb2 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	8a c7       	rjmp	.+3860   	; 0xfb2 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	88 c7       	rjmp	.+3856   	; 0xfb2 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	86 c7       	rjmp	.+3852   	; 0xfb2 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	84 c7       	rjmp	.+3848   	; 0xfb2 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	08 00       	.word	0x0008	; ????
      ae:	00 00       	nop
      b0:	be 92       	st	-X, r11
      b2:	24 49       	sbci	r18, 0x94	; 148
      b4:	12 3e       	cpi	r17, 0xE2	; 226
      b6:	ab aa       	std	Y+51, r10	; 0x33
      b8:	aa 2a       	or	r10, r26
      ba:	be cd       	rjmp	.-1156   	; 0xfffffc38 <__eeprom_end+0xff7efc38>
      bc:	cc cc       	rjmp	.-1640   	; 0xfffffa56 <__eeprom_end+0xff7efa56>
      be:	4c 3e       	cpi	r20, 0xEC	; 236
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	be ab       	std	Y+54, r27	; 0x36
      c6:	aa aa       	std	Y+50, r10	; 0x32
      c8:	aa 3e       	cpi	r26, 0xEA	; 234
      ca:	00 00       	nop
      cc:	00 00       	nop
      ce:	bf 00       	.word	0x00bf	; ????
      d0:	00 00       	nop
      d2:	80 3f       	cpi	r24, 0xF0	; 240
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	00 08       	sbc	r0, r0
      da:	41 78       	andi	r20, 0x81	; 129
      dc:	d3 bb       	out	0x13, r29	; 19
      de:	43 87       	std	Z+11, r20	; 0x0b
      e0:	d1 13       	cpse	r29, r17
      e2:	3d 19       	sub	r19, r13
      e4:	0e 3c       	cpi	r16, 0xCE	; 206
      e6:	c3 bd       	out	0x23, r28	; 35
      e8:	42 82       	std	Z+2, r4	; 0x02
      ea:	ad 2b       	or	r26, r29
      ec:	3e 68       	ori	r19, 0x8E	; 142
      ee:	ec 82       	std	Y+4, r14	; 0x04
      f0:	76 be       	out	0x36, r7	; 54
      f2:	d9 8f       	std	Y+25, r29	; 0x19
      f4:	e1 a9       	ldd	r30, Z+49	; 0x31
      f6:	3e 4c       	sbci	r19, 0xCE	; 206
      f8:	80 ef       	ldi	r24, 0xF0	; 240
      fa:	ff be       	out	0x3f, r15	; 63
      fc:	01 c4       	rjmp	.+2050   	; 0x900 <spectralsensitivitycoeff+0x34a>
      fe:	ff 7f       	andi	r31, 0xFF	; 255
     100:	3f 00       	.word	0x003f	; ????
     102:	00 00       	nop
     104:	00 00       	nop

00000106 <__trampolines_end>:
     106:	6e 61       	ori	r22, 0x1E	; 30
     108:	6e 00       	.word	0x006e	; ????

0000010a <__c.2332>:
     10a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     11a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     12a:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     13a:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     14a:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     15a:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     16a:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     17a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     18a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     19a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1aa:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1ba:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1ca:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1da:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1ea:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1fa:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000208 <wl_lut_1nm>:
     208:	07 00 08 00 08 00 08 00 09 00 09 00 09 00 0a 00     ................
     218:	0a 00 0b 00 0b 00 0b 00 0c 00 0c 00 0c 00 0d 00     ................
     228:	0d 00 0e 00 0e 00 0e 00 0f 00 0f 00 0f 00 10 00     ................
     238:	10 00 11 00 11 00 11 00 12 00 12 00 12 00 13 00     ................
     248:	13 00 14 00 14 00 14 00 15 00 15 00 15 00 16 00     ................
     258:	16 00 17 00 17 00 17 00 18 00 18 00 18 00 19 00     ................
     268:	19 00 1a 00 1a 00 1a 00 1b 00 1b 00 1b 00 1c 00     ................
     278:	1c 00 1d 00 1d 00 1d 00 1e 00 1e 00 1f 00 1f 00     ................
     288:	1f 00 20 00 20 00 20 00 21 00 21 00 22 00 22 00     .. . . .!.!.".".
     298:	22 00 23 00 23 00 24 00 24 00 24 00 25 00 25 00     ".#.#.$.$.$.%.%.
     2a8:	25 00 26 00 26 00 27 00 27 00 27 00 28 00 28 00     %.&.&.'.'.'.(.(.
     2b8:	29 00 29 00 29 00 2a 00 2a 00 2a 00 2b 00 2b 00     ).).).*.*.*.+.+.
     2c8:	2c 00 2c 00 2c 00 2d 00 2d 00 2e 00 2e 00 2e 00     ,.,.,.-.-.......
     2d8:	2f 00 2f 00 30 00 30 00 30 00 31 00 31 00 32 00     /./.0.0.0.1.1.2.
     2e8:	32 00 32 00 33 00 33 00 34 00 34 00 34 00 35 00     2.2.3.3.4.4.4.5.
     2f8:	35 00 35 00 36 00 36 00 37 00 37 00 37 00 38 00     5.5.6.6.7.7.7.8.
     308:	38 00 39 00 39 00 39 00 3a 00 3a 00 3b 00 3b 00     8.9.9.9.:.:.;.;.
     318:	3b 00 3c 00 3c 00 3d 00 3d 00 3d 00 3e 00 3e 00     ;.<.<.=.=.=.>.>.
     328:	3f 00 3f 00 40 00 40 00 40 00 41 00 41 00 42 00     ?.?.@.@.@.A.A.B.
     338:	42 00 42 00 43 00 43 00 44 00 44 00 44 00 45 00     B.B.C.C.D.D.D.E.
     348:	45 00 46 00 46 00 46 00 47 00 47 00 48 00 48 00     E.F.F.F.G.G.H.H.
     358:	48 00 49 00 49 00 4a 00 4a 00 4b 00 4b 00 4b 00     H.I.I.J.J.K.K.K.
     368:	4c 00 4c 00 4d 00 4d 00 4d 00 4e 00 4e 00 4f 00     L.L.M.M.M.N.N.O.
     378:	4f 00 50 00 50 00 50 00 51 00 51 00 52 00 52 00     O.P.P.P.Q.Q.R.R.
     388:	52 00 53 00 53 00 54 00 54 00 55 00 55 00 55 00     R.S.S.T.T.U.U.U.
     398:	56 00 56 00 57 00 57 00 58 00 58 00 58 00 59 00     V.V.W.W.X.X.X.Y.
     3a8:	59 00 5a 00 5a 00 5b 00 5b 00 5b 00 5c 00 5c 00     Y.Z.Z.[.[.[.\.\.
     3b8:	5d 00 5d 00 5e 00 5e 00 5e 00 5f 00 5f 00 60 00     ].].^.^.^._._.`.
     3c8:	60 00 61 00 61 00 61 00 62 00 62 00 63 00 63 00     `.a.a.a.b.b.c.c.
     3d8:	64 00 64 00 65 00 65 00 65 00 66 00 66 00 67 00     d.d.e.e.e.f.f.g.
     3e8:	67 00 68 00 68 00 69 00 69 00 69 00 6a 00 6a 00     g.h.h.i.i.i.j.j.
     3f8:	6b 00 6b 00 6c 00 6c 00 6d 00 6d 00 6d 00 6e 00     k.k.l.l.m.m.m.n.
     408:	6e 00 6f 00 6f 00 70 00 70 00 71 00 71 00 72 00     n.o.o.p.p.q.q.r.
     418:	72 00 72 00 73 00 73 00 74 00 74 00 75 00 75 00     r.r.s.s.t.t.u.u.
     428:	76 00 76 00 77 00 77 00 77 00 78 00 78 00 79 00     v.v.w.w.w.x.x.y.
     438:	79 00 7a 00 7a 00 7b 00 7b 00 7c 00 7c 00 7d 00     y.z.z.{.{.|.|.}.
     448:	7d 00 7e 00 7e 00 7e 00 7f 00 7f 00 80 00 80 00     }.~.~.~.........
     458:	81 00 81 00 82 00 82 00 83 00 83 00 84 00 84 00     ................
     468:	85 00 85 00 86 00 86 00 87 00 87 00 88 00 88 00     ................
     478:	89 00 89 00 89 00 8a 00 8a 00 8b 00 8b 00 8c 00     ................
     488:	8c 00 8d 00 8d 00 8e 00 8e 00 8f 00 8f 00 90 00     ................
     498:	90 00 91 00 91 00 92 00 92 00 93 00 93 00 94 00     ................
     4a8:	94 00 95 00 95 00 96 00 96 00 97 00 97 00 98 00     ................
     4b8:	98 00 99 00 99 00 9a 00 9b 00 9b 00 9c 00 9c 00     ................
     4c8:	9d 00 9d 00 9e 00 9e 00 9f 00 9f 00 a0 00 a0 00     ................
     4d8:	a1 00 a1 00 a2 00 a2 00 a3 00 a3 00 a4 00 a4 00     ................
     4e8:	a5 00 a6 00 a6 00 a7 00 a7 00 a8 00 a8 00 a9 00     ................
     4f8:	a9 00 aa 00 aa 00 ab 00 ab 00 ac 00 ad 00 ad 00     ................
     508:	ae 00 ae 00 af 00 af 00 b0 00 b0 00 b1 00 b2 00     ................
     518:	b2 00 b3 00 b3 00 b4 00 b4 00 b5 00 b5 00 b6 00     ................
     528:	b7 00 b7 00 b8 00 b8 00 b9 00 b9 00 ba 00 bb 00     ................
     538:	bb 00 bc 00 bc 00 bd 00 bd 00 be 00 bf 00 bf 00     ................
     548:	c0 00 c0 00 c1 00 c2 00 c2 00 c3 00 c3 00 c4 00     ................
     558:	c5 00 c5 00 c6 00 c6 00 c7 00 c8 00 c8 00 c9 00     ................
     568:	c9 00 ca 00 cb 00 cb 00 cc 00 cc 00 cd 00 ce 00     ................
     578:	ce 00 cf 00 cf 00 d0 00 d1 00 d1 00 d2 00 d3 00     ................
     588:	d3 00 d4 00 d5 00 d5 00 d6 00 d6 00 d7 00 d8 00     ................
     598:	d8 00 d9 00 da 00 da 00 db 00 dc 00 dc 00 dd 00     ................
     5a8:	de 00 de 00 df 00 e0 00 e0 00 e1 00 e2 00           ..............

000005b6 <spectralsensitivitycoeff>:
     5b6:	a5 38 16 4b a5 38 16 4b a5 38 16 4b a5 38 16 4b     .8.K.8.K.8.K.8.K
     5c6:	a5 38 16 4b a5 38 16 4b a5 38 16 4b a5 38 16 4b     .8.K.8.K.8.K.8.K
     5d6:	68 92 15 4b 37 60 15 4b 1e f8 15 4b 64 92 1b 4b     h..K7`.K...Kd..K
     5e6:	4c a4 24 4b 28 4e 2e 4b 61 29 38 4b 4f a9 40 4b     L.$K(N.Ka)8KO.@K
     5f6:	d8 8c 48 4b 77 c9 4f 4b 01 98 55 4b 95 22 56 4b     ..HKw.OK..UK."VK
     606:	9b d9 55 4b d8 ed 54 4b 6e fe 52 4b af c8 4f 4b     ..UK..TKn.RK..OK
     616:	1f be 4c 4b 3d 3b 4a 4b 4d 4c 4b 4b ef 94 4f 4b     ..LK=;JKMLKK..OK
     626:	e2 dd 54 4b 82 20 5b 4b 2c a0 65 4b 2d f3 71 4b     ..TK. [K,.eK-.qK
     636:	c0 92 7e 4b 19 91 85 4b c2 ad 8a 4b ba 63 8f 4b     ..~K...K...K.c.K
     646:	5a b6 93 4b 7d 6e 97 4b 92 58 98 4b ea c0 98 4b     Z..K}n.K.X.K...K
     656:	2a b1 98 4b 52 e1 97 4b 1c 3a 95 4b 04 53 92 4b     *..KR..K.:.K.S.K
     666:	12 4c 8f 4b 7e 61 8c 4b f5 dd 89 4b 03 8f 87 4b     .L.K~a.K...K...K
     676:	fa 8b 85 4b d5 b0 84 4b 73 aa 85 4b e0 f6 86 4b     ...K...Ks..K...K
     686:	16 80 88 4b 42 3d 8a 4b 3c 2b 8c 4b 5a 3c 8e 4b     ...KB=.K<+.KZ<.K
     696:	24 77 90 4b 0e 59 93 4b 18 0c 97 4b d5 d3 9a 4b     $w.K.Y.K...K...K
     6a6:	e5 9a 9e 4b 80 00 a2 4b 52 d5 a4 4b 5a 88 a7 4b     ...K...KR..KZ..K
     6b6:	b5 19 aa 4b 61 75 ac 4b 86 81 ae 4b fb 46 b0 4b     ...Kau.K...K.F.K
     6c6:	be aa b1 4b f2 bb b1 4b 9e 39 af 4b 8c 51 ac 4b     ...K...K.9.K.Q.K
     6d6:	4f 22 a9 4b 16 c3 a5 4b 39 35 a2 4b e0 aa 9e 4b     O".K...K95.K...K
     6e6:	ac 34 9b 4b 6d eb 97 4b 47 c0 95 4b 19 cd 93 4b     .4.Km..KG..K...K
     6f6:	f8 15 92 4b ef 9e 90 4b 1f 8f 90 4b 7d e8 90 4b     ...K...K...K}..K
     706:	21 68 91 4b 5c fe 91 4b 14 95 92 4b 84 23 93 4b     !h.K\..K...K.#.K
     716:	aa a4 93 4b a4 0f 94 4b ec 12 94 4b d5 76 93 4b     ...K...K...K.v.K
     726:	77 be 92 4b 57 ef 91 4b a0 0b 91 4b 5c e8 8f 4b     w..KW..K...K\..K
     736:	62 be 8e 4b bc 92 8d 4b 61 6a 8c 4b c3 70 8b 4b     b..K...Kaj.K.p.K
     746:	8e 90 8a 4b 74 b9 89 4b 3f eb 88 4b 41 30 88 4b     ...Kt..K?..KA0.K
     756:	9c 95 87 4b a4 03 87 4b 84 7a 86 4b 66 fa 85 4b     ...K...K.z.Kf..K
     766:	b7 a8 85 4b 82 65 85 4b 73 29 85 4b 85 f3 84 4b     ...K.e.Ks).K...K
     776:	d5 cb 84 4b 44 b8 84 4b 6f a5 84 4b a7 90 84 4b     ...KD..Ko..K...K
     786:	49 77 84 4b 6e 33 84 4b c5 de 83 4b 8b 82 83 4b     Iw.Kn3.K...K...K
     796:	c5 1e 83 4b 39 ab 82 4b 9b 0a 82 4b f2 65 81 4b     ...K9..K...K.e.K
     7a6:	08 c0 80 4b 9b 1b 80 4b 43 26 7f 4b 1d 4c 7e 4b     ...K...KC&.K.L~K
     7b6:	41 71 7d 4b 2f 8e 7c 4b 87 9b 7b 4b f4 14 7a 4b     Aq}K/.|K..{K..zK
     7c6:	42 51 78 4b f5 7d 76 4b c4 9f 74 4b 51 bb 72 4b     BQxK.}vK..tKQ.rK
     7d6:	55 da 70 4b 8b f7 6e 4b e9 11 6d 4b bf 28 6b 4b     U.pK..nK..mK.(kK
     7e6:	01 37 69 4b 40 02 67 4b e7 d1 64 4b 4a ae 62 4b     .7iK@.gK..dKJ.bK
     7f6:	95 9f 60 4b f9 cb 5e 4b 68 12 5e 4b 80 67 5d 4b     ..`K..^Kh.^K.g]K
     806:	2b b9 5c 4b ac f5 5b 4b ca ed 5a 4b 5b 30 58 4b     +.\K..[K..ZK[0XK
     816:	09 4e 55 4b b1 55 52 4b e6 55 4f 4b f4 5c 4c 4b     .NUK.URK.UOK.\LK
     826:	fa 16 4a 4b 49 ec 47 4b d0 d2 45 4b ae c8 43 4b     ..JKI.GK..EK..CK
     836:	09 cc 41 4b ee ec 3f 4b ee 21 3e 4b e6 68 3c 4b     ..AK..?K.!>K.h<K
     846:	a7 c5 3a 4b eb 3b 39 4b cb 36 38 4b 88 cc 37 4b     ..:K.;9K.68K..7K
     856:	b5 6f 37 4b df 14 37 4b d2 b0 36 4b 1f 2d 36 4b     .o7K..7K..6K.-6K
     866:	cf 9a 34 4b e5 f1 32 4b f4 38 31 4b 6b 76 2f 4b     ..4K..2K.81Kkv/K
     876:	95 b0 2d 4b c1 09 2c 4b 62 80 2a 4b e9 fc 28 4b     ..-K..,Kb.*K..(K
     886:	9a 7f 27 4b b8 08 26 4b 81 98 24 4b 57 3d 23 4b     ..'K..&K..$KW=#K
     896:	3f ed 21 4b 82 aa 20 4b 61 78 1f 4b 08 5a 1e 4b     ?.!K.. Kax.K.Z.K
     8a6:	e7 7c 1d 4b 79 5e 1d 4b 4f 4d 1d 4b 39 40 1d 4b     .|.Ky^.KOM.K9@.K
     8b6:	3b 2e 1d 4b 8d 0e 1d 4b f3 85 1c 4b 58 49 1b 4b     ;..K...K...KXI.K
     8c6:	16 f7 19 4b fa 92 18 4b c0 20 17 4b 0a a4 15 4b     ...K...K. .K...K
     8d6:	0e 1e 14 4b 94 8e 12 4b 50 f8 10 4b bd 59 0f 4b     ...K...KP..K.Y.K
     8e6:	61 b1 0d 4b c8 fd 0b 4b f4 1d 0a 4b 7c d0 07 4b     a..K...K...K|..K
     8f6:	9d 7a 05 4b 1b 20 03 4b a5 c4 00 4b a5 d7 fc 4a     .z.K. .K...K...J
     906:	50 32 f8 4a 62 28 f4 4a 45 34 f0 4a 88 52 ec 4a     P2.Jb(.JE4.J.R.J
     916:	f4 82 e8 4a 52 c5 e4 4a 6d 19 e1 4a 0c b9 dd 4a     ...JR..Jm..J...J
     926:	2b 97 da 4a cf 82 d7 4a c4 79 d4 4a e6 79 d1 4a     +..J...J.y.J.y.J
     936:	1a 81 ce 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     ...JS..JS..JS..J
     946:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     956:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     966:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     976:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     986:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     996:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     9a6:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     9b6:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     9c6:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     9d6:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     9e6:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     9f6:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     a06:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     a16:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J
     a26:	53 8d cb 4a 53 8d cb 4a 53 8d cb 4a 53 8d cb 4a     S..JS..JS..JS..J

00000a36 <wccoeff>:
     a36:	00 80 9a 43 a4 70 2d 40 f4 37 a1 ba 1f 4a f6 b6     ...C.p-@.7...J..
     a46:	42 3b 13 32 09 8d c8 2c                             B;.2...,

00000a4e <name>:
     a4e:	55 56 56 49 53 53 50 45 43 00                       UVVISSPEC.

00000a58 <model>:
     a58:	43 50 31 35 30 00                                   CP150.

00000a5e <serialnumber>:
     a5e:	43 50 31 35 30 32 31 41 30 32 37 38 30 00           CP15021A02780.

00000a6c <wl_1nm>:
     a6c:	4a 01 4b 01 4c 01 4d 01 4e 01 4f 01 50 01 51 01     J.K.L.M.N.O.P.Q.
     a7c:	52 01 53 01 54 01 55 01 56 01 57 01 58 01 59 01     R.S.T.U.V.W.X.Y.
     a8c:	5a 01 5b 01 5c 01 5d 01 5e 01 5f 01 60 01 61 01     Z.[.\.].^._.`.a.
     a9c:	62 01 63 01 64 01 65 01 66 01 67 01 68 01 69 01     b.c.d.e.f.g.h.i.
     aac:	6a 01 6b 01 6c 01 6d 01 6e 01 6f 01 70 01 71 01     j.k.l.m.n.o.p.q.
     abc:	72 01 73 01 74 01 75 01 76 01 77 01 78 01 79 01     r.s.t.u.v.w.x.y.
     acc:	7a 01 7b 01 7c 01 7d 01 7e 01 7f 01 80 01 81 01     z.{.|.}.~.......
     adc:	82 01 83 01 84 01 85 01 86 01 87 01 88 01 89 01     ................
     aec:	8a 01 8b 01 8c 01 8d 01 8e 01 8f 01 90 01 91 01     ................
     afc:	92 01 93 01 94 01 95 01 96 01 97 01 98 01 99 01     ................
     b0c:	9a 01 9b 01 9c 01 9d 01 9e 01 9f 01 a0 01 a1 01     ................
     b1c:	a2 01 a3 01 a4 01 a5 01 a6 01 a7 01 a8 01 a9 01     ................
     b2c:	aa 01 ab 01 ac 01 ad 01 ae 01 af 01 b0 01 b1 01     ................
     b3c:	b2 01 b3 01 b4 01 b5 01 b6 01 b7 01 b8 01 b9 01     ................
     b4c:	ba 01 bb 01 bc 01 bd 01 be 01 bf 01 c0 01 c1 01     ................
     b5c:	c2 01 c3 01 c4 01 c5 01 c6 01 c7 01 c8 01 c9 01     ................
     b6c:	ca 01 cb 01 cc 01 cd 01 ce 01 cf 01 d0 01 d1 01     ................
     b7c:	d2 01 d3 01 d4 01 d5 01 d6 01 d7 01 d8 01 d9 01     ................
     b8c:	da 01 db 01 dc 01 dd 01 de 01 df 01 e0 01 e1 01     ................
     b9c:	e2 01 e3 01 e4 01 e5 01 e6 01 e7 01 e8 01 e9 01     ................
     bac:	ea 01 eb 01 ec 01 ed 01 ee 01 ef 01 f0 01 f1 01     ................
     bbc:	f2 01 f3 01 f4 01 f5 01 f6 01 f7 01 f8 01 f9 01     ................
     bcc:	fa 01 fb 01 fc 01 fd 01 fe 01 ff 01 00 02 01 02     ................
     bdc:	02 02 03 02 04 02 05 02 06 02 07 02 08 02 09 02     ................
     bec:	0a 02 0b 02 0c 02 0d 02 0e 02 0f 02 10 02 11 02     ................
     bfc:	12 02 13 02 14 02 15 02 16 02 17 02 18 02 19 02     ................
     c0c:	1a 02 1b 02 1c 02 1d 02 1e 02 1f 02 20 02 21 02     ............ .!.
     c1c:	22 02 23 02 24 02 25 02 26 02 27 02 28 02 29 02     ".#.$.%.&.'.(.).
     c2c:	2a 02 2b 02 2c 02 2d 02 2e 02 2f 02 30 02 31 02     *.+.,.-.../.0.1.
     c3c:	32 02 33 02 34 02 35 02 36 02 37 02 38 02 39 02     2.3.4.5.6.7.8.9.
     c4c:	3a 02 3b 02 3c 02 3d 02 3e 02 3f 02 40 02 41 02     :.;.<.=.>.?.@.A.
     c5c:	42 02 43 02 44 02 45 02 46 02 47 02 48 02 49 02     B.C.D.E.F.G.H.I.
     c6c:	4a 02 4b 02 4c 02 4d 02 4e 02 4f 02 50 02 51 02     J.K.L.M.N.O.P.Q.
     c7c:	52 02 53 02 54 02 55 02 56 02 57 02 58 02 59 02     R.S.T.U.V.W.X.Y.
     c8c:	5a 02 5b 02 5c 02 5d 02 5e 02 5f 02 60 02 61 02     Z.[.\.].^._.`.a.
     c9c:	62 02 63 02 64 02 65 02 66 02 67 02 68 02 69 02     b.c.d.e.f.g.h.i.
     cac:	6a 02 6b 02 6c 02 6d 02 6e 02 6f 02 70 02 71 02     j.k.l.m.n.o.p.q.
     cbc:	72 02 73 02 74 02 75 02 76 02 77 02 78 02 79 02     r.s.t.u.v.w.x.y.
     ccc:	7a 02 7b 02 7c 02 7d 02 7e 02 7f 02 80 02 81 02     z.{.|.}.~.......
     cdc:	82 02 83 02 84 02 85 02 86 02 87 02 88 02 89 02     ................
     cec:	8a 02 8b 02 8c 02 8d 02 8e 02 8f 02 90 02 91 02     ................
     cfc:	92 02 93 02 94 02 95 02 96 02 97 02 98 02 99 02     ................
     d0c:	9a 02 9b 02 9c 02 9d 02 9e 02 9f 02 a0 02 a1 02     ................
     d1c:	a2 02 a3 02 a4 02 a5 02 a6 02 a7 02 a8 02 a9 02     ................
     d2c:	aa 02 ab 02 ac 02 ad 02 ae 02 af 02 b0 02 b1 02     ................
     d3c:	b2 02 b3 02 b4 02 b5 02 b6 02 b7 02 b8 02 b9 02     ................
     d4c:	ba 02 bb 02 bc 02 bd 02 be 02 bf 02 c0 02 c1 02     ................
     d5c:	c2 02 c3 02 c4 02 c5 02 c6 02 c7 02 c8 02 c9 02     ................
     d6c:	ca 02 cb 02 cc 02 cd 02 ce 02 cf 02 d0 02 d1 02     ................
     d7c:	d2 02 d3 02 d4 02 d5 02 d6 02 d7 02 d8 02 d9 02     ................
     d8c:	da 02 db 02 dc 02 dd 02 de 02 df 02 e0 02 e1 02     ................
     d9c:	e2 02 e3 02 e4 02 e5 02 e6 02 e7 02 e8 02 e9 02     ................
     dac:	ea 02 eb 02 ec 02 ed 02 ee 02 ef 02 f0 02 f1 02     ................
     dbc:	f2 02 f3 02 f4 02 f5 02 f6 02 f7 02 f8 02 f9 02     ................
     dcc:	fa 02 fb 02 fc 02 fd 02 fe 02 ff 02 00 03 01 03     ................
     ddc:	02 03 03 03 04 03 05 03 06 03 07 03 08 03 09 03     ................
     dec:	0a 03 0b 03 0c 03 0d 03 0e 03 0f 03 10 03 11 03     ................
     dfc:	12 03 13 03 14 03 15 03 16 03 17 03 18 03 19 03     ................
     e0c:	1a 03 1b 03 1c 03 1d 03 1e 03 1f 03 20 03           ............ .

00000e1a <wl_10nm>:
     e1a:	4a 01 54 01 5e 01 68 01 72 01 7c 01 86 01 90 01     J.T.^.h.r.|.....
     e2a:	9a 01 a4 01 ae 01 b8 01 c2 01 cc 01 d6 01 e0 01     ................
     e3a:	ea 01 f4 01 fe 01 08 02 12 02 1c 02 26 02 30 02     ............&.0.
     e4a:	3a 02 44 02 4e 02 58 02 62 02 6c 02 76 02 80 02     :.D.N.X.b.l.v...
     e5a:	8a 02 94 02 9e 02 a8 02 b2 02 bc 02 c6 02 d0 02     ................
     e6a:	da 02 e4 02 ee 02 f8 02 02 03 0c 03 16 03 20 03     .............. .

00000e7a <unitcoeff>:
     e7a:	17 b7 d1 38 17 b7 51 39 6f 12 03 3a 6f 12 83 3a     ...8..Q9o..:o..:
     e8a:	6f 12 03 3b 0a d7 a3 3b 0a d7 23 3c 0a d7 a3 3c     o..;...;..#<...<
     e9a:	cd cc 4c 3d cd cc cc 3d                             ..L=...=

00000ea2 <ProductString>:
     ea2:	24 03 4d 00 69 00 6e 00 69 00 20 00 53 00 70 00     $.M.i.n.i. .S.p.
     eb2:	65 00 63 00 74 00 72 00 6f 00 6d 00 65 00 74 00     e.c.t.r.o.m.e.t.
     ec2:	65 00 72 00 00 00                                   e.r...

00000ec8 <ManufacturerString>:
     ec8:	0e 03 4f 00 50 00 54 00 43 00 4f 00 4d 00 00 00     ..O.P.T.C.O.M...

00000ed8 <LanguageString>:
     ed8:	04 03 09 04                                         ....

00000edc <ConfigurationDescriptor>:
     edc:	09 02 3e 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..>.....2.......
     eec:	01 00 05 24 00 10 01 04 24 02 06 05 24 06 00 01     ...$....$...$...
     efc:	07 05 82 03 08 00 ff 09 04 01 00 02 0a 00 00 00     ................
     f0c:	07 05 04 02 10 00 05 07 05 83 02 10 00 05           ..............

00000f1a <DeviceDescriptor>:
     f1a:	12 01 10 01 02 00 00 08 a3 21 01 20 01 00 01 02     .........!. ....
     f2a:	dc 01                                               ..

00000f2c <__c.2529>:
     f2c:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     f3c:	47 00                                               G.

00000f3e <pstr_an>:
     f3e:	61 6e 00                                            an.

00000f41 <pstr_nfinity>:
     f41:	6e 66 69 6e 69 74 79 00                             nfinity.

00000f49 <pwr_m10>:
     f49:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     f59:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000f61 <pwr_p10>:
     f61:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     f71:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000f7a <__ctors_end>:
     f7a:	11 24       	eor	r1, r1
     f7c:	1f be       	out	0x3f, r1	; 63
     f7e:	cf ef       	ldi	r28, 0xFF	; 255
     f80:	da e0       	ldi	r29, 0x0A	; 10
     f82:	de bf       	out	0x3e, r29	; 62
     f84:	cd bf       	out	0x3d, r28	; 61

00000f86 <__do_copy_data>:
     f86:	12 e0       	ldi	r17, 0x02	; 2
     f88:	a0 e0       	ldi	r26, 0x00	; 0
     f8a:	b1 e0       	ldi	r27, 0x01	; 1
     f8c:	e6 ec       	ldi	r30, 0xC6	; 198
     f8e:	f5 e4       	ldi	r31, 0x45	; 69
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <__do_copy_data+0x10>
     f92:	05 90       	lpm	r0, Z+
     f94:	0d 92       	st	X+, r0
     f96:	a8 32       	cpi	r26, 0x28	; 40
     f98:	b1 07       	cpc	r27, r17
     f9a:	d9 f7       	brne	.-10     	; 0xf92 <__do_copy_data+0xc>

00000f9c <__do_clear_bss>:
     f9c:	29 e0       	ldi	r18, 0x09	; 9
     f9e:	a8 e2       	ldi	r26, 0x28	; 40
     fa0:	b2 e0       	ldi	r27, 0x02	; 2
     fa2:	01 c0       	rjmp	.+2      	; 0xfa6 <.do_clear_bss_start>

00000fa4 <.do_clear_bss_loop>:
     fa4:	1d 92       	st	X+, r1

00000fa6 <.do_clear_bss_start>:
     fa6:	a0 33       	cpi	r26, 0x30	; 48
     fa8:	b2 07       	cpc	r27, r18
     faa:	e1 f7       	brne	.-8      	; 0xfa4 <.do_clear_bss_loop>
     fac:	fd d7       	rcall	.+4090   	; 0x1fa8 <main>
     fae:	0c 94 e1 22 	jmp	0x45c2	; 0x45c2 <_exit>

00000fb2 <__bad_interrupt>:
     fb2:	26 c8       	rjmp	.-4020   	; 0x0 <__vectors>

00000fb4 <conv_wl>:
    case EXPOSURE_TIME_SEL_100ms:
        return EXPOSURE_TIME_100ms;
    default:
        return EXPOSURE_TIME_100us;
    }
}
     fb4:	4f 92       	push	r4
     fb6:	5f 92       	push	r5
     fb8:	6f 92       	push	r6
     fba:	7f 92       	push	r7
     fbc:	8f 92       	push	r8
     fbe:	9f 92       	push	r9
     fc0:	af 92       	push	r10
     fc2:	bf 92       	push	r11
     fc4:	cf 92       	push	r12
     fc6:	df 92       	push	r13
     fc8:	ef 92       	push	r14
     fca:	ff 92       	push	r15
     fcc:	cf 93       	push	r28
     fce:	df 93       	push	r29
     fd0:	cd b7       	in	r28, 0x3d	; 61
     fd2:	de b7       	in	r29, 0x3e	; 62
     fd4:	60 97       	sbiw	r28, 0x10	; 16
     fd6:	0f b6       	in	r0, 0x3f	; 63
     fd8:	f8 94       	cli
     fda:	de bf       	out	0x3e, r29	; 62
     fdc:	0f be       	out	0x3f, r0	; 63
     fde:	cd bf       	out	0x3d, r28	; 61
     fe0:	e6 e3       	ldi	r30, 0x36	; 54
     fe2:	fa e0       	ldi	r31, 0x0A	; 10
     fe4:	85 90       	lpm	r8, Z+
     fe6:	95 90       	lpm	r9, Z+
     fe8:	a5 90       	lpm	r10, Z+
     fea:	b4 90       	lpm	r11, Z
     fec:	ea e3       	ldi	r30, 0x3A	; 58
     fee:	fa e0       	ldi	r31, 0x0A	; 10
     ff0:	45 90       	lpm	r4, Z+
     ff2:	55 90       	lpm	r5, Z+
     ff4:	65 90       	lpm	r6, Z+
     ff6:	74 90       	lpm	r7, Z
     ff8:	ee e3       	ldi	r30, 0x3E	; 62
     ffa:	fa e0       	ldi	r31, 0x0A	; 10
     ffc:	25 91       	lpm	r18, Z+
     ffe:	35 91       	lpm	r19, Z+
    1000:	45 91       	lpm	r20, Z+
    1002:	54 91       	lpm	r21, Z
    1004:	29 83       	std	Y+1, r18	; 0x01
    1006:	3a 83       	std	Y+2, r19	; 0x02
    1008:	4b 83       	std	Y+3, r20	; 0x03
    100a:	5c 83       	std	Y+4, r21	; 0x04
    100c:	e2 e4       	ldi	r30, 0x42	; 66
    100e:	fa e0       	ldi	r31, 0x0A	; 10
    1010:	25 91       	lpm	r18, Z+
    1012:	35 91       	lpm	r19, Z+
    1014:	45 91       	lpm	r20, Z+
    1016:	54 91       	lpm	r21, Z
    1018:	2d 83       	std	Y+5, r18	; 0x05
    101a:	3e 83       	std	Y+6, r19	; 0x06
    101c:	4f 83       	std	Y+7, r20	; 0x07
    101e:	58 87       	std	Y+8, r21	; 0x08
    1020:	e6 e4       	ldi	r30, 0x46	; 70
    1022:	fa e0       	ldi	r31, 0x0A	; 10
    1024:	25 91       	lpm	r18, Z+
    1026:	35 91       	lpm	r19, Z+
    1028:	45 91       	lpm	r20, Z+
    102a:	54 91       	lpm	r21, Z
    102c:	29 87       	std	Y+9, r18	; 0x09
    102e:	3a 87       	std	Y+10, r19	; 0x0a
    1030:	4b 87       	std	Y+11, r20	; 0x0b
    1032:	5c 87       	std	Y+12, r21	; 0x0c
    1034:	ea e4       	ldi	r30, 0x4A	; 74
    1036:	fa e0       	ldi	r31, 0x0A	; 10
    1038:	25 91       	lpm	r18, Z+
    103a:	35 91       	lpm	r19, Z+
    103c:	45 91       	lpm	r20, Z+
    103e:	54 91       	lpm	r21, Z
    1040:	2d 87       	std	Y+13, r18	; 0x0d
    1042:	3e 87       	std	Y+14, r19	; 0x0e
    1044:	4f 87       	std	Y+15, r20	; 0x0f
    1046:	58 8b       	std	Y+16, r21	; 0x10
    1048:	bc 01       	movw	r22, r24
    104a:	6f 5f       	subi	r22, 0xFF	; 255
    104c:	7f 4f       	sbci	r23, 0xFF	; 255
    104e:	07 2e       	mov	r0, r23
    1050:	00 0c       	add	r0, r0
    1052:	88 0b       	sbc	r24, r24
    1054:	99 0b       	sbc	r25, r25
    1056:	0e 94 b4 17 	call	0x2f68	; 0x2f68 <__floatsisf>
    105a:	6b 01       	movw	r12, r22
    105c:	7c 01       	movw	r14, r24
    105e:	9b 01       	movw	r18, r22
    1060:	ac 01       	movw	r20, r24
    1062:	c3 01       	movw	r24, r6
    1064:	b2 01       	movw	r22, r4
    1066:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    106a:	a5 01       	movw	r20, r10
    106c:	94 01       	movw	r18, r8
    106e:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    1072:	4b 01       	movw	r8, r22
    1074:	5c 01       	movw	r10, r24
    1076:	a7 01       	movw	r20, r14
    1078:	96 01       	movw	r18, r12
    107a:	69 81       	ldd	r22, Y+1	; 0x01
    107c:	7a 81       	ldd	r23, Y+2	; 0x02
    107e:	8b 81       	ldd	r24, Y+3	; 0x03
    1080:	9c 81       	ldd	r25, Y+4	; 0x04
    1082:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1086:	a7 01       	movw	r20, r14
    1088:	96 01       	movw	r18, r12
    108a:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    108e:	9b 01       	movw	r18, r22
    1090:	ac 01       	movw	r20, r24
    1092:	c5 01       	movw	r24, r10
    1094:	b4 01       	movw	r22, r8
    1096:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    109a:	4b 01       	movw	r8, r22
    109c:	5c 01       	movw	r10, r24
    109e:	a7 01       	movw	r20, r14
    10a0:	96 01       	movw	r18, r12
    10a2:	6d 81       	ldd	r22, Y+5	; 0x05
    10a4:	7e 81       	ldd	r23, Y+6	; 0x06
    10a6:	8f 81       	ldd	r24, Y+7	; 0x07
    10a8:	98 85       	ldd	r25, Y+8	; 0x08
    10aa:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10ae:	a7 01       	movw	r20, r14
    10b0:	96 01       	movw	r18, r12
    10b2:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10b6:	a7 01       	movw	r20, r14
    10b8:	96 01       	movw	r18, r12
    10ba:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10be:	9b 01       	movw	r18, r22
    10c0:	ac 01       	movw	r20, r24
    10c2:	c5 01       	movw	r24, r10
    10c4:	b4 01       	movw	r22, r8
    10c6:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    10ca:	4b 01       	movw	r8, r22
    10cc:	5c 01       	movw	r10, r24
    10ce:	a7 01       	movw	r20, r14
    10d0:	96 01       	movw	r18, r12
    10d2:	69 85       	ldd	r22, Y+9	; 0x09
    10d4:	7a 85       	ldd	r23, Y+10	; 0x0a
    10d6:	8b 85       	ldd	r24, Y+11	; 0x0b
    10d8:	9c 85       	ldd	r25, Y+12	; 0x0c
    10da:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10de:	a7 01       	movw	r20, r14
    10e0:	96 01       	movw	r18, r12
    10e2:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10e6:	a7 01       	movw	r20, r14
    10e8:	96 01       	movw	r18, r12
    10ea:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10ee:	a7 01       	movw	r20, r14
    10f0:	96 01       	movw	r18, r12
    10f2:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    10f6:	9b 01       	movw	r18, r22
    10f8:	ac 01       	movw	r20, r24
    10fa:	c5 01       	movw	r24, r10
    10fc:	b4 01       	movw	r22, r8
    10fe:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    1102:	4b 01       	movw	r8, r22
    1104:	5c 01       	movw	r10, r24
    1106:	a7 01       	movw	r20, r14
    1108:	96 01       	movw	r18, r12
    110a:	6d 85       	ldd	r22, Y+13	; 0x0d
    110c:	7e 85       	ldd	r23, Y+14	; 0x0e
    110e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1110:	98 89       	ldd	r25, Y+16	; 0x10
    1112:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1116:	a7 01       	movw	r20, r14
    1118:	96 01       	movw	r18, r12
    111a:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    111e:	a7 01       	movw	r20, r14
    1120:	96 01       	movw	r18, r12
    1122:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1126:	a7 01       	movw	r20, r14
    1128:	96 01       	movw	r18, r12
    112a:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    112e:	a7 01       	movw	r20, r14
    1130:	96 01       	movw	r18, r12
    1132:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1136:	9b 01       	movw	r18, r22
    1138:	ac 01       	movw	r20, r24
    113a:	c5 01       	movw	r24, r10
    113c:	b4 01       	movw	r22, r8
    113e:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    1142:	60 96       	adiw	r28, 0x10	; 16
    1144:	0f b6       	in	r0, 0x3f	; 63
    1146:	f8 94       	cli
    1148:	de bf       	out	0x3e, r29	; 62
    114a:	0f be       	out	0x3f, r0	; 63
    114c:	cd bf       	out	0x3d, r28	; 61
    114e:	df 91       	pop	r29
    1150:	cf 91       	pop	r28
    1152:	ff 90       	pop	r15
    1154:	ef 90       	pop	r14
    1156:	df 90       	pop	r13
    1158:	cf 90       	pop	r12
    115a:	bf 90       	pop	r11
    115c:	af 90       	pop	r10
    115e:	9f 90       	pop	r9
    1160:	8f 90       	pop	r8
    1162:	7f 90       	pop	r7
    1164:	6f 90       	pop	r6
    1166:	5f 90       	pop	r5
    1168:	4f 90       	pop	r4
    116a:	08 95       	ret

0000116c <EVENT_USB_Device_Connect>:
    116c:	08 95       	ret

0000116e <EVENT_USB_Device_Disconnect>:
    116e:	08 95       	ret

00001170 <EVENT_USB_Device_ConfigurationChanged>:
    1170:	80 e0       	ldi	r24, 0x00	; 0
    1172:	91 e0       	ldi	r25, 0x01	; 1
    1174:	0c 94 e9 14 	jmp	0x29d2	; 0x29d2 <CDC_Device_ConfigureEndpoints>

00001178 <EVENT_USB_Device_ControlRequest>:
    1178:	80 e0       	ldi	r24, 0x00	; 0
    117a:	91 e0       	ldi	r25, 0x01	; 1
    117c:	0c 94 ff 15 	jmp	0x2bfe	; 0x2bfe <CDC_Device_ProcessControlRequest>

00001180 <EVENT_CDC_Device_ControLineStateChanged>:
    1180:	08 95       	ret

00001182 <delay>:
    1182:	00 00       	nop
    1184:	00 00       	nop
    1186:	00 00       	nop
    1188:	00 00       	nop
    118a:	00 00       	nop
    118c:	08 95       	ret

0000118e <adc_temp_read>:
    118e:	8f 92       	push	r8
    1190:	9f 92       	push	r9
    1192:	af 92       	push	r10
    1194:	bf 92       	push	r11
    1196:	cf 92       	push	r12
    1198:	df 92       	push	r13
    119a:	ef 92       	push	r14
    119c:	ff 92       	push	r15
    119e:	80 e4       	ldi	r24, 0x40	; 64
    11a0:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    11a4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    11a8:	87 60       	ori	r24, 0x07	; 7
    11aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    11ae:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    11b2:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    11b6:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    11ba:	87 ec       	ldi	r24, 0xC7	; 199
    11bc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    11c0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    11c4:	86 fd       	sbrc	r24, 6
    11c6:	fc cf       	rjmp	.-8      	; 0x11c0 <adc_temp_read+0x32>
    11c8:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    11cc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    11d0:	70 e0       	ldi	r23, 0x00	; 0
    11d2:	78 2b       	or	r23, r24
    11d4:	73 70       	andi	r23, 0x03	; 3
    11d6:	07 2e       	mov	r0, r23
    11d8:	00 0c       	add	r0, r0
    11da:	88 0b       	sbc	r24, r24
    11dc:	99 0b       	sbc	r25, r25
    11de:	0e 94 b4 17 	call	0x2f68	; 0x2f68 <__floatsisf>
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 ec       	ldi	r19, 0xC0	; 192
    11e6:	4f e7       	ldi	r20, 0x7F	; 127
    11e8:	54 e4       	ldi	r21, 0x44	; 68
    11ea:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	40 ea       	ldi	r20, 0xA0	; 160
    11f4:	50 e4       	ldi	r21, 0x40	; 64
    11f6:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    11fa:	4b 01       	movw	r8, r22
    11fc:	5c 01       	movw	r10, r24
    11fe:	9b 01       	movw	r18, r22
    1200:	ac 01       	movw	r20, r24
    1202:	60 e0       	ldi	r22, 0x00	; 0
    1204:	70 e0       	ldi	r23, 0x00	; 0
    1206:	80 ea       	ldi	r24, 0xA0	; 160
    1208:	90 e4       	ldi	r25, 0x40	; 64
    120a:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    120e:	6b 01       	movw	r12, r22
    1210:	7c 01       	movw	r14, r24
    1212:	20 e0       	ldi	r18, 0x00	; 0
    1214:	30 e0       	ldi	r19, 0x00	; 0
    1216:	a9 01       	movw	r20, r18
    1218:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__cmpsf2>
    121c:	88 23       	and	r24, r24
    121e:	69 f0       	breq	.+26     	; 0x123a <adc_temp_read+0xac>
    1220:	20 e0       	ldi	r18, 0x00	; 0
    1222:	30 e4       	ldi	r19, 0x40	; 64
    1224:	4c e1       	ldi	r20, 0x1C	; 28
    1226:	56 e4       	ldi	r21, 0x46	; 70
    1228:	c5 01       	movw	r24, r10
    122a:	b4 01       	movw	r22, r8
    122c:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1230:	a7 01       	movw	r20, r14
    1232:	96 01       	movw	r18, r12
    1234:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <adc_temp_read+0xb2>
    123a:	60 e0       	ldi	r22, 0x00	; 0
    123c:	70 e0       	ldi	r23, 0x00	; 0
    123e:	cb 01       	movw	r24, r22
    1240:	20 e0       	ldi	r18, 0x00	; 0
    1242:	30 e4       	ldi	r19, 0x40	; 64
    1244:	4c e1       	ldi	r20, 0x1C	; 28
    1246:	56 e4       	ldi	r21, 0x46	; 70
    1248:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    124c:	0e 94 6d 18 	call	0x30da	; 0x30da <log>
    1250:	20 e0       	ldi	r18, 0x00	; 0
    1252:	30 eb       	ldi	r19, 0xB0	; 176
    1254:	46 e5       	ldi	r20, 0x56	; 86
    1256:	55 e4       	ldi	r21, 0x45	; 69
    1258:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    125c:	2f e0       	ldi	r18, 0x0F	; 15
    125e:	3f ec       	ldi	r19, 0xCF	; 207
    1260:	4b e5       	ldi	r20, 0x5B	; 91
    1262:	5b e3       	ldi	r21, 0x3B	; 59
    1264:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    1268:	9b 01       	movw	r18, r22
    126a:	ac 01       	movw	r20, r24
    126c:	60 e0       	ldi	r22, 0x00	; 0
    126e:	70 e0       	ldi	r23, 0x00	; 0
    1270:	80 e8       	ldi	r24, 0x80	; 128
    1272:	9f e3       	ldi	r25, 0x3F	; 63
    1274:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    1278:	23 e3       	ldi	r18, 0x33	; 51
    127a:	33 e9       	ldi	r19, 0x93	; 147
    127c:	48 e8       	ldi	r20, 0x88	; 136
    127e:	53 e4       	ldi	r21, 0x43	; 67
    1280:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    1284:	ff 90       	pop	r15
    1286:	ef 90       	pop	r14
    1288:	df 90       	pop	r13
    128a:	cf 90       	pop	r12
    128c:	bf 90       	pop	r11
    128e:	af 90       	pop	r10
    1290:	9f 90       	pop	r9
    1292:	8f 90       	pop	r8
    1294:	08 95       	ret

00001296 <mcp3201_init>:
    1296:	a6 d6       	rcall	.+3404   	; 0x1fe4 <spi_init>
    1298:	20 9a       	sbi	0x04, 0	; 4
    129a:	28 9a       	sbi	0x05, 0	; 5
    129c:	08 95       	ret

0000129e <mcp3201_read>:
    129e:	cf 93       	push	r28
    12a0:	28 98       	cbi	0x05, 0	; 5
    12a2:	00 00       	nop
    12a4:	80 e0       	ldi	r24, 0x00	; 0
    12a6:	a7 d6       	rcall	.+3406   	; 0x1ff6 <spi_transfer>
    12a8:	c8 2f       	mov	r28, r24
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	a4 d6       	rcall	.+3400   	; 0x1ff6 <spi_transfer>
    12ae:	28 9a       	sbi	0x05, 0	; 5
    12b0:	cf 71       	andi	r28, 0x1F	; 31
    12b2:	40 e8       	ldi	r20, 0x80	; 128
    12b4:	c4 9f       	mul	r28, r20
    12b6:	90 01       	movw	r18, r0
    12b8:	11 24       	eor	r1, r1
    12ba:	86 95       	lsr	r24
    12bc:	a9 01       	movw	r20, r18
    12be:	48 2b       	or	r20, r24
    12c0:	ca 01       	movw	r24, r20
    12c2:	cf 91       	pop	r28
    12c4:	08 95       	ret

000012c6 <c12880ma_init>:
    12c6:	81 9a       	sbi	0x10, 1	; 16
    12c8:	89 98       	cbi	0x11, 1	; 17
    12ca:	85 9a       	sbi	0x10, 5	; 16
    12cc:	8d 98       	cbi	0x11, 5	; 17
    12ce:	e0 e8       	ldi	r30, 0x80	; 128
    12d0:	f4 e0       	ldi	r31, 0x04	; 4
    12d2:	11 92       	st	Z+, r1
    12d4:	11 92       	st	Z+, r1
    12d6:	11 92       	st	Z+, r1
    12d8:	11 92       	st	Z+, r1
    12da:	89 e0       	ldi	r24, 0x09	; 9
    12dc:	e0 30       	cpi	r30, 0x00	; 0
    12de:	f8 07       	cpc	r31, r24
    12e0:	c1 f7       	brne	.-16     	; 0x12d2 <c12880ma_init+0xc>
    12e2:	08 95       	ret

000012e4 <c12880ma_read>:
    12e4:	cf 92       	push	r12
    12e6:	df 92       	push	r13
    12e8:	ef 92       	push	r14
    12ea:	ff 92       	push	r15
    12ec:	0f 93       	push	r16
    12ee:	1f 93       	push	r17
    12f0:	cf 93       	push	r28
    12f2:	df 93       	push	r29
    12f4:	c0 e8       	ldi	r28, 0x80	; 128
    12f6:	d4 e0       	ldi	r29, 0x04	; 4
    12f8:	fe 01       	movw	r30, r28
    12fa:	11 92       	st	Z+, r1
    12fc:	11 92       	st	Z+, r1
    12fe:	11 92       	st	Z+, r1
    1300:	11 92       	st	Z+, r1
    1302:	89 e0       	ldi	r24, 0x09	; 9
    1304:	e0 30       	cpi	r30, 0x00	; 0
    1306:	f8 07       	cpc	r31, r24
    1308:	c1 f7       	brne	.-16     	; 0x12fa <c12880ma_read+0x16>
    130a:	89 98       	cbi	0x11, 1	; 17
    130c:	3a df       	rcall	.-396    	; 0x1182 <delay>
    130e:	89 9a       	sbi	0x11, 1	; 17
    1310:	38 df       	rcall	.-400    	; 0x1182 <delay>
    1312:	89 98       	cbi	0x11, 1	; 17
    1314:	8d 9a       	sbi	0x11, 5	; 17
    1316:	35 df       	rcall	.-406    	; 0x1182 <delay>
    1318:	03 e0       	ldi	r16, 0x03	; 3
    131a:	10 e0       	ldi	r17, 0x00	; 0
    131c:	89 9a       	sbi	0x11, 1	; 17
    131e:	31 df       	rcall	.-414    	; 0x1182 <delay>
    1320:	89 98       	cbi	0x11, 1	; 17
    1322:	2f df       	rcall	.-418    	; 0x1182 <delay>
    1324:	01 50       	subi	r16, 0x01	; 1
    1326:	11 09       	sbc	r17, r1
    1328:	c9 f7       	brne	.-14     	; 0x131c <c12880ma_read+0x38>
    132a:	c1 2c       	mov	r12, r1
    132c:	d1 2c       	mov	r13, r1
    132e:	76 01       	movw	r14, r12
    1330:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <exposure_time>
    1334:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <exposure_time+0x1>
    1338:	a0 91 21 01 	lds	r26, 0x0121	; 0x800121 <exposure_time+0x2>
    133c:	b0 91 22 01 	lds	r27, 0x0122	; 0x800122 <exposure_time+0x3>
    1340:	c8 16       	cp	r12, r24
    1342:	d9 06       	cpc	r13, r25
    1344:	ea 06       	cpc	r14, r26
    1346:	fb 06       	cpc	r15, r27
    1348:	54 f4       	brge	.+20     	; 0x135e <c12880ma_read+0x7a>
    134a:	89 9a       	sbi	0x11, 1	; 17
    134c:	1a df       	rcall	.-460    	; 0x1182 <delay>
    134e:	89 98       	cbi	0x11, 1	; 17
    1350:	18 df       	rcall	.-464    	; 0x1182 <delay>
    1352:	8f ef       	ldi	r24, 0xFF	; 255
    1354:	c8 1a       	sub	r12, r24
    1356:	d8 0a       	sbc	r13, r24
    1358:	e8 0a       	sbc	r14, r24
    135a:	f8 0a       	sbc	r15, r24
    135c:	e9 cf       	rjmp	.-46     	; 0x1330 <c12880ma_read+0x4c>
    135e:	8d 98       	cbi	0x11, 5	; 17
    1360:	08 e5       	ldi	r16, 0x58	; 88
    1362:	10 e0       	ldi	r17, 0x00	; 0
    1364:	89 9a       	sbi	0x11, 1	; 17
    1366:	0d df       	rcall	.-486    	; 0x1182 <delay>
    1368:	89 98       	cbi	0x11, 1	; 17
    136a:	0b df       	rcall	.-490    	; 0x1182 <delay>
    136c:	01 50       	subi	r16, 0x01	; 1
    136e:	11 09       	sbc	r17, r1
    1370:	c9 f7       	brne	.-14     	; 0x1364 <c12880ma_read+0x80>
    1372:	95 df       	rcall	.-214    	; 0x129e <mcp3201_read>
    1374:	bc 01       	movw	r22, r24
    1376:	80 e0       	ldi	r24, 0x00	; 0
    1378:	90 e0       	ldi	r25, 0x00	; 0
    137a:	0e 94 b2 17 	call	0x2f64	; 0x2f64 <__floatunsisf>
    137e:	69 93       	st	Y+, r22
    1380:	79 93       	st	Y+, r23
    1382:	89 93       	st	Y+, r24
    1384:	99 93       	st	Y+, r25
    1386:	89 9a       	sbi	0x11, 1	; 17
    1388:	fc de       	rcall	.-520    	; 0x1182 <delay>
    138a:	89 98       	cbi	0x11, 1	; 17
    138c:	fa de       	rcall	.-524    	; 0x1182 <delay>
    138e:	89 e0       	ldi	r24, 0x09	; 9
    1390:	c0 30       	cpi	r28, 0x00	; 0
    1392:	d8 07       	cpc	r29, r24
    1394:	71 f7       	brne	.-36     	; 0x1372 <c12880ma_read+0x8e>
    1396:	df 91       	pop	r29
    1398:	cf 91       	pop	r28
    139a:	1f 91       	pop	r17
    139c:	0f 91       	pop	r16
    139e:	ff 90       	pop	r15
    13a0:	ef 90       	pop	r14
    13a2:	df 90       	pop	r13
    13a4:	cf 90       	pop	r12
    13a6:	08 95       	ret

000013a8 <check_status>:
    13a8:	cf 92       	push	r12
    13aa:	df 92       	push	r13
    13ac:	ef 92       	push	r14
    13ae:	ff 92       	push	r15
    13b0:	cf 93       	push	r28
    13b2:	df 93       	push	r29
    13b4:	c0 90 1b 01 	lds	r12, 0x011B	; 0x80011b <temperature>
    13b8:	d0 90 1c 01 	lds	r13, 0x011C	; 0x80011c <temperature+0x1>
    13bc:	e0 90 1d 01 	lds	r14, 0x011D	; 0x80011d <temperature+0x2>
    13c0:	f0 90 1e 01 	lds	r15, 0x011E	; 0x80011e <temperature+0x3>
    13c4:	20 e0       	ldi	r18, 0x00	; 0
    13c6:	30 e0       	ldi	r19, 0x00	; 0
    13c8:	40 e2       	ldi	r20, 0x20	; 32
    13ca:	52 e4       	ldi	r21, 0x42	; 66
    13cc:	c7 01       	movw	r24, r14
    13ce:	b6 01       	movw	r22, r12
    13d0:	0e 94 64 18 	call	0x30c8	; 0x30c8 <__gesf2>
    13d4:	18 16       	cp	r1, r24
    13d6:	d4 f0       	brlt	.+52     	; 0x140c <check_status+0x64>
    13d8:	a7 01       	movw	r20, r14
    13da:	96 01       	movw	r18, r12
    13dc:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <temperature_dark>
    13e0:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <temperature_dark+0x1>
    13e4:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <temperature_dark+0x2>
    13e8:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <temperature_dark+0x3>
    13ec:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    13f0:	9f 77       	andi	r25, 0x7F	; 127
    13f2:	d1 e0       	ldi	r29, 0x01	; 1
    13f4:	c0 e0       	ldi	r28, 0x00	; 0
    13f6:	20 e0       	ldi	r18, 0x00	; 0
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	40 e0       	ldi	r20, 0x00	; 0
    13fc:	50 e4       	ldi	r21, 0x40	; 64
    13fe:	0e 94 64 18 	call	0x30c8	; 0x30c8 <__gesf2>
    1402:	87 fd       	sbrc	r24, 7
    1404:	d0 e0       	ldi	r29, 0x00	; 0
    1406:	8d 2f       	mov	r24, r29
    1408:	9c 2f       	mov	r25, r28
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <check_status+0x68>
    140c:	82 e0       	ldi	r24, 0x02	; 2
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	df 91       	pop	r29
    1412:	cf 91       	pop	r28
    1414:	ff 90       	pop	r15
    1416:	ef 90       	pop	r14
    1418:	df 90       	pop	r13
    141a:	cf 90       	pop	r12
    141c:	08 95       	ret

0000141e <SetupHardware>:
    141e:	53 df       	rcall	.-346    	; 0x12c6 <c12880ma_init>
    1420:	3a df       	rcall	.-396    	; 0x1296 <mcp3201_init>
    1422:	84 b7       	in	r24, 0x34	; 52
    1424:	87 7f       	andi	r24, 0xF7	; 247
    1426:	84 bf       	out	0x34, r24	; 52
    1428:	0f b6       	in	r0, 0x3f	; 63
    142a:	f8 94       	cli
    142c:	a8 95       	wdr
    142e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    1432:	88 61       	ori	r24, 0x18	; 24
    1434:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    1438:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    143c:	0f be       	out	0x3f, r0	; 63
    143e:	90 e0       	ldi	r25, 0x00	; 0
    1440:	80 e8       	ldi	r24, 0x80	; 128
    1442:	0f b6       	in	r0, 0x3f	; 63
    1444:	f8 94       	cli
    1446:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    144a:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    144e:	0f be       	out	0x3f, r0	; 63
    1450:	0c 94 3e 12 	jmp	0x247c	; 0x247c <USB_Init>

00001454 <correct>:
    1454:	2f 92       	push	r2
    1456:	3f 92       	push	r3
    1458:	4f 92       	push	r4
    145a:	5f 92       	push	r5
    145c:	6f 92       	push	r6
    145e:	7f 92       	push	r7
    1460:	8f 92       	push	r8
    1462:	9f 92       	push	r9
    1464:	af 92       	push	r10
    1466:	bf 92       	push	r11
    1468:	cf 92       	push	r12
    146a:	df 92       	push	r13
    146c:	ef 92       	push	r14
    146e:	ff 92       	push	r15
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
    1478:	00 d0       	rcall	.+0      	; 0x147a <correct+0x26>
    147a:	00 d0       	rcall	.+0      	; 0x147c <correct+0x28>
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <exposure_time_sel>
    1484:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <exposure_time_sel+0x1>
    1488:	88 0f       	add	r24, r24
    148a:	99 1f       	adc	r25, r25
    148c:	88 0f       	add	r24, r24
    148e:	99 1f       	adc	r25, r25
    1490:	fc 01       	movw	r30, r24
    1492:	ed 5d       	subi	r30, 0xDD	; 221
    1494:	fe 4f       	sbci	r31, 0xFE	; 254
    1496:	80 80       	ld	r8, Z
    1498:	91 80       	ldd	r9, Z+1	; 0x01
    149a:	a2 80       	ldd	r10, Z+2	; 0x02
    149c:	b3 80       	ldd	r11, Z+3	; 0x03
    149e:	9c 01       	movw	r18, r24
    14a0:	26 58       	subi	r18, 0x86	; 134
    14a2:	31 4f       	sbci	r19, 0xF1	; 241
    14a4:	3a 83       	std	Y+2, r19	; 0x02
    14a6:	29 83       	std	Y+1, r18	; 0x01
    14a8:	80 e8       	ldi	r24, 0x80	; 128
    14aa:	94 e0       	ldi	r25, 0x04	; 4
    14ac:	9c 83       	std	Y+4, r25	; 0x04
    14ae:	8b 83       	std	Y+3, r24	; 0x03
    14b0:	30 e4       	ldi	r19, 0x40	; 64
    14b2:	23 2e       	mov	r2, r19
    14b4:	32 e0       	ldi	r19, 0x02	; 2
    14b6:	33 2e       	mov	r3, r19
    14b8:	06 eb       	ldi	r16, 0xB6	; 182
    14ba:	15 e0       	ldi	r17, 0x05	; 5
    14bc:	f1 01       	movw	r30, r2
    14be:	61 91       	ld	r22, Z+
    14c0:	71 91       	ld	r23, Z+
    14c2:	1f 01       	movw	r2, r30
    14c4:	07 2e       	mov	r0, r23
    14c6:	00 0c       	add	r0, r0
    14c8:	88 0b       	sbc	r24, r24
    14ca:	99 0b       	sbc	r25, r25
    14cc:	0e 94 b4 17 	call	0x2f68	; 0x2f68 <__floatsisf>
    14d0:	a5 01       	movw	r20, r10
    14d2:	94 01       	movw	r18, r8
    14d4:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    14d8:	9b 01       	movw	r18, r22
    14da:	ac 01       	movw	r20, r24
    14dc:	eb 81       	ldd	r30, Y+3	; 0x03
    14de:	fc 81       	ldd	r31, Y+4	; 0x04
    14e0:	60 81       	ld	r22, Z
    14e2:	71 81       	ldd	r23, Z+1	; 0x01
    14e4:	82 81       	ldd	r24, Z+2	; 0x02
    14e6:	93 81       	ldd	r25, Z+3	; 0x03
    14e8:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    14ec:	6b 01       	movw	r12, r22
    14ee:	7c 01       	movw	r14, r24
    14f0:	20 e0       	ldi	r18, 0x00	; 0
    14f2:	30 e0       	ldi	r19, 0x00	; 0
    14f4:	a9 01       	movw	r20, r18
    14f6:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__cmpsf2>
    14fa:	87 ff       	sbrs	r24, 7
    14fc:	03 c0       	rjmp	.+6      	; 0x1504 <correct+0xb0>
    14fe:	c1 2c       	mov	r12, r1
    1500:	d1 2c       	mov	r13, r1
    1502:	76 01       	movw	r14, r12
    1504:	e9 81       	ldd	r30, Y+1	; 0x01
    1506:	fa 81       	ldd	r31, Y+2	; 0x02
    1508:	25 91       	lpm	r18, Z+
    150a:	35 91       	lpm	r19, Z+
    150c:	45 91       	lpm	r20, Z+
    150e:	54 91       	lpm	r21, Z
    1510:	f8 01       	movw	r30, r16
    1512:	45 90       	lpm	r4, Z+
    1514:	55 90       	lpm	r5, Z+
    1516:	65 90       	lpm	r6, Z+
    1518:	74 90       	lpm	r7, Z
    151a:	c7 01       	movw	r24, r14
    151c:	b6 01       	movw	r22, r12
    151e:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    1522:	a3 01       	movw	r20, r6
    1524:	92 01       	movw	r18, r4
    1526:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    152a:	6b 01       	movw	r12, r22
    152c:	7c 01       	movw	r14, r24
    152e:	2f e5       	ldi	r18, 0x5F	; 95
    1530:	30 e7       	ldi	r19, 0x70	; 112
    1532:	49 e8       	ldi	r20, 0x89	; 137
    1534:	50 e3       	ldi	r21, 0x30	; 48
    1536:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__cmpsf2>
    153a:	eb 81       	ldd	r30, Y+3	; 0x03
    153c:	fc 81       	ldd	r31, Y+4	; 0x04
    153e:	87 fd       	sbrc	r24, 7
    1540:	05 c0       	rjmp	.+10     	; 0x154c <correct+0xf8>
    1542:	c0 82       	st	Z, r12
    1544:	d1 82       	std	Z+1, r13	; 0x01
    1546:	e2 82       	std	Z+2, r14	; 0x02
    1548:	f3 82       	std	Z+3, r15	; 0x03
    154a:	04 c0       	rjmp	.+8      	; 0x1554 <correct+0x100>
    154c:	10 82       	st	Z, r1
    154e:	11 82       	std	Z+1, r1	; 0x01
    1550:	12 82       	std	Z+2, r1	; 0x02
    1552:	13 82       	std	Z+3, r1	; 0x03
    1554:	2b 81       	ldd	r18, Y+3	; 0x03
    1556:	3c 81       	ldd	r19, Y+4	; 0x04
    1558:	2c 5f       	subi	r18, 0xFC	; 252
    155a:	3f 4f       	sbci	r19, 0xFF	; 255
    155c:	3c 83       	std	Y+4, r19	; 0x04
    155e:	2b 83       	std	Y+3, r18	; 0x03
    1560:	0c 5f       	subi	r16, 0xFC	; 252
    1562:	1f 4f       	sbci	r17, 0xFF	; 255
    1564:	20 50       	subi	r18, 0x00	; 0
    1566:	39 40       	sbci	r19, 0x09	; 9
    1568:	09 f0       	breq	.+2      	; 0x156c <correct+0x118>
    156a:	a8 cf       	rjmp	.-176    	; 0x14bc <correct+0x68>
    156c:	0f 90       	pop	r0
    156e:	0f 90       	pop	r0
    1570:	0f 90       	pop	r0
    1572:	0f 90       	pop	r0
    1574:	df 91       	pop	r29
    1576:	cf 91       	pop	r28
    1578:	1f 91       	pop	r17
    157a:	0f 91       	pop	r16
    157c:	ff 90       	pop	r15
    157e:	ef 90       	pop	r14
    1580:	df 90       	pop	r13
    1582:	cf 90       	pop	r12
    1584:	bf 90       	pop	r11
    1586:	af 90       	pop	r10
    1588:	9f 90       	pop	r9
    158a:	8f 90       	pop	r8
    158c:	7f 90       	pop	r7
    158e:	6f 90       	pop	r6
    1590:	5f 90       	pop	r5
    1592:	4f 90       	pop	r4
    1594:	3f 90       	pop	r3
    1596:	2f 90       	pop	r2
    1598:	08 95       	ret

0000159a <measure>:
void measure()
{
    159a:	6f 92       	push	r6
    159c:	7f 92       	push	r7
    159e:	8f 92       	push	r8
    15a0:	9f 92       	push	r9
    15a2:	af 92       	push	r10
    15a4:	bf 92       	push	r11
    15a6:	cf 92       	push	r12
    15a8:	df 92       	push	r13
    15aa:	ef 92       	push	r14
    15ac:	ff 92       	push	r15
    15ae:	0f 93       	push	r16
    15b0:	1f 93       	push	r17
    15b2:	cf 93       	push	r28
    15b4:	df 93       	push	r29
    if(auto_exposure)
    15b6:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <auto_exposure>
    15ba:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <auto_exposure+0x1>
    15be:	89 2b       	or	r24, r25
    15c0:	09 f4       	brne	.+2      	; 0x15c4 <measure+0x2a>
    15c2:	4e c0       	rjmp	.+156    	; 0x1660 <measure+0xc6>
    15c4:	09 e4       	ldi	r16, 0x49	; 73
    15c6:	11 e0       	ldi	r17, 0x01	; 1
    15c8:	c0 e0       	ldi	r28, 0x00	; 0
    15ca:	d0 e0       	ldi	r29, 0x00	; 0
    15cc:	ce 01       	movw	r24, r28
    15ce:	01 97       	sbiw	r24, 0x01	; 1
    15d0:	09 97       	sbiw	r24, 0x09	; 9
    15d2:	30 f4       	brcc	.+12     	; 0x15e0 <measure+0x46>
    15d4:	f8 01       	movw	r30, r16
    15d6:	80 81       	ld	r24, Z
    15d8:	91 81       	ldd	r25, Z+1	; 0x01
    15da:	a0 e0       	ldi	r26, 0x00	; 0
    15dc:	b0 e0       	ldi	r27, 0x00	; 0
    15de:	04 c0       	rjmp	.+8      	; 0x15e8 <measure+0x4e>
    15e0:	82 e0       	ldi	r24, 0x02	; 2
    15e2:	90 e0       	ldi	r25, 0x00	; 0
    15e4:	a0 e0       	ldi	r26, 0x00	; 0
    15e6:	b0 e0       	ldi	r27, 0x00	; 0
    {
        for(int i=0;i<EXPOSURE_TIME_SEL_N;i++)
        {
            exposure_time = select_exposure_time(i);
    15e8:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
    15ec:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
    15f0:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
    15f4:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
            exposure_time_sel = i;
    15f8:	d0 93 3b 02 	sts	0x023B, r29	; 0x80023b <exposure_time_sel+0x1>
    15fc:	c0 93 3a 02 	sts	0x023A, r28	; 0x80023a <exposure_time_sel>
            c12880ma_read();
    1600:	71 de       	rcall	.-798    	; 0x12e4 <c12880ma_read>
    1602:	30 e8       	ldi	r19, 0x80	; 128
    1604:	83 2e       	mov	r8, r19
    1606:	34 e0       	ldi	r19, 0x04	; 4

            float max = 0;
    1608:	93 2e       	mov	r9, r19
    160a:	61 2c       	mov	r6, r1
    160c:	71 2c       	mov	r7, r1
    160e:	a1 2c       	mov	r10, r1
            float th = 1000.0f;
            for(int i=0;i<C12880MA_CHANELS;i++)
            {
                max = MAX(max, opticalPower[i]);
    1610:	b1 2c       	mov	r11, r1
    1612:	f4 01       	movw	r30, r8
    1614:	c1 90       	ld	r12, Z+
    1616:	d1 90       	ld	r13, Z+
    1618:	e1 90       	ld	r14, Z+
    161a:	f1 90       	ld	r15, Z+
    161c:	4f 01       	movw	r8, r30
    161e:	93 01       	movw	r18, r6
    1620:	a5 01       	movw	r20, r10
    1622:	c7 01       	movw	r24, r14
    1624:	b6 01       	movw	r22, r12
    1626:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__cmpsf2>
    162a:	87 fd       	sbrc	r24, 7
    162c:	02 c0       	rjmp	.+4      	; 0x1632 <measure+0x98>
    162e:	36 01       	movw	r6, r12
            exposure_time_sel = i;
            c12880ma_read();

            float max = 0;
            float th = 1000.0f;
            for(int i=0;i<C12880MA_CHANELS;i++)
    1630:	57 01       	movw	r10, r14
    1632:	f0 e0       	ldi	r31, 0x00	; 0
    1634:	8f 16       	cp	r8, r31
    1636:	f9 e0       	ldi	r31, 0x09	; 9
    1638:	9f 06       	cpc	r9, r31
            {
                max = MAX(max, opticalPower[i]);
            }
            if(max >= th)
    163a:	59 f7       	brne	.-42     	; 0x1612 <measure+0x78>
    163c:	20 e0       	ldi	r18, 0x00	; 0
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	4a e7       	ldi	r20, 0x7A	; 122
    1642:	54 e4       	ldi	r21, 0x44	; 68
    1644:	b3 01       	movw	r22, r6
    1646:	c5 01       	movw	r24, r10
    1648:	0e 94 64 18 	call	0x30c8	; 0x30c8 <__gesf2>
    164c:	87 ff       	sbrs	r24, 7
}
void measure()
{
    if(auto_exposure)
    {
        for(int i=0;i<EXPOSURE_TIME_SEL_N;i++)
    164e:	35 c0       	rjmp	.+106    	; 0x16ba <measure+0x120>
    1650:	21 96       	adiw	r28, 0x01	; 1
    1652:	0e 5f       	subi	r16, 0xFE	; 254
    1654:	1f 4f       	sbci	r17, 0xFF	; 255
    1656:	ca 30       	cpi	r28, 0x0A	; 10
    1658:	d1 05       	cpc	r29, r1
    165a:	09 f0       	breq	.+2      	; 0x165e <measure+0xc4>
    165c:	b7 cf       	rjmp	.-146    	; 0x15cc <measure+0x32>
    165e:	2d c0       	rjmp	.+90     	; 0x16ba <measure+0x120>
    1660:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <exposure_time_sel>
    1664:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <exposure_time_sel+0x1>
    1668:	01 97       	sbiw	r24, 0x01	; 1
    166a:	89 30       	cpi	r24, 0x09	; 9
    166c:	91 05       	cpc	r25, r1
    166e:	50 f4       	brcc	.+20     	; 0x1684 <measure+0xea>
    1670:	88 0f       	add	r24, r24
    1672:	99 1f       	adc	r25, r25
    1674:	fc 01       	movw	r30, r24
    1676:	e5 5b       	subi	r30, 0xB5	; 181
    1678:	fe 4f       	sbci	r31, 0xFE	; 254
    167a:	80 81       	ld	r24, Z
    167c:	91 81       	ldd	r25, Z+1	; 0x01
    167e:	a0 e0       	ldi	r26, 0x00	; 0
    1680:	b0 e0       	ldi	r27, 0x00	; 0
    }
}

long select_exposure_time(int sel)
{
    switch (sel)
    1682:	04 c0       	rjmp	.+8      	; 0x168c <measure+0xf2>
    1684:	82 e0       	ldi	r24, 0x02	; 2
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	a0 e0       	ldi	r26, 0x00	; 0
                break;
        }
    }
    else
    {
        exposure_time = select_exposure_time(exposure_time_sel);
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
    1690:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
    1694:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
    1698:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
        c12880ma_read();
    }
}
    169c:	df 91       	pop	r29
    169e:	cf 91       	pop	r28
    16a0:	1f 91       	pop	r17
    16a2:	0f 91       	pop	r16
    16a4:	ff 90       	pop	r15
    16a6:	ef 90       	pop	r14
    16a8:	df 90       	pop	r13
    16aa:	cf 90       	pop	r12
    16ac:	bf 90       	pop	r11
    16ae:	af 90       	pop	r10
    16b0:	9f 90       	pop	r9
    16b2:	8f 90       	pop	r8
        }
    }
    else
    {
        exposure_time = select_exposure_time(exposure_time_sel);
        c12880ma_read();
    16b4:	7f 90       	pop	r7
    16b6:	6f 90       	pop	r6
    }
}
    16b8:	15 ce       	rjmp	.-982    	; 0x12e4 <c12880ma_read>
    16ba:	df 91       	pop	r29
    16bc:	cf 91       	pop	r28
    16be:	1f 91       	pop	r17
    16c0:	0f 91       	pop	r16
    16c2:	ff 90       	pop	r15
    16c4:	ef 90       	pop	r14
    16c6:	df 90       	pop	r13
    16c8:	cf 90       	pop	r12
    16ca:	bf 90       	pop	r11
    16cc:	af 90       	pop	r10
    16ce:	9f 90       	pop	r9
    16d0:	8f 90       	pop	r8
    16d2:	7f 90       	pop	r7
    16d4:	6f 90       	pop	r6

    return t;
}

void mcp3201_init()
{
    16d6:	08 95       	ret

000016d8 <dark>:
    16d8:	2f 92       	push	r2
    16da:	3f 92       	push	r3
    16dc:	4f 92       	push	r4
    16de:	5f 92       	push	r5
    16e0:	6f 92       	push	r6
    16e2:	7f 92       	push	r7
    16e4:	8f 92       	push	r8
    16e6:	9f 92       	push	r9
    16e8:	af 92       	push	r10
    16ea:	bf 92       	push	r11
    16ec:	cf 92       	push	r12
    16ee:	df 92       	push	r13
    16f0:	ef 92       	push	r14
    16f2:	ff 92       	push	r15
    16f4:	0f 93       	push	r16
    16f6:	1f 93       	push	r17
    16f8:	cf 93       	push	r28
    16fa:	df 93       	push	r29
    16fc:	23 e2       	ldi	r18, 0x23	; 35
    16fe:	c2 2e       	mov	r12, r18
    1700:	21 e0       	ldi	r18, 0x01	; 1
    1702:	d2 2e       	mov	r13, r18
    1704:	39 e4       	ldi	r19, 0x49	; 73
    1706:	23 2e       	mov	r2, r19
    1708:	31 e0       	ldi	r19, 0x01	; 1
    170a:	33 2e       	mov	r3, r19
    170c:	76 01       	movw	r14, r12
    170e:	00 e0       	ldi	r16, 0x00	; 0
    1710:	10 e0       	ldi	r17, 0x00	; 0
    1712:	c8 01       	movw	r24, r16
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	09 97       	sbiw	r24, 0x09	; 9
    1718:	30 f4       	brcc	.+12     	; 0x1726 <dark+0x4e>
    171a:	d1 01       	movw	r26, r2
    171c:	8d 91       	ld	r24, X+
    171e:	9c 91       	ld	r25, X
    1720:	a0 e0       	ldi	r26, 0x00	; 0
    1722:	b0 e0       	ldi	r27, 0x00	; 0
    1724:	04 c0       	rjmp	.+8      	; 0x172e <dark+0x56>
    1726:	82 e0       	ldi	r24, 0x02	; 2
    1728:	90 e0       	ldi	r25, 0x00	; 0
    172a:	a0 e0       	ldi	r26, 0x00	; 0
    172c:	b0 e0       	ldi	r27, 0x00	; 0
    172e:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
    1732:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
    1736:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
    173a:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
    173e:	d2 dd       	rcall	.-1116   	; 0x12e4 <c12880ma_read>
    1740:	80 e8       	ldi	r24, 0x80	; 128
    1742:	a8 2e       	mov	r10, r24
    1744:	84 e0       	ldi	r24, 0x04	; 4
    1746:	b8 2e       	mov	r11, r24
    1748:	e5 01       	movw	r28, r10
    174a:	92 e0       	ldi	r25, 0x02	; 2
    174c:	89 2e       	mov	r8, r25
    174e:	91 2c       	mov	r9, r1
    1750:	bf ef       	ldi	r27, 0xFF	; 255
    1752:	8b 1a       	sub	r8, r27
    1754:	9b 0a       	sbc	r9, r27
    1756:	20 e0       	ldi	r18, 0x00	; 0
    1758:	30 e0       	ldi	r19, 0x00	; 0
    175a:	40 e4       	ldi	r20, 0x40	; 64
    175c:	50 ec       	ldi	r21, 0xC0	; 192
    175e:	68 81       	ld	r22, Y
    1760:	79 81       	ldd	r23, Y+1	; 0x01
    1762:	8a 81       	ldd	r24, Y+2	; 0x02
    1764:	9b 81       	ldd	r25, Y+3	; 0x03
    1766:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    176a:	2b 01       	movw	r4, r22
    176c:	3c 01       	movw	r6, r24
    176e:	20 e0       	ldi	r18, 0x00	; 0
    1770:	30 e0       	ldi	r19, 0x00	; 0
    1772:	40 e4       	ldi	r20, 0x40	; 64
    1774:	51 e4       	ldi	r21, 0x41	; 65
    1776:	6c 81       	ldd	r22, Y+4	; 0x04
    1778:	7d 81       	ldd	r23, Y+5	; 0x05
    177a:	8e 81       	ldd	r24, Y+6	; 0x06
    177c:	9f 81       	ldd	r25, Y+7	; 0x07
    177e:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1782:	9b 01       	movw	r18, r22
    1784:	ac 01       	movw	r20, r24
    1786:	c3 01       	movw	r24, r6
    1788:	b2 01       	movw	r22, r4
    178a:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    178e:	2b 01       	movw	r4, r22
    1790:	3c 01       	movw	r6, r24
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	30 e0       	ldi	r19, 0x00	; 0
    1796:	48 e8       	ldi	r20, 0x88	; 136
    1798:	51 e4       	ldi	r21, 0x41	; 65
    179a:	68 85       	ldd	r22, Y+8	; 0x08
    179c:	79 85       	ldd	r23, Y+9	; 0x09
    179e:	8a 85       	ldd	r24, Y+10	; 0x0a
    17a0:	9b 85       	ldd	r25, Y+11	; 0x0b
    17a2:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    17a6:	9b 01       	movw	r18, r22
    17a8:	ac 01       	movw	r20, r24
    17aa:	c3 01       	movw	r24, r6
    17ac:	b2 01       	movw	r22, r4
    17ae:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    17b2:	2b 01       	movw	r4, r22
    17b4:	3c 01       	movw	r6, r24
    17b6:	20 e0       	ldi	r18, 0x00	; 0
    17b8:	30 e0       	ldi	r19, 0x00	; 0
    17ba:	40 e4       	ldi	r20, 0x40	; 64
    17bc:	51 e4       	ldi	r21, 0x41	; 65
    17be:	6c 85       	ldd	r22, Y+12	; 0x0c
    17c0:	7d 85       	ldd	r23, Y+13	; 0x0d
    17c2:	8e 85       	ldd	r24, Y+14	; 0x0e
    17c4:	9f 85       	ldd	r25, Y+15	; 0x0f
    17c6:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    17ca:	9b 01       	movw	r18, r22
    17cc:	ac 01       	movw	r20, r24
    17ce:	c3 01       	movw	r24, r6
    17d0:	b2 01       	movw	r22, r4
    17d2:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    17d6:	2b 01       	movw	r4, r22
    17d8:	3c 01       	movw	r6, r24
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	30 e0       	ldi	r19, 0x00	; 0
    17de:	40 e4       	ldi	r20, 0x40	; 64
    17e0:	50 e4       	ldi	r21, 0x40	; 64
    17e2:	68 89       	ldd	r22, Y+16	; 0x10
    17e4:	79 89       	ldd	r23, Y+17	; 0x11
    17e6:	8a 89       	ldd	r24, Y+18	; 0x12
    17e8:	9b 89       	ldd	r25, Y+19	; 0x13
    17ea:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    17ee:	9b 01       	movw	r18, r22
    17f0:	ac 01       	movw	r20, r24
    17f2:	c3 01       	movw	r24, r6
    17f4:	b2 01       	movw	r22, r4
    17f6:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    17fa:	20 e0       	ldi	r18, 0x00	; 0
    17fc:	30 e0       	ldi	r19, 0x00	; 0
    17fe:	4c e0       	ldi	r20, 0x0C	; 12
    1800:	52 e4       	ldi	r21, 0x42	; 66
    1802:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    1806:	68 87       	std	Y+8, r22	; 0x08
    1808:	79 87       	std	Y+9, r23	; 0x09
    180a:	8a 87       	std	Y+10, r24	; 0x0a
    180c:	9b 87       	std	Y+11, r25	; 0x0b
    180e:	24 96       	adiw	r28, 0x04	; 4
    1810:	ee e1       	ldi	r30, 0x1E	; 30
    1812:	8e 16       	cp	r8, r30
    1814:	e1 e0       	ldi	r30, 0x01	; 1
    1816:	9e 06       	cpc	r9, r30
    1818:	09 f0       	breq	.+2      	; 0x181c <dark+0x144>
    181a:	9a cf       	rjmp	.-204    	; 0x1750 <dark+0x78>
    181c:	80 e0       	ldi	r24, 0x00	; 0
    181e:	90 ef       	ldi	r25, 0xF0	; 240
    1820:	af e7       	ldi	r26, 0x7F	; 127
    1822:	b5 e4       	ldi	r27, 0x45	; 69
    1824:	f7 01       	movw	r30, r14
    1826:	80 83       	st	Z, r24
    1828:	91 83       	std	Z+1, r25	; 0x01
    182a:	a2 83       	std	Z+2, r26	; 0x02
    182c:	b3 83       	std	Z+3, r27	; 0x03
    182e:	c0 e4       	ldi	r28, 0x40	; 64
    1830:	d2 e0       	ldi	r29, 0x02	; 2
    1832:	03 30       	cpi	r16, 0x03	; 3
    1834:	11 05       	cpc	r17, r1
    1836:	49 f4       	brne	.+18     	; 0x184a <dark+0x172>
    1838:	d5 01       	movw	r26, r10
    183a:	6d 91       	ld	r22, X+
    183c:	7d 91       	ld	r23, X+
    183e:	8d 91       	ld	r24, X+
    1840:	9c 91       	ld	r25, X
    1842:	0e 94 81 17 	call	0x2f02	; 0x2f02 <__fixsfsi>
    1846:	79 83       	std	Y+1, r23	; 0x01
    1848:	68 83       	st	Y, r22
    184a:	f5 01       	movw	r30, r10
    184c:	41 90       	ld	r4, Z+
    184e:	51 90       	ld	r5, Z+
    1850:	61 90       	ld	r6, Z+
    1852:	71 90       	ld	r7, Z+
    1854:	5f 01       	movw	r10, r30
    1856:	a3 01       	movw	r20, r6
    1858:	92 01       	movw	r18, r4
    185a:	d7 01       	movw	r26, r14
    185c:	6d 91       	ld	r22, X+
    185e:	7d 91       	ld	r23, X+
    1860:	8d 91       	ld	r24, X+
    1862:	9c 91       	ld	r25, X
    1864:	0e 94 64 18 	call	0x30c8	; 0x30c8 <__gesf2>
    1868:	18 16       	cp	r1, r24
    186a:	2c f4       	brge	.+10     	; 0x1876 <dark+0x19e>
    186c:	f7 01       	movw	r30, r14
    186e:	40 82       	st	Z, r4
    1870:	51 82       	std	Z+1, r5	; 0x01
    1872:	62 82       	std	Z+2, r6	; 0x02
    1874:	73 82       	std	Z+3, r7	; 0x03
    1876:	22 96       	adiw	r28, 0x02	; 2
    1878:	80 e0       	ldi	r24, 0x00	; 0
    187a:	99 e0       	ldi	r25, 0x09	; 9
    187c:	8a 15       	cp	r24, r10
    187e:	9b 05       	cpc	r25, r11
    1880:	c1 f6       	brne	.-80     	; 0x1832 <dark+0x15a>
    1882:	0f 5f       	subi	r16, 0xFF	; 255
    1884:	1f 4f       	sbci	r17, 0xFF	; 255
    1886:	94 e0       	ldi	r25, 0x04	; 4
    1888:	e9 0e       	add	r14, r25
    188a:	f1 1c       	adc	r15, r1
    188c:	a2 e0       	ldi	r26, 0x02	; 2
    188e:	2a 0e       	add	r2, r26
    1890:	31 1c       	adc	r3, r1
    1892:	0a 30       	cpi	r16, 0x0A	; 10
    1894:	11 05       	cpc	r17, r1
    1896:	09 f0       	breq	.+2      	; 0x189a <dark+0x1c2>
    1898:	3c cf       	rjmp	.-392    	; 0x1712 <dark+0x3a>
    189a:	80 90 2f 01 	lds	r8, 0x012F	; 0x80012f <darkopticalPowerGain+0xc>
    189e:	90 90 30 01 	lds	r9, 0x0130	; 0x800130 <darkopticalPowerGain+0xd>
    18a2:	a0 90 31 01 	lds	r10, 0x0131	; 0x800131 <darkopticalPowerGain+0xe>
    18a6:	b0 90 32 01 	lds	r11, 0x0132	; 0x800132 <darkopticalPowerGain+0xf>
    18aa:	cb e4       	ldi	r28, 0x4B	; 75
    18ac:	d1 e0       	ldi	r29, 0x01	; 1
    18ae:	a5 01       	movw	r20, r10
    18b0:	94 01       	movw	r18, r8
    18b2:	f6 01       	movw	r30, r12
    18b4:	60 81       	ld	r22, Z
    18b6:	71 81       	ldd	r23, Z+1	; 0x01
    18b8:	82 81       	ldd	r24, Z+2	; 0x02
    18ba:	93 81       	ldd	r25, Z+3	; 0x03
    18bc:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    18c0:	d6 01       	movw	r26, r12
    18c2:	6d 93       	st	X+, r22
    18c4:	7d 93       	st	X+, r23
    18c6:	8d 93       	st	X+, r24
    18c8:	9d 93       	st	X+, r25
    18ca:	6d 01       	movw	r12, r26
    18cc:	ca 17       	cp	r28, r26
    18ce:	db 07       	cpc	r29, r27
    18d0:	71 f7       	brne	.-36     	; 0x18ae <dark+0x1d6>
    18d2:	5d dc       	rcall	.-1862   	; 0x118e <adc_temp_read>
    18d4:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <temperature_dark>
    18d8:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <temperature_dark+0x1>
    18dc:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <temperature_dark+0x2>
    18e0:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <temperature_dark+0x3>
    18e4:	df 91       	pop	r29
    18e6:	cf 91       	pop	r28
    18e8:	1f 91       	pop	r17
    18ea:	0f 91       	pop	r16
    18ec:	ff 90       	pop	r15
    18ee:	ef 90       	pop	r14
    18f0:	df 90       	pop	r13
    18f2:	cf 90       	pop	r12
    18f4:	bf 90       	pop	r11
    18f6:	af 90       	pop	r10
    18f8:	9f 90       	pop	r9
    18fa:	8f 90       	pop	r8
    18fc:	7f 90       	pop	r7
    18fe:	6f 90       	pop	r6
    1900:	5f 90       	pop	r5
    1902:	4f 90       	pop	r4
    1904:	3f 90       	pop	r3
    1906:	2f 90       	pop	r2
    1908:	08 95       	ret

0000190a <CDC_Recive_Event>:
    190a:	80 e0       	ldi	r24, 0x00	; 0
    190c:	91 e0       	ldi	r25, 0x01	; 1
    190e:	0e 94 ad 15 	call	0x2b5a	; 0x2b5a <CDC_Device_ReceiveByte>
    1912:	18 16       	cp	r1, r24
    1914:	19 06       	cpc	r1, r25
    1916:	9c f4       	brge	.+38     	; 0x193e <CDC_Recive_Event+0x34>
    1918:	20 91 00 09 	lds	r18, 0x0900	; 0x800900 <cdc_recive_index>
    191c:	30 91 01 09 	lds	r19, 0x0901	; 0x800901 <cdc_recive_index+0x1>
    1920:	f9 01       	movw	r30, r18
    1922:	ee 5f       	subi	r30, 0xFE	; 254
    1924:	f6 4f       	sbci	r31, 0xF6	; 246
    1926:	80 83       	st	Z, r24
    1928:	2f 5f       	subi	r18, 0xFF	; 255
    192a:	3f 4f       	sbci	r19, 0xFF	; 255
    192c:	30 93 01 09 	sts	0x0901, r19	; 0x800901 <cdc_recive_index+0x1>
    1930:	20 93 00 09 	sts	0x0900, r18	; 0x800900 <cdc_recive_index>
    1934:	0a 97       	sbiw	r24, 0x0a	; 10
    1936:	19 f4       	brne	.+6      	; 0x193e <CDC_Recive_Event+0x34>
    1938:	81 e0       	ldi	r24, 0x01	; 1
    193a:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <cdc_recived>
    193e:	08 95       	ret

00001940 <CDC_Recive_Event_Process>:
    1940:	2f 92       	push	r2
    1942:	3f 92       	push	r3
    1944:	4f 92       	push	r4
    1946:	5f 92       	push	r5
    1948:	6f 92       	push	r6
    194a:	7f 92       	push	r7
    194c:	8f 92       	push	r8
    194e:	9f 92       	push	r9
    1950:	af 92       	push	r10
    1952:	bf 92       	push	r11
    1954:	cf 92       	push	r12
    1956:	df 92       	push	r13
    1958:	ef 92       	push	r14
    195a:	ff 92       	push	r15
    195c:	0f 93       	push	r16
    195e:	1f 93       	push	r17
    1960:	cf 93       	push	r28
    1962:	df 93       	push	r29
    1964:	cd b7       	in	r28, 0x3d	; 61
    1966:	de b7       	in	r29, 0x3e	; 62
    1968:	ce 56       	subi	r28, 0x6E	; 110
    196a:	d1 09       	sbc	r29, r1
    196c:	0f b6       	in	r0, 0x3f	; 63
    196e:	f8 94       	cli
    1970:	de bf       	out	0x3e, r29	; 62
    1972:	0f be       	out	0x3f, r0	; 63
    1974:	cd bf       	out	0x3d, r28	; 61
    1976:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <cdc_recived>
    197a:	88 23       	and	r24, r24
    197c:	09 f4       	brne	.+2      	; 0x1980 <CDC_Recive_Event_Process+0x40>
    197e:	fa c2       	rjmp	.+1524   	; 0x1f74 <CDC_Recive_Event_Process+0x634>
    1980:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <cdc_recived>
    1984:	45 e0       	ldi	r20, 0x05	; 5
    1986:	50 e0       	ldi	r21, 0x00	; 0
    1988:	6d e5       	ldi	r22, 0x5D	; 93
    198a:	71 e0       	ldi	r23, 0x01	; 1
    198c:	82 e0       	ldi	r24, 0x02	; 2
    198e:	99 e0       	ldi	r25, 0x09	; 9
    1990:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1994:	89 2b       	or	r24, r25
    1996:	09 f0       	breq	.+2      	; 0x199a <CDC_Recive_Event_Process+0x5a>
    1998:	61 c0       	rjmp	.+194    	; 0x1a5c <CDC_Recive_Event_Process+0x11c>
    199a:	ff dd       	rcall	.-1026   	; 0x159a <measure>
    199c:	5b dd       	rcall	.-1354   	; 0x1454 <correct>
    199e:	60 e8       	ldi	r22, 0x80	; 128
    19a0:	e6 2e       	mov	r14, r22
    19a2:	64 e0       	ldi	r22, 0x04	; 4
    19a4:	f6 2e       	mov	r15, r22
    19a6:	00 e0       	ldi	r16, 0x00	; 0
    19a8:	10 e0       	ldi	r17, 0x00	; 0
    19aa:	78 e0       	ldi	r23, 0x08	; 8
    19ac:	67 2e       	mov	r6, r23
    19ae:	72 e0       	ldi	r23, 0x02	; 2
    19b0:	77 2e       	mov	r7, r23
    19b2:	e4 eb       	ldi	r30, 0xB4	; 180
    19b4:	8e 2e       	mov	r8, r30
    19b6:	e5 e0       	ldi	r30, 0x05	; 5
    19b8:	9e 2e       	mov	r9, r30
    19ba:	f0 e2       	ldi	r31, 0x20	; 32
    19bc:	5f 2e       	mov	r5, r31
    19be:	9e 01       	movw	r18, r28
    19c0:	2f 5f       	subi	r18, 0xFF	; 255
    19c2:	3f 4f       	sbci	r19, 0xFF	; 255
    19c4:	69 01       	movw	r12, r18
    19c6:	a3 e6       	ldi	r26, 0x63	; 99
    19c8:	aa 2e       	mov	r10, r26
    19ca:	a1 e0       	ldi	r26, 0x01	; 1
    19cc:	ba 2e       	mov	r11, r26
    19ce:	f3 01       	movw	r30, r6
    19d0:	85 91       	lpm	r24, Z+
    19d2:	94 91       	lpm	r25, Z
    19d4:	01 97       	sbiw	r24, 0x01	; 1
    19d6:	08 17       	cp	r16, r24
    19d8:	19 07       	cpc	r17, r25
    19da:	80 f1       	brcs	.+96     	; 0x1a3c <CDC_Recive_Event_Process+0xfc>
    19dc:	f4 01       	movw	r30, r8
    19de:	85 91       	lpm	r24, Z+
    19e0:	94 91       	lpm	r25, Z
    19e2:	01 96       	adiw	r24, 0x01	; 1
    19e4:	80 17       	cp	r24, r16
    19e6:	91 07       	cpc	r25, r17
    19e8:	48 f1       	brcs	.+82     	; 0x1a3c <CDC_Recive_Event_Process+0xfc>
    19ea:	c8 01       	movw	r24, r16
    19ec:	e3 da       	rcall	.-2618   	; 0xfb4 <conv_wl>
    19ee:	d6 01       	movw	r26, r12
    19f0:	e5 2d       	mov	r30, r5
    19f2:	1d 92       	st	X+, r1
    19f4:	ea 95       	dec	r30
    19f6:	e9 f7       	brne	.-6      	; 0x19f2 <CDC_Recive_Event_Process+0xb2>
    19f8:	d7 01       	movw	r26, r14
    19fa:	13 96       	adiw	r26, 0x03	; 3
    19fc:	2c 91       	ld	r18, X
    19fe:	13 97       	sbiw	r26, 0x03	; 3
    1a00:	2f 93       	push	r18
    1a02:	12 96       	adiw	r26, 0x02	; 2
    1a04:	2c 91       	ld	r18, X
    1a06:	12 97       	sbiw	r26, 0x02	; 2
    1a08:	2f 93       	push	r18
    1a0a:	11 96       	adiw	r26, 0x01	; 1
    1a0c:	2c 91       	ld	r18, X
    1a0e:	11 97       	sbiw	r26, 0x01	; 1
    1a10:	2f 93       	push	r18
    1a12:	2c 91       	ld	r18, X
    1a14:	2f 93       	push	r18
    1a16:	9f 93       	push	r25
    1a18:	8f 93       	push	r24
    1a1a:	7f 93       	push	r23
    1a1c:	6f 93       	push	r22
    1a1e:	bf 92       	push	r11
    1a20:	af 92       	push	r10
    1a22:	df 92       	push	r13
    1a24:	cf 92       	push	r12
    1a26:	0e 94 47 22 	call	0x448e	; 0x448e <sprintf>
    1a2a:	b6 01       	movw	r22, r12
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	91 e0       	ldi	r25, 0x01	; 1
    1a30:	f5 d7       	rcall	.+4074   	; 0x2a1c <CDC_Device_SendString>
    1a32:	0f b6       	in	r0, 0x3f	; 63
    1a34:	f8 94       	cli
    1a36:	de bf       	out	0x3e, r29	; 62
    1a38:	0f be       	out	0x3f, r0	; 63
    1a3a:	cd bf       	out	0x3d, r28	; 61
    1a3c:	0f 5f       	subi	r16, 0xFF	; 255
    1a3e:	1f 4f       	sbci	r17, 0xFF	; 255
    1a40:	f4 e0       	ldi	r31, 0x04	; 4
    1a42:	ef 0e       	add	r14, r31
    1a44:	f1 1c       	adc	r15, r1
    1a46:	00 32       	cpi	r16, 0x20	; 32
    1a48:	21 e0       	ldi	r18, 0x01	; 1
    1a4a:	12 07       	cpc	r17, r18
    1a4c:	09 f0       	breq	.+2      	; 0x1a50 <CDC_Recive_Event_Process+0x110>
    1a4e:	bf cf       	rjmp	.-130    	; 0x19ce <CDC_Recive_Event_Process+0x8e>
    1a50:	6a e0       	ldi	r22, 0x0A	; 10
    1a52:	80 e0       	ldi	r24, 0x00	; 0
    1a54:	91 e0       	ldi	r25, 0x01	; 1
    1a56:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <CDC_Device_SendByte>
    1a5a:	81 c2       	rjmp	.+1282   	; 0x1f5e <CDC_Recive_Event_Process+0x61e>
    1a5c:	49 e0       	ldi	r20, 0x09	; 9
    1a5e:	50 e0       	ldi	r21, 0x00	; 0
    1a60:	6a e6       	ldi	r22, 0x6A	; 106
    1a62:	71 e0       	ldi	r23, 0x01	; 1
    1a64:	82 e0       	ldi	r24, 0x02	; 2
    1a66:	99 e0       	ldi	r25, 0x09	; 9
    1a68:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1a6c:	89 2b       	or	r24, r25
    1a6e:	09 f0       	breq	.+2      	; 0x1a72 <CDC_Recive_Event_Process+0x132>
    1a70:	c2 c0       	rjmp	.+388    	; 0x1bf6 <CDC_Recive_Event_Process+0x2b6>
    1a72:	93 dd       	rcall	.-1242   	; 0x159a <measure>
    1a74:	ef dc       	rcall	.-1570   	; 0x1454 <correct>
    1a76:	5c e6       	ldi	r21, 0x6C	; 108
    1a78:	25 2e       	mov	r2, r21
    1a7a:	5a e0       	ldi	r21, 0x0A	; 10
    1a7c:	35 2e       	mov	r3, r21
    1a7e:	88 e0       	ldi	r24, 0x08	; 8
    1a80:	92 e0       	ldi	r25, 0x02	; 2
    1a82:	a9 96       	adiw	r28, 0x29	; 41
    1a84:	9f af       	std	Y+63, r25	; 0x3f
    1a86:	8e af       	std	Y+62, r24	; 0x3e
    1a88:	a9 97       	sbiw	r28, 0x29	; 41
    1a8a:	de 01       	movw	r26, r28
    1a8c:	11 96       	adiw	r26, 0x01	; 1
    1a8e:	a7 96       	adiw	r28, 0x27	; 39
    1a90:	bf af       	std	Y+63, r27	; 0x3f
    1a92:	ae af       	std	Y+62, r26	; 0x3e
    1a94:	a7 97       	sbiw	r28, 0x27	; 39
    1a96:	f1 01       	movw	r30, r2
    1a98:	25 91       	lpm	r18, Z+
    1a9a:	34 91       	lpm	r19, Z
    1a9c:	ab 96       	adiw	r28, 0x2b	; 43
    1a9e:	3f af       	std	Y+63, r19	; 0x3f
    1aa0:	2e af       	std	Y+62, r18	; 0x3e
    1aa2:	ab 97       	sbiw	r28, 0x2b	; 43
    1aa4:	a9 96       	adiw	r28, 0x29	; 41
    1aa6:	ee ad       	ldd	r30, Y+62	; 0x3e
    1aa8:	ff ad       	ldd	r31, Y+63	; 0x3f
    1aaa:	a9 97       	sbiw	r28, 0x29	; 41
    1aac:	05 91       	lpm	r16, Z+
    1aae:	14 91       	lpm	r17, Z
    1ab0:	78 01       	movw	r14, r16
    1ab2:	31 e0       	ldi	r19, 0x01	; 1
    1ab4:	e3 1a       	sub	r14, r19
    1ab6:	f1 08       	sbc	r15, r1
    1ab8:	c7 01       	movw	r24, r14
    1aba:	7c da       	rcall	.-2824   	; 0xfb4 <conv_wl>
    1abc:	4b 01       	movw	r8, r22
    1abe:	5c 01       	movw	r10, r24
    1ac0:	c8 01       	movw	r24, r16
    1ac2:	78 da       	rcall	.-2832   	; 0xfb4 <conv_wl>
    1ac4:	af 96       	adiw	r28, 0x2f	; 47
    1ac6:	6c af       	std	Y+60, r22	; 0x3c
    1ac8:	7d af       	std	Y+61, r23	; 0x3d
    1aca:	8e af       	std	Y+62, r24	; 0x3e
    1acc:	9f af       	std	Y+63, r25	; 0x3f
    1ace:	af 97       	sbiw	r28, 0x2f	; 47
    1ad0:	f7 01       	movw	r30, r14
    1ad2:	ee 0f       	add	r30, r30
    1ad4:	ff 1f       	adc	r31, r31
    1ad6:	ee 0f       	add	r30, r30
    1ad8:	ff 1f       	adc	r31, r31
    1ada:	e0 58       	subi	r30, 0x80	; 128
    1adc:	fb 4f       	sbci	r31, 0xFB	; 251
    1ade:	40 80       	ld	r4, Z
    1ae0:	51 80       	ldd	r5, Z+1	; 0x01
    1ae2:	62 80       	ldd	r6, Z+2	; 0x02
    1ae4:	73 80       	ldd	r7, Z+3	; 0x03
    1ae6:	00 0f       	add	r16, r16
    1ae8:	11 1f       	adc	r17, r17
    1aea:	00 0f       	add	r16, r16
    1aec:	11 1f       	adc	r17, r17
    1aee:	f8 01       	movw	r30, r16
    1af0:	e0 58       	subi	r30, 0x80	; 128
    1af2:	fb 4f       	sbci	r31, 0xFB	; 251
    1af4:	a3 01       	movw	r20, r6
    1af6:	92 01       	movw	r18, r4
    1af8:	60 81       	ld	r22, Z
    1afa:	71 81       	ldd	r23, Z+1	; 0x01
    1afc:	82 81       	ldd	r24, Z+2	; 0x02
    1afe:	93 81       	ldd	r25, Z+3	; 0x03
    1b00:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    1b04:	6b 01       	movw	r12, r22
    1b06:	7c 01       	movw	r14, r24
    1b08:	ab 96       	adiw	r28, 0x2b	; 43
    1b0a:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b0c:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b0e:	ab 97       	sbiw	r28, 0x2b	; 43
    1b10:	bd 01       	movw	r22, r26
    1b12:	bb 0f       	add	r27, r27
    1b14:	88 0b       	sbc	r24, r24
    1b16:	99 0b       	sbc	r25, r25
    1b18:	0e 94 b4 17 	call	0x2f68	; 0x2f68 <__floatsisf>
    1b1c:	a5 01       	movw	r20, r10
    1b1e:	94 01       	movw	r18, r8
    1b20:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    1b24:	9b 01       	movw	r18, r22
    1b26:	ac 01       	movw	r20, r24
    1b28:	c7 01       	movw	r24, r14
    1b2a:	b6 01       	movw	r22, r12
    1b2c:	0e 94 ad 18 	call	0x315a	; 0x315a <__mulsf3>
    1b30:	6b 01       	movw	r12, r22
    1b32:	7c 01       	movw	r14, r24
    1b34:	a5 01       	movw	r20, r10
    1b36:	94 01       	movw	r18, r8
    1b38:	af 96       	adiw	r28, 0x2f	; 47
    1b3a:	6c ad       	ldd	r22, Y+60	; 0x3c
    1b3c:	7d ad       	ldd	r23, Y+61	; 0x3d
    1b3e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1b40:	9f ad       	ldd	r25, Y+63	; 0x3f
    1b42:	af 97       	sbiw	r28, 0x2f	; 47
    1b44:	0e 94 b0 16 	call	0x2d60	; 0x2d60 <__subsf3>
    1b48:	9b 01       	movw	r18, r22
    1b4a:	ac 01       	movw	r20, r24
    1b4c:	c7 01       	movw	r24, r14
    1b4e:	b6 01       	movw	r22, r12
    1b50:	0e 94 19 17 	call	0x2e32	; 0x2e32 <__divsf3>
    1b54:	a3 01       	movw	r20, r6
    1b56:	92 01       	movw	r18, r4
    1b58:	0e 94 b1 16 	call	0x2d62	; 0x2d62 <__addsf3>
    1b5c:	16 2f       	mov	r17, r22
    1b5e:	07 2f       	mov	r16, r23
    1b60:	f8 2e       	mov	r15, r24
    1b62:	e9 2e       	mov	r14, r25
    1b64:	20 e0       	ldi	r18, 0x00	; 0
    1b66:	30 e0       	ldi	r19, 0x00	; 0
    1b68:	a9 01       	movw	r20, r18
    1b6a:	0e 94 15 17 	call	0x2e2a	; 0x2e2a <__cmpsf2>
    1b6e:	87 ff       	sbrs	r24, 7
    1b70:	04 c0       	rjmp	.+8      	; 0x1b7a <CDC_Recive_Event_Process+0x23a>
    1b72:	10 e0       	ldi	r17, 0x00	; 0
    1b74:	00 e0       	ldi	r16, 0x00	; 0
    1b76:	f1 2c       	mov	r15, r1
    1b78:	e1 2c       	mov	r14, r1
    1b7a:	a7 96       	adiw	r28, 0x27	; 39
    1b7c:	ee ad       	ldd	r30, Y+62	; 0x3e
    1b7e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1b80:	a7 97       	sbiw	r28, 0x27	; 39
    1b82:	20 e2       	ldi	r18, 0x20	; 32
    1b84:	11 92       	st	Z+, r1
    1b86:	2a 95       	dec	r18
    1b88:	e9 f7       	brne	.-6      	; 0x1b84 <CDC_Recive_Event_Process+0x244>
    1b8a:	ef 92       	push	r14
    1b8c:	ff 92       	push	r15
    1b8e:	0f 93       	push	r16
    1b90:	1f 93       	push	r17
    1b92:	ab 96       	adiw	r28, 0x2b	; 43
    1b94:	3f ad       	ldd	r19, Y+63	; 0x3f
    1b96:	ab 97       	sbiw	r28, 0x2b	; 43
    1b98:	3f 93       	push	r19
    1b9a:	aa 96       	adiw	r28, 0x2a	; 42
    1b9c:	8f ad       	ldd	r24, Y+63	; 0x3f
    1b9e:	aa 97       	sbiw	r28, 0x2a	; 42
    1ba0:	8f 93       	push	r24
    1ba2:	a3 e7       	ldi	r26, 0x73	; 115
    1ba4:	b1 e0       	ldi	r27, 0x01	; 1
    1ba6:	bf 93       	push	r27
    1ba8:	af 93       	push	r26
    1baa:	21 e0       	ldi	r18, 0x01	; 1
    1bac:	30 e0       	ldi	r19, 0x00	; 0
    1bae:	2c 0f       	add	r18, r28
    1bb0:	3d 1f       	adc	r19, r29
    1bb2:	3f 93       	push	r19
    1bb4:	2f 93       	push	r18
    1bb6:	0e 94 47 22 	call	0x448e	; 0x448e <sprintf>
    1bba:	be 01       	movw	r22, r28
    1bbc:	6f 5f       	subi	r22, 0xFF	; 255
    1bbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1bc0:	80 e0       	ldi	r24, 0x00	; 0
    1bc2:	91 e0       	ldi	r25, 0x01	; 1
    1bc4:	2b d7       	rcall	.+3670   	; 0x2a1c <CDC_Device_SendString>
    1bc6:	32 e0       	ldi	r19, 0x02	; 2
    1bc8:	23 0e       	add	r2, r19
    1bca:	31 1c       	adc	r3, r1
    1bcc:	a9 96       	adiw	r28, 0x29	; 41
    1bce:	8e ad       	ldd	r24, Y+62	; 0x3e
    1bd0:	9f ad       	ldd	r25, Y+63	; 0x3f
    1bd2:	a9 97       	sbiw	r28, 0x29	; 41
    1bd4:	02 96       	adiw	r24, 0x02	; 2
    1bd6:	a9 96       	adiw	r28, 0x29	; 41
    1bd8:	9f af       	std	Y+63, r25	; 0x3f
    1bda:	8e af       	std	Y+62, r24	; 0x3e
    1bdc:	a9 97       	sbiw	r28, 0x29	; 41
    1bde:	0f b6       	in	r0, 0x3f	; 63
    1be0:	f8 94       	cli
    1be2:	de bf       	out	0x3e, r29	; 62
    1be4:	0f be       	out	0x3f, r0	; 63
    1be6:	cd bf       	out	0x3d, r28	; 61
    1be8:	ba e1       	ldi	r27, 0x1A	; 26
    1bea:	2b 16       	cp	r2, r27
    1bec:	be e0       	ldi	r27, 0x0E	; 14
    1bee:	3b 06       	cpc	r3, r27
    1bf0:	09 f0       	breq	.+2      	; 0x1bf4 <CDC_Recive_Event_Process+0x2b4>
    1bf2:	51 cf       	rjmp	.-350    	; 0x1a96 <CDC_Recive_Event_Process+0x156>
    1bf4:	2d cf       	rjmp	.-422    	; 0x1a50 <CDC_Recive_Event_Process+0x110>
    1bf6:	43 e0       	ldi	r20, 0x03	; 3
    1bf8:	50 e0       	ldi	r21, 0x00	; 0
    1bfa:	6a e7       	ldi	r22, 0x7A	; 122
    1bfc:	71 e0       	ldi	r23, 0x01	; 1
    1bfe:	82 e0       	ldi	r24, 0x02	; 2
    1c00:	99 e0       	ldi	r25, 0x09	; 9
    1c02:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1c06:	89 2b       	or	r24, r25
    1c08:	99 f5       	brne	.+102    	; 0x1c70 <CDC_Recive_Event_Process+0x330>
    1c0a:	c7 dc       	rcall	.-1650   	; 0x159a <measure>
    1c0c:	00 e8       	ldi	r16, 0x80	; 128
    1c0e:	14 e0       	ldi	r17, 0x04	; 4
    1c10:	80 e0       	ldi	r24, 0x00	; 0
    1c12:	a8 2e       	mov	r10, r24
    1c14:	89 e0       	ldi	r24, 0x09	; 9
    1c16:	b8 2e       	mov	r11, r24
    1c18:	90 e1       	ldi	r25, 0x10	; 16
    1c1a:	99 2e       	mov	r9, r25
    1c1c:	fe 01       	movw	r30, r28
    1c1e:	31 96       	adiw	r30, 0x01	; 1
    1c20:	7f 01       	movw	r14, r30
    1c22:	2e e7       	ldi	r18, 0x7E	; 126
    1c24:	c2 2e       	mov	r12, r18
    1c26:	21 e0       	ldi	r18, 0x01	; 1
    1c28:	d2 2e       	mov	r13, r18
    1c2a:	d7 01       	movw	r26, r14
    1c2c:	e9 2d       	mov	r30, r9
    1c2e:	1d 92       	st	X+, r1
    1c30:	ea 95       	dec	r30
    1c32:	e9 f7       	brne	.-6      	; 0x1c2e <CDC_Recive_Event_Process+0x2ee>
    1c34:	d8 01       	movw	r26, r16
    1c36:	6d 91       	ld	r22, X+
    1c38:	7d 91       	ld	r23, X+
    1c3a:	8d 91       	ld	r24, X+
    1c3c:	9d 91       	ld	r25, X+
    1c3e:	8d 01       	movw	r16, r26
    1c40:	0e 94 81 17 	call	0x2f02	; 0x2f02 <__fixsfsi>
    1c44:	7f 93       	push	r23
    1c46:	6f 93       	push	r22
    1c48:	df 92       	push	r13
    1c4a:	cf 92       	push	r12
    1c4c:	ff 92       	push	r15
    1c4e:	ef 92       	push	r14
    1c50:	0e 94 47 22 	call	0x448e	; 0x448e <sprintf>
    1c54:	b7 01       	movw	r22, r14
    1c56:	80 e0       	ldi	r24, 0x00	; 0
    1c58:	91 e0       	ldi	r25, 0x01	; 1
    1c5a:	e0 d6       	rcall	.+3520   	; 0x2a1c <CDC_Device_SendString>
    1c5c:	0f 90       	pop	r0
    1c5e:	0f 90       	pop	r0
    1c60:	0f 90       	pop	r0
    1c62:	0f 90       	pop	r0
    1c64:	0f 90       	pop	r0
    1c66:	0f 90       	pop	r0
    1c68:	a0 16       	cp	r10, r16
    1c6a:	b1 06       	cpc	r11, r17
    1c6c:	f1 f6       	brne	.-68     	; 0x1c2a <CDC_Recive_Event_Process+0x2ea>
    1c6e:	f0 ce       	rjmp	.-544    	; 0x1a50 <CDC_Recive_Event_Process+0x110>
    1c70:	44 e0       	ldi	r20, 0x04	; 4
    1c72:	50 e0       	ldi	r21, 0x00	; 0
    1c74:	62 e8       	ldi	r22, 0x82	; 130
    1c76:	71 e0       	ldi	r23, 0x01	; 1
    1c78:	82 e0       	ldi	r24, 0x02	; 2
    1c7a:	99 e0       	ldi	r25, 0x09	; 9
    1c7c:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1c80:	89 2b       	or	r24, r25
    1c82:	11 f4       	brne	.+4      	; 0x1c88 <CDC_Recive_Event_Process+0x348>
    1c84:	29 dd       	rcall	.-1454   	; 0x16d8 <dark>
    1c86:	63 c1       	rjmp	.+710    	; 0x1f4e <CDC_Recive_Event_Process+0x60e>
    1c88:	43 e0       	ldi	r20, 0x03	; 3
    1c8a:	50 e0       	ldi	r21, 0x00	; 0
    1c8c:	6c e8       	ldi	r22, 0x8C	; 140
    1c8e:	71 e0       	ldi	r23, 0x01	; 1
    1c90:	82 e0       	ldi	r24, 0x02	; 2
    1c92:	99 e0       	ldi	r25, 0x09	; 9
    1c94:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1c98:	89 2b       	or	r24, r25
    1c9a:	09 f0       	breq	.+2      	; 0x1c9e <CDC_Recive_Event_Process+0x35e>
    1c9c:	4e c0       	rjmp	.+156    	; 0x1d3a <CDC_Recive_Event_Process+0x3fa>
    1c9e:	fe 01       	movw	r30, r28
    1ca0:	31 96       	adiw	r30, 0x01	; 1
    1ca2:	1f 01       	movw	r2, r30
    1ca4:	84 e6       	ldi	r24, 0x64	; 100
    1ca6:	df 01       	movw	r26, r30
    1ca8:	1d 92       	st	X+, r1
    1caa:	8a 95       	dec	r24
    1cac:	e9 f7       	brne	.-6      	; 0x1ca8 <CDC_Recive_Event_Process+0x368>
    1cae:	ea e4       	ldi	r30, 0x4A	; 74
    1cb0:	fa e0       	ldi	r31, 0x0A	; 10
    1cb2:	05 91       	lpm	r16, Z+
    1cb4:	15 91       	lpm	r17, Z+
    1cb6:	25 91       	lpm	r18, Z+
    1cb8:	34 91       	lpm	r19, Z
    1cba:	e6 e4       	ldi	r30, 0x46	; 70
    1cbc:	fa e0       	ldi	r31, 0x0A	; 10
    1cbe:	45 90       	lpm	r4, Z+
    1cc0:	55 90       	lpm	r5, Z+
    1cc2:	65 90       	lpm	r6, Z+
    1cc4:	74 90       	lpm	r7, Z
    1cc6:	e2 e4       	ldi	r30, 0x42	; 66
    1cc8:	fa e0       	ldi	r31, 0x0A	; 10
    1cca:	85 90       	lpm	r8, Z+
    1ccc:	95 90       	lpm	r9, Z+
    1cce:	a5 90       	lpm	r10, Z+
    1cd0:	b4 90       	lpm	r11, Z
    1cd2:	ee e3       	ldi	r30, 0x3E	; 62
    1cd4:	fa e0       	ldi	r31, 0x0A	; 10
    1cd6:	c5 90       	lpm	r12, Z+
    1cd8:	d5 90       	lpm	r13, Z+
    1cda:	e5 90       	lpm	r14, Z+
    1cdc:	f4 90       	lpm	r15, Z
    1cde:	ea e3       	ldi	r30, 0x3A	; 58
    1ce0:	fa e0       	ldi	r31, 0x0A	; 10
    1ce2:	45 91       	lpm	r20, Z+
    1ce4:	55 91       	lpm	r21, Z+
    1ce6:	65 91       	lpm	r22, Z+
    1ce8:	74 91       	lpm	r23, Z
    1cea:	e6 e3       	ldi	r30, 0x36	; 54
    1cec:	fa e0       	ldi	r31, 0x0A	; 10
    1cee:	85 91       	lpm	r24, Z+
    1cf0:	95 91       	lpm	r25, Z+
    1cf2:	a5 91       	lpm	r26, Z+
    1cf4:	b4 91       	lpm	r27, Z
    1cf6:	3f 93       	push	r19
    1cf8:	2f 93       	push	r18
    1cfa:	1f 93       	push	r17
    1cfc:	0f 93       	push	r16
    1cfe:	7f 92       	push	r7
    1d00:	6f 92       	push	r6
    1d02:	5f 92       	push	r5
    1d04:	4f 92       	push	r4
    1d06:	bf 92       	push	r11
    1d08:	af 92       	push	r10
    1d0a:	9f 92       	push	r9
    1d0c:	8f 92       	push	r8
    1d0e:	ff 92       	push	r15
    1d10:	ef 92       	push	r14
    1d12:	df 92       	push	r13
    1d14:	cf 92       	push	r12
    1d16:	7f 93       	push	r23
    1d18:	6f 93       	push	r22
    1d1a:	5f 93       	push	r21
    1d1c:	4f 93       	push	r20
    1d1e:	bf 93       	push	r27
    1d20:	af 93       	push	r26
    1d22:	9f 93       	push	r25
    1d24:	8f 93       	push	r24
    1d26:	81 e9       	ldi	r24, 0x91	; 145
    1d28:	91 e0       	ldi	r25, 0x01	; 1
    1d2a:	9f 93       	push	r25
    1d2c:	8f 93       	push	r24
    1d2e:	3f 92       	push	r3
    1d30:	2f 92       	push	r2
    1d32:	0e 94 47 22 	call	0x448e	; 0x448e <sprintf>
    1d36:	b1 01       	movw	r22, r2
    1d38:	36 c0       	rjmp	.+108    	; 0x1da6 <CDC_Recive_Event_Process+0x466>
    1d3a:	43 e0       	ldi	r20, 0x03	; 3
    1d3c:	50 e0       	ldi	r21, 0x00	; 0
    1d3e:	69 ea       	ldi	r22, 0xA9	; 169
    1d40:	71 e0       	ldi	r23, 0x01	; 1
    1d42:	82 e0       	ldi	r24, 0x02	; 2
    1d44:	99 e0       	ldi	r25, 0x09	; 9
    1d46:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1d4a:	89 2b       	or	r24, r25
    1d4c:	a9 f5       	brne	.+106    	; 0x1db8 <CDC_Recive_Event_Process+0x478>
    1d4e:	8e 01       	movw	r16, r28
    1d50:	0f 5f       	subi	r16, 0xFF	; 255
    1d52:	1f 4f       	sbci	r17, 0xFF	; 255
    1d54:	80 e4       	ldi	r24, 0x40	; 64
    1d56:	d8 01       	movw	r26, r16
    1d58:	1d 92       	st	X+, r1
    1d5a:	8a 95       	dec	r24
    1d5c:	e9 f7       	brne	.-6      	; 0x1d58 <CDC_Recive_Event_Process+0x418>
    1d5e:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <status>
    1d62:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <status+0x1>
    1d66:	00 97       	sbiw	r24, 0x00	; 0
    1d68:	21 f0       	breq	.+8      	; 0x1d72 <CDC_Recive_Event_Process+0x432>
    1d6a:	01 97       	sbiw	r24, 0x01	; 1
    1d6c:	21 f0       	breq	.+8      	; 0x1d76 <CDC_Recive_Event_Process+0x436>
    1d6e:	85 e4       	ldi	r24, 0x45	; 69
    1d70:	03 c0       	rjmp	.+6      	; 0x1d78 <CDC_Recive_Event_Process+0x438>
    1d72:	82 e5       	ldi	r24, 0x52	; 82
    1d74:	01 c0       	rjmp	.+2      	; 0x1d78 <CDC_Recive_Event_Process+0x438>
    1d76:	87 e5       	ldi	r24, 0x57	; 87
    1d78:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <temperature+0x3>
    1d7c:	9f 93       	push	r25
    1d7e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <temperature+0x2>
    1d82:	9f 93       	push	r25
    1d84:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <temperature+0x1>
    1d88:	9f 93       	push	r25
    1d8a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <temperature>
    1d8e:	9f 93       	push	r25
    1d90:	1f 92       	push	r1
    1d92:	8f 93       	push	r24
    1d94:	8d ea       	ldi	r24, 0xAD	; 173
    1d96:	91 e0       	ldi	r25, 0x01	; 1
    1d98:	9f 93       	push	r25
    1d9a:	8f 93       	push	r24
    1d9c:	1f 93       	push	r17
    1d9e:	0f 93       	push	r16
    1da0:	0e 94 47 22 	call	0x448e	; 0x448e <sprintf>
    1da4:	b8 01       	movw	r22, r16
    1da6:	80 e0       	ldi	r24, 0x00	; 0
    1da8:	91 e0       	ldi	r25, 0x01	; 1
    1daa:	38 d6       	rcall	.+3184   	; 0x2a1c <CDC_Device_SendString>
    1dac:	0f b6       	in	r0, 0x3f	; 63
    1dae:	f8 94       	cli
    1db0:	de bf       	out	0x3e, r29	; 62
    1db2:	0f be       	out	0x3f, r0	; 63
    1db4:	cd bf       	out	0x3d, r28	; 61
    1db6:	d3 c0       	rjmp	.+422    	; 0x1f5e <CDC_Recive_Event_Process+0x61e>
    1db8:	44 e0       	ldi	r20, 0x04	; 4
    1dba:	50 e0       	ldi	r21, 0x00	; 0
    1dbc:	69 eb       	ldi	r22, 0xB9	; 185
    1dbe:	71 e0       	ldi	r23, 0x01	; 1
    1dc0:	82 e0       	ldi	r24, 0x02	; 2
    1dc2:	99 e0       	ldi	r25, 0x09	; 9
    1dc4:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1dc8:	89 2b       	or	r24, r25
    1dca:	09 f0       	breq	.+2      	; 0x1dce <CDC_Recive_Event_Process+0x48e>
    1dcc:	c3 c0       	rjmp	.+390    	; 0x1f54 <CDC_Recive_Event_Process+0x614>
    1dce:	48 e0       	ldi	r20, 0x08	; 8
    1dd0:	50 e0       	ldi	r21, 0x00	; 0
    1dd2:	6e eb       	ldi	r22, 0xBE	; 190
    1dd4:	71 e0       	ldi	r23, 0x01	; 1
    1dd6:	82 e0       	ldi	r24, 0x02	; 2
    1dd8:	99 e0       	ldi	r25, 0x09	; 9
    1dda:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1dde:	89 2b       	or	r24, r25
    1de0:	39 f4       	brne	.+14     	; 0x1df0 <CDC_Recive_Event_Process+0x4b0>
    1de2:	81 e0       	ldi	r24, 0x01	; 1
    1de4:	90 e0       	ldi	r25, 0x00	; 0
    1de6:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <auto_exposure+0x1>
    1dea:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <auto_exposure>
    1dee:	af c0       	rjmp	.+350    	; 0x1f4e <CDC_Recive_Event_Process+0x60e>
    1df0:	49 e0       	ldi	r20, 0x09	; 9
    1df2:	50 e0       	ldi	r21, 0x00	; 0
    1df4:	67 ec       	ldi	r22, 0xC7	; 199
    1df6:	71 e0       	ldi	r23, 0x01	; 1
    1df8:	82 e0       	ldi	r24, 0x02	; 2
    1dfa:	99 e0       	ldi	r25, 0x09	; 9
    1dfc:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1e00:	89 2b       	or	r24, r25
    1e02:	49 f4       	brne	.+18     	; 0x1e16 <CDC_Recive_Event_Process+0x4d6>
    1e04:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1e08:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1e0c:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <exposure_time_sel+0x1>
    1e10:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <exposure_time_sel>
    1e14:	9c c0       	rjmp	.+312    	; 0x1f4e <CDC_Recive_Event_Process+0x60e>
    1e16:	49 e0       	ldi	r20, 0x09	; 9
    1e18:	50 e0       	ldi	r21, 0x00	; 0
    1e1a:	61 ed       	ldi	r22, 0xD1	; 209
    1e1c:	71 e0       	ldi	r23, 0x01	; 1
    1e1e:	82 e0       	ldi	r24, 0x02	; 2
    1e20:	99 e0       	ldi	r25, 0x09	; 9
    1e22:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1e26:	89 2b       	or	r24, r25
    1e28:	39 f4       	brne	.+14     	; 0x1e38 <CDC_Recive_Event_Process+0x4f8>
    1e2a:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1e2e:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1e32:	81 e0       	ldi	r24, 0x01	; 1
    1e34:	90 e0       	ldi	r25, 0x00	; 0
    1e36:	87 c0       	rjmp	.+270    	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1e38:	49 e0       	ldi	r20, 0x09	; 9
    1e3a:	50 e0       	ldi	r21, 0x00	; 0
    1e3c:	6b ed       	ldi	r22, 0xDB	; 219
    1e3e:	71 e0       	ldi	r23, 0x01	; 1
    1e40:	82 e0       	ldi	r24, 0x02	; 2
    1e42:	99 e0       	ldi	r25, 0x09	; 9
    1e44:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1e48:	89 2b       	or	r24, r25
    1e4a:	39 f4       	brne	.+14     	; 0x1e5a <CDC_Recive_Event_Process+0x51a>
    1e4c:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1e50:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1e54:	82 e0       	ldi	r24, 0x02	; 2
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	76 c0       	rjmp	.+236    	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1e5a:	47 e0       	ldi	r20, 0x07	; 7
    1e5c:	50 e0       	ldi	r21, 0x00	; 0
    1e5e:	65 ee       	ldi	r22, 0xE5	; 229
    1e60:	71 e0       	ldi	r23, 0x01	; 1
    1e62:	82 e0       	ldi	r24, 0x02	; 2
    1e64:	99 e0       	ldi	r25, 0x09	; 9
    1e66:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1e6a:	89 2b       	or	r24, r25
    1e6c:	39 f4       	brne	.+14     	; 0x1e7c <CDC_Recive_Event_Process+0x53c>
    1e6e:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1e72:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1e76:	83 e0       	ldi	r24, 0x03	; 3
    1e78:	90 e0       	ldi	r25, 0x00	; 0
    1e7a:	65 c0       	rjmp	.+202    	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1e7c:	47 e0       	ldi	r20, 0x07	; 7
    1e7e:	50 e0       	ldi	r21, 0x00	; 0
    1e80:	6d ee       	ldi	r22, 0xED	; 237
    1e82:	71 e0       	ldi	r23, 0x01	; 1
    1e84:	82 e0       	ldi	r24, 0x02	; 2
    1e86:	99 e0       	ldi	r25, 0x09	; 9
    1e88:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1e8c:	89 2b       	or	r24, r25
    1e8e:	39 f4       	brne	.+14     	; 0x1e9e <CDC_Recive_Event_Process+0x55e>
    1e90:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1e94:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1e98:	84 e0       	ldi	r24, 0x04	; 4
    1e9a:	90 e0       	ldi	r25, 0x00	; 0
    1e9c:	54 c0       	rjmp	.+168    	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1e9e:	47 e0       	ldi	r20, 0x07	; 7
    1ea0:	50 e0       	ldi	r21, 0x00	; 0
    1ea2:	65 ef       	ldi	r22, 0xF5	; 245
    1ea4:	71 e0       	ldi	r23, 0x01	; 1
    1ea6:	82 e0       	ldi	r24, 0x02	; 2
    1ea8:	99 e0       	ldi	r25, 0x09	; 9
    1eaa:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1eae:	89 2b       	or	r24, r25
    1eb0:	39 f4       	brne	.+14     	; 0x1ec0 <CDC_Recive_Event_Process+0x580>
    1eb2:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1eb6:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1eba:	85 e0       	ldi	r24, 0x05	; 5
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	43 c0       	rjmp	.+134    	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1ec0:	48 e0       	ldi	r20, 0x08	; 8
    1ec2:	50 e0       	ldi	r21, 0x00	; 0
    1ec4:	6d ef       	ldi	r22, 0xFD	; 253
    1ec6:	71 e0       	ldi	r23, 0x01	; 1
    1ec8:	82 e0       	ldi	r24, 0x02	; 2
    1eca:	99 e0       	ldi	r25, 0x09	; 9
    1ecc:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1ed0:	89 2b       	or	r24, r25
    1ed2:	39 f4       	brne	.+14     	; 0x1ee2 <CDC_Recive_Event_Process+0x5a2>
    1ed4:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1ed8:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1edc:	86 e0       	ldi	r24, 0x06	; 6
    1ede:	90 e0       	ldi	r25, 0x00	; 0
    1ee0:	32 c0       	rjmp	.+100    	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1ee2:	48 e0       	ldi	r20, 0x08	; 8
    1ee4:	50 e0       	ldi	r21, 0x00	; 0
    1ee6:	66 e0       	ldi	r22, 0x06	; 6
    1ee8:	72 e0       	ldi	r23, 0x02	; 2
    1eea:	82 e0       	ldi	r24, 0x02	; 2
    1eec:	99 e0       	ldi	r25, 0x09	; 9
    1eee:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1ef2:	89 2b       	or	r24, r25
    1ef4:	39 f4       	brne	.+14     	; 0x1f04 <CDC_Recive_Event_Process+0x5c4>
    1ef6:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1efa:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1efe:	87 e0       	ldi	r24, 0x07	; 7
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	21 c0       	rjmp	.+66     	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1f04:	48 e0       	ldi	r20, 0x08	; 8
    1f06:	50 e0       	ldi	r21, 0x00	; 0
    1f08:	6f e0       	ldi	r22, 0x0F	; 15
    1f0a:	72 e0       	ldi	r23, 0x02	; 2
    1f0c:	82 e0       	ldi	r24, 0x02	; 2
    1f0e:	99 e0       	ldi	r25, 0x09	; 9
    1f10:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1f14:	89 2b       	or	r24, r25
    1f16:	39 f4       	brne	.+14     	; 0x1f26 <CDC_Recive_Event_Process+0x5e6>
    1f18:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f1c:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f20:	88 e0       	ldi	r24, 0x08	; 8
    1f22:	90 e0       	ldi	r25, 0x00	; 0
    1f24:	10 c0       	rjmp	.+32     	; 0x1f46 <CDC_Recive_Event_Process+0x606>
    1f26:	49 e0       	ldi	r20, 0x09	; 9
    1f28:	50 e0       	ldi	r21, 0x00	; 0
    1f2a:	68 e1       	ldi	r22, 0x18	; 24
    1f2c:	72 e0       	ldi	r23, 0x02	; 2
    1f2e:	82 e0       	ldi	r24, 0x02	; 2
    1f30:	99 e0       	ldi	r25, 0x09	; 9
    1f32:	0e 94 b4 21 	call	0x4368	; 0x4368 <strncmp>
    1f36:	89 2b       	or	r24, r25
    1f38:	51 f4       	brne	.+20     	; 0x1f4e <CDC_Recive_Event_Process+0x60e>
    1f3a:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f3e:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f42:	89 e0       	ldi	r24, 0x09	; 9
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <exposure_time_sel+0x1>
    1f4a:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <exposure_time_sel>
    1f4e:	67 e8       	ldi	r22, 0x87	; 135
    1f50:	71 e0       	ldi	r23, 0x01	; 1
    1f52:	02 c0       	rjmp	.+4      	; 0x1f58 <CDC_Recive_Event_Process+0x618>
    1f54:	62 e2       	ldi	r22, 0x22	; 34
    1f56:	72 e0       	ldi	r23, 0x02	; 2
    1f58:	80 e0       	ldi	r24, 0x00	; 0
    1f5a:	91 e0       	ldi	r25, 0x01	; 1
    1f5c:	5f d5       	rcall	.+2750   	; 0x2a1c <CDC_Device_SendString>
    1f5e:	80 e2       	ldi	r24, 0x20	; 32
    1f60:	e2 e0       	ldi	r30, 0x02	; 2
    1f62:	f9 e0       	ldi	r31, 0x09	; 9
    1f64:	df 01       	movw	r26, r30
    1f66:	1d 92       	st	X+, r1
    1f68:	8a 95       	dec	r24
    1f6a:	e9 f7       	brne	.-6      	; 0x1f66 <CDC_Recive_Event_Process+0x626>
    1f6c:	10 92 01 09 	sts	0x0901, r1	; 0x800901 <cdc_recive_index+0x1>
    1f70:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <cdc_recive_index>
    1f74:	c2 59       	subi	r28, 0x92	; 146
    1f76:	df 4f       	sbci	r29, 0xFF	; 255
    1f78:	0f b6       	in	r0, 0x3f	; 63
    1f7a:	f8 94       	cli
    1f7c:	de bf       	out	0x3e, r29	; 62
    1f7e:	0f be       	out	0x3f, r0	; 63
    1f80:	cd bf       	out	0x3d, r28	; 61
    1f82:	df 91       	pop	r29
    1f84:	cf 91       	pop	r28
    1f86:	1f 91       	pop	r17
    1f88:	0f 91       	pop	r16
    1f8a:	ff 90       	pop	r15
    1f8c:	ef 90       	pop	r14
    1f8e:	df 90       	pop	r13
    1f90:	cf 90       	pop	r12
    1f92:	bf 90       	pop	r11
    1f94:	af 90       	pop	r10
    1f96:	9f 90       	pop	r9
    1f98:	8f 90       	pop	r8
    1f9a:	7f 90       	pop	r7
    1f9c:	6f 90       	pop	r6
    1f9e:	5f 90       	pop	r5
    1fa0:	4f 90       	pop	r4
    1fa2:	3f 90       	pop	r3
    1fa4:	2f 90       	pop	r2
    1fa6:	08 95       	ret

00001fa8 <main>:
    1fa8:	3a da       	rcall	.-2956   	; 0x141e <SetupHardware>
    1faa:	68 e2       	ldi	r22, 0x28	; 40
    1fac:	72 e0       	ldi	r23, 0x02	; 2
    1fae:	80 e0       	ldi	r24, 0x00	; 0
    1fb0:	91 e0       	ldi	r25, 0x01	; 1
    1fb2:	11 d6       	rcall	.+3106   	; 0x2bd6 <CDC_Device_CreateStream>
    1fb4:	78 94       	sei
    1fb6:	96 d9       	rcall	.-3284   	; 0x12e4 <c12880ma_read>
    1fb8:	ea d8       	rcall	.-3628   	; 0x118e <adc_temp_read>
    1fba:	e9 d8       	rcall	.-3630   	; 0x118e <adc_temp_read>
    1fbc:	60 93 1b 01 	sts	0x011B, r22	; 0x80011b <temperature>
    1fc0:	70 93 1c 01 	sts	0x011C, r23	; 0x80011c <temperature+0x1>
    1fc4:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <temperature+0x2>
    1fc8:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <temperature+0x3>
    1fcc:	ed d9       	rcall	.-3110   	; 0x13a8 <check_status>
    1fce:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <status+0x1>
    1fd2:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <status>
    1fd6:	b4 dc       	rcall	.-1688   	; 0x1940 <CDC_Recive_Event_Process>
    1fd8:	98 dc       	rcall	.-1744   	; 0x190a <CDC_Recive_Event>
    1fda:	80 e0       	ldi	r24, 0x00	; 0
    1fdc:	91 e0       	ldi	r25, 0x01	; 1
    1fde:	a7 d5       	rcall	.+2894   	; 0x2b2e <CDC_Device_USBTask>
    1fe0:	de d4       	rcall	.+2492   	; 0x299e <USB_USBTask>
    1fe2:	eb cf       	rjmp	.-42     	; 0x1fba <main+0x12>

00001fe4 <spi_init>:
#define DD_MOSI DDB2
#define DD_SCK DDB1

void spi_init()
{
    DDR_SPI |= (1 << DD_MOSI) | (1 << DD_SCK);
    1fe4:	84 b1       	in	r24, 0x04	; 4
    1fe6:	86 60       	ori	r24, 0x06	; 6
    1fe8:	84 b9       	out	0x04, r24	; 4
    SPCR = (1 << SPE) | (1 << MSTR);// | (1 << SPR0);// | (1 << CPOL) | (1 << CPHA);
    1fea:	80 e5       	ldi	r24, 0x50	; 80
    1fec:	8c bd       	out	0x2c, r24	; 44
    SPSR |= (1 << SPI2X);
    1fee:	8d b5       	in	r24, 0x2d	; 45
    1ff0:	81 60       	ori	r24, 0x01	; 1
    1ff2:	8d bd       	out	0x2d, r24	; 45
    1ff4:	08 95       	ret

00001ff6 <spi_transfer>:
}

uint8_t spi_transfer(uint8_t value)
{
    SPDR = value;
    1ff6:	8e bd       	out	0x2e, r24	; 46
    asm volatile("nop");
    1ff8:	00 00       	nop
    while (!(SPSR & (1 << SPIF)));
    1ffa:	0d b4       	in	r0, 0x2d	; 45
    1ffc:	07 fe       	sbrs	r0, 7
    1ffe:	fd cf       	rjmp	.-6      	; 0x1ffa <spi_transfer+0x4>

    return SPDR;
    2000:	8e b5       	in	r24, 0x2e	; 46
    2002:	08 95       	ret

00002004 <CALLBACK_USB_GetDescriptor>:
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
	uint16_t    Size    = NO_DESCRIPTOR;

	switch (DescriptorType)
    2004:	29 2f       	mov	r18, r25
    2006:	33 27       	eor	r19, r19
    2008:	22 30       	cpi	r18, 0x02	; 2
    200a:	31 05       	cpc	r19, r1
    200c:	59 f0       	breq	.+22     	; 0x2024 <CALLBACK_USB_GetDescriptor+0x20>
    200e:	23 30       	cpi	r18, 0x03	; 3
    2010:	31 05       	cpc	r19, r1
    2012:	69 f0       	breq	.+26     	; 0x202e <CALLBACK_USB_GetDescriptor+0x2a>
    2014:	21 30       	cpi	r18, 0x01	; 1
    2016:	31 05       	cpc	r19, r1
    2018:	e9 f4       	brne	.+58     	; 0x2054 <CALLBACK_USB_GetDescriptor+0x50>
	{
		case DTYPE_Device:
			Address = &DeviceDescriptor;
			Size    = sizeof(USB_Descriptor_Device_t);
    201a:	82 e1       	ldi	r24, 0x12	; 18
    201c:	90 e0       	ldi	r25, 0x00	; 0
	uint16_t    Size    = NO_DESCRIPTOR;

	switch (DescriptorType)
	{
		case DTYPE_Device:
			Address = &DeviceDescriptor;
    201e:	2a e1       	ldi	r18, 0x1A	; 26
    2020:	3f e0       	ldi	r19, 0x0F	; 15
    2022:	1c c0       	rjmp	.+56     	; 0x205c <CALLBACK_USB_GetDescriptor+0x58>
			Size    = sizeof(USB_Descriptor_Device_t);
			break;
		case DTYPE_Configuration:
			Address = &ConfigurationDescriptor;
			Size    = sizeof(USB_Descriptor_Configuration_t);
    2024:	8e e3       	ldi	r24, 0x3E	; 62
    2026:	90 e0       	ldi	r25, 0x00	; 0
		case DTYPE_Device:
			Address = &DeviceDescriptor;
			Size    = sizeof(USB_Descriptor_Device_t);
			break;
		case DTYPE_Configuration:
			Address = &ConfigurationDescriptor;
    2028:	2c ed       	ldi	r18, 0xDC	; 220
    202a:	3e e0       	ldi	r19, 0x0E	; 14
			Size    = sizeof(USB_Descriptor_Configuration_t);
			break;
    202c:	17 c0       	rjmp	.+46     	; 0x205c <CALLBACK_USB_GetDescriptor+0x58>
		case DTYPE_String:
			switch (DescriptorNumber)
    202e:	99 27       	eor	r25, r25
    2030:	81 30       	cpi	r24, 0x01	; 1
    2032:	91 05       	cpc	r25, r1
    2034:	49 f0       	breq	.+18     	; 0x2048 <CALLBACK_USB_GetDescriptor+0x44>
    2036:	28 f0       	brcs	.+10     	; 0x2042 <CALLBACK_USB_GetDescriptor+0x3e>
    2038:	02 97       	sbiw	r24, 0x02	; 2
    203a:	61 f4       	brne	.+24     	; 0x2054 <CALLBACK_USB_GetDescriptor+0x50>
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
					break;
				case STRING_ID_Product:
					Address = &ProductString;
					Size    = pgm_read_byte(&ProductString.Header.Size);
    203c:	e2 ea       	ldi	r30, 0xA2	; 162
    203e:	fe e0       	ldi	r31, 0x0E	; 14
    2040:	05 c0       	rjmp	.+10     	; 0x204c <CALLBACK_USB_GetDescriptor+0x48>
		case DTYPE_String:
			switch (DescriptorNumber)
			{
				case STRING_ID_Language:
					Address = &LanguageString;
					Size    = pgm_read_byte(&LanguageString.Header.Size);
    2042:	e8 ed       	ldi	r30, 0xD8	; 216
    2044:	fe e0       	ldi	r31, 0x0E	; 14
    2046:	02 c0       	rjmp	.+4      	; 0x204c <CALLBACK_USB_GetDescriptor+0x48>
					break;
				case STRING_ID_Manufacturer:
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
    2048:	e8 ec       	ldi	r30, 0xC8	; 200
    204a:	fe e0       	ldi	r31, 0x0E	; 14
					break;
				case STRING_ID_Product:
					Address = &ProductString;
					Size    = pgm_read_byte(&ProductString.Header.Size);
    204c:	84 91       	lpm	r24, Z
    204e:	90 e0       	ldi	r25, 0x00	; 0
				case STRING_ID_Manufacturer:
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
					break;
				case STRING_ID_Product:
					Address = &ProductString;
    2050:	9f 01       	movw	r18, r30
					Size    = pgm_read_byte(&ProductString.Header.Size);
					break;
    2052:	04 c0       	rjmp	.+8      	; 0x205c <CALLBACK_USB_GetDescriptor+0x58>
{
	const uint8_t  DescriptorType   = (wValue >> 8);
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
	uint16_t    Size    = NO_DESCRIPTOR;
    2054:	80 e0       	ldi	r24, 0x00	; 0
    2056:	90 e0       	ldi	r25, 0x00	; 0
                                    const void** const DescriptorAddress)
{
	const uint8_t  DescriptorType   = (wValue >> 8);
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
    2058:	20 e0       	ldi	r18, 0x00	; 0
    205a:	30 e0       	ldi	r19, 0x00	; 0
			}

			break;
	}

	*DescriptorAddress = Address;
    205c:	fa 01       	movw	r30, r20
    205e:	31 83       	std	Z+1, r19	; 0x01
    2060:	20 83       	st	Z, r18
	return Size;
}
    2062:	08 95       	ret

00002064 <Endpoint_Write_Stream_LE>:
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_RWCSTREAM_BusSuspended;
	}

	return ENDPOINT_RWCSTREAM_NoError;
}
    2064:	cf 92       	push	r12
    2066:	df 92       	push	r13
    2068:	ef 92       	push	r14
    206a:	ff 92       	push	r15
    206c:	0f 93       	push	r16
    206e:	1f 93       	push	r17
    2070:	cf 93       	push	r28
    2072:	df 93       	push	r29
    2074:	ec 01       	movw	r28, r24
    2076:	8b 01       	movw	r16, r22
    2078:	7a 01       	movw	r14, r20
    207a:	8d d1       	rcall	.+794    	; 0x2396 <Endpoint_WaitUntilReady>
    207c:	81 11       	cpse	r24, r1
    207e:	32 c0       	rjmp	.+100    	; 0x20e4 <Endpoint_Write_Stream_LE+0x80>
    2080:	e1 14       	cp	r14, r1
    2082:	f1 04       	cpc	r15, r1
    2084:	39 f0       	breq	.+14     	; 0x2094 <Endpoint_Write_Stream_LE+0x30>
    2086:	f7 01       	movw	r30, r14
    2088:	80 81       	ld	r24, Z
    208a:	91 81       	ldd	r25, Z+1	; 0x01
    208c:	08 1b       	sub	r16, r24
    208e:	19 0b       	sbc	r17, r25
    2090:	c8 0f       	add	r28, r24
    2092:	d9 1f       	adc	r29, r25
    2094:	c1 2c       	mov	r12, r1
    2096:	d1 2c       	mov	r13, r1
    2098:	01 15       	cp	r16, r1
    209a:	11 05       	cpc	r17, r1
    209c:	11 f1       	breq	.+68     	; 0x20e2 <Endpoint_Write_Stream_LE+0x7e>
    209e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    20a2:	85 fd       	sbrc	r24, 5
    20a4:	15 c0       	rjmp	.+42     	; 0x20d0 <Endpoint_Write_Stream_LE+0x6c>
    20a6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    20aa:	8e 77       	andi	r24, 0x7E	; 126
    20ac:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    20b0:	e1 14       	cp	r14, r1
    20b2:	f1 04       	cpc	r15, r1
    20b4:	49 f0       	breq	.+18     	; 0x20c8 <Endpoint_Write_Stream_LE+0x64>
    20b6:	f7 01       	movw	r30, r14
    20b8:	80 81       	ld	r24, Z
    20ba:	91 81       	ldd	r25, Z+1	; 0x01
    20bc:	c8 0e       	add	r12, r24
    20be:	d9 1e       	adc	r13, r25
    20c0:	d1 82       	std	Z+1, r13	; 0x01
    20c2:	c0 82       	st	Z, r12
    20c4:	85 e0       	ldi	r24, 0x05	; 5
    20c6:	0e c0       	rjmp	.+28     	; 0x20e4 <Endpoint_Write_Stream_LE+0x80>
    20c8:	66 d1       	rcall	.+716    	; 0x2396 <Endpoint_WaitUntilReady>
    20ca:	88 23       	and	r24, r24
    20cc:	29 f3       	breq	.-54     	; 0x2098 <Endpoint_Write_Stream_LE+0x34>
    20ce:	0a c0       	rjmp	.+20     	; 0x20e4 <Endpoint_Write_Stream_LE+0x80>
    20d0:	89 91       	ld	r24, Y+
    20d2:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    20d6:	01 50       	subi	r16, 0x01	; 1
    20d8:	11 09       	sbc	r17, r1
    20da:	ff ef       	ldi	r31, 0xFF	; 255
    20dc:	cf 1a       	sub	r12, r31
    20de:	df 0a       	sbc	r13, r31
    20e0:	db cf       	rjmp	.-74     	; 0x2098 <Endpoint_Write_Stream_LE+0x34>
    20e2:	80 e0       	ldi	r24, 0x00	; 0
    20e4:	df 91       	pop	r29
    20e6:	cf 91       	pop	r28
    20e8:	1f 91       	pop	r17
    20ea:	0f 91       	pop	r16
    20ec:	ff 90       	pop	r15
    20ee:	ef 90       	pop	r14
    20f0:	df 90       	pop	r13
    20f2:	cf 90       	pop	r12
    20f4:	08 95       	ret

000020f6 <Endpoint_Write_Control_Stream_LE>:
    20f6:	20 91 2e 09 	lds	r18, 0x092E	; 0x80092e <USB_ControlRequest+0x6>
    20fa:	30 91 2f 09 	lds	r19, 0x092F	; 0x80092f <USB_ControlRequest+0x7>
    20fe:	26 17       	cp	r18, r22
    2100:	37 07       	cpc	r19, r23
    2102:	48 f0       	brcs	.+18     	; 0x2116 <Endpoint_Write_Control_Stream_LE+0x20>
    2104:	61 15       	cp	r22, r1
    2106:	71 05       	cpc	r23, r1
    2108:	39 f4       	brne	.+14     	; 0x2118 <Endpoint_Write_Control_Stream_LE+0x22>
    210a:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    210e:	2e 77       	andi	r18, 0x7E	; 126
    2110:	20 93 e8 00 	sts	0x00E8, r18	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2114:	01 c0       	rjmp	.+2      	; 0x2118 <Endpoint_Write_Control_Stream_LE+0x22>
    2116:	b9 01       	movw	r22, r18
    2118:	fc 01       	movw	r30, r24
    211a:	20 e0       	ldi	r18, 0x00	; 0
    211c:	61 15       	cp	r22, r1
    211e:	71 05       	cpc	r23, r1
    2120:	79 f1       	breq	.+94     	; 0x2180 <Endpoint_Write_Control_Stream_LE+0x8a>
    2122:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    2126:	88 23       	and	r24, r24
    2128:	f1 f1       	breq	.+124    	; 0x21a6 <Endpoint_Write_Control_Stream_LE+0xb0>
    212a:	85 30       	cpi	r24, 0x05	; 5
    212c:	f1 f1       	breq	.+124    	; 0x21aa <Endpoint_Write_Control_Stream_LE+0xb4>
    212e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2132:	83 fd       	sbrc	r24, 3
    2134:	3c c0       	rjmp	.+120    	; 0x21ae <Endpoint_Write_Control_Stream_LE+0xb8>
    2136:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    213a:	82 fd       	sbrc	r24, 2
    213c:	2e c0       	rjmp	.+92     	; 0x219a <Endpoint_Write_Control_Stream_LE+0xa4>
    213e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2142:	80 ff       	sbrs	r24, 0
    2144:	eb cf       	rjmp	.-42     	; 0x211c <Endpoint_Write_Control_Stream_LE+0x26>
    2146:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    214a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    214e:	90 e0       	ldi	r25, 0x00	; 0
    2150:	92 2b       	or	r25, r18
    2152:	61 15       	cp	r22, r1
    2154:	71 05       	cpc	r23, r1
    2156:	51 f0       	breq	.+20     	; 0x216c <Endpoint_Write_Control_Stream_LE+0x76>
    2158:	88 30       	cpi	r24, 0x08	; 8
    215a:	91 05       	cpc	r25, r1
    215c:	38 f4       	brcc	.+14     	; 0x216c <Endpoint_Write_Control_Stream_LE+0x76>
    215e:	21 91       	ld	r18, Z+
    2160:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2164:	61 50       	subi	r22, 0x01	; 1
    2166:	71 09       	sbc	r23, r1
    2168:	01 96       	adiw	r24, 0x01	; 1
    216a:	f3 cf       	rjmp	.-26     	; 0x2152 <Endpoint_Write_Control_Stream_LE+0x5c>
    216c:	21 e0       	ldi	r18, 0x01	; 1
    216e:	08 97       	sbiw	r24, 0x08	; 8
    2170:	09 f0       	breq	.+2      	; 0x2174 <Endpoint_Write_Control_Stream_LE+0x7e>
    2172:	20 e0       	ldi	r18, 0x00	; 0
    2174:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2178:	8e 77       	andi	r24, 0x7E	; 126
    217a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    217e:	ce cf       	rjmp	.-100    	; 0x211c <Endpoint_Write_Control_Stream_LE+0x26>
    2180:	21 11       	cpse	r18, r1
    2182:	cf cf       	rjmp	.-98     	; 0x2122 <Endpoint_Write_Control_Stream_LE+0x2c>
    2184:	0a c0       	rjmp	.+20     	; 0x219a <Endpoint_Write_Control_Stream_LE+0xa4>
    2186:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    218a:	88 23       	and	r24, r24
    218c:	61 f0       	breq	.+24     	; 0x21a6 <Endpoint_Write_Control_Stream_LE+0xb0>
    218e:	85 30       	cpi	r24, 0x05	; 5
    2190:	61 f0       	breq	.+24     	; 0x21aa <Endpoint_Write_Control_Stream_LE+0xb4>
    2192:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2196:	83 fd       	sbrc	r24, 3
    2198:	0a c0       	rjmp	.+20     	; 0x21ae <Endpoint_Write_Control_Stream_LE+0xb8>
    219a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    219e:	82 ff       	sbrs	r24, 2
    21a0:	f2 cf       	rjmp	.-28     	; 0x2186 <Endpoint_Write_Control_Stream_LE+0x90>
    21a2:	80 e0       	ldi	r24, 0x00	; 0
    21a4:	08 95       	ret
    21a6:	82 e0       	ldi	r24, 0x02	; 2
    21a8:	08 95       	ret
    21aa:	83 e0       	ldi	r24, 0x03	; 3
    21ac:	08 95       	ret
    21ae:	81 e0       	ldi	r24, 0x01	; 1
    21b0:	08 95       	ret

000021b2 <Endpoint_Write_Control_PStream_LE>:
                            uint16_t Length)
{
	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
	bool     LastPacketFull = false;

	if (Length > USB_ControlRequest.wLength)
    21b2:	20 91 2e 09 	lds	r18, 0x092E	; 0x80092e <USB_ControlRequest+0x6>
    21b6:	30 91 2f 09 	lds	r19, 0x092F	; 0x80092f <USB_ControlRequest+0x7>
    21ba:	26 17       	cp	r18, r22
    21bc:	37 07       	cpc	r19, r23
    21be:	48 f0       	brcs	.+18     	; 0x21d2 <Endpoint_Write_Control_PStream_LE+0x20>
	  Length = USB_ControlRequest.wLength;
	else if (!(Length))
    21c0:	61 15       	cp	r22, r1
    21c2:	71 05       	cpc	r23, r1
    21c4:	39 f4       	brne	.+14     	; 0x21d4 <Endpoint_Write_Control_PStream_LE+0x22>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    21c6:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21ca:	2e 77       	andi	r18, 0x7E	; 126
    21cc:	20 93 e8 00 	sts	0x00E8, r18	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21d0:	01 c0       	rjmp	.+2      	; 0x21d4 <Endpoint_Write_Control_PStream_LE+0x22>
    21d2:	b9 01       	movw	r22, r18
    21d4:	fc 01       	movw	r30, r24
    21d6:	20 e0       	ldi	r18, 0x00	; 0
	  Endpoint_ClearIN();

	while (Length || LastPacketFull)
    21d8:	61 15       	cp	r22, r1
    21da:	71 05       	cpc	r23, r1
    21dc:	91 f1       	breq	.+100    	; 0x2242 <Endpoint_Write_Control_PStream_LE+0x90>
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    21de:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    21e2:	88 23       	and	r24, r24
    21e4:	09 f4       	brne	.+2      	; 0x21e8 <Endpoint_Write_Control_PStream_LE+0x36>
    21e6:	40 c0       	rjmp	.+128    	; 0x2268 <Endpoint_Write_Control_PStream_LE+0xb6>
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    21e8:	85 30       	cpi	r24, 0x05	; 5
    21ea:	09 f4       	brne	.+2      	; 0x21ee <Endpoint_Write_Control_PStream_LE+0x3c>
    21ec:	3f c0       	rjmp	.+126    	; 0x226c <Endpoint_Write_Control_PStream_LE+0xba>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    21ee:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
    21f2:	83 fd       	sbrc	r24, 3
    21f4:	3d c0       	rjmp	.+122    	; 0x2270 <Endpoint_Write_Control_PStream_LE+0xbe>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    21f6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_HostAborted;
		else if (Endpoint_IsOUTReceived())
    21fa:	82 fd       	sbrc	r24, 2
    21fc:	2f c0       	rjmp	.+94     	; 0x225c <Endpoint_Write_Control_PStream_LE+0xaa>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    21fe:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  break;

		if (Endpoint_IsINReady())
    2202:	80 ff       	sbrs	r24, 0
    2204:	e9 cf       	rjmp	.-46     	; 0x21d8 <Endpoint_Write_Control_PStream_LE+0x26>
			static inline uint16_t Endpoint_BytesInEndpoint(void)
			{
				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					return UEBCX;
				#elif defined(USB_SERIES_4_AVR)
					return (((uint16_t)UEBCHX << 8) | UEBCLX);
    2206:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    220a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    220e:	90 e0       	ldi	r25, 0x00	; 0
    2210:	92 2b       	or	r25, r18
		{
			uint16_t BytesInEndpoint = Endpoint_BytesInEndpoint();

			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
    2212:	61 15       	cp	r22, r1
    2214:	71 05       	cpc	r23, r1
    2216:	59 f0       	breq	.+22     	; 0x222e <Endpoint_Write_Control_PStream_LE+0x7c>
    2218:	88 30       	cpi	r24, 0x08	; 8
    221a:	91 05       	cpc	r25, r1
    221c:	40 f4       	brcc	.+16     	; 0x222e <Endpoint_Write_Control_PStream_LE+0x7c>
			{
				TEMPLATE_TRANSFER_BYTE(DataStream);
    221e:	24 91       	lpm	r18, Z
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    2220:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				TEMPLATE_BUFFER_MOVE(DataStream, 1);
    2224:	31 96       	adiw	r30, 0x01	; 1
				Length--;
    2226:	61 50       	subi	r22, 0x01	; 1
    2228:	71 09       	sbc	r23, r1
				BytesInEndpoint++;
    222a:	01 96       	adiw	r24, 0x01	; 1
    222c:	f2 cf       	rjmp	.-28     	; 0x2212 <Endpoint_Write_Control_PStream_LE+0x60>
			}

			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
    222e:	21 e0       	ldi	r18, 0x01	; 1
    2230:	08 97       	sbiw	r24, 0x08	; 8
    2232:	09 f0       	breq	.+2      	; 0x2236 <Endpoint_Write_Control_PStream_LE+0x84>
    2234:	20 e0       	ldi	r18, 0x00	; 0
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    2236:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    223a:	8e 77       	andi	r24, 0x7E	; 126
    223c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2240:	cb cf       	rjmp	.-106    	; 0x21d8 <Endpoint_Write_Control_PStream_LE+0x26>
	if (Length > USB_ControlRequest.wLength)
	  Length = USB_ControlRequest.wLength;
	else if (!(Length))
	  Endpoint_ClearIN();

	while (Length || LastPacketFull)
    2242:	21 11       	cpse	r18, r1
    2244:	cc cf       	rjmp	.-104    	; 0x21de <Endpoint_Write_Control_PStream_LE+0x2c>
    2246:	0a c0       	rjmp	.+20     	; 0x225c <Endpoint_Write_Control_PStream_LE+0xaa>
		}
	}

	while (!(Endpoint_IsOUTReceived()))
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    2248:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    224c:	88 23       	and	r24, r24
    224e:	61 f0       	breq	.+24     	; 0x2268 <Endpoint_Write_Control_PStream_LE+0xb6>
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    2250:	85 30       	cpi	r24, 0x05	; 5
    2252:	61 f0       	breq	.+24     	; 0x226c <Endpoint_Write_Control_PStream_LE+0xba>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2254:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
    2258:	83 fd       	sbrc	r24, 3
    225a:	0a c0       	rjmp	.+20     	; 0x2270 <Endpoint_Write_Control_PStream_LE+0xbe>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    225c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
			Endpoint_ClearIN();
		}
	}

	while (!(Endpoint_IsOUTReceived()))
    2260:	82 ff       	sbrs	r24, 2
    2262:	f2 cf       	rjmp	.-28     	; 0x2248 <Endpoint_Write_Control_PStream_LE+0x96>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
	}

	return ENDPOINT_RWCSTREAM_NoError;
    2264:	80 e0       	ldi	r24, 0x00	; 0
    2266:	08 95       	ret
	while (Length || LastPacketFull)
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
    2268:	82 e0       	ldi	r24, 0x02	; 2
    226a:	08 95       	ret
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_RWCSTREAM_BusSuspended;
    226c:	83 e0       	ldi	r24, 0x03	; 3
    226e:	08 95       	ret
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
    2270:	81 e0       	ldi	r24, 0x01	; 1
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
	}

	return ENDPOINT_RWCSTREAM_NoError;
}
    2272:	08 95       	ret

00002274 <Endpoint_ConfigureEndpoint_Prv>:
		UEIENX  = 0;
		UEINTX  = 0;
		UECFG1X = 0;
		Endpoint_DisableEndpoint();
	}
}
    2274:	98 2f       	mov	r25, r24
    2276:	97 30       	cpi	r25, 0x07	; 7
    2278:	68 f5       	brcc	.+90     	; 0x22d4 <Endpoint_ConfigureEndpoint_Prv+0x60>
    227a:	90 93 e9 00 	sts	0x00E9, r25	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    227e:	98 17       	cp	r25, r24
    2280:	39 f0       	breq	.+14     	; 0x2290 <Endpoint_ConfigureEndpoint_Prv+0x1c>
    2282:	70 91 ec 00 	lds	r23, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2286:	20 91 ed 00 	lds	r18, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    228a:	50 91 f0 00 	lds	r21, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    228e:	03 c0       	rjmp	.+6      	; 0x2296 <Endpoint_ConfigureEndpoint_Prv+0x22>
    2290:	24 2f       	mov	r18, r20
    2292:	76 2f       	mov	r23, r22
    2294:	50 e0       	ldi	r21, 0x00	; 0
    2296:	21 fd       	sbrc	r18, 1
    2298:	02 c0       	rjmp	.+4      	; 0x229e <Endpoint_ConfigureEndpoint_Prv+0x2a>
    229a:	9f 5f       	subi	r25, 0xFF	; 255
    229c:	ec cf       	rjmp	.-40     	; 0x2276 <Endpoint_ConfigureEndpoint_Prv+0x2>
    229e:	30 91 eb 00 	lds	r19, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    22a2:	3e 7f       	andi	r19, 0xFE	; 254
    22a4:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    22a8:	30 91 ed 00 	lds	r19, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    22ac:	3d 7f       	andi	r19, 0xFD	; 253
    22ae:	30 93 ed 00 	sts	0x00ED, r19	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    22b2:	30 91 eb 00 	lds	r19, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    22b6:	31 60       	ori	r19, 0x01	; 1
    22b8:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    22bc:	70 93 ec 00 	sts	0x00EC, r23	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    22c0:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    22c4:	50 93 f0 00 	sts	0x00F0, r21	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    22c8:	20 91 ee 00 	lds	r18, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    22cc:	27 fd       	sbrc	r18, 7
    22ce:	e5 cf       	rjmp	.-54     	; 0x229a <Endpoint_ConfigureEndpoint_Prv+0x26>
    22d0:	80 e0       	ldi	r24, 0x00	; 0
    22d2:	08 95       	ret
    22d4:	8f 70       	andi	r24, 0x0F	; 15
    22d6:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    22da:	81 e0       	ldi	r24, 0x01	; 1
    22dc:	08 95       	ret

000022de <Endpoint_ConfigureEndpointTable>:
    22de:	0f 93       	push	r16
    22e0:	1f 93       	push	r17
    22e2:	cf 93       	push	r28
    22e4:	df 93       	push	r29
    22e6:	06 2f       	mov	r16, r22
    22e8:	ec 01       	movw	r28, r24
    22ea:	10 e0       	ldi	r17, 0x00	; 0
    22ec:	10 17       	cp	r17, r16
    22ee:	71 f1       	breq	.+92     	; 0x234c <Endpoint_ConfigureEndpointTable+0x6e>
    22f0:	68 81       	ld	r22, Y
    22f2:	61 11       	cpse	r22, r1
    22f4:	03 c0       	rjmp	.+6      	; 0x22fc <Endpoint_ConfigureEndpointTable+0x1e>
    22f6:	1f 5f       	subi	r17, 0xFF	; 255
    22f8:	25 96       	adiw	r28, 0x05	; 5
    22fa:	f8 cf       	rjmp	.-16     	; 0x22ec <Endpoint_ConfigureEndpointTable+0xe>
    22fc:	2c 81       	ldd	r18, Y+4	; 0x04
    22fe:	a9 81       	ldd	r26, Y+1	; 0x01
    2300:	ba 81       	ldd	r27, Y+2	; 0x02
    2302:	9b 81       	ldd	r25, Y+3	; 0x03
    2304:	86 2f       	mov	r24, r22
    2306:	8f 70       	andi	r24, 0x0F	; 15
    2308:	87 30       	cpi	r24, 0x07	; 7
    230a:	10 f0       	brcs	.+4      	; 0x2310 <Endpoint_ConfigureEndpointTable+0x32>
    230c:	80 e0       	ldi	r24, 0x00	; 0
    230e:	1f c0       	rjmp	.+62     	; 0x234e <Endpoint_ConfigureEndpointTable+0x70>
    2310:	22 30       	cpi	r18, 0x02	; 2
    2312:	10 f4       	brcc	.+4      	; 0x2318 <Endpoint_ConfigureEndpointTable+0x3a>
    2314:	42 e0       	ldi	r20, 0x02	; 2
    2316:	01 c0       	rjmp	.+2      	; 0x231a <Endpoint_ConfigureEndpointTable+0x3c>
    2318:	46 e0       	ldi	r20, 0x06	; 6
    231a:	e8 e0       	ldi	r30, 0x08	; 8
    231c:	f0 e0       	ldi	r31, 0x00	; 0
    231e:	20 e0       	ldi	r18, 0x00	; 0
    2320:	ea 17       	cp	r30, r26
    2322:	fb 07       	cpc	r31, r27
    2324:	20 f4       	brcc	.+8      	; 0x232e <Endpoint_ConfigureEndpointTable+0x50>
    2326:	2f 5f       	subi	r18, 0xFF	; 255
    2328:	ee 0f       	add	r30, r30
    232a:	ff 1f       	adc	r31, r31
    232c:	f9 cf       	rjmp	.-14     	; 0x2320 <Endpoint_ConfigureEndpointTable+0x42>
    232e:	22 95       	swap	r18
    2330:	20 7f       	andi	r18, 0xF0	; 240
    2332:	42 2b       	or	r20, r18
    2334:	50 e4       	ldi	r21, 0x40	; 64
    2336:	95 9f       	mul	r25, r21
    2338:	90 01       	movw	r18, r0
    233a:	11 24       	eor	r1, r1
    233c:	66 1f       	adc	r22, r22
    233e:	66 27       	eor	r22, r22
    2340:	66 1f       	adc	r22, r22
    2342:	62 2b       	or	r22, r18
    2344:	97 df       	rcall	.-210    	; 0x2274 <Endpoint_ConfigureEndpoint_Prv>
    2346:	81 11       	cpse	r24, r1
    2348:	d6 cf       	rjmp	.-84     	; 0x22f6 <Endpoint_ConfigureEndpointTable+0x18>
    234a:	e0 cf       	rjmp	.-64     	; 0x230c <Endpoint_ConfigureEndpointTable+0x2e>
    234c:	81 e0       	ldi	r24, 0x01	; 1
    234e:	df 91       	pop	r29
    2350:	cf 91       	pop	r28
    2352:	1f 91       	pop	r17
    2354:	0f 91       	pop	r16
    2356:	08 95       	ret

00002358 <Endpoint_ClearStatusStage>:

void Endpoint_ClearStatusStage(void)
{
	if (USB_ControlRequest.bmRequestType & REQDIR_DEVICETOHOST)
    2358:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    235c:	87 ff       	sbrs	r24, 7
    235e:	11 c0       	rjmp	.+34     	; 0x2382 <Endpoint_ClearStatusStage+0x2a>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    2360:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	{
		while (!(Endpoint_IsOUTReceived()))
    2364:	82 fd       	sbrc	r24, 2
    2366:	05 c0       	rjmp	.+10     	; 0x2372 <Endpoint_ClearStatusStage+0x1a>
		{
			if (USB_DeviceState == DEVICE_STATE_Unattached)
    2368:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    236c:	81 11       	cpse	r24, r1
    236e:	f8 cf       	rjmp	.-16     	; 0x2360 <Endpoint_ClearStatusStage+0x8>
    2370:	11 c0       	rjmp	.+34     	; 0x2394 <Endpoint_ClearStatusStage+0x3c>
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    2372:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2376:	8b 77       	andi	r24, 0x7B	; 123
    2378:	0b c0       	rjmp	.+22     	; 0x2390 <Endpoint_ClearStatusStage+0x38>
	}
	else
	{
		while (!(Endpoint_IsINReady()))
		{
			if (USB_DeviceState == DEVICE_STATE_Unattached)
    237a:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    237e:	88 23       	and	r24, r24
    2380:	49 f0       	breq	.+18     	; 0x2394 <Endpoint_ClearStatusStage+0x3c>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    2382:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

		Endpoint_ClearOUT();
	}
	else
	{
		while (!(Endpoint_IsINReady()))
    2386:	80 ff       	sbrs	r24, 0
    2388:	f8 cf       	rjmp	.-16     	; 0x237a <Endpoint_ClearStatusStage+0x22>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    238a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    238e:	8e 77       	andi	r24, 0x7E	; 126
    2390:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2394:	08 95       	ret

00002396 <Endpoint_WaitUntilReady>:
			 *  \return Current USB frame number from the USB controller.
			 */
			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline uint16_t USB_Device_GetFrameNumber(void)
			{
				return UDFNUM;
    2396:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    239a:	30 91 e5 00 	lds	r19, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
    239e:	95 e6       	ldi	r25, 0x65	; 101
			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
			 */
			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetEndpointDirection(void)
			{
				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
    23a0:	40 91 ec 00 	lds	r20, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    23a4:	84 2f       	mov	r24, r20
    23a6:	81 70       	andi	r24, 0x01	; 1
    23a8:	40 ff       	sbrs	r20, 0
    23aa:	23 c0       	rjmp	.+70     	; 0x23f2 <Endpoint_WaitUntilReady+0x5c>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    23ac:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	for (;;)
	{
		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
		{
			if (Endpoint_IsINReady())
    23b0:	80 fd       	sbrc	r24, 0
    23b2:	1d c0       	rjmp	.+58     	; 0x23ee <Endpoint_WaitUntilReady+0x58>
		{
			if (Endpoint_IsOUTReceived())
			  return ENDPOINT_READYWAIT_NoError;
		}

		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    23b4:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    23b8:	88 23       	and	r24, r24
    23ba:	99 f0       	breq	.+38     	; 0x23e2 <Endpoint_WaitUntilReady+0x4c>
		  return ENDPOINT_READYWAIT_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    23bc:	85 30       	cpi	r24, 0x05	; 5
    23be:	99 f0       	breq	.+38     	; 0x23e6 <Endpoint_WaitUntilReady+0x50>
			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
			 */
			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsStalled(void)
			{
				return ((UECONX & (1 << STALLRQ)) ? true : false);
    23c0:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
		  return ENDPOINT_READYWAIT_BusSuspended;
		else if (Endpoint_IsStalled())
    23c4:	85 fd       	sbrc	r24, 5
    23c6:	11 c0       	rjmp	.+34     	; 0x23ea <Endpoint_WaitUntilReady+0x54>
    23c8:	40 91 e4 00 	lds	r20, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    23cc:	50 91 e5 00 	lds	r21, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
		  return ENDPOINT_READYWAIT_EndpointStalled;

		uint16_t CurrentFrameNumber = USB_Device_GetFrameNumber();

		if (CurrentFrameNumber != PreviousFrameNumber)
    23d0:	24 17       	cp	r18, r20
    23d2:	35 07       	cpc	r19, r21
    23d4:	29 f3       	breq	.-54     	; 0x23a0 <Endpoint_WaitUntilReady+0xa>
    23d6:	91 50       	subi	r25, 0x01	; 1
		{
			PreviousFrameNumber = CurrentFrameNumber;

			if (!(TimeoutMSRem--))
    23d8:	11 f0       	breq	.+4      	; 0x23de <Endpoint_WaitUntilReady+0x48>
    23da:	9a 01       	movw	r18, r20
    23dc:	e1 cf       	rjmp	.-62     	; 0x23a0 <Endpoint_WaitUntilReady+0xa>
			  return ENDPOINT_READYWAIT_Timeout;
    23de:	84 e0       	ldi	r24, 0x04	; 4
    23e0:	08 95       	ret
		}

		uint8_t USB_DeviceState_LCL = USB_DeviceState;

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
		  return ENDPOINT_READYWAIT_DeviceDisconnected;
    23e2:	82 e0       	ldi	r24, 0x02	; 2
    23e4:	08 95       	ret
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_READYWAIT_BusSuspended;
    23e6:	83 e0       	ldi	r24, 0x03	; 3
    23e8:	08 95       	ret
		else if (Endpoint_IsStalled())
		  return ENDPOINT_READYWAIT_EndpointStalled;
    23ea:	81 e0       	ldi	r24, 0x01	; 1
    23ec:	08 95       	ret
	for (;;)
	{
		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
		{
			if (Endpoint_IsINReady())
			  return ENDPOINT_READYWAIT_NoError;
    23ee:	80 e0       	ldi	r24, 0x00	; 0
    23f0:	08 95       	ret
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    23f2:	40 91 e8 00 	lds	r20, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		}
		else
		{
			if (Endpoint_IsOUTReceived())
    23f6:	42 ff       	sbrs	r20, 2
    23f8:	dd cf       	rjmp	.-70     	; 0x23b4 <Endpoint_WaitUntilReady+0x1e>

			if (!(TimeoutMSRem--))
			  return ENDPOINT_READYWAIT_Timeout;
		}
	}
}
    23fa:	08 95       	ret

000023fc <USB_ResetInterface>:

	USB_IsInitialized = false;
}

void USB_ResetInterface(void)
{
    23fc:	0f 93       	push	r16
    23fe:	1f 93       	push	r17
    2400:	cf 93       	push	r28
	#if defined(USB_CAN_BE_BOTH)
	bool UIDModeSelectEnabled = ((UHWCON & (1 << UIDE)) != 0);
	#endif

	USB_INT_DisableAllInterrupts();
	USB_INT_ClearAllInterrupts();
    2402:	df 93       	push	r29
    2404:	4b d0       	rcall	.+150    	; 0x249c <USB_INT_DisableAllInterrupts>
			}

			static inline void USB_Controller_Reset(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Controller_Reset(void)
			{
				USBCON &= ~(1 << USBE);
    2406:	52 d0       	rcall	.+164    	; 0x24ac <USB_INT_ClearAllInterrupts>
    2408:	c8 ed       	ldi	r28, 0xD8	; 216
    240a:	d0 e0       	ldi	r29, 0x00	; 0
    240c:	88 81       	ld	r24, Y
    240e:	8f 77       	andi	r24, 0x7F	; 127
				USBCON |=  (1 << USBE);
    2410:	88 83       	st	Y, r24
    2412:	88 81       	ld	r24, Y
    2414:	80 68       	ori	r24, 0x80	; 128
			}

			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Unfreeze(void)
			{
				USBCON &= ~(1 << FRZCLK);
    2416:	88 83       	st	Y, r24
    2418:	88 81       	ld	r24, Y
    241a:	8f 7d       	andi	r24, 0xDF	; 223
			}

			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_Off(void)
			{
				PLLCSR = 0;
    241c:	88 83       	st	Y, r24
}

#if defined(USB_CAN_BE_DEVICE)
static void USB_Init_Device(void)
{
	USB_DeviceState                 = DEVICE_STATE_Unattached;
    241e:	19 bc       	out	0x29, r1	; 41
    2420:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <USB_DeviceState>
	USB_Device_ConfigurationNumber  = 0;
    2424:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <USB_Device_ConfigurationNumber>

	#if !defined(NO_DEVICE_REMOTE_WAKEUP)
	USB_Device_RemoteWakeupEnabled  = false;
    2428:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <USB_Device_RemoteWakeupEnabled>
	#endif

	#if !defined(NO_DEVICE_SELF_POWER)
	USB_Device_CurrentlySelfPowered = false;
    242c:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <USB_Device_CurrentlySelfPowered>
			}

			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_SetFullSpeed(void)
			{
				UDCON &= ~(1 << LSM);
    2430:	00 ee       	ldi	r16, 0xE0	; 224
    2432:	10 e0       	ldi	r17, 0x00	; 0
    2434:	f8 01       	movw	r30, r16
    2436:	80 81       	ld	r24, Z
    2438:	8b 7f       	andi	r24, 0xFB	; 251
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						USBCON |= (1 << VBUSTE);
    243a:	80 83       	st	Z, r24
    243c:	88 81       	ld	r24, Y
    243e:	81 60       	ori	r24, 0x01	; 1
				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);

				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
				  return false;

				return Endpoint_ConfigureEndpoint_Prv(Number,
    2440:	88 83       	st	Y, r24
    2442:	42 e0       	ldi	r20, 0x02	; 2
    2444:	60 e0       	ldi	r22, 0x00	; 0
    2446:	80 e0       	ldi	r24, 0x00	; 0
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
    2448:	15 df       	rcall	.-470    	; 0x2274 <Endpoint_ConfigureEndpoint_Prv>
    244a:	e1 ee       	ldi	r30, 0xE1	; 225
    244c:	f0 e0       	ldi	r31, 0x00	; 0
    244e:	80 81       	ld	r24, Z
    2450:	8e 7f       	andi	r24, 0xFE	; 254
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  |= (1 << SUSPE);
    2452:	80 83       	st	Z, r24
    2454:	e2 ee       	ldi	r30, 0xE2	; 226
    2456:	f0 e0       	ldi	r31, 0x00	; 0
    2458:	80 81       	ld	r24, Z
    245a:	81 60       	ori	r24, 0x01	; 1
						break;
					case USB_INT_EORSTI:
						UDIEN  |= (1 << EORSTE);
    245c:	80 83       	st	Z, r24
    245e:	80 81       	ld	r24, Z
    2460:	88 60       	ori	r24, 0x08	; 8
			 *  register and despite the datasheet making no mention of its requirement in host mode.
			 */
			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Attach(void)
			{
				UDCON  &= ~(1 << DETACH);
    2462:	80 83       	st	Z, r24
    2464:	f8 01       	movw	r30, r16
    2466:	80 81       	ld	r24, Z
    2468:	8e 7f       	andi	r24, 0xFE	; 254

			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_OTGPAD_On(void)
			{
				USBCON |=  (1 << OTGPADE);
    246a:	80 83       	st	Z, r24
    246c:	88 81       	ld	r24, Y
    246e:	80 61       	ori	r24, 0x10	; 16
	}

	#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
	USB_OTGPAD_On();
	#endif
}
    2470:	88 83       	st	Y, r24
    2472:	df 91       	pop	r29
    2474:	cf 91       	pop	r28
    2476:	1f 91       	pop	r17
    2478:	0f 91       	pop	r16
    247a:	08 95       	ret

0000247c <USB_Init>:
			}

			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_OTGPAD_Off(void)
			{
				USBCON &= ~(1 << OTGPADE);
    247c:	e8 ed       	ldi	r30, 0xD8	; 216
    247e:	f0 e0       	ldi	r31, 0x00	; 0
    2480:	80 81       	ld	r24, Z
    2482:	8f 7e       	andi	r24, 0xEF	; 239
    2484:	80 83       	st	Z, r24

			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_REG_On(void)
			{
			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
				UHWCON |=  (1 << UVREGE);
    2486:	e7 ed       	ldi	r30, 0xD7	; 215
    2488:	f0 e0       	ldi	r31, 0x00	; 0
    248a:	80 81       	ld	r24, Z
    248c:	81 60       	ori	r24, 0x01	; 1
    248e:	80 83       	st	Z, r24
	  USB_REG_Off();

	if (!(USB_Options & USB_OPT_MANUAL_PLL))
	{
		#if defined(USB_SERIES_4_AVR)
		PLLFRQ = (1 << PDIV2);
    2490:	84 e0       	ldi	r24, 0x04	; 4
    2492:	82 bf       	out	0x32, r24	; 50
		UHWCON &= ~(1 << UIDE);
		USB_CurrentMode = Mode;
	}
	#endif

	USB_IsInitialized = true;
    2494:	81 e0       	ldi	r24, 0x01	; 1
    2496:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <USB_IsInitialized>
    249a:	b0 cf       	rjmp	.-160    	; 0x23fc <USB_ResetInterface>

0000249c <USB_INT_DisableAllInterrupts>:
void USB_INT_DisableAllInterrupts(void)
{
	#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	USBCON &= ~((1 << VBUSTE) | (1 << IDTE));
	#elif defined(USB_SERIES_4_AVR)
	USBCON &= ~(1 << VBUSTE);
    249c:	e8 ed       	ldi	r30, 0xD8	; 216
    249e:	f0 e0       	ldi	r31, 0x00	; 0
    24a0:	80 81       	ld	r24, Z
    24a2:	8e 7f       	andi	r24, 0xFE	; 254
    24a4:	80 83       	st	Z, r24
	#if defined(USB_CAN_BE_HOST)
	UHIEN   = 0;
	#endif

	#if defined(USB_CAN_BE_DEVICE)
	UDIEN   = 0;
    24a6:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    24aa:	08 95       	ret

000024ac <USB_INT_ClearAllInterrupts>:
}

void USB_INT_ClearAllInterrupts(void)
{
	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	USBINT = 0;
    24ac:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
	#if defined(USB_CAN_BE_HOST)
	UHINT  = 0;
	#endif

	#if defined(USB_CAN_BE_DEVICE)
	UDINT  = 0;
    24b0:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    24b4:	08 95       	ret

000024b6 <__vector_10>:
	#endif
}

ISR(USB_GEN_vect, ISR_BLOCK)
{
    24b6:	1f 92       	push	r1
    24b8:	0f 92       	push	r0
    24ba:	0f b6       	in	r0, 0x3f	; 63
    24bc:	0f 92       	push	r0
    24be:	11 24       	eor	r1, r1
    24c0:	2f 93       	push	r18
    24c2:	3f 93       	push	r19
    24c4:	4f 93       	push	r20
    24c6:	5f 93       	push	r21
    24c8:	6f 93       	push	r22
    24ca:	7f 93       	push	r23
    24cc:	8f 93       	push	r24
    24ce:	9f 93       	push	r25
    24d0:	af 93       	push	r26
    24d2:	bf 93       	push	r27
    24d4:	ef 93       	push	r30
    24d6:	ff 93       	push	r31
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
					case USB_INT_EORSTI:
						return (UDINT  & (1 << EORSTI));
					case USB_INT_SOFI:
						return (UDINT  & (1 << SOFI));
    24d8:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
	#if defined(USB_CAN_BE_DEVICE)
	#if !defined(NO_SOF_EVENTS)
	if (USB_INT_HasOccurred(USB_INT_SOFI) && USB_INT_IsEnabled(USB_INT_SOFI))
    24dc:	82 ff       	sbrs	r24, 2
    24de:	0a c0       	rjmp	.+20     	; 0x24f4 <__vector_10+0x3e>
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
					case USB_INT_EORSTI:
						return (UDIEN  & (1 << EORSTE));
					case USB_INT_SOFI:
						return (UDIEN  & (1 << SOFE));
    24e0:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    24e4:	82 ff       	sbrs	r24, 2
    24e6:	06 c0       	rjmp	.+12     	; 0x24f4 <__vector_10+0x3e>
						break;
					case USB_INT_EORSTI:
						UDINT  &= ~(1 << EORSTI);
						break;
					case USB_INT_SOFI:
						UDINT  &= ~(1 << SOFI);
    24e8:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    24ec:	8b 7f       	andi	r24, 0xFB	; 251
    24ee:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						return (USBINT & (1 << VBUSTI));
    24f2:	54 d2       	rcall	.+1192   	; 0x299c <USB_Event_Stub>
    24f4:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
		EVENT_USB_Device_StartOfFrame();
	}
	#endif

	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	if (USB_INT_HasOccurred(USB_INT_VBUSTI) && USB_INT_IsEnabled(USB_INT_VBUSTI))
    24f8:	80 ff       	sbrs	r24, 0
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						return (USBCON & (1 << VBUSTE));
    24fa:	1f c0       	rjmp	.+62     	; 0x253a <__vector_10+0x84>
    24fc:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    2500:	80 ff       	sbrs	r24, 0
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						USBINT &= ~(1 << VBUSTI);
    2502:	1b c0       	rjmp	.+54     	; 0x253a <__vector_10+0x84>
    2504:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
    2508:	8e 7f       	andi	r24, 0xFE	; 254
    250a:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false otherwise.
				 */
				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
				static inline bool USB_VBUS_GetStatus(void)
				{
					return ((USBSTA & (1 << VBUS)) ? true : false);
    250e:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
	{
		USB_INT_Clear(USB_INT_VBUSTI);

		if (USB_VBUS_GetStatus())
    2512:	80 ff       	sbrs	r24, 0

		/* Inline Functions: */
			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_On(void)
			{
				PLLCSR = USB_PLL_PSC;
    2514:	0d c0       	rjmp	.+26     	; 0x2530 <__vector_10+0x7a>
    2516:	80 e1       	ldi	r24, 0x10	; 16
				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
    2518:	89 bd       	out	0x29, r24	; 41
    251a:	82 e1       	ldi	r24, 0x12	; 18
		{
			if (!(USB_Options & USB_OPT_MANUAL_PLL))
			{
				USB_PLL_On();
				while (!(USB_PLL_IsReady()));
    251c:	89 bd       	out	0x29, r24	; 41
    251e:	09 b4       	in	r0, 0x29	; 41
    2520:	00 fe       	sbrs	r0, 0
			}

			USB_DeviceState = DEVICE_STATE_Powered;
    2522:	fd cf       	rjmp	.-6      	; 0x251e <__vector_10+0x68>
    2524:	81 e0       	ldi	r24, 0x01	; 1
    2526:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
			EVENT_USB_Device_Connect();
    252a:	0e 94 b6 08 	call	0x116c	; 0x116c <EVENT_USB_Device_Connect>
			}

			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_Off(void)
			{
				PLLCSR = 0;
    252e:	05 c0       	rjmp	.+10     	; 0x253a <__vector_10+0x84>
		else
		{
			if (!(USB_Options & USB_OPT_MANUAL_PLL))
			  USB_PLL_Off();

			USB_DeviceState = DEVICE_STATE_Unattached;
    2530:	19 bc       	out	0x29, r1	; 41
    2532:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <USB_DeviceState>
			EVENT_USB_Device_Disconnect();
    2536:	0e 94 b7 08 	call	0x116e	; 0x116e <EVENT_USB_Device_Disconnect>
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
    253a:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
		}
	}
	#endif

	if (USB_INT_HasOccurred(USB_INT_SUSPI) && USB_INT_IsEnabled(USB_INT_SUSPI))
    253e:	80 ff       	sbrs	r24, 0
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
    2540:	18 c0       	rjmp	.+48     	; 0x2572 <__vector_10+0xbc>
    2542:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2546:	80 ff       	sbrs	r24, 0
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  &= ~(1 << SUSPE);
    2548:	14 c0       	rjmp	.+40     	; 0x2572 <__vector_10+0xbc>
    254a:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    254e:	8e 7f       	andi	r24, 0xFE	; 254
    2550:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
						USBCON |= (1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
    2554:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2558:	80 61       	ori	r24, 0x10	; 16
    255a:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
			#endif

			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Freeze(void)
			{
				USBCON |=  (1 << FRZCLK);
    255e:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    2562:	80 62       	ori	r24, 0x20	; 32
    2564:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>

		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
		USB_DeviceState = DEVICE_STATE_Unattached;
		EVENT_USB_Device_Disconnect();
		#else
		USB_DeviceState = DEVICE_STATE_Suspended;
    2568:	19 bc       	out	0x29, r1	; 41
    256a:	85 e0       	ldi	r24, 0x05	; 5
		EVENT_USB_Device_Suspend();
    256c:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
					case USB_INT_IDTI:
						return (USBINT & (1 << IDTI));
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
    2570:	15 d2       	rcall	.+1066   	; 0x299c <USB_Event_Stub>
    2572:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
		#endif
	}

	if (USB_INT_HasOccurred(USB_INT_WAKEUPI) && USB_INT_IsEnabled(USB_INT_WAKEUPI))
    2576:	84 ff       	sbrs	r24, 4
					case USB_INT_IDTI:
						return (USBCON & (1 << IDTE));
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
    2578:	2f c0       	rjmp	.+94     	; 0x25d8 <__vector_10+0x122>
    257a:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    257e:	84 ff       	sbrs	r24, 4

		/* Inline Functions: */
			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_On(void)
			{
				PLLCSR = USB_PLL_PSC;
    2580:	2b c0       	rjmp	.+86     	; 0x25d8 <__vector_10+0x122>
    2582:	80 e1       	ldi	r24, 0x10	; 16
				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
    2584:	89 bd       	out	0x29, r24	; 41
    2586:	82 e1       	ldi	r24, 0x12	; 18
	{
		if (!(USB_Options & USB_OPT_MANUAL_PLL))
		{
			USB_PLL_On();
			while (!(USB_PLL_IsReady()));
    2588:	89 bd       	out	0x29, r24	; 41
    258a:	09 b4       	in	r0, 0x29	; 41
    258c:	00 fe       	sbrs	r0, 0
			}

			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Unfreeze(void)
			{
				USBCON &= ~(1 << FRZCLK);
    258e:	fd cf       	rjmp	.-6      	; 0x258a <__vector_10+0xd4>
    2590:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    2594:	8f 7d       	andi	r24, 0xDF	; 223
    2596:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
						USBINT &= ~(1 << IDTI);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
    259a:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    259e:	8f 7e       	andi	r24, 0xEF	; 239
    25a0:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
						USBCON &= ~(1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
    25a4:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    25a8:	8f 7e       	andi	r24, 0xEF	; 239
    25aa:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  |= (1 << SUSPE);
    25ae:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    25b2:	81 60       	ori	r24, 0x01	; 1
    25b4:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
		USB_INT_Clear(USB_INT_WAKEUPI);

		USB_INT_Disable(USB_INT_WAKEUPI);
		USB_INT_Enable(USB_INT_SUSPI);

		if (USB_Device_ConfigurationNumber)
    25b8:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <USB_Device_ConfigurationNumber>
    25bc:	88 23       	and	r24, r24
		  USB_DeviceState = DEVICE_STATE_Configured;
    25be:	11 f0       	breq	.+4      	; 0x25c4 <__vector_10+0x10e>
    25c0:	84 e0       	ldi	r24, 0x04	; 4
			}

			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline bool USB_Device_IsAddressSet(void)
			{
				return (UDADDR & (1 << ADDEN));
    25c2:	07 c0       	rjmp	.+14     	; 0x25d2 <__vector_10+0x11c>
    25c4:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
		else
		  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Addressed : DEVICE_STATE_Powered;
    25c8:	87 fd       	sbrc	r24, 7
    25ca:	02 c0       	rjmp	.+4      	; 0x25d0 <__vector_10+0x11a>
    25cc:	81 e0       	ldi	r24, 0x01	; 1
    25ce:	01 c0       	rjmp	.+2      	; 0x25d2 <__vector_10+0x11c>

		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
		EVENT_USB_Device_Connect();
		#else
		EVENT_USB_Device_WakeUp();
    25d0:	83 e0       	ldi	r24, 0x03	; 3
    25d2:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
					case USB_INT_EORSTI:
						return (UDINT  & (1 << EORSTI));
    25d6:	e2 d1       	rcall	.+964    	; 0x299c <USB_Event_Stub>
		#endif
	}

	if (USB_INT_HasOccurred(USB_INT_EORSTI) && USB_INT_IsEnabled(USB_INT_EORSTI))
    25d8:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
					case USB_INT_EORSTI:
						return (UDIEN  & (1 << EORSTE));
    25dc:	83 ff       	sbrs	r24, 3
    25de:	27 c0       	rjmp	.+78     	; 0x262e <__vector_10+0x178>
    25e0:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
						break;
					case USB_INT_EORSTI:
						UDINT  &= ~(1 << EORSTI);
    25e4:	83 ff       	sbrs	r24, 3
    25e6:	23 c0       	rjmp	.+70     	; 0x262e <__vector_10+0x178>
    25e8:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    25ec:	87 7f       	andi	r24, 0xF7	; 247
	{
		USB_INT_Clear(USB_INT_EORSTI);

		USB_DeviceState                = DEVICE_STATE_Default;
    25ee:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    25f2:	82 e0       	ldi	r24, 0x02	; 2
		USB_Device_ConfigurationNumber = 0;
    25f4:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
    25f8:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <USB_Device_ConfigurationNumber>
    25fc:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    2600:	8e 7f       	andi	r24, 0xFE	; 254
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  &= ~(1 << SUSPE);
    2602:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    2606:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    260a:	8e 7f       	andi	r24, 0xFE	; 254
						USBCON |= (1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
    260c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2610:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);

				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
				  return false;

				return Endpoint_ConfigureEndpoint_Prv(Number,
    2614:	80 61       	ori	r24, 0x10	; 16
    2616:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    261a:	42 e0       	ldi	r20, 0x02	; 2
						break;
					case USB_INT_SOFI:
						UDIEN  |= (1 << SOFE);
						break;
					case USB_INT_RXSTPI:
						UEIENX |= (1 << RXSTPE);
    261c:	60 e0       	ldi	r22, 0x00	; 0
    261e:	80 e0       	ldi	r24, 0x00	; 0
    2620:	29 de       	rcall	.-942    	; 0x2274 <Endpoint_ConfigureEndpoint_Prv>
    2622:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>

		#if defined(INTERRUPT_CONTROL_ENDPOINT)
		USB_INT_Enable(USB_INT_RXSTPI);
		#endif

		EVENT_USB_Device_Reset();
    2626:	88 60       	ori	r24, 0x08	; 8
		USB_ResetInterface();

		EVENT_USB_UIDChange();
	}
	#endif
}
    2628:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    262c:	b7 d1       	rcall	.+878    	; 0x299c <USB_Event_Stub>
    262e:	ff 91       	pop	r31
    2630:	ef 91       	pop	r30
    2632:	bf 91       	pop	r27
    2634:	af 91       	pop	r26
    2636:	9f 91       	pop	r25
    2638:	8f 91       	pop	r24
    263a:	7f 91       	pop	r23
    263c:	6f 91       	pop	r22
    263e:	5f 91       	pop	r21
    2640:	4f 91       	pop	r20
    2642:	3f 91       	pop	r19
    2644:	2f 91       	pop	r18
    2646:	0f 90       	pop	r0
    2648:	0f be       	out	0x3f, r0	; 63
    264a:	0f 90       	pop	r0
    264c:	1f 90       	pop	r1
    264e:	18 95       	reti

00002650 <__vector_11>:
    2650:	1f 92       	push	r1
    2652:	0f 92       	push	r0
    2654:	0f b6       	in	r0, 0x3f	; 63
    2656:	0f 92       	push	r0
    2658:	11 24       	eor	r1, r1
    265a:	2f 93       	push	r18
    265c:	3f 93       	push	r19
    265e:	4f 93       	push	r20
    2660:	5f 93       	push	r21
    2662:	6f 93       	push	r22
    2664:	7f 93       	push	r23
    2666:	8f 93       	push	r24
    2668:	9f 93       	push	r25
    266a:	af 93       	push	r26
    266c:	bf 93       	push	r27
    266e:	cf 93       	push	r28
    2670:	df 93       	push	r29
    2672:	ef 93       	push	r30
    2674:	ff 93       	push	r31
    2676:	c0 91 e9 00 	lds	r28, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    267a:	cf 70       	andi	r28, 0x0F	; 15
    267c:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2680:	d8 2f       	mov	r29, r24
    2682:	d1 70       	andi	r29, 0x01	; 1
    2684:	80 fd       	sbrc	r24, 0
    2686:	d0 e8       	ldi	r29, 0x80	; 128
    2688:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    268c:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2690:	87 7f       	andi	r24, 0xF7	; 247
    2692:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2696:	78 94       	sei
    2698:	1e d0       	rcall	.+60     	; 0x26d6 <USB_Device_ProcessControlRequest>
    269a:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    269e:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    26a2:	88 60       	ori	r24, 0x08	; 8
    26a4:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    26a8:	cd 2b       	or	r28, r29
    26aa:	cf 70       	andi	r28, 0x0F	; 15
    26ac:	c0 93 e9 00 	sts	0x00E9, r28	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    26b0:	ff 91       	pop	r31
    26b2:	ef 91       	pop	r30
    26b4:	df 91       	pop	r29
    26b6:	cf 91       	pop	r28
    26b8:	bf 91       	pop	r27
    26ba:	af 91       	pop	r26
    26bc:	9f 91       	pop	r25
    26be:	8f 91       	pop	r24
    26c0:	7f 91       	pop	r23
    26c2:	6f 91       	pop	r22
    26c4:	5f 91       	pop	r21
    26c6:	4f 91       	pop	r20
    26c8:	3f 91       	pop	r19
    26ca:	2f 91       	pop	r18
    26cc:	0f 90       	pop	r0
    26ce:	0f be       	out	0x3f, r0	; 63
    26d0:	0f 90       	pop	r0
    26d2:	1f 90       	pop	r1
    26d4:	18 95       	reti

000026d6 <USB_Device_ProcessControlRequest>:
#if !defined(NO_DEVICE_REMOTE_WAKEUP)
bool    USB_Device_RemoteWakeupEnabled;
#endif

void USB_Device_ProcessControlRequest(void)
{
    26d6:	1f 93       	push	r17
    26d8:	cf 93       	push	r28
    26da:	df 93       	push	r29
    26dc:	cd b7       	in	r28, 0x3d	; 61
    26de:	de b7       	in	r29, 0x3e	; 62
    26e0:	aa 97       	sbiw	r28, 0x2a	; 42
    26e2:	0f b6       	in	r0, 0x3f	; 63
    26e4:	f8 94       	cli
    26e6:	de bf       	out	0x3e, r29	; 62
    26e8:	0f be       	out	0x3f, r0	; 63
    26ea:	cd bf       	out	0x3d, r28	; 61
    26ec:	e8 e2       	ldi	r30, 0x28	; 40
    26ee:	f9 e0       	ldi	r31, 0x09	; 9
			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
			 */
			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_Read_8(void)
			{
				return UEDATX;
    26f0:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
	#else
	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;

	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeaderByte++)
	  *(RequestHeader++) = Endpoint_Read_8();
    26f4:	81 93       	st	Z+, r24
	USB_ControlRequest.wIndex        = Endpoint_Read_16_LE();
	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
	#else
	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;

	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeaderByte++)
    26f6:	29 e0       	ldi	r18, 0x09	; 9
    26f8:	e0 33       	cpi	r30, 0x30	; 48
    26fa:	f2 07       	cpc	r31, r18
    26fc:	c9 f7       	brne	.-14     	; 0x26f0 <USB_Device_ProcessControlRequest+0x1a>
	  *(RequestHeader++) = Endpoint_Read_8();
	#endif

	EVENT_USB_Device_ControlRequest();
    26fe:	0e 94 bc 08 	call	0x1178	; 0x1178 <EVENT_USB_Device_ControlRequest>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2702:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	if (Endpoint_IsSETUPReceived())
    2706:	83 ff       	sbrs	r24, 3
    2708:	31 c1       	rjmp	.+610    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
	{
		uint8_t bmRequestType = USB_ControlRequest.bmRequestType;
    270a:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>

		switch (USB_ControlRequest.bRequest)
    270e:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <USB_ControlRequest+0x1>
    2712:	95 30       	cpi	r25, 0x05	; 5
    2714:	09 f4       	brne	.+2      	; 0x2718 <USB_Device_ProcessControlRequest+0x42>
    2716:	83 c0       	rjmp	.+262    	; 0x281e <USB_Device_ProcessControlRequest+0x148>
    2718:	30 f4       	brcc	.+12     	; 0x2726 <USB_Device_ProcessControlRequest+0x50>
    271a:	91 30       	cpi	r25, 0x01	; 1
    271c:	a9 f1       	breq	.+106    	; 0x2788 <USB_Device_ProcessControlRequest+0xb2>
    271e:	68 f0       	brcs	.+26     	; 0x273a <USB_Device_ProcessControlRequest+0x64>
    2720:	93 30       	cpi	r25, 0x03	; 3
    2722:	91 f1       	breq	.+100    	; 0x2788 <USB_Device_ProcessControlRequest+0xb2>
    2724:	23 c1       	rjmp	.+582    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    2726:	98 30       	cpi	r25, 0x08	; 8
    2728:	09 f4       	brne	.+2      	; 0x272c <USB_Device_ProcessControlRequest+0x56>
    272a:	ef c0       	rjmp	.+478    	; 0x290a <USB_Device_ProcessControlRequest+0x234>
    272c:	99 30       	cpi	r25, 0x09	; 9
    272e:	09 f4       	brne	.+2      	; 0x2732 <USB_Device_ProcessControlRequest+0x5c>
    2730:	fb c0       	rjmp	.+502    	; 0x2928 <USB_Device_ProcessControlRequest+0x252>
    2732:	96 30       	cpi	r25, 0x06	; 6
    2734:	09 f0       	breq	.+2      	; 0x2738 <USB_Device_ProcessControlRequest+0x62>
    2736:	1a c1       	rjmp	.+564    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    2738:	94 c0       	rjmp	.+296    	; 0x2862 <USB_Device_ProcessControlRequest+0x18c>
		{
			case REQ_GetStatus:
				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    273a:	80 38       	cpi	r24, 0x80	; 128
    273c:	21 f0       	breq	.+8      	; 0x2746 <USB_Device_ProcessControlRequest+0x70>
    273e:	82 38       	cpi	r24, 0x82	; 130
    2740:	09 f0       	breq	.+2      	; 0x2744 <USB_Device_ProcessControlRequest+0x6e>
    2742:	14 c1       	rjmp	.+552    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    2744:	08 c0       	rjmp	.+16     	; 0x2756 <USB_Device_ProcessControlRequest+0x80>
	Endpoint_ClearOUT();
}

static void USB_Device_GetStatus(void)
{
	uint8_t CurrentStatus = 0;
    2746:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <USB_Device_CurrentlySelfPowered>
			if (USB_Device_CurrentlySelfPowered)
			  CurrentStatus |= FEATURE_SELFPOWERED_ENABLED;
			#endif

			#if !defined(NO_DEVICE_REMOTE_WAKEUP)
			if (USB_Device_RemoteWakeupEnabled)
    274a:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <USB_Device_RemoteWakeupEnabled>
    274e:	99 23       	and	r25, r25
    2750:	89 f0       	breq	.+34     	; 0x2774 <USB_Device_ProcessControlRequest+0x9e>
			  CurrentStatus |= FEATURE_REMOTE_WAKEUP_ENABLED;
    2752:	82 60       	ori	r24, 0x02	; 2
    2754:	0f c0       	rjmp	.+30     	; 0x2774 <USB_Device_ProcessControlRequest+0x9e>
			break;
		}
		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT):
		{
			#if !defined(CONTROL_ONLY_DEVICE)
			uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
    2756:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    275a:	8f 70       	andi	r24, 0x0F	; 15

			if (EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
    275c:	87 30       	cpi	r24, 0x07	; 7
    275e:	08 f0       	brcs	.+2      	; 0x2762 <USB_Device_ProcessControlRequest+0x8c>
    2760:	05 c1       	rjmp	.+522    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2762:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
			 */
			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsStalled(void)
			{
				return ((UECONX & (1 << STALLRQ)) ? true : false);
    2766:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
				return;

			Endpoint_SelectEndpoint(EndpointIndex);

			CurrentStatus = Endpoint_IsStalled();
    276a:	85 fb       	bst	r24, 5
    276c:	88 27       	eor	r24, r24
    276e:	80 f9       	bld	r24, 0
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2770:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2774:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2778:	97 7f       	andi	r25, 0xF7	; 247
    277a:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_16_LE(const uint16_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_16_LE(const uint16_t Data)
			{
				UEDATX = (Data & 0xFF);
    277e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 8);
    2782:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2786:	cc c0       	rjmp	.+408    	; 0x2920 <USB_Device_ProcessControlRequest+0x24a>
				}

				break;
			case REQ_ClearFeature:
			case REQ_SetFeature:
				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    2788:	28 2f       	mov	r18, r24
    278a:	2d 7f       	andi	r18, 0xFD	; 253
    278c:	09 f0       	breq	.+2      	; 0x2790 <USB_Device_ProcessControlRequest+0xba>
    278e:	ee c0       	rjmp	.+476    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
	Endpoint_ClearStatusStage();
}

static void USB_Device_ClearSetFeature(void)
{
	switch (USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT)
    2790:	88 23       	and	r24, r24
    2792:	19 f0       	breq	.+6      	; 0x279a <USB_Device_ProcessControlRequest+0xc4>
    2794:	82 30       	cpi	r24, 0x02	; 2
    2796:	61 f0       	breq	.+24     	; 0x27b0 <USB_Device_ProcessControlRequest+0xda>
    2798:	e9 c0       	rjmp	.+466    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
	{
		#if !defined(NO_DEVICE_REMOTE_WAKEUP)
		case REQREC_DEVICE:
		{
			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_DeviceRemoteWakeup)
    279a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    279e:	81 30       	cpi	r24, 0x01	; 1
    27a0:	09 f0       	breq	.+2      	; 0x27a4 <USB_Device_ProcessControlRequest+0xce>
    27a2:	e4 c0       	rjmp	.+456    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
			  USB_Device_RemoteWakeupEnabled = (USB_ControlRequest.bRequest == REQ_SetFeature);
    27a4:	93 30       	cpi	r25, 0x03	; 3
    27a6:	09 f0       	breq	.+2      	; 0x27aa <USB_Device_ProcessControlRequest+0xd4>
    27a8:	80 e0       	ldi	r24, 0x00	; 0
    27aa:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <USB_Device_RemoteWakeupEnabled>
    27ae:	2e c0       	rjmp	.+92     	; 0x280c <USB_Device_ProcessControlRequest+0x136>
		}
		#endif
		#if !defined(CONTROL_ONLY_DEVICE)
		case REQREC_ENDPOINT:
		{
			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_EndpointHalt)
    27b0:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    27b4:	81 11       	cpse	r24, r1
    27b6:	2a c0       	rjmp	.+84     	; 0x280c <USB_Device_ProcessControlRequest+0x136>
			{
				uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
    27b8:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    27bc:	8f 70       	andi	r24, 0x0F	; 15

				if (EndpointIndex == ENDPOINT_CONTROLEP || EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
    27be:	2f ef       	ldi	r18, 0xFF	; 255
    27c0:	28 0f       	add	r18, r24
    27c2:	26 30       	cpi	r18, 0x06	; 6
    27c4:	08 f0       	brcs	.+2      	; 0x27c8 <USB_Device_ProcessControlRequest+0xf2>
    27c6:	d2 c0       	rjmp	.+420    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    27c8:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
			 */
			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsEnabled(void)
			{
				return ((UECONX & (1 << EPEN)) ? true : false);
    27cc:	20 91 eb 00 	lds	r18, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
				  return;

				Endpoint_SelectEndpoint(EndpointIndex);

				if (Endpoint_IsEnabled())
    27d0:	20 ff       	sbrs	r18, 0
    27d2:	1c c0       	rjmp	.+56     	; 0x280c <USB_Device_ProcessControlRequest+0x136>
				{
					if (USB_ControlRequest.bRequest == REQ_SetFeature)
    27d4:	93 30       	cpi	r25, 0x03	; 3
    27d6:	21 f4       	brne	.+8      	; 0x27e0 <USB_Device_ProcessControlRequest+0x10a>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_StallTransaction(void)
			{
				UECONX |= (1 << STALLRQ);
    27d8:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    27dc:	80 62       	ori	r24, 0x20	; 32
    27de:	14 c0       	rjmp	.+40     	; 0x2808 <USB_Device_ProcessControlRequest+0x132>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearStall(void)
			{
				UECONX |= (1 << STALLRQC);
    27e0:	90 91 eb 00 	lds	r25, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    27e4:	90 61       	ori	r25, 0x10	; 16
    27e6:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
			 */
			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
			{
				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
    27ea:	21 e0       	ldi	r18, 0x01	; 1
    27ec:	30 e0       	ldi	r19, 0x00	; 0
    27ee:	a9 01       	movw	r20, r18
    27f0:	02 c0       	rjmp	.+4      	; 0x27f6 <USB_Device_ProcessControlRequest+0x120>
    27f2:	44 0f       	add	r20, r20
    27f4:	55 1f       	adc	r21, r21
    27f6:	8a 95       	dec	r24
    27f8:	e2 f7       	brpl	.-8      	; 0x27f2 <USB_Device_ProcessControlRequest+0x11c>
    27fa:	40 93 ea 00 	sts	0x00EA, r20	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
				UERST = 0;
    27fe:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>

			/** Resets the data toggle of the currently selected endpoint. */
			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ResetDataToggle(void)
			{
				UECONX |= (1 << RSTDT);
    2802:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2806:	88 60       	ori	r24, 0x08	; 8
    2808:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    280c:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2810:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2814:	87 7f       	andi	r24, 0xF7	; 247
    2816:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);

	Endpoint_ClearSETUP();

	Endpoint_ClearStatusStage();
    281a:	9e dd       	rcall	.-1220   	; 0x2358 <Endpoint_ClearStatusStage>
					USB_Device_ClearSetFeature();
				}

				break;
			case REQ_SetAddress:
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
    281c:	a7 c0       	rjmp	.+334    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    281e:	81 11       	cpse	r24, r1
	}
}

static void USB_Device_SetAddress(void)
{
	uint8_t DeviceAddress = (USB_ControlRequest.wValue & 0x7F);
    2820:	a5 c0       	rjmp	.+330    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    2822:	10 91 2a 09 	lds	r17, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
			#endif

			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
			{
				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
    2826:	1f 77       	andi	r17, 0x7F	; 127
    2828:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    282c:	80 78       	andi	r24, 0x80	; 128
    282e:	81 2b       	or	r24, r17
    2830:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    2834:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2838:	87 7f       	andi	r24, 0xF7	; 247

	USB_Device_SetDeviceAddress(DeviceAddress);

	Endpoint_ClearSETUP();

	Endpoint_ClearStatusStage();
    283a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    283e:	8c dd       	rcall	.-1256   	; 0x2358 <Endpoint_ClearStatusStage>
    2840:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	while (!(Endpoint_IsINReady()));
    2844:	80 ff       	sbrs	r24, 0
			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
			{
				(void)Address;

				UDADDR |= (1 << ADDEN);
    2846:	fc cf       	rjmp	.-8      	; 0x2840 <USB_Device_ProcessControlRequest+0x16a>
    2848:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    284c:	80 68       	ori	r24, 0x80	; 128
    284e:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>

	USB_Device_EnableDeviceAddress(DeviceAddress);

	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
    2852:	11 11       	cpse	r17, r1
    2854:	02 c0       	rjmp	.+4      	; 0x285a <USB_Device_ProcessControlRequest+0x184>
    2856:	82 e0       	ldi	r24, 0x02	; 2
    2858:	01 c0       	rjmp	.+2      	; 0x285c <USB_Device_ProcessControlRequest+0x186>
    285a:	83 e0       	ldi	r24, 0x03	; 3
    285c:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
				  USB_Device_SetAddress();

				break;
			case REQ_GetDescriptor:
				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    2860:	85 c0       	rjmp	.+266    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    2862:	80 58       	subi	r24, 0x80	; 128
    2864:	82 30       	cpi	r24, 0x02	; 2
    2866:	08 f0       	brcs	.+2      	; 0x286a <USB_Device_ProcessControlRequest+0x194>
	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIPTORS))
	uint8_t DescriptorAddressSpace;
	#endif

	#if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
    2868:	81 c0       	rjmp	.+258    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    286a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    286e:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <USB_ControlRequest+0x3>
    2872:	8c 3d       	cpi	r24, 0xDC	; 220
    2874:	53 e0       	ldi	r21, 0x03	; 3
    2876:	95 07       	cpc	r25, r21
	{
		USB_Descriptor_Header_t Header;
		uint16_t                UnicodeString[INTERNAL_SERIAL_LENGTH_BITS / 4];
	} SignatureDescriptor;

	SignatureDescriptor.Header.Type = DTYPE_String;
    2878:	71 f5       	brne	.+92     	; 0x28d6 <USB_Device_ProcessControlRequest+0x200>
    287a:	83 e0       	ldi	r24, 0x03	; 3
	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
    287c:	8a 83       	std	Y+2, r24	; 0x02
    287e:	8a e2       	ldi	r24, 0x2A	; 42
			static inline uint_reg_t GetGlobalInterruptMask(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				return SREG;
    2880:	89 83       	std	Y+1, r24	; 0x01
			static inline void GlobalInterruptDisable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				cli();
    2882:	4f b7       	in	r20, 0x3f	; 63
				__builtin_ssrf(AVR32_SR_GM_OFFSET);
				#elif (ARCH == ARCH_XMEGA)
				cli();
				#endif

				GCC_MEMORY_BARRIER();
    2884:	f8 94       	cli
    2886:	de 01       	movw	r26, r28
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
    2888:	13 96       	adiw	r26, 0x03	; 3
			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString)
			{
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
    288a:	20 e0       	ldi	r18, 0x00	; 0

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
				{
					uint8_t SerialByte = boot_signature_byte_get(SigReadAddress);
    288c:	3e e0       	ldi	r19, 0x0E	; 14
    288e:	51 e2       	ldi	r21, 0x21	; 33
    2890:	e3 2f       	mov	r30, r19
    2892:	f0 e0       	ldi	r31, 0x00	; 0
    2894:	50 93 57 00 	sts	0x0057, r21	; 0x800057 <__TEXT_REGION_LENGTH__+0x7e0057>

					if (SerialCharNum & 0x01)
    2898:	e4 91       	lpm	r30, Z
    289a:	20 ff       	sbrs	r18, 0
					{
						SerialByte >>= 4;
    289c:	03 c0       	rjmp	.+6      	; 0x28a4 <USB_Device_ProcessControlRequest+0x1ce>
    289e:	e2 95       	swap	r30
						SigReadAddress++;
    28a0:	ef 70       	andi	r30, 0x0F	; 15
					}

					SerialByte &= 0x0F;
    28a2:	3f 5f       	subi	r19, 0xFF	; 255
    28a4:	ef 70       	andi	r30, 0x0F	; 15
    28a6:	8e 2f       	mov	r24, r30

					UnicodeString[SerialCharNum] = cpu_to_le16((SerialByte >= 10) ?
    28a8:	90 e0       	ldi	r25, 0x00	; 0
    28aa:	ea 30       	cpi	r30, 0x0A	; 10
    28ac:	10 f0       	brcs	.+4      	; 0x28b2 <USB_Device_ProcessControlRequest+0x1dc>
    28ae:	c7 96       	adiw	r24, 0x37	; 55
    28b0:	01 c0       	rjmp	.+2      	; 0x28b4 <USB_Device_ProcessControlRequest+0x1de>
    28b2:	c0 96       	adiw	r24, 0x30	; 48
    28b4:	8d 93       	st	X+, r24
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
    28b6:	9d 93       	st	X+, r25
    28b8:	2f 5f       	subi	r18, 0xFF	; 255
    28ba:	24 31       	cpi	r18, 0x14	; 20
			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				SREG = GlobalIntState;
    28bc:	49 f7       	brne	.-46     	; 0x2890 <USB_Device_ProcessControlRequest+0x1ba>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    28be:	4f bf       	out	0x3f, r20	; 63
    28c0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    28c4:	87 7f       	andi	r24, 0xF7	; 247
    28c6:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	USB_Device_GetSerialString(SignatureDescriptor.UnicodeString);

	Endpoint_ClearSETUP();

	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
    28ca:	6a e2       	ldi	r22, 0x2A	; 42
    28cc:	70 e0       	ldi	r23, 0x00	; 0
    28ce:	ce 01       	movw	r24, r28
    28d0:	01 96       	adiw	r24, 0x01	; 1
    28d2:	11 dc       	rcall	.-2014   	; 0x20f6 <Endpoint_Write_Control_Stream_LE>
		USB_Device_GetInternalSerialDescriptor();
		return;
	}
	#endif

	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIndex,
    28d4:	14 c0       	rjmp	.+40     	; 0x28fe <USB_Device_ProcessControlRequest+0x228>
    28d6:	60 91 2c 09 	lds	r22, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    28da:	70 91 2d 09 	lds	r23, 0x092D	; 0x80092d <USB_ControlRequest+0x5>
    28de:	ae 01       	movw	r20, r28
    28e0:	4f 5f       	subi	r20, 0xFF	; 255
    28e2:	5f 4f       	sbci	r21, 0xFF	; 255
    28e4:	8f db       	rcall	.-2274   	; 0x2004 <CALLBACK_USB_GetDescriptor>
    28e6:	bc 01       	movw	r22, r24
    28e8:	89 2b       	or	r24, r25
    28ea:	09 f4       	brne	.+2      	; 0x28ee <USB_Device_ProcessControlRequest+0x218>
    28ec:	3f c0       	rjmp	.+126    	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    28ee:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    28f2:	97 7f       	andi	r25, 0xF7	; 247
	#if defined(USE_RAM_DESCRIPTORS) || !defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
	Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
	#elif defined(USE_EEPROM_DESCRIPTORS)
	Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
	#elif defined(USE_FLASH_DESCRIPTORS)
	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
    28f4:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    28f8:	89 81       	ldd	r24, Y+1	; 0x01
    28fa:	9a 81       	ldd	r25, Y+2	; 0x02
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    28fc:	5a dc       	rcall	.-1868   	; 0x21b2 <Endpoint_Write_Control_PStream_LE>
    28fe:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2902:	8b 77       	andi	r24, 0x7B	; 123
    2904:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
					USB_Device_GetDescriptor();
				}

				break;
			case REQ_GetConfiguration:
				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
    2908:	31 c0       	rjmp	.+98     	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    290a:	80 38       	cpi	r24, 0x80	; 128
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    290c:	79 f5       	brne	.+94     	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    290e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2912:	87 7f       	andi	r24, 0xF7	; 247
    2914:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

static void USB_Device_GetConfiguration(void)
{
	Endpoint_ClearSETUP();

	Endpoint_Write_8(USB_Device_ConfigurationNumber);
    2918:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <USB_Device_ConfigurationNumber>
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    291c:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    2920:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2924:	8e 77       	andi	r24, 0x7E	; 126
				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
				  USB_Device_GetConfiguration();

				break;
			case REQ_SetConfiguration:
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
    2926:	77 cf       	rjmp	.-274    	; 0x2816 <USB_Device_ProcessControlRequest+0x140>
    2928:	81 11       	cpse	r24, r1
}

static void USB_Device_SetConfiguration(void)
{
	#if defined(FIXED_NUM_CONFIGURATIONS)
	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
    292a:	20 c0       	rjmp	.+64     	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    292c:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    2930:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <USB_ControlRequest+0x3>
    2934:	99 27       	eor	r25, r25
    2936:	02 97       	sbiw	r24, 0x02	; 2
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2938:	cc f4       	brge	.+50     	; 0x296c <USB_Device_ProcessControlRequest+0x296>
    293a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    293e:	87 7f       	andi	r24, 0xF7	; 247
	#endif
	#endif

	Endpoint_ClearSETUP();

	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
    2940:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2944:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>

	Endpoint_ClearStatusStage();
    2948:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <USB_Device_ConfigurationNumber>

	if (USB_Device_ConfigurationNumber)
    294c:	05 dd       	rcall	.-1526   	; 0x2358 <Endpoint_ClearStatusStage>
    294e:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <USB_Device_ConfigurationNumber>
    2952:	81 11       	cpse	r24, r1
			}

			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline bool USB_Device_IsAddressSet(void)
			{
				return (UDADDR & (1 << ADDEN));
    2954:	06 c0       	rjmp	.+12     	; 0x2962 <USB_Device_ProcessControlRequest+0x28c>
    2956:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
	  USB_DeviceState = DEVICE_STATE_Configured;
	else
	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
    295a:	87 fd       	sbrc	r24, 7
    295c:	02 c0       	rjmp	.+4      	; 0x2962 <USB_Device_ProcessControlRequest+0x28c>
    295e:	81 e0       	ldi	r24, 0x01	; 1
    2960:	01 c0       	rjmp	.+2      	; 0x2964 <USB_Device_ProcessControlRequest+0x28e>
    2962:	84 e0       	ldi	r24, 0x04	; 4
    2964:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>

	EVENT_USB_Device_ConfigurationChanged();
    2968:	0e 94 b8 08 	call	0x1170	; 0x1170 <EVENT_USB_Device_ConfigurationChanged>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    296c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			default:
				break;
		}
	}

	if (Endpoint_IsSETUPReceived())
    2970:	83 ff       	sbrs	r24, 3
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2972:	0a c0       	rjmp	.+20     	; 0x2988 <USB_Device_ProcessControlRequest+0x2b2>
    2974:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2978:	87 7f       	andi	r24, 0xF7	; 247
    297a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_StallTransaction(void)
			{
				UECONX |= (1 << STALLRQ);
    297e:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2982:	80 62       	ori	r24, 0x20	; 32
    2984:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
	{
		Endpoint_ClearSETUP();
		Endpoint_StallTransaction();
	}
}
    2988:	aa 96       	adiw	r28, 0x2a	; 42
    298a:	0f b6       	in	r0, 0x3f	; 63
    298c:	f8 94       	cli
    298e:	de bf       	out	0x3e, r29	; 62
    2990:	0f be       	out	0x3f, r0	; 63
    2992:	cd bf       	out	0x3d, r28	; 61
    2994:	df 91       	pop	r29
    2996:	cf 91       	pop	r28
    2998:	1f 91       	pop	r17
    299a:	08 95       	ret

0000299c <USB_Event_Stub>:
#define  __INCLUDE_FROM_EVENTS_C
#define  __INCLUDE_FROM_USB_DRIVER
#include "Events.h"

void USB_Event_Stub(void)
{
    299c:	08 95       	ret

0000299e <USB_USBTask>:
#if defined(USB_CAN_BE_DEVICE) && !defined(DEVICE_STATE_AS_GPIOR)
volatile uint8_t     USB_DeviceState;
#endif

void USB_USBTask(void)
{
    299e:	cf 93       	push	r28
}

#if defined(USB_CAN_BE_DEVICE)
static void USB_DeviceTask(void)
{
	if (USB_DeviceState == DEVICE_STATE_Unattached)
    29a0:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    29a4:	88 23       	and	r24, r24
    29a6:	99 f0       	breq	.+38     	; 0x29ce <USB_USBTask+0x30>
			 */
			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
    29a8:	c0 91 e9 00 	lds	r28, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    29ac:	cf 70       	andi	r28, 0x0F	; 15
			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
			 */
			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetEndpointDirection(void)
			{
				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
    29ae:	90 91 ec 00 	lds	r25, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    29b2:	89 2f       	mov	r24, r25
    29b4:	81 70       	andi	r24, 0x01	; 1
    29b6:	90 fd       	sbrc	r25, 0
    29b8:	80 e8       	ldi	r24, 0x80	; 128
			 */
			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
    29ba:	c8 2b       	or	r28, r24
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    29bc:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    29c0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	uint8_t PrevEndpoint = Endpoint_GetCurrentEndpoint();

	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);

	if (Endpoint_IsSETUPReceived())
	  USB_Device_ProcessControlRequest();
    29c4:	83 fd       	sbrc	r24, 3
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    29c6:	87 de       	rcall	.-754    	; 0x26d6 <USB_Device_ProcessControlRequest>
    29c8:	cf 70       	andi	r28, 0x0F	; 15
    29ca:	c0 93 e9 00 	sts	0x00E9, r28	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
	#elif defined(USB_CAN_BE_HOST)
		USB_HostTask();
	#elif defined(USB_CAN_BE_DEVICE)
		USB_DeviceTask();
	#endif
}
    29ce:	cf 91       	pop	r28
    29d0:	08 95       	ret

000029d2 <CDC_Device_ConfigureEndpoints>:

void CDC_Device_CreateBlockingStream(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
                                     FILE* const Stream)
{
	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar_Blocking, _FDEV_SETUP_RW);
	fdev_set_udata(Stream, CDCInterfaceInfo);
    29d2:	cf 93       	push	r28
    29d4:	df 93       	push	r29
    29d6:	ec 01       	movw	r28, r24
    29d8:	fc 01       	movw	r30, r24
    29da:	70 96       	adiw	r30, 0x10	; 16
    29dc:	8b e0       	ldi	r24, 0x0B	; 11
    29de:	df 01       	movw	r26, r30
    29e0:	1d 92       	st	X+, r1
    29e2:	8a 95       	dec	r24
    29e4:	e9 f7       	brne	.-6      	; 0x29e0 <CDC_Device_ConfigureEndpoints+0xe>
    29e6:	82 e0       	ldi	r24, 0x02	; 2
    29e8:	8c 83       	std	Y+4, r24	; 0x04
    29ea:	89 87       	std	Y+9, r24	; 0x09
    29ec:	83 e0       	ldi	r24, 0x03	; 3
    29ee:	8e 87       	std	Y+14, r24	; 0x0e
    29f0:	61 e0       	ldi	r22, 0x01	; 1
    29f2:	ce 01       	movw	r24, r28
    29f4:	01 96       	adiw	r24, 0x01	; 1
    29f6:	73 dc       	rcall	.-1818   	; 0x22de <Endpoint_ConfigureEndpointTable>
    29f8:	88 23       	and	r24, r24
    29fa:	61 f0       	breq	.+24     	; 0x2a14 <CDC_Device_ConfigureEndpoints+0x42>
    29fc:	61 e0       	ldi	r22, 0x01	; 1
    29fe:	ce 01       	movw	r24, r28
    2a00:	06 96       	adiw	r24, 0x06	; 6
    2a02:	6d dc       	rcall	.-1830   	; 0x22de <Endpoint_ConfigureEndpointTable>
    2a04:	88 23       	and	r24, r24
    2a06:	31 f0       	breq	.+12     	; 0x2a14 <CDC_Device_ConfigureEndpoints+0x42>
    2a08:	61 e0       	ldi	r22, 0x01	; 1
    2a0a:	ce 01       	movw	r24, r28
    2a0c:	0b 96       	adiw	r24, 0x0b	; 11
    2a0e:	df 91       	pop	r29
    2a10:	cf 91       	pop	r28
    2a12:	65 cc       	rjmp	.-1846   	; 0x22de <Endpoint_ConfigureEndpointTable>
    2a14:	80 e0       	ldi	r24, 0x00	; 0
    2a16:	df 91       	pop	r29
    2a18:	cf 91       	pop	r28
    2a1a:	08 95       	ret

00002a1c <CDC_Device_SendString>:
    2a1c:	db 01       	movw	r26, r22
    2a1e:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2a22:	24 30       	cpi	r18, 0x04	; 4
    2a24:	c9 f4       	brne	.+50     	; 0x2a58 <CDC_Device_SendString+0x3c>
    2a26:	fc 01       	movw	r30, r24
    2a28:	44 89       	ldd	r20, Z+20	; 0x14
    2a2a:	55 89       	ldd	r21, Z+21	; 0x15
    2a2c:	66 89       	ldd	r22, Z+22	; 0x16
    2a2e:	77 89       	ldd	r23, Z+23	; 0x17
    2a30:	45 2b       	or	r20, r21
    2a32:	46 2b       	or	r20, r22
    2a34:	47 2b       	or	r20, r23
    2a36:	81 f0       	breq	.+32     	; 0x2a58 <CDC_Device_SendString+0x3c>
    2a38:	81 81       	ldd	r24, Z+1	; 0x01
    2a3a:	8f 70       	andi	r24, 0x0F	; 15
    2a3c:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2a40:	fd 01       	movw	r30, r26
    2a42:	01 90       	ld	r0, Z+
    2a44:	00 20       	and	r0, r0
    2a46:	e9 f7       	brne	.-6      	; 0x2a42 <CDC_Device_SendString+0x26>
    2a48:	31 97       	sbiw	r30, 0x01	; 1
    2a4a:	bf 01       	movw	r22, r30
    2a4c:	6a 1b       	sub	r22, r26
    2a4e:	7b 0b       	sbc	r23, r27
    2a50:	40 e0       	ldi	r20, 0x00	; 0
    2a52:	50 e0       	ldi	r21, 0x00	; 0
    2a54:	cd 01       	movw	r24, r26
    2a56:	06 cb       	rjmp	.-2548   	; 0x2064 <Endpoint_Write_Stream_LE>
    2a58:	82 e0       	ldi	r24, 0x02	; 2
    2a5a:	08 95       	ret

00002a5c <CDC_Device_SendByte>:
    2a5c:	0f 93       	push	r16
    2a5e:	1f 93       	push	r17
    2a60:	cf 93       	push	r28
    2a62:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2a66:	24 30       	cpi	r18, 0x04	; 4
    2a68:	f9 f4       	brne	.+62     	; 0x2aa8 <CDC_Device_SendByte+0x4c>
    2a6a:	fc 01       	movw	r30, r24
    2a6c:	04 89       	ldd	r16, Z+20	; 0x14
    2a6e:	15 89       	ldd	r17, Z+21	; 0x15
    2a70:	26 89       	ldd	r18, Z+22	; 0x16
    2a72:	37 89       	ldd	r19, Z+23	; 0x17
    2a74:	01 2b       	or	r16, r17
    2a76:	02 2b       	or	r16, r18
    2a78:	03 2b       	or	r16, r19
    2a7a:	b1 f0       	breq	.+44     	; 0x2aa8 <CDC_Device_SendByte+0x4c>
    2a7c:	c6 2f       	mov	r28, r22
    2a7e:	81 81       	ldd	r24, Z+1	; 0x01
    2a80:	8f 70       	andi	r24, 0x0F	; 15
    2a82:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2a86:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2a8a:	85 ff       	sbrs	r24, 5
    2a8c:	04 c0       	rjmp	.+8      	; 0x2a96 <CDC_Device_SendByte+0x3a>
    2a8e:	c0 93 f1 00 	sts	0x00F1, r28	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2a92:	80 e0       	ldi	r24, 0x00	; 0
    2a94:	0a c0       	rjmp	.+20     	; 0x2aaa <CDC_Device_SendByte+0x4e>
    2a96:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2a9a:	8e 77       	andi	r24, 0x7E	; 126
    2a9c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2aa0:	7a dc       	rcall	.-1804   	; 0x2396 <Endpoint_WaitUntilReady>
    2aa2:	88 23       	and	r24, r24
    2aa4:	a1 f3       	breq	.-24     	; 0x2a8e <CDC_Device_SendByte+0x32>
    2aa6:	01 c0       	rjmp	.+2      	; 0x2aaa <CDC_Device_SendByte+0x4e>
    2aa8:	82 e0       	ldi	r24, 0x02	; 2
    2aaa:	cf 91       	pop	r28
    2aac:	1f 91       	pop	r17
    2aae:	0f 91       	pop	r16
    2ab0:	08 95       	ret

00002ab2 <CDC_Device_putchar>:
    2ab2:	fb 01       	movw	r30, r22
    2ab4:	68 2f       	mov	r22, r24
    2ab6:	84 85       	ldd	r24, Z+12	; 0x0c
    2ab8:	95 85       	ldd	r25, Z+13	; 0x0d
    2aba:	d0 df       	rcall	.-96     	; 0x2a5c <CDC_Device_SendByte>
    2abc:	21 e0       	ldi	r18, 0x01	; 1
    2abe:	30 e0       	ldi	r19, 0x00	; 0
    2ac0:	81 11       	cpse	r24, r1
    2ac2:	02 c0       	rjmp	.+4      	; 0x2ac8 <CDC_Device_putchar+0x16>
    2ac4:	20 e0       	ldi	r18, 0x00	; 0
    2ac6:	30 e0       	ldi	r19, 0x00	; 0
    2ac8:	88 27       	eor	r24, r24
    2aca:	99 27       	eor	r25, r25
    2acc:	82 1b       	sub	r24, r18
    2ace:	93 0b       	sbc	r25, r19
    2ad0:	08 95       	ret

00002ad2 <CDC_Device_Flush>:
    2ad2:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2ad6:	24 30       	cpi	r18, 0x04	; 4
    2ad8:	41 f5       	brne	.+80     	; 0x2b2a <CDC_Device_Flush+0x58>
    2ada:	fc 01       	movw	r30, r24
    2adc:	44 89       	ldd	r20, Z+20	; 0x14
    2ade:	55 89       	ldd	r21, Z+21	; 0x15
    2ae0:	66 89       	ldd	r22, Z+22	; 0x16
    2ae2:	77 89       	ldd	r23, Z+23	; 0x17
    2ae4:	45 2b       	or	r20, r21
    2ae6:	46 2b       	or	r20, r22
    2ae8:	47 2b       	or	r20, r23
    2aea:	f9 f0       	breq	.+62     	; 0x2b2a <CDC_Device_Flush+0x58>
    2aec:	81 81       	ldd	r24, Z+1	; 0x01
    2aee:	8f 70       	andi	r24, 0x0F	; 15
    2af0:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2af4:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2af8:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2afc:	90 e0       	ldi	r25, 0x00	; 0
    2afe:	92 2b       	or	r25, r18
    2b00:	89 2b       	or	r24, r25
    2b02:	89 f0       	breq	.+34     	; 0x2b26 <CDC_Device_Flush+0x54>
    2b04:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b08:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b0c:	8e 77       	andi	r24, 0x7E	; 126
    2b0e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b12:	95 fd       	sbrc	r25, 5
    2b14:	08 c0       	rjmp	.+16     	; 0x2b26 <CDC_Device_Flush+0x54>
    2b16:	3f dc       	rcall	.-1922   	; 0x2396 <Endpoint_WaitUntilReady>
    2b18:	81 11       	cpse	r24, r1
    2b1a:	08 c0       	rjmp	.+16     	; 0x2b2c <CDC_Device_Flush+0x5a>
    2b1c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b20:	8e 77       	andi	r24, 0x7E	; 126
    2b22:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b26:	80 e0       	ldi	r24, 0x00	; 0
    2b28:	08 95       	ret
    2b2a:	82 e0       	ldi	r24, 0x02	; 2
    2b2c:	08 95       	ret

00002b2e <CDC_Device_USBTask>:
    2b2e:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2b32:	24 30       	cpi	r18, 0x04	; 4
    2b34:	89 f4       	brne	.+34     	; 0x2b58 <CDC_Device_USBTask+0x2a>
    2b36:	fc 01       	movw	r30, r24
    2b38:	44 89       	ldd	r20, Z+20	; 0x14
    2b3a:	55 89       	ldd	r21, Z+21	; 0x15
    2b3c:	66 89       	ldd	r22, Z+22	; 0x16
    2b3e:	77 89       	ldd	r23, Z+23	; 0x17
    2b40:	45 2b       	or	r20, r21
    2b42:	46 2b       	or	r20, r22
    2b44:	47 2b       	or	r20, r23
    2b46:	41 f0       	breq	.+16     	; 0x2b58 <CDC_Device_USBTask+0x2a>
    2b48:	21 81       	ldd	r18, Z+1	; 0x01
    2b4a:	2f 70       	andi	r18, 0x0F	; 15
    2b4c:	20 93 e9 00 	sts	0x00E9, r18	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2b50:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b54:	20 fd       	sbrc	r18, 0
    2b56:	bd cf       	rjmp	.-134    	; 0x2ad2 <CDC_Device_Flush>
    2b58:	08 95       	ret

00002b5a <CDC_Device_ReceiveByte>:
    2b5a:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2b5e:	24 30       	cpi	r18, 0x04	; 4
    2b60:	19 f0       	breq	.+6      	; 0x2b68 <CDC_Device_ReceiveByte+0xe>
    2b62:	8f ef       	ldi	r24, 0xFF	; 255
    2b64:	9f ef       	ldi	r25, 0xFF	; 255
    2b66:	08 95       	ret
    2b68:	fc 01       	movw	r30, r24
    2b6a:	44 89       	ldd	r20, Z+20	; 0x14
    2b6c:	55 89       	ldd	r21, Z+21	; 0x15
    2b6e:	66 89       	ldd	r22, Z+22	; 0x16
    2b70:	77 89       	ldd	r23, Z+23	; 0x17
    2b72:	45 2b       	or	r20, r21
    2b74:	46 2b       	or	r20, r22
    2b76:	47 2b       	or	r20, r23
    2b78:	a1 f3       	breq	.-24     	; 0x2b62 <CDC_Device_ReceiveByte+0x8>
    2b7a:	86 81       	ldd	r24, Z+6	; 0x06
    2b7c:	8f 70       	andi	r24, 0x0F	; 15
    2b7e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2b82:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b86:	82 ff       	sbrs	r24, 2
    2b88:	ec cf       	rjmp	.-40     	; 0x2b62 <CDC_Device_ReceiveByte+0x8>
    2b8a:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2b8e:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	92 2b       	or	r25, r18
    2b96:	89 2b       	or	r24, r25
    2b98:	21 f0       	breq	.+8      	; 0x2ba2 <CDC_Device_ReceiveByte+0x48>
    2b9a:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2b9e:	30 e0       	ldi	r19, 0x00	; 0
    2ba0:	02 c0       	rjmp	.+4      	; 0x2ba6 <CDC_Device_ReceiveByte+0x4c>
    2ba2:	2f ef       	ldi	r18, 0xFF	; 255
    2ba4:	3f ef       	ldi	r19, 0xFF	; 255
    2ba6:	40 91 f3 00 	lds	r20, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2baa:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	94 2b       	or	r25, r20
    2bb2:	89 2b       	or	r24, r25
    2bb4:	29 f4       	brne	.+10     	; 0x2bc0 <CDC_Device_ReceiveByte+0x66>
    2bb6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bba:	8b 77       	andi	r24, 0x7B	; 123
    2bbc:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bc0:	c9 01       	movw	r24, r18
    2bc2:	08 95       	ret

00002bc4 <CDC_Device_getchar>:
    2bc4:	fc 01       	movw	r30, r24
    2bc6:	84 85       	ldd	r24, Z+12	; 0x0c
    2bc8:	95 85       	ldd	r25, Z+13	; 0x0d
    2bca:	c7 df       	rcall	.-114    	; 0x2b5a <CDC_Device_ReceiveByte>
    2bcc:	97 ff       	sbrs	r25, 7
    2bce:	02 c0       	rjmp	.+4      	; 0x2bd4 <CDC_Device_getchar+0x10>
    2bd0:	8e ef       	ldi	r24, 0xFE	; 254
    2bd2:	9f ef       	ldi	r25, 0xFF	; 255
    2bd4:	08 95       	ret

00002bd6 <CDC_Device_CreateStream>:
    2bd6:	fb 01       	movw	r30, r22
    2bd8:	2e e0       	ldi	r18, 0x0E	; 14
    2bda:	db 01       	movw	r26, r22
    2bdc:	1d 92       	st	X+, r1
    2bde:	2a 95       	dec	r18
    2be0:	e9 f7       	brne	.-6      	; 0x2bdc <CDC_Device_CreateStream+0x6>
    2be2:	23 e0       	ldi	r18, 0x03	; 3
    2be4:	23 83       	std	Z+3, r18	; 0x03
    2be6:	29 e5       	ldi	r18, 0x59	; 89
    2be8:	35 e1       	ldi	r19, 0x15	; 21
    2bea:	31 87       	std	Z+9, r19	; 0x09
    2bec:	20 87       	std	Z+8, r18	; 0x08
    2bee:	22 ee       	ldi	r18, 0xE2	; 226
    2bf0:	35 e1       	ldi	r19, 0x15	; 21
    2bf2:	33 87       	std	Z+11, r19	; 0x0b
    2bf4:	22 87       	std	Z+10, r18	; 0x0a
    2bf6:	95 87       	std	Z+13, r25	; 0x0d
    2bf8:	84 87       	std	Z+12, r24	; 0x0c
    2bfa:	08 95       	ret

00002bfc <CDC_Device_Event_Stub>:
	return ReceivedByte;
}
#endif

void CDC_Device_Event_Stub(void)
{
    2bfc:	08 95       	ret

00002bfe <CDC_Device_ProcessControlRequest>:
#define  __INCLUDE_FROM_CDC_DRIVER
#define  __INCLUDE_FROM_CDC_DEVICE_C
#include "CDCClassDevice.h"

void CDC_Device_ProcessControlRequest(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
{
    2bfe:	cf 93       	push	r28
    2c00:	df 93       	push	r29
    2c02:	ec 01       	movw	r28, r24
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2c04:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	if (!(Endpoint_IsSETUPReceived()))
    2c08:	83 ff       	sbrs	r24, 3
    2c0a:	a7 c0       	rjmp	.+334    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
	  return;

	if (USB_ControlRequest.wIndex != CDCInterfaceInfo->Config.ControlInterfaceNumber)
    2c0c:	88 81       	ld	r24, Y
    2c0e:	90 e0       	ldi	r25, 0x00	; 0
    2c10:	20 91 2c 09 	lds	r18, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    2c14:	30 91 2d 09 	lds	r19, 0x092D	; 0x80092d <USB_ControlRequest+0x5>
    2c18:	28 17       	cp	r18, r24
    2c1a:	39 07       	cpc	r19, r25
    2c1c:	09 f0       	breq	.+2      	; 0x2c20 <CDC_Device_ProcessControlRequest+0x22>
    2c1e:	9d c0       	rjmp	.+314    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
	  return;

	switch (USB_ControlRequest.bRequest)
    2c20:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <USB_ControlRequest+0x1>
    2c24:	81 32       	cpi	r24, 0x21	; 33
    2c26:	61 f0       	breq	.+24     	; 0x2c40 <CDC_Device_ProcessControlRequest+0x42>
    2c28:	20 f4       	brcc	.+8      	; 0x2c32 <CDC_Device_ProcessControlRequest+0x34>
    2c2a:	80 32       	cpi	r24, 0x20	; 32
    2c2c:	09 f4       	brne	.+2      	; 0x2c30 <CDC_Device_ProcessControlRequest+0x32>
    2c2e:	3e c0       	rjmp	.+124    	; 0x2cac <CDC_Device_ProcessControlRequest+0xae>
    2c30:	94 c0       	rjmp	.+296    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
    2c32:	82 32       	cpi	r24, 0x22	; 34
    2c34:	09 f4       	brne	.+2      	; 0x2c38 <CDC_Device_ProcessControlRequest+0x3a>
    2c36:	6c c0       	rjmp	.+216    	; 0x2d10 <CDC_Device_ProcessControlRequest+0x112>
    2c38:	83 32       	cpi	r24, 0x23	; 35
    2c3a:	09 f4       	brne	.+2      	; 0x2c3e <CDC_Device_ProcessControlRequest+0x40>
    2c3c:	7e c0       	rjmp	.+252    	; 0x2d3a <CDC_Device_ProcessControlRequest+0x13c>
    2c3e:	8d c0       	rjmp	.+282    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
	{
		case CDC_REQ_GetLineEncoding:
			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE))
    2c40:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    2c44:	81 3a       	cpi	r24, 0xA1	; 161
    2c46:	09 f0       	breq	.+2      	; 0x2c4a <CDC_Device_ProcessControlRequest+0x4c>
    2c48:	88 c0       	rjmp	.+272    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2c4a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2c4e:	87 7f       	andi	r24, 0xF7	; 247
    2c50:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    2c54:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();

				while (!(Endpoint_IsINReady()));
    2c58:	80 ff       	sbrs	r24, 0
    2c5a:	fc cf       	rjmp	.-8      	; 0x2c54 <CDC_Device_ProcessControlRequest+0x56>

				Endpoint_Write_32_LE(CDCInterfaceInfo->State.LineEncoding.BaudRateBPS);
    2c5c:	8c 89       	ldd	r24, Y+20	; 0x14
    2c5e:	9d 89       	ldd	r25, Y+21	; 0x15
    2c60:	ae 89       	ldd	r26, Y+22	; 0x16
    2c62:	bf 89       	ldd	r27, Y+23	; 0x17
			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_32_LE(const uint32_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_32_LE(const uint32_t Data)
			{
				UEDATX = (Data &  0xFF);
    2c64:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 8);
    2c68:	49 2f       	mov	r20, r25
    2c6a:	5a 2f       	mov	r21, r26
    2c6c:	6b 2f       	mov	r22, r27
    2c6e:	77 27       	eor	r23, r23
    2c70:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 16);
    2c74:	ad 01       	movw	r20, r26
    2c76:	66 27       	eor	r22, r22
    2c78:	77 27       	eor	r23, r23
    2c7a:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 24);
    2c7e:	8b 2f       	mov	r24, r27
    2c80:	99 27       	eor	r25, r25
    2c82:	aa 27       	eor	r26, r26
    2c84:	bb 27       	eor	r27, r27
    2c86:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
    2c8a:	88 8d       	ldd	r24, Y+24	; 0x18
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    2c8c:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
    2c90:	89 8d       	ldd	r24, Y+25	; 0x19
    2c92:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);
    2c96:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2c98:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    2c9c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2ca0:	8e 77       	andi	r24, 0x7E	; 126
    2ca2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2ca6:	df 91       	pop	r29
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);

				Endpoint_ClearIN();
				Endpoint_ClearStatusStage();
    2ca8:	cf 91       	pop	r28
			}

			break;
		case CDC_REQ_SetLineEncoding:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2caa:	56 cb       	rjmp	.-2388   	; 0x2358 <Endpoint_ClearStatusStage>
    2cac:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    2cb0:	81 32       	cpi	r24, 0x21	; 33
    2cb2:	09 f0       	breq	.+2      	; 0x2cb6 <CDC_Device_ProcessControlRequest+0xb8>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2cb4:	52 c0       	rjmp	.+164    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
    2cb6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2cba:	87 7f       	andi	r24, 0xF7	; 247
    2cbc:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    2cc0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();

				while (!(Endpoint_IsOUTReceived()))
    2cc4:	82 fd       	sbrc	r24, 2
				{
					if (USB_DeviceState == DEVICE_STATE_Unattached)
    2cc6:	05 c0       	rjmp	.+10     	; 0x2cd2 <CDC_Device_ProcessControlRequest+0xd4>
    2cc8:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    2ccc:	81 11       	cpse	r24, r1
    2cce:	f8 cf       	rjmp	.-16     	; 0x2cc0 <CDC_Device_ProcessControlRequest+0xc2>
				{
					uint32_t Value;
					uint8_t  Bytes[4];
				} Data;

				Data.Bytes[0] = UEDATX;
    2cd0:	44 c0       	rjmp	.+136    	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
    2cd2:	30 91 f1 00 	lds	r19, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[1] = UEDATX;
    2cd6:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[2] = UEDATX;
    2cda:	90 91 f1 00 	lds	r25, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[3] = UEDATX;
    2cde:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
					  return;
				}

				CDCInterfaceInfo->State.LineEncoding.BaudRateBPS = Endpoint_Read_32_LE();
    2ce2:	3c 8b       	std	Y+20, r19	; 0x14
    2ce4:	2d 8b       	std	Y+21, r18	; 0x15
    2ce6:	9e 8b       	std	Y+22, r25	; 0x16
			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
			 */
			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_Read_8(void)
			{
				return UEDATX;
    2ce8:	8f 8b       	std	Y+23, r24	; 0x17
    2cea:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2cee:	88 8f       	std	Y+24, r24	; 0x18
    2cf0:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2cf4:	89 8f       	std	Y+25, r24	; 0x19
    2cf6:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    2cfa:	8a 8f       	std	Y+26, r24	; 0x1a
    2cfc:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2d00:	8b 77       	andi	r24, 0x7B	; 123
				CDCInterfaceInfo->State.LineEncoding.CharFormat  = Endpoint_Read_8();
				CDCInterfaceInfo->State.LineEncoding.ParityType  = Endpoint_Read_8();
				CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();

				Endpoint_ClearOUT();
				Endpoint_ClearStatusStage();
    2d02:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2d06:	28 db       	rcall	.-2480   	; 0x2358 <Endpoint_ClearStatusStage>
				CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();

				Endpoint_ClearOUT();
				Endpoint_ClearStatusStage();

				EVENT_CDC_Device_LineEncodingChanged(CDCInterfaceInfo);
    2d08:	ce 01       	movw	r24, r28
    2d0a:	df 91       	pop	r29
			}

			break;
		case CDC_REQ_SetControlLineState:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2d0c:	cf 91       	pop	r28
    2d0e:	76 cf       	rjmp	.-276    	; 0x2bfc <CDC_Device_Event_Stub>
    2d10:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2d14:	81 32       	cpi	r24, 0x21	; 33
    2d16:	09 f5       	brne	.+66     	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
    2d18:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();
    2d1c:	87 7f       	andi	r24, 0xF7	; 247
    2d1e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;
    2d22:	1a db       	rcall	.-2508   	; 0x2358 <Endpoint_ClearStatusStage>
    2d24:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    2d28:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <USB_ControlRequest+0x3>

				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
    2d2c:	99 8b       	std	Y+17, r25	; 0x11
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2d2e:	88 8b       	std	Y+16, r24	; 0x10
    2d30:	ce 01       	movw	r24, r28
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();

				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;

				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
    2d32:	df 91       	pop	r29
    2d34:	cf 91       	pop	r28
			}

			break;
		case CDC_REQ_SendBreak:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2d36:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <EVENT_CDC_Device_ControLineStateChanged>
    2d3a:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    2d3e:	81 32       	cpi	r24, 0x21	; 33
    2d40:	61 f4       	brne	.+24     	; 0x2d5a <CDC_Device_ProcessControlRequest+0x15c>
    2d42:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();
    2d46:	87 7f       	andi	r24, 0xF7	; 247

				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
    2d48:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			}

			break;
	}
}
    2d4c:	05 db       	rcall	.-2550   	; 0x2358 <Endpoint_ClearStatusStage>
    2d4e:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();

				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
    2d52:	ce 01       	movw	r24, r28
			}

			break;
	}
}
    2d54:	df 91       	pop	r29
    2d56:	cf 91       	pop	r28
    2d58:	51 cf       	rjmp	.-350    	; 0x2bfc <CDC_Device_Event_Stub>
    2d5a:	df 91       	pop	r29
    2d5c:	cf 91       	pop	r28
    2d5e:	08 95       	ret

00002d60 <__subsf3>:
    2d60:	50 58       	subi	r21, 0x80	; 128

00002d62 <__addsf3>:
    2d62:	bb 27       	eor	r27, r27
    2d64:	aa 27       	eor	r26, r26
    2d66:	0e d0       	rcall	.+28     	; 0x2d84 <__addsf3x>
    2d68:	75 c1       	rjmp	.+746    	; 0x3054 <__fp_round>
    2d6a:	66 d1       	rcall	.+716    	; 0x3038 <__fp_pscA>
    2d6c:	30 f0       	brcs	.+12     	; 0x2d7a <__addsf3+0x18>
    2d6e:	6b d1       	rcall	.+726    	; 0x3046 <__fp_pscB>
    2d70:	20 f0       	brcs	.+8      	; 0x2d7a <__addsf3+0x18>
    2d72:	31 f4       	brne	.+12     	; 0x2d80 <__addsf3+0x1e>
    2d74:	9f 3f       	cpi	r25, 0xFF	; 255
    2d76:	11 f4       	brne	.+4      	; 0x2d7c <__addsf3+0x1a>
    2d78:	1e f4       	brtc	.+6      	; 0x2d80 <__addsf3+0x1e>
    2d7a:	5b c1       	rjmp	.+694    	; 0x3032 <__fp_nan>
    2d7c:	0e f4       	brtc	.+2      	; 0x2d80 <__addsf3+0x1e>
    2d7e:	e0 95       	com	r30
    2d80:	e7 fb       	bst	r30, 7
    2d82:	51 c1       	rjmp	.+674    	; 0x3026 <__fp_inf>

00002d84 <__addsf3x>:
    2d84:	e9 2f       	mov	r30, r25
    2d86:	77 d1       	rcall	.+750    	; 0x3076 <__fp_split3>
    2d88:	80 f3       	brcs	.-32     	; 0x2d6a <__addsf3+0x8>
    2d8a:	ba 17       	cp	r27, r26
    2d8c:	62 07       	cpc	r22, r18
    2d8e:	73 07       	cpc	r23, r19
    2d90:	84 07       	cpc	r24, r20
    2d92:	95 07       	cpc	r25, r21
    2d94:	18 f0       	brcs	.+6      	; 0x2d9c <__addsf3x+0x18>
    2d96:	71 f4       	brne	.+28     	; 0x2db4 <__addsf3x+0x30>
    2d98:	9e f5       	brtc	.+102    	; 0x2e00 <__addsf3x+0x7c>
    2d9a:	8f c1       	rjmp	.+798    	; 0x30ba <__fp_zero>
    2d9c:	0e f4       	brtc	.+2      	; 0x2da0 <__addsf3x+0x1c>
    2d9e:	e0 95       	com	r30
    2da0:	0b 2e       	mov	r0, r27
    2da2:	ba 2f       	mov	r27, r26
    2da4:	a0 2d       	mov	r26, r0
    2da6:	0b 01       	movw	r0, r22
    2da8:	b9 01       	movw	r22, r18
    2daa:	90 01       	movw	r18, r0
    2dac:	0c 01       	movw	r0, r24
    2dae:	ca 01       	movw	r24, r20
    2db0:	a0 01       	movw	r20, r0
    2db2:	11 24       	eor	r1, r1
    2db4:	ff 27       	eor	r31, r31
    2db6:	59 1b       	sub	r21, r25
    2db8:	99 f0       	breq	.+38     	; 0x2de0 <__addsf3x+0x5c>
    2dba:	59 3f       	cpi	r21, 0xF9	; 249
    2dbc:	50 f4       	brcc	.+20     	; 0x2dd2 <__addsf3x+0x4e>
    2dbe:	50 3e       	cpi	r21, 0xE0	; 224
    2dc0:	68 f1       	brcs	.+90     	; 0x2e1c <__addsf3x+0x98>
    2dc2:	1a 16       	cp	r1, r26
    2dc4:	f0 40       	sbci	r31, 0x00	; 0
    2dc6:	a2 2f       	mov	r26, r18
    2dc8:	23 2f       	mov	r18, r19
    2dca:	34 2f       	mov	r19, r20
    2dcc:	44 27       	eor	r20, r20
    2dce:	58 5f       	subi	r21, 0xF8	; 248
    2dd0:	f3 cf       	rjmp	.-26     	; 0x2db8 <__addsf3x+0x34>
    2dd2:	46 95       	lsr	r20
    2dd4:	37 95       	ror	r19
    2dd6:	27 95       	ror	r18
    2dd8:	a7 95       	ror	r26
    2dda:	f0 40       	sbci	r31, 0x00	; 0
    2ddc:	53 95       	inc	r21
    2dde:	c9 f7       	brne	.-14     	; 0x2dd2 <__addsf3x+0x4e>
    2de0:	7e f4       	brtc	.+30     	; 0x2e00 <__addsf3x+0x7c>
    2de2:	1f 16       	cp	r1, r31
    2de4:	ba 0b       	sbc	r27, r26
    2de6:	62 0b       	sbc	r22, r18
    2de8:	73 0b       	sbc	r23, r19
    2dea:	84 0b       	sbc	r24, r20
    2dec:	ba f0       	brmi	.+46     	; 0x2e1c <__addsf3x+0x98>
    2dee:	91 50       	subi	r25, 0x01	; 1
    2df0:	a1 f0       	breq	.+40     	; 0x2e1a <__addsf3x+0x96>
    2df2:	ff 0f       	add	r31, r31
    2df4:	bb 1f       	adc	r27, r27
    2df6:	66 1f       	adc	r22, r22
    2df8:	77 1f       	adc	r23, r23
    2dfa:	88 1f       	adc	r24, r24
    2dfc:	c2 f7       	brpl	.-16     	; 0x2dee <__addsf3x+0x6a>
    2dfe:	0e c0       	rjmp	.+28     	; 0x2e1c <__addsf3x+0x98>
    2e00:	ba 0f       	add	r27, r26
    2e02:	62 1f       	adc	r22, r18
    2e04:	73 1f       	adc	r23, r19
    2e06:	84 1f       	adc	r24, r20
    2e08:	48 f4       	brcc	.+18     	; 0x2e1c <__addsf3x+0x98>
    2e0a:	87 95       	ror	r24
    2e0c:	77 95       	ror	r23
    2e0e:	67 95       	ror	r22
    2e10:	b7 95       	ror	r27
    2e12:	f7 95       	ror	r31
    2e14:	9e 3f       	cpi	r25, 0xFE	; 254
    2e16:	08 f0       	brcs	.+2      	; 0x2e1a <__addsf3x+0x96>
    2e18:	b3 cf       	rjmp	.-154    	; 0x2d80 <__addsf3+0x1e>
    2e1a:	93 95       	inc	r25
    2e1c:	88 0f       	add	r24, r24
    2e1e:	08 f0       	brcs	.+2      	; 0x2e22 <__addsf3x+0x9e>
    2e20:	99 27       	eor	r25, r25
    2e22:	ee 0f       	add	r30, r30
    2e24:	97 95       	ror	r25
    2e26:	87 95       	ror	r24
    2e28:	08 95       	ret

00002e2a <__cmpsf2>:
    2e2a:	d9 d0       	rcall	.+434    	; 0x2fde <__fp_cmp>
    2e2c:	08 f4       	brcc	.+2      	; 0x2e30 <__cmpsf2+0x6>
    2e2e:	81 e0       	ldi	r24, 0x01	; 1
    2e30:	08 95       	ret

00002e32 <__divsf3>:
    2e32:	0c d0       	rcall	.+24     	; 0x2e4c <__divsf3x>
    2e34:	0f c1       	rjmp	.+542    	; 0x3054 <__fp_round>
    2e36:	07 d1       	rcall	.+526    	; 0x3046 <__fp_pscB>
    2e38:	40 f0       	brcs	.+16     	; 0x2e4a <__divsf3+0x18>
    2e3a:	fe d0       	rcall	.+508    	; 0x3038 <__fp_pscA>
    2e3c:	30 f0       	brcs	.+12     	; 0x2e4a <__divsf3+0x18>
    2e3e:	21 f4       	brne	.+8      	; 0x2e48 <__divsf3+0x16>
    2e40:	5f 3f       	cpi	r21, 0xFF	; 255
    2e42:	19 f0       	breq	.+6      	; 0x2e4a <__divsf3+0x18>
    2e44:	f0 c0       	rjmp	.+480    	; 0x3026 <__fp_inf>
    2e46:	51 11       	cpse	r21, r1
    2e48:	39 c1       	rjmp	.+626    	; 0x30bc <__fp_szero>
    2e4a:	f3 c0       	rjmp	.+486    	; 0x3032 <__fp_nan>

00002e4c <__divsf3x>:
    2e4c:	14 d1       	rcall	.+552    	; 0x3076 <__fp_split3>
    2e4e:	98 f3       	brcs	.-26     	; 0x2e36 <__divsf3+0x4>

00002e50 <__divsf3_pse>:
    2e50:	99 23       	and	r25, r25
    2e52:	c9 f3       	breq	.-14     	; 0x2e46 <__divsf3+0x14>
    2e54:	55 23       	and	r21, r21
    2e56:	b1 f3       	breq	.-20     	; 0x2e44 <__divsf3+0x12>
    2e58:	95 1b       	sub	r25, r21
    2e5a:	55 0b       	sbc	r21, r21
    2e5c:	bb 27       	eor	r27, r27
    2e5e:	aa 27       	eor	r26, r26
    2e60:	62 17       	cp	r22, r18
    2e62:	73 07       	cpc	r23, r19
    2e64:	84 07       	cpc	r24, r20
    2e66:	38 f0       	brcs	.+14     	; 0x2e76 <__divsf3_pse+0x26>
    2e68:	9f 5f       	subi	r25, 0xFF	; 255
    2e6a:	5f 4f       	sbci	r21, 0xFF	; 255
    2e6c:	22 0f       	add	r18, r18
    2e6e:	33 1f       	adc	r19, r19
    2e70:	44 1f       	adc	r20, r20
    2e72:	aa 1f       	adc	r26, r26
    2e74:	a9 f3       	breq	.-22     	; 0x2e60 <__divsf3_pse+0x10>
    2e76:	33 d0       	rcall	.+102    	; 0x2ede <__divsf3_pse+0x8e>
    2e78:	0e 2e       	mov	r0, r30
    2e7a:	3a f0       	brmi	.+14     	; 0x2e8a <__divsf3_pse+0x3a>
    2e7c:	e0 e8       	ldi	r30, 0x80	; 128
    2e7e:	30 d0       	rcall	.+96     	; 0x2ee0 <__divsf3_pse+0x90>
    2e80:	91 50       	subi	r25, 0x01	; 1
    2e82:	50 40       	sbci	r21, 0x00	; 0
    2e84:	e6 95       	lsr	r30
    2e86:	00 1c       	adc	r0, r0
    2e88:	ca f7       	brpl	.-14     	; 0x2e7c <__divsf3_pse+0x2c>
    2e8a:	29 d0       	rcall	.+82     	; 0x2ede <__divsf3_pse+0x8e>
    2e8c:	fe 2f       	mov	r31, r30
    2e8e:	27 d0       	rcall	.+78     	; 0x2ede <__divsf3_pse+0x8e>
    2e90:	66 0f       	add	r22, r22
    2e92:	77 1f       	adc	r23, r23
    2e94:	88 1f       	adc	r24, r24
    2e96:	bb 1f       	adc	r27, r27
    2e98:	26 17       	cp	r18, r22
    2e9a:	37 07       	cpc	r19, r23
    2e9c:	48 07       	cpc	r20, r24
    2e9e:	ab 07       	cpc	r26, r27
    2ea0:	b0 e8       	ldi	r27, 0x80	; 128
    2ea2:	09 f0       	breq	.+2      	; 0x2ea6 <__divsf3_pse+0x56>
    2ea4:	bb 0b       	sbc	r27, r27
    2ea6:	80 2d       	mov	r24, r0
    2ea8:	bf 01       	movw	r22, r30
    2eaa:	ff 27       	eor	r31, r31
    2eac:	93 58       	subi	r25, 0x83	; 131
    2eae:	5f 4f       	sbci	r21, 0xFF	; 255
    2eb0:	2a f0       	brmi	.+10     	; 0x2ebc <__divsf3_pse+0x6c>
    2eb2:	9e 3f       	cpi	r25, 0xFE	; 254
    2eb4:	51 05       	cpc	r21, r1
    2eb6:	68 f0       	brcs	.+26     	; 0x2ed2 <__divsf3_pse+0x82>
    2eb8:	b6 c0       	rjmp	.+364    	; 0x3026 <__fp_inf>
    2eba:	00 c1       	rjmp	.+512    	; 0x30bc <__fp_szero>
    2ebc:	5f 3f       	cpi	r21, 0xFF	; 255
    2ebe:	ec f3       	brlt	.-6      	; 0x2eba <__divsf3_pse+0x6a>
    2ec0:	98 3e       	cpi	r25, 0xE8	; 232
    2ec2:	dc f3       	brlt	.-10     	; 0x2eba <__divsf3_pse+0x6a>
    2ec4:	86 95       	lsr	r24
    2ec6:	77 95       	ror	r23
    2ec8:	67 95       	ror	r22
    2eca:	b7 95       	ror	r27
    2ecc:	f7 95       	ror	r31
    2ece:	9f 5f       	subi	r25, 0xFF	; 255
    2ed0:	c9 f7       	brne	.-14     	; 0x2ec4 <__divsf3_pse+0x74>
    2ed2:	88 0f       	add	r24, r24
    2ed4:	91 1d       	adc	r25, r1
    2ed6:	96 95       	lsr	r25
    2ed8:	87 95       	ror	r24
    2eda:	97 f9       	bld	r25, 7
    2edc:	08 95       	ret
    2ede:	e1 e0       	ldi	r30, 0x01	; 1
    2ee0:	66 0f       	add	r22, r22
    2ee2:	77 1f       	adc	r23, r23
    2ee4:	88 1f       	adc	r24, r24
    2ee6:	bb 1f       	adc	r27, r27
    2ee8:	62 17       	cp	r22, r18
    2eea:	73 07       	cpc	r23, r19
    2eec:	84 07       	cpc	r24, r20
    2eee:	ba 07       	cpc	r27, r26
    2ef0:	20 f0       	brcs	.+8      	; 0x2efa <__divsf3_pse+0xaa>
    2ef2:	62 1b       	sub	r22, r18
    2ef4:	73 0b       	sbc	r23, r19
    2ef6:	84 0b       	sbc	r24, r20
    2ef8:	ba 0b       	sbc	r27, r26
    2efa:	ee 1f       	adc	r30, r30
    2efc:	88 f7       	brcc	.-30     	; 0x2ee0 <__divsf3_pse+0x90>
    2efe:	e0 95       	com	r30
    2f00:	08 95       	ret

00002f02 <__fixsfsi>:
    2f02:	04 d0       	rcall	.+8      	; 0x2f0c <__fixunssfsi>
    2f04:	68 94       	set
    2f06:	b1 11       	cpse	r27, r1
    2f08:	d9 c0       	rjmp	.+434    	; 0x30bc <__fp_szero>
    2f0a:	08 95       	ret

00002f0c <__fixunssfsi>:
    2f0c:	bc d0       	rcall	.+376    	; 0x3086 <__fp_splitA>
    2f0e:	88 f0       	brcs	.+34     	; 0x2f32 <__fixunssfsi+0x26>
    2f10:	9f 57       	subi	r25, 0x7F	; 127
    2f12:	90 f0       	brcs	.+36     	; 0x2f38 <__fixunssfsi+0x2c>
    2f14:	b9 2f       	mov	r27, r25
    2f16:	99 27       	eor	r25, r25
    2f18:	b7 51       	subi	r27, 0x17	; 23
    2f1a:	a0 f0       	brcs	.+40     	; 0x2f44 <__fixunssfsi+0x38>
    2f1c:	d1 f0       	breq	.+52     	; 0x2f52 <__fixunssfsi+0x46>
    2f1e:	66 0f       	add	r22, r22
    2f20:	77 1f       	adc	r23, r23
    2f22:	88 1f       	adc	r24, r24
    2f24:	99 1f       	adc	r25, r25
    2f26:	1a f0       	brmi	.+6      	; 0x2f2e <__fixunssfsi+0x22>
    2f28:	ba 95       	dec	r27
    2f2a:	c9 f7       	brne	.-14     	; 0x2f1e <__fixunssfsi+0x12>
    2f2c:	12 c0       	rjmp	.+36     	; 0x2f52 <__fixunssfsi+0x46>
    2f2e:	b1 30       	cpi	r27, 0x01	; 1
    2f30:	81 f0       	breq	.+32     	; 0x2f52 <__fixunssfsi+0x46>
    2f32:	c3 d0       	rcall	.+390    	; 0x30ba <__fp_zero>
    2f34:	b1 e0       	ldi	r27, 0x01	; 1
    2f36:	08 95       	ret
    2f38:	c0 c0       	rjmp	.+384    	; 0x30ba <__fp_zero>
    2f3a:	67 2f       	mov	r22, r23
    2f3c:	78 2f       	mov	r23, r24
    2f3e:	88 27       	eor	r24, r24
    2f40:	b8 5f       	subi	r27, 0xF8	; 248
    2f42:	39 f0       	breq	.+14     	; 0x2f52 <__fixunssfsi+0x46>
    2f44:	b9 3f       	cpi	r27, 0xF9	; 249
    2f46:	cc f3       	brlt	.-14     	; 0x2f3a <__fixunssfsi+0x2e>
    2f48:	86 95       	lsr	r24
    2f4a:	77 95       	ror	r23
    2f4c:	67 95       	ror	r22
    2f4e:	b3 95       	inc	r27
    2f50:	d9 f7       	brne	.-10     	; 0x2f48 <__fixunssfsi+0x3c>
    2f52:	3e f4       	brtc	.+14     	; 0x2f62 <__fixunssfsi+0x56>
    2f54:	90 95       	com	r25
    2f56:	80 95       	com	r24
    2f58:	70 95       	com	r23
    2f5a:	61 95       	neg	r22
    2f5c:	7f 4f       	sbci	r23, 0xFF	; 255
    2f5e:	8f 4f       	sbci	r24, 0xFF	; 255
    2f60:	9f 4f       	sbci	r25, 0xFF	; 255
    2f62:	08 95       	ret

00002f64 <__floatunsisf>:
    2f64:	e8 94       	clt
    2f66:	09 c0       	rjmp	.+18     	; 0x2f7a <__floatsisf+0x12>

00002f68 <__floatsisf>:
    2f68:	97 fb       	bst	r25, 7
    2f6a:	3e f4       	brtc	.+14     	; 0x2f7a <__floatsisf+0x12>
    2f6c:	90 95       	com	r25
    2f6e:	80 95       	com	r24
    2f70:	70 95       	com	r23
    2f72:	61 95       	neg	r22
    2f74:	7f 4f       	sbci	r23, 0xFF	; 255
    2f76:	8f 4f       	sbci	r24, 0xFF	; 255
    2f78:	9f 4f       	sbci	r25, 0xFF	; 255
    2f7a:	99 23       	and	r25, r25
    2f7c:	a9 f0       	breq	.+42     	; 0x2fa8 <__floatsisf+0x40>
    2f7e:	f9 2f       	mov	r31, r25
    2f80:	96 e9       	ldi	r25, 0x96	; 150
    2f82:	bb 27       	eor	r27, r27
    2f84:	93 95       	inc	r25
    2f86:	f6 95       	lsr	r31
    2f88:	87 95       	ror	r24
    2f8a:	77 95       	ror	r23
    2f8c:	67 95       	ror	r22
    2f8e:	b7 95       	ror	r27
    2f90:	f1 11       	cpse	r31, r1
    2f92:	f8 cf       	rjmp	.-16     	; 0x2f84 <__floatsisf+0x1c>
    2f94:	fa f4       	brpl	.+62     	; 0x2fd4 <__floatsisf+0x6c>
    2f96:	bb 0f       	add	r27, r27
    2f98:	11 f4       	brne	.+4      	; 0x2f9e <__floatsisf+0x36>
    2f9a:	60 ff       	sbrs	r22, 0
    2f9c:	1b c0       	rjmp	.+54     	; 0x2fd4 <__floatsisf+0x6c>
    2f9e:	6f 5f       	subi	r22, 0xFF	; 255
    2fa0:	7f 4f       	sbci	r23, 0xFF	; 255
    2fa2:	8f 4f       	sbci	r24, 0xFF	; 255
    2fa4:	9f 4f       	sbci	r25, 0xFF	; 255
    2fa6:	16 c0       	rjmp	.+44     	; 0x2fd4 <__floatsisf+0x6c>
    2fa8:	88 23       	and	r24, r24
    2faa:	11 f0       	breq	.+4      	; 0x2fb0 <__floatsisf+0x48>
    2fac:	96 e9       	ldi	r25, 0x96	; 150
    2fae:	11 c0       	rjmp	.+34     	; 0x2fd2 <__floatsisf+0x6a>
    2fb0:	77 23       	and	r23, r23
    2fb2:	21 f0       	breq	.+8      	; 0x2fbc <__floatsisf+0x54>
    2fb4:	9e e8       	ldi	r25, 0x8E	; 142
    2fb6:	87 2f       	mov	r24, r23
    2fb8:	76 2f       	mov	r23, r22
    2fba:	05 c0       	rjmp	.+10     	; 0x2fc6 <__floatsisf+0x5e>
    2fbc:	66 23       	and	r22, r22
    2fbe:	71 f0       	breq	.+28     	; 0x2fdc <__floatsisf+0x74>
    2fc0:	96 e8       	ldi	r25, 0x86	; 134
    2fc2:	86 2f       	mov	r24, r22
    2fc4:	70 e0       	ldi	r23, 0x00	; 0
    2fc6:	60 e0       	ldi	r22, 0x00	; 0
    2fc8:	2a f0       	brmi	.+10     	; 0x2fd4 <__floatsisf+0x6c>
    2fca:	9a 95       	dec	r25
    2fcc:	66 0f       	add	r22, r22
    2fce:	77 1f       	adc	r23, r23
    2fd0:	88 1f       	adc	r24, r24
    2fd2:	da f7       	brpl	.-10     	; 0x2fca <__floatsisf+0x62>
    2fd4:	88 0f       	add	r24, r24
    2fd6:	96 95       	lsr	r25
    2fd8:	87 95       	ror	r24
    2fda:	97 f9       	bld	r25, 7
    2fdc:	08 95       	ret

00002fde <__fp_cmp>:
    2fde:	99 0f       	add	r25, r25
    2fe0:	00 08       	sbc	r0, r0
    2fe2:	55 0f       	add	r21, r21
    2fe4:	aa 0b       	sbc	r26, r26
    2fe6:	e0 e8       	ldi	r30, 0x80	; 128
    2fe8:	fe ef       	ldi	r31, 0xFE	; 254
    2fea:	16 16       	cp	r1, r22
    2fec:	17 06       	cpc	r1, r23
    2fee:	e8 07       	cpc	r30, r24
    2ff0:	f9 07       	cpc	r31, r25
    2ff2:	c0 f0       	brcs	.+48     	; 0x3024 <__fp_cmp+0x46>
    2ff4:	12 16       	cp	r1, r18
    2ff6:	13 06       	cpc	r1, r19
    2ff8:	e4 07       	cpc	r30, r20
    2ffa:	f5 07       	cpc	r31, r21
    2ffc:	98 f0       	brcs	.+38     	; 0x3024 <__fp_cmp+0x46>
    2ffe:	62 1b       	sub	r22, r18
    3000:	73 0b       	sbc	r23, r19
    3002:	84 0b       	sbc	r24, r20
    3004:	95 0b       	sbc	r25, r21
    3006:	39 f4       	brne	.+14     	; 0x3016 <__fp_cmp+0x38>
    3008:	0a 26       	eor	r0, r26
    300a:	61 f0       	breq	.+24     	; 0x3024 <__fp_cmp+0x46>
    300c:	23 2b       	or	r18, r19
    300e:	24 2b       	or	r18, r20
    3010:	25 2b       	or	r18, r21
    3012:	21 f4       	brne	.+8      	; 0x301c <__fp_cmp+0x3e>
    3014:	08 95       	ret
    3016:	0a 26       	eor	r0, r26
    3018:	09 f4       	brne	.+2      	; 0x301c <__fp_cmp+0x3e>
    301a:	a1 40       	sbci	r26, 0x01	; 1
    301c:	a6 95       	lsr	r26
    301e:	8f ef       	ldi	r24, 0xFF	; 255
    3020:	81 1d       	adc	r24, r1
    3022:	81 1d       	adc	r24, r1
    3024:	08 95       	ret

00003026 <__fp_inf>:
    3026:	97 f9       	bld	r25, 7
    3028:	9f 67       	ori	r25, 0x7F	; 127
    302a:	80 e8       	ldi	r24, 0x80	; 128
    302c:	70 e0       	ldi	r23, 0x00	; 0
    302e:	60 e0       	ldi	r22, 0x00	; 0
    3030:	08 95       	ret

00003032 <__fp_nan>:
    3032:	9f ef       	ldi	r25, 0xFF	; 255
    3034:	80 ec       	ldi	r24, 0xC0	; 192
    3036:	08 95       	ret

00003038 <__fp_pscA>:
    3038:	00 24       	eor	r0, r0
    303a:	0a 94       	dec	r0
    303c:	16 16       	cp	r1, r22
    303e:	17 06       	cpc	r1, r23
    3040:	18 06       	cpc	r1, r24
    3042:	09 06       	cpc	r0, r25
    3044:	08 95       	ret

00003046 <__fp_pscB>:
    3046:	00 24       	eor	r0, r0
    3048:	0a 94       	dec	r0
    304a:	12 16       	cp	r1, r18
    304c:	13 06       	cpc	r1, r19
    304e:	14 06       	cpc	r1, r20
    3050:	05 06       	cpc	r0, r21
    3052:	08 95       	ret

00003054 <__fp_round>:
    3054:	09 2e       	mov	r0, r25
    3056:	03 94       	inc	r0
    3058:	00 0c       	add	r0, r0
    305a:	11 f4       	brne	.+4      	; 0x3060 <__fp_round+0xc>
    305c:	88 23       	and	r24, r24
    305e:	52 f0       	brmi	.+20     	; 0x3074 <__fp_round+0x20>
    3060:	bb 0f       	add	r27, r27
    3062:	40 f4       	brcc	.+16     	; 0x3074 <__fp_round+0x20>
    3064:	bf 2b       	or	r27, r31
    3066:	11 f4       	brne	.+4      	; 0x306c <__fp_round+0x18>
    3068:	60 ff       	sbrs	r22, 0
    306a:	04 c0       	rjmp	.+8      	; 0x3074 <__fp_round+0x20>
    306c:	6f 5f       	subi	r22, 0xFF	; 255
    306e:	7f 4f       	sbci	r23, 0xFF	; 255
    3070:	8f 4f       	sbci	r24, 0xFF	; 255
    3072:	9f 4f       	sbci	r25, 0xFF	; 255
    3074:	08 95       	ret

00003076 <__fp_split3>:
    3076:	57 fd       	sbrc	r21, 7
    3078:	90 58       	subi	r25, 0x80	; 128
    307a:	44 0f       	add	r20, r20
    307c:	55 1f       	adc	r21, r21
    307e:	59 f0       	breq	.+22     	; 0x3096 <__fp_splitA+0x10>
    3080:	5f 3f       	cpi	r21, 0xFF	; 255
    3082:	71 f0       	breq	.+28     	; 0x30a0 <__fp_splitA+0x1a>
    3084:	47 95       	ror	r20

00003086 <__fp_splitA>:
    3086:	88 0f       	add	r24, r24
    3088:	97 fb       	bst	r25, 7
    308a:	99 1f       	adc	r25, r25
    308c:	61 f0       	breq	.+24     	; 0x30a6 <__fp_splitA+0x20>
    308e:	9f 3f       	cpi	r25, 0xFF	; 255
    3090:	79 f0       	breq	.+30     	; 0x30b0 <__fp_splitA+0x2a>
    3092:	87 95       	ror	r24
    3094:	08 95       	ret
    3096:	12 16       	cp	r1, r18
    3098:	13 06       	cpc	r1, r19
    309a:	14 06       	cpc	r1, r20
    309c:	55 1f       	adc	r21, r21
    309e:	f2 cf       	rjmp	.-28     	; 0x3084 <__fp_split3+0xe>
    30a0:	46 95       	lsr	r20
    30a2:	f1 df       	rcall	.-30     	; 0x3086 <__fp_splitA>
    30a4:	08 c0       	rjmp	.+16     	; 0x30b6 <__fp_splitA+0x30>
    30a6:	16 16       	cp	r1, r22
    30a8:	17 06       	cpc	r1, r23
    30aa:	18 06       	cpc	r1, r24
    30ac:	99 1f       	adc	r25, r25
    30ae:	f1 cf       	rjmp	.-30     	; 0x3092 <__fp_splitA+0xc>
    30b0:	86 95       	lsr	r24
    30b2:	71 05       	cpc	r23, r1
    30b4:	61 05       	cpc	r22, r1
    30b6:	08 94       	sec
    30b8:	08 95       	ret

000030ba <__fp_zero>:
    30ba:	e8 94       	clt

000030bc <__fp_szero>:
    30bc:	bb 27       	eor	r27, r27
    30be:	66 27       	eor	r22, r22
    30c0:	77 27       	eor	r23, r23
    30c2:	cb 01       	movw	r24, r22
    30c4:	97 f9       	bld	r25, 7
    30c6:	08 95       	ret

000030c8 <__gesf2>:
    30c8:	8a df       	rcall	.-236    	; 0x2fde <__fp_cmp>
    30ca:	08 f4       	brcc	.+2      	; 0x30ce <__gesf2+0x6>
    30cc:	8f ef       	ldi	r24, 0xFF	; 255
    30ce:	08 95       	ret
    30d0:	0e f0       	brts	.+2      	; 0x30d4 <__gesf2+0xc>
    30d2:	a6 c0       	rjmp	.+332    	; 0x3220 <__fp_mpack>
    30d4:	ae cf       	rjmp	.-164    	; 0x3032 <__fp_nan>
    30d6:	68 94       	set
    30d8:	a6 cf       	rjmp	.-180    	; 0x3026 <__fp_inf>

000030da <log>:
    30da:	d5 df       	rcall	.-86     	; 0x3086 <__fp_splitA>
    30dc:	c8 f3       	brcs	.-14     	; 0x30d0 <__gesf2+0x8>
    30de:	99 23       	and	r25, r25
    30e0:	d1 f3       	breq	.-12     	; 0x30d6 <__gesf2+0xe>
    30e2:	c6 f3       	brts	.-16     	; 0x30d4 <__gesf2+0xc>
    30e4:	df 93       	push	r29
    30e6:	cf 93       	push	r28
    30e8:	1f 93       	push	r17
    30ea:	0f 93       	push	r16
    30ec:	ff 92       	push	r15
    30ee:	c9 2f       	mov	r28, r25
    30f0:	dd 27       	eor	r29, r29
    30f2:	88 23       	and	r24, r24
    30f4:	2a f0       	brmi	.+10     	; 0x3100 <log+0x26>
    30f6:	21 97       	sbiw	r28, 0x01	; 1
    30f8:	66 0f       	add	r22, r22
    30fa:	77 1f       	adc	r23, r23
    30fc:	88 1f       	adc	r24, r24
    30fe:	da f7       	brpl	.-10     	; 0x30f6 <log+0x1c>
    3100:	20 e0       	ldi	r18, 0x00	; 0
    3102:	30 e0       	ldi	r19, 0x00	; 0
    3104:	40 e8       	ldi	r20, 0x80	; 128
    3106:	5f eb       	ldi	r21, 0xBF	; 191
    3108:	9f e3       	ldi	r25, 0x3F	; 63
    310a:	88 39       	cpi	r24, 0x98	; 152
    310c:	20 f0       	brcs	.+8      	; 0x3116 <log+0x3c>
    310e:	80 3e       	cpi	r24, 0xE0	; 224
    3110:	30 f0       	brcs	.+12     	; 0x311e <log+0x44>
    3112:	21 96       	adiw	r28, 0x01	; 1
    3114:	8f 77       	andi	r24, 0x7F	; 127
    3116:	25 de       	rcall	.-950    	; 0x2d62 <__addsf3>
    3118:	ec ea       	ldi	r30, 0xAC	; 172
    311a:	f0 e0       	ldi	r31, 0x00	; 0
    311c:	03 c0       	rjmp	.+6      	; 0x3124 <log+0x4a>
    311e:	21 de       	rcall	.-958    	; 0x2d62 <__addsf3>
    3120:	e9 ed       	ldi	r30, 0xD9	; 217
    3122:	f0 e0       	ldi	r31, 0x00	; 0
    3124:	8b d0       	rcall	.+278    	; 0x323c <__fp_powser>
    3126:	8b 01       	movw	r16, r22
    3128:	be 01       	movw	r22, r28
    312a:	ec 01       	movw	r28, r24
    312c:	fb 2e       	mov	r15, r27
    312e:	6f 57       	subi	r22, 0x7F	; 127
    3130:	71 09       	sbc	r23, r1
    3132:	75 95       	asr	r23
    3134:	77 1f       	adc	r23, r23
    3136:	88 0b       	sbc	r24, r24
    3138:	99 0b       	sbc	r25, r25
    313a:	16 df       	rcall	.-468    	; 0x2f68 <__floatsisf>
    313c:	28 e1       	ldi	r18, 0x18	; 24
    313e:	32 e7       	ldi	r19, 0x72	; 114
    3140:	41 e3       	ldi	r20, 0x31	; 49
    3142:	5f e3       	ldi	r21, 0x3F	; 63
    3144:	16 d0       	rcall	.+44     	; 0x3172 <__mulsf3x>
    3146:	af 2d       	mov	r26, r15
    3148:	98 01       	movw	r18, r16
    314a:	ae 01       	movw	r20, r28
    314c:	ff 90       	pop	r15
    314e:	0f 91       	pop	r16
    3150:	1f 91       	pop	r17
    3152:	cf 91       	pop	r28
    3154:	df 91       	pop	r29
    3156:	16 de       	rcall	.-980    	; 0x2d84 <__addsf3x>
    3158:	7d cf       	rjmp	.-262    	; 0x3054 <__fp_round>

0000315a <__mulsf3>:
    315a:	0b d0       	rcall	.+22     	; 0x3172 <__mulsf3x>
    315c:	7b cf       	rjmp	.-266    	; 0x3054 <__fp_round>
    315e:	6c df       	rcall	.-296    	; 0x3038 <__fp_pscA>
    3160:	28 f0       	brcs	.+10     	; 0x316c <__mulsf3+0x12>
    3162:	71 df       	rcall	.-286    	; 0x3046 <__fp_pscB>
    3164:	18 f0       	brcs	.+6      	; 0x316c <__mulsf3+0x12>
    3166:	95 23       	and	r25, r21
    3168:	09 f0       	breq	.+2      	; 0x316c <__mulsf3+0x12>
    316a:	5d cf       	rjmp	.-326    	; 0x3026 <__fp_inf>
    316c:	62 cf       	rjmp	.-316    	; 0x3032 <__fp_nan>
    316e:	11 24       	eor	r1, r1
    3170:	a5 cf       	rjmp	.-182    	; 0x30bc <__fp_szero>

00003172 <__mulsf3x>:
    3172:	81 df       	rcall	.-254    	; 0x3076 <__fp_split3>
    3174:	a0 f3       	brcs	.-24     	; 0x315e <__mulsf3+0x4>

00003176 <__mulsf3_pse>:
    3176:	95 9f       	mul	r25, r21
    3178:	d1 f3       	breq	.-12     	; 0x316e <__mulsf3+0x14>
    317a:	95 0f       	add	r25, r21
    317c:	50 e0       	ldi	r21, 0x00	; 0
    317e:	55 1f       	adc	r21, r21
    3180:	62 9f       	mul	r22, r18
    3182:	f0 01       	movw	r30, r0
    3184:	72 9f       	mul	r23, r18
    3186:	bb 27       	eor	r27, r27
    3188:	f0 0d       	add	r31, r0
    318a:	b1 1d       	adc	r27, r1
    318c:	63 9f       	mul	r22, r19
    318e:	aa 27       	eor	r26, r26
    3190:	f0 0d       	add	r31, r0
    3192:	b1 1d       	adc	r27, r1
    3194:	aa 1f       	adc	r26, r26
    3196:	64 9f       	mul	r22, r20
    3198:	66 27       	eor	r22, r22
    319a:	b0 0d       	add	r27, r0
    319c:	a1 1d       	adc	r26, r1
    319e:	66 1f       	adc	r22, r22
    31a0:	82 9f       	mul	r24, r18
    31a2:	22 27       	eor	r18, r18
    31a4:	b0 0d       	add	r27, r0
    31a6:	a1 1d       	adc	r26, r1
    31a8:	62 1f       	adc	r22, r18
    31aa:	73 9f       	mul	r23, r19
    31ac:	b0 0d       	add	r27, r0
    31ae:	a1 1d       	adc	r26, r1
    31b0:	62 1f       	adc	r22, r18
    31b2:	83 9f       	mul	r24, r19
    31b4:	a0 0d       	add	r26, r0
    31b6:	61 1d       	adc	r22, r1
    31b8:	22 1f       	adc	r18, r18
    31ba:	74 9f       	mul	r23, r20
    31bc:	33 27       	eor	r19, r19
    31be:	a0 0d       	add	r26, r0
    31c0:	61 1d       	adc	r22, r1
    31c2:	23 1f       	adc	r18, r19
    31c4:	84 9f       	mul	r24, r20
    31c6:	60 0d       	add	r22, r0
    31c8:	21 1d       	adc	r18, r1
    31ca:	82 2f       	mov	r24, r18
    31cc:	76 2f       	mov	r23, r22
    31ce:	6a 2f       	mov	r22, r26
    31d0:	11 24       	eor	r1, r1
    31d2:	9f 57       	subi	r25, 0x7F	; 127
    31d4:	50 40       	sbci	r21, 0x00	; 0
    31d6:	8a f0       	brmi	.+34     	; 0x31fa <__mulsf3_pse+0x84>
    31d8:	e1 f0       	breq	.+56     	; 0x3212 <__mulsf3_pse+0x9c>
    31da:	88 23       	and	r24, r24
    31dc:	4a f0       	brmi	.+18     	; 0x31f0 <__mulsf3_pse+0x7a>
    31de:	ee 0f       	add	r30, r30
    31e0:	ff 1f       	adc	r31, r31
    31e2:	bb 1f       	adc	r27, r27
    31e4:	66 1f       	adc	r22, r22
    31e6:	77 1f       	adc	r23, r23
    31e8:	88 1f       	adc	r24, r24
    31ea:	91 50       	subi	r25, 0x01	; 1
    31ec:	50 40       	sbci	r21, 0x00	; 0
    31ee:	a9 f7       	brne	.-22     	; 0x31da <__mulsf3_pse+0x64>
    31f0:	9e 3f       	cpi	r25, 0xFE	; 254
    31f2:	51 05       	cpc	r21, r1
    31f4:	70 f0       	brcs	.+28     	; 0x3212 <__mulsf3_pse+0x9c>
    31f6:	17 cf       	rjmp	.-466    	; 0x3026 <__fp_inf>
    31f8:	61 cf       	rjmp	.-318    	; 0x30bc <__fp_szero>
    31fa:	5f 3f       	cpi	r21, 0xFF	; 255
    31fc:	ec f3       	brlt	.-6      	; 0x31f8 <__mulsf3_pse+0x82>
    31fe:	98 3e       	cpi	r25, 0xE8	; 232
    3200:	dc f3       	brlt	.-10     	; 0x31f8 <__mulsf3_pse+0x82>
    3202:	86 95       	lsr	r24
    3204:	77 95       	ror	r23
    3206:	67 95       	ror	r22
    3208:	b7 95       	ror	r27
    320a:	f7 95       	ror	r31
    320c:	e7 95       	ror	r30
    320e:	9f 5f       	subi	r25, 0xFF	; 255
    3210:	c1 f7       	brne	.-16     	; 0x3202 <__mulsf3_pse+0x8c>
    3212:	fe 2b       	or	r31, r30
    3214:	88 0f       	add	r24, r24
    3216:	91 1d       	adc	r25, r1
    3218:	96 95       	lsr	r25
    321a:	87 95       	ror	r24
    321c:	97 f9       	bld	r25, 7
    321e:	08 95       	ret

00003220 <__fp_mpack>:
    3220:	9f 3f       	cpi	r25, 0xFF	; 255
    3222:	31 f0       	breq	.+12     	; 0x3230 <__fp_mpack_finite+0xc>

00003224 <__fp_mpack_finite>:
    3224:	91 50       	subi	r25, 0x01	; 1
    3226:	20 f4       	brcc	.+8      	; 0x3230 <__fp_mpack_finite+0xc>
    3228:	87 95       	ror	r24
    322a:	77 95       	ror	r23
    322c:	67 95       	ror	r22
    322e:	b7 95       	ror	r27
    3230:	88 0f       	add	r24, r24
    3232:	91 1d       	adc	r25, r1
    3234:	96 95       	lsr	r25
    3236:	87 95       	ror	r24
    3238:	97 f9       	bld	r25, 7
    323a:	08 95       	ret

0000323c <__fp_powser>:
    323c:	df 93       	push	r29
    323e:	cf 93       	push	r28
    3240:	1f 93       	push	r17
    3242:	0f 93       	push	r16
    3244:	ff 92       	push	r15
    3246:	ef 92       	push	r14
    3248:	df 92       	push	r13
    324a:	7b 01       	movw	r14, r22
    324c:	8c 01       	movw	r16, r24
    324e:	68 94       	set
    3250:	05 c0       	rjmp	.+10     	; 0x325c <__fp_powser+0x20>
    3252:	da 2e       	mov	r13, r26
    3254:	ef 01       	movw	r28, r30
    3256:	8d df       	rcall	.-230    	; 0x3172 <__mulsf3x>
    3258:	fe 01       	movw	r30, r28
    325a:	e8 94       	clt
    325c:	a5 91       	lpm	r26, Z+
    325e:	25 91       	lpm	r18, Z+
    3260:	35 91       	lpm	r19, Z+
    3262:	45 91       	lpm	r20, Z+
    3264:	55 91       	lpm	r21, Z+
    3266:	ae f3       	brts	.-22     	; 0x3252 <__fp_powser+0x16>
    3268:	ef 01       	movw	r28, r30
    326a:	8c dd       	rcall	.-1256   	; 0x2d84 <__addsf3x>
    326c:	fe 01       	movw	r30, r28
    326e:	97 01       	movw	r18, r14
    3270:	a8 01       	movw	r20, r16
    3272:	da 94       	dec	r13
    3274:	79 f7       	brne	.-34     	; 0x3254 <__fp_powser+0x18>
    3276:	df 90       	pop	r13
    3278:	ef 90       	pop	r14
    327a:	ff 90       	pop	r15
    327c:	0f 91       	pop	r16
    327e:	1f 91       	pop	r17
    3280:	cf 91       	pop	r28
    3282:	df 91       	pop	r29
    3284:	08 95       	ret

00003286 <vfprintf>:
    3286:	a0 e1       	ldi	r26, 0x10	; 16
    3288:	b0 e0       	ldi	r27, 0x00	; 0
    328a:	e8 e4       	ldi	r30, 0x48	; 72
    328c:	f9 e1       	ldi	r31, 0x19	; 25
    328e:	37 c7       	rjmp	.+3694   	; 0x40fe <__prologue_saves__>
    3290:	7c 01       	movw	r14, r24
    3292:	1b 01       	movw	r2, r22
    3294:	6a 01       	movw	r12, r20
    3296:	fc 01       	movw	r30, r24
    3298:	17 82       	std	Z+7, r1	; 0x07
    329a:	16 82       	std	Z+6, r1	; 0x06
    329c:	83 81       	ldd	r24, Z+3	; 0x03
    329e:	81 ff       	sbrs	r24, 1
    32a0:	2b c3       	rjmp	.+1622   	; 0x38f8 <vfprintf+0x672>
    32a2:	9e 01       	movw	r18, r28
    32a4:	2f 5f       	subi	r18, 0xFF	; 255
    32a6:	3f 4f       	sbci	r19, 0xFF	; 255
    32a8:	39 01       	movw	r6, r18
    32aa:	f7 01       	movw	r30, r14
    32ac:	93 81       	ldd	r25, Z+3	; 0x03
    32ae:	f1 01       	movw	r30, r2
    32b0:	93 fd       	sbrc	r25, 3
    32b2:	85 91       	lpm	r24, Z+
    32b4:	93 ff       	sbrs	r25, 3
    32b6:	81 91       	ld	r24, Z+
    32b8:	1f 01       	movw	r2, r30
    32ba:	88 23       	and	r24, r24
    32bc:	09 f4       	brne	.+2      	; 0x32c0 <vfprintf+0x3a>
    32be:	18 c3       	rjmp	.+1584   	; 0x38f0 <vfprintf+0x66a>
    32c0:	85 32       	cpi	r24, 0x25	; 37
    32c2:	39 f4       	brne	.+14     	; 0x32d2 <vfprintf+0x4c>
    32c4:	93 fd       	sbrc	r25, 3
    32c6:	85 91       	lpm	r24, Z+
    32c8:	93 ff       	sbrs	r25, 3
    32ca:	81 91       	ld	r24, Z+
    32cc:	1f 01       	movw	r2, r30
    32ce:	85 32       	cpi	r24, 0x25	; 37
    32d0:	39 f4       	brne	.+14     	; 0x32e0 <vfprintf+0x5a>
    32d2:	b7 01       	movw	r22, r14
    32d4:	90 e0       	ldi	r25, 0x00	; 0
    32d6:	0e 94 0b 22 	call	0x4416	; 0x4416 <fputc>
    32da:	56 01       	movw	r10, r12
    32dc:	65 01       	movw	r12, r10
    32de:	e5 cf       	rjmp	.-54     	; 0x32aa <vfprintf+0x24>
    32e0:	10 e0       	ldi	r17, 0x00	; 0
    32e2:	51 2c       	mov	r5, r1
    32e4:	91 2c       	mov	r9, r1
    32e6:	ff e1       	ldi	r31, 0x1F	; 31
    32e8:	f9 15       	cp	r31, r9
    32ea:	d8 f0       	brcs	.+54     	; 0x3322 <vfprintf+0x9c>
    32ec:	8b 32       	cpi	r24, 0x2B	; 43
    32ee:	79 f0       	breq	.+30     	; 0x330e <vfprintf+0x88>
    32f0:	38 f4       	brcc	.+14     	; 0x3300 <vfprintf+0x7a>
    32f2:	80 32       	cpi	r24, 0x20	; 32
    32f4:	79 f0       	breq	.+30     	; 0x3314 <vfprintf+0x8e>
    32f6:	83 32       	cpi	r24, 0x23	; 35
    32f8:	a1 f4       	brne	.+40     	; 0x3322 <vfprintf+0x9c>
    32fa:	f9 2d       	mov	r31, r9
    32fc:	f0 61       	ori	r31, 0x10	; 16
    32fe:	2e c0       	rjmp	.+92     	; 0x335c <vfprintf+0xd6>
    3300:	8d 32       	cpi	r24, 0x2D	; 45
    3302:	61 f0       	breq	.+24     	; 0x331c <vfprintf+0x96>
    3304:	80 33       	cpi	r24, 0x30	; 48
    3306:	69 f4       	brne	.+26     	; 0x3322 <vfprintf+0x9c>
    3308:	29 2d       	mov	r18, r9
    330a:	21 60       	ori	r18, 0x01	; 1
    330c:	2d c0       	rjmp	.+90     	; 0x3368 <vfprintf+0xe2>
    330e:	39 2d       	mov	r19, r9
    3310:	32 60       	ori	r19, 0x02	; 2
    3312:	93 2e       	mov	r9, r19
    3314:	89 2d       	mov	r24, r9
    3316:	84 60       	ori	r24, 0x04	; 4
    3318:	98 2e       	mov	r9, r24
    331a:	2a c0       	rjmp	.+84     	; 0x3370 <vfprintf+0xea>
    331c:	e9 2d       	mov	r30, r9
    331e:	e8 60       	ori	r30, 0x08	; 8
    3320:	15 c0       	rjmp	.+42     	; 0x334c <vfprintf+0xc6>
    3322:	97 fc       	sbrc	r9, 7
    3324:	2d c0       	rjmp	.+90     	; 0x3380 <vfprintf+0xfa>
    3326:	20 ed       	ldi	r18, 0xD0	; 208
    3328:	28 0f       	add	r18, r24
    332a:	2a 30       	cpi	r18, 0x0A	; 10
    332c:	88 f4       	brcc	.+34     	; 0x3350 <vfprintf+0xca>
    332e:	96 fe       	sbrs	r9, 6
    3330:	06 c0       	rjmp	.+12     	; 0x333e <vfprintf+0xb8>
    3332:	3a e0       	ldi	r19, 0x0A	; 10
    3334:	13 9f       	mul	r17, r19
    3336:	20 0d       	add	r18, r0
    3338:	11 24       	eor	r1, r1
    333a:	12 2f       	mov	r17, r18
    333c:	19 c0       	rjmp	.+50     	; 0x3370 <vfprintf+0xea>
    333e:	8a e0       	ldi	r24, 0x0A	; 10
    3340:	58 9e       	mul	r5, r24
    3342:	20 0d       	add	r18, r0
    3344:	11 24       	eor	r1, r1
    3346:	52 2e       	mov	r5, r18
    3348:	e9 2d       	mov	r30, r9
    334a:	e0 62       	ori	r30, 0x20	; 32
    334c:	9e 2e       	mov	r9, r30
    334e:	10 c0       	rjmp	.+32     	; 0x3370 <vfprintf+0xea>
    3350:	8e 32       	cpi	r24, 0x2E	; 46
    3352:	31 f4       	brne	.+12     	; 0x3360 <vfprintf+0xda>
    3354:	96 fc       	sbrc	r9, 6
    3356:	cc c2       	rjmp	.+1432   	; 0x38f0 <vfprintf+0x66a>
    3358:	f9 2d       	mov	r31, r9
    335a:	f0 64       	ori	r31, 0x40	; 64
    335c:	9f 2e       	mov	r9, r31
    335e:	08 c0       	rjmp	.+16     	; 0x3370 <vfprintf+0xea>
    3360:	8c 36       	cpi	r24, 0x6C	; 108
    3362:	21 f4       	brne	.+8      	; 0x336c <vfprintf+0xe6>
    3364:	29 2d       	mov	r18, r9
    3366:	20 68       	ori	r18, 0x80	; 128
    3368:	92 2e       	mov	r9, r18
    336a:	02 c0       	rjmp	.+4      	; 0x3370 <vfprintf+0xea>
    336c:	88 36       	cpi	r24, 0x68	; 104
    336e:	41 f4       	brne	.+16     	; 0x3380 <vfprintf+0xfa>
    3370:	f1 01       	movw	r30, r2
    3372:	93 fd       	sbrc	r25, 3
    3374:	85 91       	lpm	r24, Z+
    3376:	93 ff       	sbrs	r25, 3
    3378:	81 91       	ld	r24, Z+
    337a:	1f 01       	movw	r2, r30
    337c:	81 11       	cpse	r24, r1
    337e:	b3 cf       	rjmp	.-154    	; 0x32e6 <vfprintf+0x60>
    3380:	9b eb       	ldi	r25, 0xBB	; 187
    3382:	98 0f       	add	r25, r24
    3384:	93 30       	cpi	r25, 0x03	; 3
    3386:	20 f4       	brcc	.+8      	; 0x3390 <vfprintf+0x10a>
    3388:	99 2d       	mov	r25, r9
    338a:	90 61       	ori	r25, 0x10	; 16
    338c:	80 5e       	subi	r24, 0xE0	; 224
    338e:	07 c0       	rjmp	.+14     	; 0x339e <vfprintf+0x118>
    3390:	9b e9       	ldi	r25, 0x9B	; 155
    3392:	98 0f       	add	r25, r24
    3394:	93 30       	cpi	r25, 0x03	; 3
    3396:	08 f0       	brcs	.+2      	; 0x339a <vfprintf+0x114>
    3398:	59 c1       	rjmp	.+690    	; 0x364c <vfprintf+0x3c6>
    339a:	99 2d       	mov	r25, r9
    339c:	9f 7e       	andi	r25, 0xEF	; 239
    339e:	96 ff       	sbrs	r25, 6
    33a0:	16 e0       	ldi	r17, 0x06	; 6
    33a2:	9f 73       	andi	r25, 0x3F	; 63
    33a4:	99 2e       	mov	r9, r25
    33a6:	85 36       	cpi	r24, 0x65	; 101
    33a8:	19 f4       	brne	.+6      	; 0x33b0 <vfprintf+0x12a>
    33aa:	90 64       	ori	r25, 0x40	; 64
    33ac:	99 2e       	mov	r9, r25
    33ae:	08 c0       	rjmp	.+16     	; 0x33c0 <vfprintf+0x13a>
    33b0:	86 36       	cpi	r24, 0x66	; 102
    33b2:	21 f4       	brne	.+8      	; 0x33bc <vfprintf+0x136>
    33b4:	39 2f       	mov	r19, r25
    33b6:	30 68       	ori	r19, 0x80	; 128
    33b8:	93 2e       	mov	r9, r19
    33ba:	02 c0       	rjmp	.+4      	; 0x33c0 <vfprintf+0x13a>
    33bc:	11 11       	cpse	r17, r1
    33be:	11 50       	subi	r17, 0x01	; 1
    33c0:	97 fe       	sbrs	r9, 7
    33c2:	07 c0       	rjmp	.+14     	; 0x33d2 <vfprintf+0x14c>
    33c4:	1c 33       	cpi	r17, 0x3C	; 60
    33c6:	50 f4       	brcc	.+20     	; 0x33dc <vfprintf+0x156>
    33c8:	44 24       	eor	r4, r4
    33ca:	43 94       	inc	r4
    33cc:	41 0e       	add	r4, r17
    33ce:	27 e0       	ldi	r18, 0x07	; 7
    33d0:	0b c0       	rjmp	.+22     	; 0x33e8 <vfprintf+0x162>
    33d2:	18 30       	cpi	r17, 0x08	; 8
    33d4:	38 f0       	brcs	.+14     	; 0x33e4 <vfprintf+0x15e>
    33d6:	27 e0       	ldi	r18, 0x07	; 7
    33d8:	17 e0       	ldi	r17, 0x07	; 7
    33da:	05 c0       	rjmp	.+10     	; 0x33e6 <vfprintf+0x160>
    33dc:	27 e0       	ldi	r18, 0x07	; 7
    33de:	9c e3       	ldi	r25, 0x3C	; 60
    33e0:	49 2e       	mov	r4, r25
    33e2:	02 c0       	rjmp	.+4      	; 0x33e8 <vfprintf+0x162>
    33e4:	21 2f       	mov	r18, r17
    33e6:	41 2c       	mov	r4, r1
    33e8:	56 01       	movw	r10, r12
    33ea:	84 e0       	ldi	r24, 0x04	; 4
    33ec:	a8 0e       	add	r10, r24
    33ee:	b1 1c       	adc	r11, r1
    33f0:	f6 01       	movw	r30, r12
    33f2:	60 81       	ld	r22, Z
    33f4:	71 81       	ldd	r23, Z+1	; 0x01
    33f6:	82 81       	ldd	r24, Z+2	; 0x02
    33f8:	93 81       	ldd	r25, Z+3	; 0x03
    33fa:	04 2d       	mov	r16, r4
    33fc:	a3 01       	movw	r20, r6
    33fe:	b6 d6       	rcall	.+3436   	; 0x416c <__ftoa_engine>
    3400:	6c 01       	movw	r12, r24
    3402:	f9 81       	ldd	r31, Y+1	; 0x01
    3404:	fc 87       	std	Y+12, r31	; 0x0c
    3406:	f0 ff       	sbrs	r31, 0
    3408:	02 c0       	rjmp	.+4      	; 0x340e <vfprintf+0x188>
    340a:	f3 ff       	sbrs	r31, 3
    340c:	06 c0       	rjmp	.+12     	; 0x341a <vfprintf+0x194>
    340e:	91 fc       	sbrc	r9, 1
    3410:	06 c0       	rjmp	.+12     	; 0x341e <vfprintf+0x198>
    3412:	92 fe       	sbrs	r9, 2
    3414:	06 c0       	rjmp	.+12     	; 0x3422 <vfprintf+0x19c>
    3416:	00 e2       	ldi	r16, 0x20	; 32
    3418:	05 c0       	rjmp	.+10     	; 0x3424 <vfprintf+0x19e>
    341a:	0d e2       	ldi	r16, 0x2D	; 45
    341c:	03 c0       	rjmp	.+6      	; 0x3424 <vfprintf+0x19e>
    341e:	0b e2       	ldi	r16, 0x2B	; 43
    3420:	01 c0       	rjmp	.+2      	; 0x3424 <vfprintf+0x19e>
    3422:	00 e0       	ldi	r16, 0x00	; 0
    3424:	8c 85       	ldd	r24, Y+12	; 0x0c
    3426:	8c 70       	andi	r24, 0x0C	; 12
    3428:	19 f0       	breq	.+6      	; 0x3430 <vfprintf+0x1aa>
    342a:	01 11       	cpse	r16, r1
    342c:	43 c2       	rjmp	.+1158   	; 0x38b4 <vfprintf+0x62e>
    342e:	80 c2       	rjmp	.+1280   	; 0x3930 <vfprintf+0x6aa>
    3430:	97 fe       	sbrs	r9, 7
    3432:	10 c0       	rjmp	.+32     	; 0x3454 <vfprintf+0x1ce>
    3434:	4c 0c       	add	r4, r12
    3436:	fc 85       	ldd	r31, Y+12	; 0x0c
    3438:	f4 ff       	sbrs	r31, 4
    343a:	04 c0       	rjmp	.+8      	; 0x3444 <vfprintf+0x1be>
    343c:	8a 81       	ldd	r24, Y+2	; 0x02
    343e:	81 33       	cpi	r24, 0x31	; 49
    3440:	09 f4       	brne	.+2      	; 0x3444 <vfprintf+0x1be>
    3442:	4a 94       	dec	r4
    3444:	14 14       	cp	r1, r4
    3446:	74 f5       	brge	.+92     	; 0x34a4 <vfprintf+0x21e>
    3448:	28 e0       	ldi	r18, 0x08	; 8
    344a:	24 15       	cp	r18, r4
    344c:	78 f5       	brcc	.+94     	; 0x34ac <vfprintf+0x226>
    344e:	88 e0       	ldi	r24, 0x08	; 8
    3450:	48 2e       	mov	r4, r24
    3452:	2c c0       	rjmp	.+88     	; 0x34ac <vfprintf+0x226>
    3454:	96 fc       	sbrc	r9, 6
    3456:	2a c0       	rjmp	.+84     	; 0x34ac <vfprintf+0x226>
    3458:	81 2f       	mov	r24, r17
    345a:	90 e0       	ldi	r25, 0x00	; 0
    345c:	8c 15       	cp	r24, r12
    345e:	9d 05       	cpc	r25, r13
    3460:	9c f0       	brlt	.+38     	; 0x3488 <vfprintf+0x202>
    3462:	3c ef       	ldi	r19, 0xFC	; 252
    3464:	c3 16       	cp	r12, r19
    3466:	3f ef       	ldi	r19, 0xFF	; 255
    3468:	d3 06       	cpc	r13, r19
    346a:	74 f0       	brlt	.+28     	; 0x3488 <vfprintf+0x202>
    346c:	89 2d       	mov	r24, r9
    346e:	80 68       	ori	r24, 0x80	; 128
    3470:	98 2e       	mov	r9, r24
    3472:	0a c0       	rjmp	.+20     	; 0x3488 <vfprintf+0x202>
    3474:	e2 e0       	ldi	r30, 0x02	; 2
    3476:	f0 e0       	ldi	r31, 0x00	; 0
    3478:	ec 0f       	add	r30, r28
    347a:	fd 1f       	adc	r31, r29
    347c:	e1 0f       	add	r30, r17
    347e:	f1 1d       	adc	r31, r1
    3480:	80 81       	ld	r24, Z
    3482:	80 33       	cpi	r24, 0x30	; 48
    3484:	19 f4       	brne	.+6      	; 0x348c <vfprintf+0x206>
    3486:	11 50       	subi	r17, 0x01	; 1
    3488:	11 11       	cpse	r17, r1
    348a:	f4 cf       	rjmp	.-24     	; 0x3474 <vfprintf+0x1ee>
    348c:	97 fe       	sbrs	r9, 7
    348e:	0e c0       	rjmp	.+28     	; 0x34ac <vfprintf+0x226>
    3490:	44 24       	eor	r4, r4
    3492:	43 94       	inc	r4
    3494:	41 0e       	add	r4, r17
    3496:	81 2f       	mov	r24, r17
    3498:	90 e0       	ldi	r25, 0x00	; 0
    349a:	c8 16       	cp	r12, r24
    349c:	d9 06       	cpc	r13, r25
    349e:	2c f4       	brge	.+10     	; 0x34aa <vfprintf+0x224>
    34a0:	1c 19       	sub	r17, r12
    34a2:	04 c0       	rjmp	.+8      	; 0x34ac <vfprintf+0x226>
    34a4:	44 24       	eor	r4, r4
    34a6:	43 94       	inc	r4
    34a8:	01 c0       	rjmp	.+2      	; 0x34ac <vfprintf+0x226>
    34aa:	10 e0       	ldi	r17, 0x00	; 0
    34ac:	97 fe       	sbrs	r9, 7
    34ae:	06 c0       	rjmp	.+12     	; 0x34bc <vfprintf+0x236>
    34b0:	1c 14       	cp	r1, r12
    34b2:	1d 04       	cpc	r1, r13
    34b4:	34 f4       	brge	.+12     	; 0x34c2 <vfprintf+0x23c>
    34b6:	c6 01       	movw	r24, r12
    34b8:	01 96       	adiw	r24, 0x01	; 1
    34ba:	05 c0       	rjmp	.+10     	; 0x34c6 <vfprintf+0x240>
    34bc:	85 e0       	ldi	r24, 0x05	; 5
    34be:	90 e0       	ldi	r25, 0x00	; 0
    34c0:	02 c0       	rjmp	.+4      	; 0x34c6 <vfprintf+0x240>
    34c2:	81 e0       	ldi	r24, 0x01	; 1
    34c4:	90 e0       	ldi	r25, 0x00	; 0
    34c6:	01 11       	cpse	r16, r1
    34c8:	01 96       	adiw	r24, 0x01	; 1
    34ca:	11 23       	and	r17, r17
    34cc:	31 f0       	breq	.+12     	; 0x34da <vfprintf+0x254>
    34ce:	21 2f       	mov	r18, r17
    34d0:	30 e0       	ldi	r19, 0x00	; 0
    34d2:	2f 5f       	subi	r18, 0xFF	; 255
    34d4:	3f 4f       	sbci	r19, 0xFF	; 255
    34d6:	82 0f       	add	r24, r18
    34d8:	93 1f       	adc	r25, r19
    34da:	25 2d       	mov	r18, r5
    34dc:	30 e0       	ldi	r19, 0x00	; 0
    34de:	82 17       	cp	r24, r18
    34e0:	93 07       	cpc	r25, r19
    34e2:	14 f4       	brge	.+4      	; 0x34e8 <vfprintf+0x262>
    34e4:	58 1a       	sub	r5, r24
    34e6:	01 c0       	rjmp	.+2      	; 0x34ea <vfprintf+0x264>
    34e8:	51 2c       	mov	r5, r1
    34ea:	89 2d       	mov	r24, r9
    34ec:	89 70       	andi	r24, 0x09	; 9
    34ee:	41 f4       	brne	.+16     	; 0x3500 <vfprintf+0x27a>
    34f0:	55 20       	and	r5, r5
    34f2:	31 f0       	breq	.+12     	; 0x3500 <vfprintf+0x27a>
    34f4:	b7 01       	movw	r22, r14
    34f6:	80 e2       	ldi	r24, 0x20	; 32
    34f8:	90 e0       	ldi	r25, 0x00	; 0
    34fa:	8d d7       	rcall	.+3866   	; 0x4416 <fputc>
    34fc:	5a 94       	dec	r5
    34fe:	f8 cf       	rjmp	.-16     	; 0x34f0 <vfprintf+0x26a>
    3500:	00 23       	and	r16, r16
    3502:	21 f0       	breq	.+8      	; 0x350c <vfprintf+0x286>
    3504:	b7 01       	movw	r22, r14
    3506:	80 2f       	mov	r24, r16
    3508:	90 e0       	ldi	r25, 0x00	; 0
    350a:	85 d7       	rcall	.+3850   	; 0x4416 <fputc>
    350c:	93 fc       	sbrc	r9, 3
    350e:	08 c0       	rjmp	.+16     	; 0x3520 <vfprintf+0x29a>
    3510:	55 20       	and	r5, r5
    3512:	31 f0       	breq	.+12     	; 0x3520 <vfprintf+0x29a>
    3514:	b7 01       	movw	r22, r14
    3516:	80 e3       	ldi	r24, 0x30	; 48
    3518:	90 e0       	ldi	r25, 0x00	; 0
    351a:	7d d7       	rcall	.+3834   	; 0x4416 <fputc>
    351c:	5a 94       	dec	r5
    351e:	f8 cf       	rjmp	.-16     	; 0x3510 <vfprintf+0x28a>
    3520:	97 fe       	sbrs	r9, 7
    3522:	4a c0       	rjmp	.+148    	; 0x35b8 <vfprintf+0x332>
    3524:	46 01       	movw	r8, r12
    3526:	d7 fe       	sbrs	r13, 7
    3528:	02 c0       	rjmp	.+4      	; 0x352e <vfprintf+0x2a8>
    352a:	81 2c       	mov	r8, r1
    352c:	91 2c       	mov	r9, r1
    352e:	c6 01       	movw	r24, r12
    3530:	88 19       	sub	r24, r8
    3532:	99 09       	sbc	r25, r9
    3534:	f3 01       	movw	r30, r6
    3536:	e8 0f       	add	r30, r24
    3538:	f9 1f       	adc	r31, r25
    353a:	fe 87       	std	Y+14, r31	; 0x0e
    353c:	ed 87       	std	Y+13, r30	; 0x0d
    353e:	96 01       	movw	r18, r12
    3540:	24 19       	sub	r18, r4
    3542:	31 09       	sbc	r19, r1
    3544:	38 8b       	std	Y+16, r19	; 0x10
    3546:	2f 87       	std	Y+15, r18	; 0x0f
    3548:	01 2f       	mov	r16, r17
    354a:	10 e0       	ldi	r17, 0x00	; 0
    354c:	11 95       	neg	r17
    354e:	01 95       	neg	r16
    3550:	11 09       	sbc	r17, r1
    3552:	3f ef       	ldi	r19, 0xFF	; 255
    3554:	83 16       	cp	r8, r19
    3556:	93 06       	cpc	r9, r19
    3558:	21 f4       	brne	.+8      	; 0x3562 <vfprintf+0x2dc>
    355a:	b7 01       	movw	r22, r14
    355c:	8e e2       	ldi	r24, 0x2E	; 46
    355e:	90 e0       	ldi	r25, 0x00	; 0
    3560:	5a d7       	rcall	.+3764   	; 0x4416 <fputc>
    3562:	c8 14       	cp	r12, r8
    3564:	d9 04       	cpc	r13, r9
    3566:	4c f0       	brlt	.+18     	; 0x357a <vfprintf+0x2f4>
    3568:	8f 85       	ldd	r24, Y+15	; 0x0f
    356a:	98 89       	ldd	r25, Y+16	; 0x10
    356c:	88 15       	cp	r24, r8
    356e:	99 05       	cpc	r25, r9
    3570:	24 f4       	brge	.+8      	; 0x357a <vfprintf+0x2f4>
    3572:	ed 85       	ldd	r30, Y+13	; 0x0d
    3574:	fe 85       	ldd	r31, Y+14	; 0x0e
    3576:	81 81       	ldd	r24, Z+1	; 0x01
    3578:	01 c0       	rjmp	.+2      	; 0x357c <vfprintf+0x2f6>
    357a:	80 e3       	ldi	r24, 0x30	; 48
    357c:	f1 e0       	ldi	r31, 0x01	; 1
    357e:	8f 1a       	sub	r8, r31
    3580:	91 08       	sbc	r9, r1
    3582:	2d 85       	ldd	r18, Y+13	; 0x0d
    3584:	3e 85       	ldd	r19, Y+14	; 0x0e
    3586:	2f 5f       	subi	r18, 0xFF	; 255
    3588:	3f 4f       	sbci	r19, 0xFF	; 255
    358a:	3e 87       	std	Y+14, r19	; 0x0e
    358c:	2d 87       	std	Y+13, r18	; 0x0d
    358e:	80 16       	cp	r8, r16
    3590:	91 06       	cpc	r9, r17
    3592:	24 f0       	brlt	.+8      	; 0x359c <vfprintf+0x316>
    3594:	b7 01       	movw	r22, r14
    3596:	90 e0       	ldi	r25, 0x00	; 0
    3598:	3e d7       	rcall	.+3708   	; 0x4416 <fputc>
    359a:	db cf       	rjmp	.-74     	; 0x3552 <vfprintf+0x2cc>
    359c:	c8 14       	cp	r12, r8
    359e:	d9 04       	cpc	r13, r9
    35a0:	41 f4       	brne	.+16     	; 0x35b2 <vfprintf+0x32c>
    35a2:	9a 81       	ldd	r25, Y+2	; 0x02
    35a4:	96 33       	cpi	r25, 0x36	; 54
    35a6:	20 f4       	brcc	.+8      	; 0x35b0 <vfprintf+0x32a>
    35a8:	95 33       	cpi	r25, 0x35	; 53
    35aa:	19 f4       	brne	.+6      	; 0x35b2 <vfprintf+0x32c>
    35ac:	3c 85       	ldd	r19, Y+12	; 0x0c
    35ae:	34 ff       	sbrs	r19, 4
    35b0:	81 e3       	ldi	r24, 0x31	; 49
    35b2:	b7 01       	movw	r22, r14
    35b4:	90 e0       	ldi	r25, 0x00	; 0
    35b6:	48 c0       	rjmp	.+144    	; 0x3648 <vfprintf+0x3c2>
    35b8:	8a 81       	ldd	r24, Y+2	; 0x02
    35ba:	81 33       	cpi	r24, 0x31	; 49
    35bc:	19 f0       	breq	.+6      	; 0x35c4 <vfprintf+0x33e>
    35be:	9c 85       	ldd	r25, Y+12	; 0x0c
    35c0:	9f 7e       	andi	r25, 0xEF	; 239
    35c2:	9c 87       	std	Y+12, r25	; 0x0c
    35c4:	b7 01       	movw	r22, r14
    35c6:	90 e0       	ldi	r25, 0x00	; 0
    35c8:	26 d7       	rcall	.+3660   	; 0x4416 <fputc>
    35ca:	11 11       	cpse	r17, r1
    35cc:	05 c0       	rjmp	.+10     	; 0x35d8 <vfprintf+0x352>
    35ce:	94 fc       	sbrc	r9, 4
    35d0:	16 c0       	rjmp	.+44     	; 0x35fe <vfprintf+0x378>
    35d2:	85 e6       	ldi	r24, 0x65	; 101
    35d4:	90 e0       	ldi	r25, 0x00	; 0
    35d6:	15 c0       	rjmp	.+42     	; 0x3602 <vfprintf+0x37c>
    35d8:	b7 01       	movw	r22, r14
    35da:	8e e2       	ldi	r24, 0x2E	; 46
    35dc:	90 e0       	ldi	r25, 0x00	; 0
    35de:	1b d7       	rcall	.+3638   	; 0x4416 <fputc>
    35e0:	1e 5f       	subi	r17, 0xFE	; 254
    35e2:	82 e0       	ldi	r24, 0x02	; 2
    35e4:	01 e0       	ldi	r16, 0x01	; 1
    35e6:	08 0f       	add	r16, r24
    35e8:	f3 01       	movw	r30, r6
    35ea:	e8 0f       	add	r30, r24
    35ec:	f1 1d       	adc	r31, r1
    35ee:	80 81       	ld	r24, Z
    35f0:	b7 01       	movw	r22, r14
    35f2:	90 e0       	ldi	r25, 0x00	; 0
    35f4:	10 d7       	rcall	.+3616   	; 0x4416 <fputc>
    35f6:	80 2f       	mov	r24, r16
    35f8:	01 13       	cpse	r16, r17
    35fa:	f4 cf       	rjmp	.-24     	; 0x35e4 <vfprintf+0x35e>
    35fc:	e8 cf       	rjmp	.-48     	; 0x35ce <vfprintf+0x348>
    35fe:	85 e4       	ldi	r24, 0x45	; 69
    3600:	90 e0       	ldi	r25, 0x00	; 0
    3602:	b7 01       	movw	r22, r14
    3604:	08 d7       	rcall	.+3600   	; 0x4416 <fputc>
    3606:	d7 fc       	sbrc	r13, 7
    3608:	06 c0       	rjmp	.+12     	; 0x3616 <vfprintf+0x390>
    360a:	c1 14       	cp	r12, r1
    360c:	d1 04       	cpc	r13, r1
    360e:	41 f4       	brne	.+16     	; 0x3620 <vfprintf+0x39a>
    3610:	ec 85       	ldd	r30, Y+12	; 0x0c
    3612:	e4 ff       	sbrs	r30, 4
    3614:	05 c0       	rjmp	.+10     	; 0x3620 <vfprintf+0x39a>
    3616:	d1 94       	neg	r13
    3618:	c1 94       	neg	r12
    361a:	d1 08       	sbc	r13, r1
    361c:	8d e2       	ldi	r24, 0x2D	; 45
    361e:	01 c0       	rjmp	.+2      	; 0x3622 <vfprintf+0x39c>
    3620:	8b e2       	ldi	r24, 0x2B	; 43
    3622:	b7 01       	movw	r22, r14
    3624:	90 e0       	ldi	r25, 0x00	; 0
    3626:	f7 d6       	rcall	.+3566   	; 0x4416 <fputc>
    3628:	80 e3       	ldi	r24, 0x30	; 48
    362a:	2a e0       	ldi	r18, 0x0A	; 10
    362c:	c2 16       	cp	r12, r18
    362e:	d1 04       	cpc	r13, r1
    3630:	2c f0       	brlt	.+10     	; 0x363c <vfprintf+0x3b6>
    3632:	8f 5f       	subi	r24, 0xFF	; 255
    3634:	fa e0       	ldi	r31, 0x0A	; 10
    3636:	cf 1a       	sub	r12, r31
    3638:	d1 08       	sbc	r13, r1
    363a:	f7 cf       	rjmp	.-18     	; 0x362a <vfprintf+0x3a4>
    363c:	b7 01       	movw	r22, r14
    363e:	90 e0       	ldi	r25, 0x00	; 0
    3640:	ea d6       	rcall	.+3540   	; 0x4416 <fputc>
    3642:	b7 01       	movw	r22, r14
    3644:	c6 01       	movw	r24, r12
    3646:	c0 96       	adiw	r24, 0x30	; 48
    3648:	e6 d6       	rcall	.+3532   	; 0x4416 <fputc>
    364a:	49 c1       	rjmp	.+658    	; 0x38de <vfprintf+0x658>
    364c:	83 36       	cpi	r24, 0x63	; 99
    364e:	31 f0       	breq	.+12     	; 0x365c <vfprintf+0x3d6>
    3650:	83 37       	cpi	r24, 0x73	; 115
    3652:	79 f0       	breq	.+30     	; 0x3672 <vfprintf+0x3ec>
    3654:	83 35       	cpi	r24, 0x53	; 83
    3656:	09 f0       	breq	.+2      	; 0x365a <vfprintf+0x3d4>
    3658:	52 c0       	rjmp	.+164    	; 0x36fe <vfprintf+0x478>
    365a:	1f c0       	rjmp	.+62     	; 0x369a <vfprintf+0x414>
    365c:	56 01       	movw	r10, r12
    365e:	32 e0       	ldi	r19, 0x02	; 2
    3660:	a3 0e       	add	r10, r19
    3662:	b1 1c       	adc	r11, r1
    3664:	f6 01       	movw	r30, r12
    3666:	80 81       	ld	r24, Z
    3668:	89 83       	std	Y+1, r24	; 0x01
    366a:	01 e0       	ldi	r16, 0x01	; 1
    366c:	10 e0       	ldi	r17, 0x00	; 0
    366e:	63 01       	movw	r12, r6
    3670:	11 c0       	rjmp	.+34     	; 0x3694 <vfprintf+0x40e>
    3672:	56 01       	movw	r10, r12
    3674:	f2 e0       	ldi	r31, 0x02	; 2
    3676:	af 0e       	add	r10, r31
    3678:	b1 1c       	adc	r11, r1
    367a:	f6 01       	movw	r30, r12
    367c:	c0 80       	ld	r12, Z
    367e:	d1 80       	ldd	r13, Z+1	; 0x01
    3680:	96 fe       	sbrs	r9, 6
    3682:	03 c0       	rjmp	.+6      	; 0x368a <vfprintf+0x404>
    3684:	61 2f       	mov	r22, r17
    3686:	70 e0       	ldi	r23, 0x00	; 0
    3688:	02 c0       	rjmp	.+4      	; 0x368e <vfprintf+0x408>
    368a:	6f ef       	ldi	r22, 0xFF	; 255
    368c:	7f ef       	ldi	r23, 0xFF	; 255
    368e:	c6 01       	movw	r24, r12
    3690:	79 d6       	rcall	.+3314   	; 0x4384 <strnlen>
    3692:	8c 01       	movw	r16, r24
    3694:	f9 2d       	mov	r31, r9
    3696:	ff 77       	andi	r31, 0x7F	; 127
    3698:	13 c0       	rjmp	.+38     	; 0x36c0 <vfprintf+0x43a>
    369a:	56 01       	movw	r10, r12
    369c:	22 e0       	ldi	r18, 0x02	; 2
    369e:	a2 0e       	add	r10, r18
    36a0:	b1 1c       	adc	r11, r1
    36a2:	f6 01       	movw	r30, r12
    36a4:	c0 80       	ld	r12, Z
    36a6:	d1 80       	ldd	r13, Z+1	; 0x01
    36a8:	96 fe       	sbrs	r9, 6
    36aa:	03 c0       	rjmp	.+6      	; 0x36b2 <vfprintf+0x42c>
    36ac:	61 2f       	mov	r22, r17
    36ae:	70 e0       	ldi	r23, 0x00	; 0
    36b0:	02 c0       	rjmp	.+4      	; 0x36b6 <vfprintf+0x430>
    36b2:	6f ef       	ldi	r22, 0xFF	; 255
    36b4:	7f ef       	ldi	r23, 0xFF	; 255
    36b6:	c6 01       	movw	r24, r12
    36b8:	4c d6       	rcall	.+3224   	; 0x4352 <strnlen_P>
    36ba:	8c 01       	movw	r16, r24
    36bc:	f9 2d       	mov	r31, r9
    36be:	f0 68       	ori	r31, 0x80	; 128
    36c0:	9f 2e       	mov	r9, r31
    36c2:	f3 fd       	sbrc	r31, 3
    36c4:	18 c0       	rjmp	.+48     	; 0x36f6 <vfprintf+0x470>
    36c6:	85 2d       	mov	r24, r5
    36c8:	90 e0       	ldi	r25, 0x00	; 0
    36ca:	08 17       	cp	r16, r24
    36cc:	19 07       	cpc	r17, r25
    36ce:	98 f4       	brcc	.+38     	; 0x36f6 <vfprintf+0x470>
    36d0:	b7 01       	movw	r22, r14
    36d2:	80 e2       	ldi	r24, 0x20	; 32
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	9f d6       	rcall	.+3390   	; 0x4416 <fputc>
    36d8:	5a 94       	dec	r5
    36da:	f5 cf       	rjmp	.-22     	; 0x36c6 <vfprintf+0x440>
    36dc:	f6 01       	movw	r30, r12
    36de:	97 fc       	sbrc	r9, 7
    36e0:	85 91       	lpm	r24, Z+
    36e2:	97 fe       	sbrs	r9, 7
    36e4:	81 91       	ld	r24, Z+
    36e6:	6f 01       	movw	r12, r30
    36e8:	b7 01       	movw	r22, r14
    36ea:	90 e0       	ldi	r25, 0x00	; 0
    36ec:	94 d6       	rcall	.+3368   	; 0x4416 <fputc>
    36ee:	51 10       	cpse	r5, r1
    36f0:	5a 94       	dec	r5
    36f2:	01 50       	subi	r16, 0x01	; 1
    36f4:	11 09       	sbc	r17, r1
    36f6:	01 15       	cp	r16, r1
    36f8:	11 05       	cpc	r17, r1
    36fa:	81 f7       	brne	.-32     	; 0x36dc <vfprintf+0x456>
    36fc:	f0 c0       	rjmp	.+480    	; 0x38de <vfprintf+0x658>
    36fe:	84 36       	cpi	r24, 0x64	; 100
    3700:	11 f0       	breq	.+4      	; 0x3706 <vfprintf+0x480>
    3702:	89 36       	cpi	r24, 0x69	; 105
    3704:	59 f5       	brne	.+86     	; 0x375c <vfprintf+0x4d6>
    3706:	56 01       	movw	r10, r12
    3708:	97 fe       	sbrs	r9, 7
    370a:	09 c0       	rjmp	.+18     	; 0x371e <vfprintf+0x498>
    370c:	24 e0       	ldi	r18, 0x04	; 4
    370e:	a2 0e       	add	r10, r18
    3710:	b1 1c       	adc	r11, r1
    3712:	f6 01       	movw	r30, r12
    3714:	60 81       	ld	r22, Z
    3716:	71 81       	ldd	r23, Z+1	; 0x01
    3718:	82 81       	ldd	r24, Z+2	; 0x02
    371a:	93 81       	ldd	r25, Z+3	; 0x03
    371c:	0a c0       	rjmp	.+20     	; 0x3732 <vfprintf+0x4ac>
    371e:	f2 e0       	ldi	r31, 0x02	; 2
    3720:	af 0e       	add	r10, r31
    3722:	b1 1c       	adc	r11, r1
    3724:	f6 01       	movw	r30, r12
    3726:	60 81       	ld	r22, Z
    3728:	71 81       	ldd	r23, Z+1	; 0x01
    372a:	07 2e       	mov	r0, r23
    372c:	00 0c       	add	r0, r0
    372e:	88 0b       	sbc	r24, r24
    3730:	99 0b       	sbc	r25, r25
    3732:	f9 2d       	mov	r31, r9
    3734:	ff 76       	andi	r31, 0x6F	; 111
    3736:	9f 2e       	mov	r9, r31
    3738:	97 ff       	sbrs	r25, 7
    373a:	09 c0       	rjmp	.+18     	; 0x374e <vfprintf+0x4c8>
    373c:	90 95       	com	r25
    373e:	80 95       	com	r24
    3740:	70 95       	com	r23
    3742:	61 95       	neg	r22
    3744:	7f 4f       	sbci	r23, 0xFF	; 255
    3746:	8f 4f       	sbci	r24, 0xFF	; 255
    3748:	9f 4f       	sbci	r25, 0xFF	; 255
    374a:	f0 68       	ori	r31, 0x80	; 128
    374c:	9f 2e       	mov	r9, r31
    374e:	2a e0       	ldi	r18, 0x0A	; 10
    3750:	30 e0       	ldi	r19, 0x00	; 0
    3752:	a3 01       	movw	r20, r6
    3754:	d5 d6       	rcall	.+3498   	; 0x4500 <__ultoa_invert>
    3756:	c8 2e       	mov	r12, r24
    3758:	c6 18       	sub	r12, r6
    375a:	3e c0       	rjmp	.+124    	; 0x37d8 <vfprintf+0x552>
    375c:	09 2d       	mov	r16, r9
    375e:	85 37       	cpi	r24, 0x75	; 117
    3760:	21 f4       	brne	.+8      	; 0x376a <vfprintf+0x4e4>
    3762:	0f 7e       	andi	r16, 0xEF	; 239
    3764:	2a e0       	ldi	r18, 0x0A	; 10
    3766:	30 e0       	ldi	r19, 0x00	; 0
    3768:	1d c0       	rjmp	.+58     	; 0x37a4 <vfprintf+0x51e>
    376a:	09 7f       	andi	r16, 0xF9	; 249
    376c:	8f 36       	cpi	r24, 0x6F	; 111
    376e:	91 f0       	breq	.+36     	; 0x3794 <vfprintf+0x50e>
    3770:	18 f4       	brcc	.+6      	; 0x3778 <vfprintf+0x4f2>
    3772:	88 35       	cpi	r24, 0x58	; 88
    3774:	59 f0       	breq	.+22     	; 0x378c <vfprintf+0x506>
    3776:	bc c0       	rjmp	.+376    	; 0x38f0 <vfprintf+0x66a>
    3778:	80 37       	cpi	r24, 0x70	; 112
    377a:	19 f0       	breq	.+6      	; 0x3782 <vfprintf+0x4fc>
    377c:	88 37       	cpi	r24, 0x78	; 120
    377e:	11 f0       	breq	.+4      	; 0x3784 <vfprintf+0x4fe>
    3780:	b7 c0       	rjmp	.+366    	; 0x38f0 <vfprintf+0x66a>
    3782:	00 61       	ori	r16, 0x10	; 16
    3784:	04 ff       	sbrs	r16, 4
    3786:	09 c0       	rjmp	.+18     	; 0x379a <vfprintf+0x514>
    3788:	04 60       	ori	r16, 0x04	; 4
    378a:	07 c0       	rjmp	.+14     	; 0x379a <vfprintf+0x514>
    378c:	94 fe       	sbrs	r9, 4
    378e:	08 c0       	rjmp	.+16     	; 0x37a0 <vfprintf+0x51a>
    3790:	06 60       	ori	r16, 0x06	; 6
    3792:	06 c0       	rjmp	.+12     	; 0x37a0 <vfprintf+0x51a>
    3794:	28 e0       	ldi	r18, 0x08	; 8
    3796:	30 e0       	ldi	r19, 0x00	; 0
    3798:	05 c0       	rjmp	.+10     	; 0x37a4 <vfprintf+0x51e>
    379a:	20 e1       	ldi	r18, 0x10	; 16
    379c:	30 e0       	ldi	r19, 0x00	; 0
    379e:	02 c0       	rjmp	.+4      	; 0x37a4 <vfprintf+0x51e>
    37a0:	20 e1       	ldi	r18, 0x10	; 16
    37a2:	32 e0       	ldi	r19, 0x02	; 2
    37a4:	56 01       	movw	r10, r12
    37a6:	07 ff       	sbrs	r16, 7
    37a8:	09 c0       	rjmp	.+18     	; 0x37bc <vfprintf+0x536>
    37aa:	84 e0       	ldi	r24, 0x04	; 4
    37ac:	a8 0e       	add	r10, r24
    37ae:	b1 1c       	adc	r11, r1
    37b0:	f6 01       	movw	r30, r12
    37b2:	60 81       	ld	r22, Z
    37b4:	71 81       	ldd	r23, Z+1	; 0x01
    37b6:	82 81       	ldd	r24, Z+2	; 0x02
    37b8:	93 81       	ldd	r25, Z+3	; 0x03
    37ba:	08 c0       	rjmp	.+16     	; 0x37cc <vfprintf+0x546>
    37bc:	f2 e0       	ldi	r31, 0x02	; 2
    37be:	af 0e       	add	r10, r31
    37c0:	b1 1c       	adc	r11, r1
    37c2:	f6 01       	movw	r30, r12
    37c4:	60 81       	ld	r22, Z
    37c6:	71 81       	ldd	r23, Z+1	; 0x01
    37c8:	80 e0       	ldi	r24, 0x00	; 0
    37ca:	90 e0       	ldi	r25, 0x00	; 0
    37cc:	a3 01       	movw	r20, r6
    37ce:	98 d6       	rcall	.+3376   	; 0x4500 <__ultoa_invert>
    37d0:	c8 2e       	mov	r12, r24
    37d2:	c6 18       	sub	r12, r6
    37d4:	0f 77       	andi	r16, 0x7F	; 127
    37d6:	90 2e       	mov	r9, r16
    37d8:	96 fe       	sbrs	r9, 6
    37da:	0b c0       	rjmp	.+22     	; 0x37f2 <vfprintf+0x56c>
    37dc:	09 2d       	mov	r16, r9
    37de:	0e 7f       	andi	r16, 0xFE	; 254
    37e0:	c1 16       	cp	r12, r17
    37e2:	50 f4       	brcc	.+20     	; 0x37f8 <vfprintf+0x572>
    37e4:	94 fe       	sbrs	r9, 4
    37e6:	0a c0       	rjmp	.+20     	; 0x37fc <vfprintf+0x576>
    37e8:	92 fc       	sbrc	r9, 2
    37ea:	08 c0       	rjmp	.+16     	; 0x37fc <vfprintf+0x576>
    37ec:	09 2d       	mov	r16, r9
    37ee:	0e 7e       	andi	r16, 0xEE	; 238
    37f0:	05 c0       	rjmp	.+10     	; 0x37fc <vfprintf+0x576>
    37f2:	dc 2c       	mov	r13, r12
    37f4:	09 2d       	mov	r16, r9
    37f6:	03 c0       	rjmp	.+6      	; 0x37fe <vfprintf+0x578>
    37f8:	dc 2c       	mov	r13, r12
    37fa:	01 c0       	rjmp	.+2      	; 0x37fe <vfprintf+0x578>
    37fc:	d1 2e       	mov	r13, r17
    37fe:	04 ff       	sbrs	r16, 4
    3800:	0d c0       	rjmp	.+26     	; 0x381c <vfprintf+0x596>
    3802:	fe 01       	movw	r30, r28
    3804:	ec 0d       	add	r30, r12
    3806:	f1 1d       	adc	r31, r1
    3808:	80 81       	ld	r24, Z
    380a:	80 33       	cpi	r24, 0x30	; 48
    380c:	11 f4       	brne	.+4      	; 0x3812 <vfprintf+0x58c>
    380e:	09 7e       	andi	r16, 0xE9	; 233
    3810:	09 c0       	rjmp	.+18     	; 0x3824 <vfprintf+0x59e>
    3812:	02 ff       	sbrs	r16, 2
    3814:	06 c0       	rjmp	.+12     	; 0x3822 <vfprintf+0x59c>
    3816:	d3 94       	inc	r13
    3818:	d3 94       	inc	r13
    381a:	04 c0       	rjmp	.+8      	; 0x3824 <vfprintf+0x59e>
    381c:	80 2f       	mov	r24, r16
    381e:	86 78       	andi	r24, 0x86	; 134
    3820:	09 f0       	breq	.+2      	; 0x3824 <vfprintf+0x59e>
    3822:	d3 94       	inc	r13
    3824:	03 fd       	sbrc	r16, 3
    3826:	10 c0       	rjmp	.+32     	; 0x3848 <vfprintf+0x5c2>
    3828:	00 ff       	sbrs	r16, 0
    382a:	06 c0       	rjmp	.+12     	; 0x3838 <vfprintf+0x5b2>
    382c:	1c 2d       	mov	r17, r12
    382e:	d5 14       	cp	r13, r5
    3830:	78 f4       	brcc	.+30     	; 0x3850 <vfprintf+0x5ca>
    3832:	15 0d       	add	r17, r5
    3834:	1d 19       	sub	r17, r13
    3836:	0c c0       	rjmp	.+24     	; 0x3850 <vfprintf+0x5ca>
    3838:	d5 14       	cp	r13, r5
    383a:	50 f4       	brcc	.+20     	; 0x3850 <vfprintf+0x5ca>
    383c:	b7 01       	movw	r22, r14
    383e:	80 e2       	ldi	r24, 0x20	; 32
    3840:	90 e0       	ldi	r25, 0x00	; 0
    3842:	e9 d5       	rcall	.+3026   	; 0x4416 <fputc>
    3844:	d3 94       	inc	r13
    3846:	f8 cf       	rjmp	.-16     	; 0x3838 <vfprintf+0x5b2>
    3848:	d5 14       	cp	r13, r5
    384a:	10 f4       	brcc	.+4      	; 0x3850 <vfprintf+0x5ca>
    384c:	5d 18       	sub	r5, r13
    384e:	01 c0       	rjmp	.+2      	; 0x3852 <vfprintf+0x5cc>
    3850:	51 2c       	mov	r5, r1
    3852:	04 ff       	sbrs	r16, 4
    3854:	0f c0       	rjmp	.+30     	; 0x3874 <vfprintf+0x5ee>
    3856:	b7 01       	movw	r22, r14
    3858:	80 e3       	ldi	r24, 0x30	; 48
    385a:	90 e0       	ldi	r25, 0x00	; 0
    385c:	dc d5       	rcall	.+3000   	; 0x4416 <fputc>
    385e:	02 ff       	sbrs	r16, 2
    3860:	16 c0       	rjmp	.+44     	; 0x388e <vfprintf+0x608>
    3862:	01 fd       	sbrc	r16, 1
    3864:	03 c0       	rjmp	.+6      	; 0x386c <vfprintf+0x5e6>
    3866:	88 e7       	ldi	r24, 0x78	; 120
    3868:	90 e0       	ldi	r25, 0x00	; 0
    386a:	02 c0       	rjmp	.+4      	; 0x3870 <vfprintf+0x5ea>
    386c:	88 e5       	ldi	r24, 0x58	; 88
    386e:	90 e0       	ldi	r25, 0x00	; 0
    3870:	b7 01       	movw	r22, r14
    3872:	0c c0       	rjmp	.+24     	; 0x388c <vfprintf+0x606>
    3874:	80 2f       	mov	r24, r16
    3876:	86 78       	andi	r24, 0x86	; 134
    3878:	51 f0       	breq	.+20     	; 0x388e <vfprintf+0x608>
    387a:	01 ff       	sbrs	r16, 1
    387c:	02 c0       	rjmp	.+4      	; 0x3882 <vfprintf+0x5fc>
    387e:	8b e2       	ldi	r24, 0x2B	; 43
    3880:	01 c0       	rjmp	.+2      	; 0x3884 <vfprintf+0x5fe>
    3882:	80 e2       	ldi	r24, 0x20	; 32
    3884:	07 fd       	sbrc	r16, 7
    3886:	8d e2       	ldi	r24, 0x2D	; 45
    3888:	b7 01       	movw	r22, r14
    388a:	90 e0       	ldi	r25, 0x00	; 0
    388c:	c4 d5       	rcall	.+2952   	; 0x4416 <fputc>
    388e:	c1 16       	cp	r12, r17
    3890:	30 f4       	brcc	.+12     	; 0x389e <vfprintf+0x618>
    3892:	b7 01       	movw	r22, r14
    3894:	80 e3       	ldi	r24, 0x30	; 48
    3896:	90 e0       	ldi	r25, 0x00	; 0
    3898:	be d5       	rcall	.+2940   	; 0x4416 <fputc>
    389a:	11 50       	subi	r17, 0x01	; 1
    389c:	f8 cf       	rjmp	.-16     	; 0x388e <vfprintf+0x608>
    389e:	ca 94       	dec	r12
    38a0:	f3 01       	movw	r30, r6
    38a2:	ec 0d       	add	r30, r12
    38a4:	f1 1d       	adc	r31, r1
    38a6:	80 81       	ld	r24, Z
    38a8:	b7 01       	movw	r22, r14
    38aa:	90 e0       	ldi	r25, 0x00	; 0
    38ac:	b4 d5       	rcall	.+2920   	; 0x4416 <fputc>
    38ae:	c1 10       	cpse	r12, r1
    38b0:	f6 cf       	rjmp	.-20     	; 0x389e <vfprintf+0x618>
    38b2:	15 c0       	rjmp	.+42     	; 0x38de <vfprintf+0x658>
    38b4:	f4 e0       	ldi	r31, 0x04	; 4
    38b6:	f5 15       	cp	r31, r5
    38b8:	50 f5       	brcc	.+84     	; 0x390e <vfprintf+0x688>
    38ba:	84 e0       	ldi	r24, 0x04	; 4
    38bc:	58 1a       	sub	r5, r24
    38be:	93 fe       	sbrs	r9, 3
    38c0:	1e c0       	rjmp	.+60     	; 0x38fe <vfprintf+0x678>
    38c2:	01 11       	cpse	r16, r1
    38c4:	25 c0       	rjmp	.+74     	; 0x3910 <vfprintf+0x68a>
    38c6:	2c 85       	ldd	r18, Y+12	; 0x0c
    38c8:	23 ff       	sbrs	r18, 3
    38ca:	27 c0       	rjmp	.+78     	; 0x391a <vfprintf+0x694>
    38cc:	06 e0       	ldi	r16, 0x06	; 6
    38ce:	11 e0       	ldi	r17, 0x01	; 1
    38d0:	39 2d       	mov	r19, r9
    38d2:	30 71       	andi	r19, 0x10	; 16
    38d4:	93 2e       	mov	r9, r19
    38d6:	f8 01       	movw	r30, r16
    38d8:	84 91       	lpm	r24, Z
    38da:	81 11       	cpse	r24, r1
    38dc:	21 c0       	rjmp	.+66     	; 0x3920 <vfprintf+0x69a>
    38de:	55 20       	and	r5, r5
    38e0:	09 f4       	brne	.+2      	; 0x38e4 <vfprintf+0x65e>
    38e2:	fc cc       	rjmp	.-1544   	; 0x32dc <vfprintf+0x56>
    38e4:	b7 01       	movw	r22, r14
    38e6:	80 e2       	ldi	r24, 0x20	; 32
    38e8:	90 e0       	ldi	r25, 0x00	; 0
    38ea:	95 d5       	rcall	.+2858   	; 0x4416 <fputc>
    38ec:	5a 94       	dec	r5
    38ee:	f7 cf       	rjmp	.-18     	; 0x38de <vfprintf+0x658>
    38f0:	f7 01       	movw	r30, r14
    38f2:	86 81       	ldd	r24, Z+6	; 0x06
    38f4:	97 81       	ldd	r25, Z+7	; 0x07
    38f6:	23 c0       	rjmp	.+70     	; 0x393e <vfprintf+0x6b8>
    38f8:	8f ef       	ldi	r24, 0xFF	; 255
    38fa:	9f ef       	ldi	r25, 0xFF	; 255
    38fc:	20 c0       	rjmp	.+64     	; 0x393e <vfprintf+0x6b8>
    38fe:	b7 01       	movw	r22, r14
    3900:	80 e2       	ldi	r24, 0x20	; 32
    3902:	90 e0       	ldi	r25, 0x00	; 0
    3904:	88 d5       	rcall	.+2832   	; 0x4416 <fputc>
    3906:	5a 94       	dec	r5
    3908:	51 10       	cpse	r5, r1
    390a:	f9 cf       	rjmp	.-14     	; 0x38fe <vfprintf+0x678>
    390c:	da cf       	rjmp	.-76     	; 0x38c2 <vfprintf+0x63c>
    390e:	51 2c       	mov	r5, r1
    3910:	b7 01       	movw	r22, r14
    3912:	80 2f       	mov	r24, r16
    3914:	90 e0       	ldi	r25, 0x00	; 0
    3916:	7f d5       	rcall	.+2814   	; 0x4416 <fputc>
    3918:	d6 cf       	rjmp	.-84     	; 0x38c6 <vfprintf+0x640>
    391a:	0a e0       	ldi	r16, 0x0A	; 10
    391c:	11 e0       	ldi	r17, 0x01	; 1
    391e:	d8 cf       	rjmp	.-80     	; 0x38d0 <vfprintf+0x64a>
    3920:	91 10       	cpse	r9, r1
    3922:	80 52       	subi	r24, 0x20	; 32
    3924:	b7 01       	movw	r22, r14
    3926:	90 e0       	ldi	r25, 0x00	; 0
    3928:	76 d5       	rcall	.+2796   	; 0x4416 <fputc>
    392a:	0f 5f       	subi	r16, 0xFF	; 255
    392c:	1f 4f       	sbci	r17, 0xFF	; 255
    392e:	d3 cf       	rjmp	.-90     	; 0x38d6 <vfprintf+0x650>
    3930:	23 e0       	ldi	r18, 0x03	; 3
    3932:	25 15       	cp	r18, r5
    3934:	10 f4       	brcc	.+4      	; 0x393a <vfprintf+0x6b4>
    3936:	83 e0       	ldi	r24, 0x03	; 3
    3938:	c1 cf       	rjmp	.-126    	; 0x38bc <vfprintf+0x636>
    393a:	51 2c       	mov	r5, r1
    393c:	c4 cf       	rjmp	.-120    	; 0x38c6 <vfprintf+0x640>
    393e:	60 96       	adiw	r28, 0x10	; 16
    3940:	e2 e1       	ldi	r30, 0x12	; 18
    3942:	f9 c3       	rjmp	.+2034   	; 0x4136 <__epilogue_restores__>

00003944 <putval>:
    3944:	20 fd       	sbrc	r18, 0
    3946:	09 c0       	rjmp	.+18     	; 0x395a <putval+0x16>
    3948:	fc 01       	movw	r30, r24
    394a:	23 fd       	sbrc	r18, 3
    394c:	05 c0       	rjmp	.+10     	; 0x3958 <putval+0x14>
    394e:	22 ff       	sbrs	r18, 2
    3950:	02 c0       	rjmp	.+4      	; 0x3956 <putval+0x12>
    3952:	73 83       	std	Z+3, r23	; 0x03
    3954:	62 83       	std	Z+2, r22	; 0x02
    3956:	51 83       	std	Z+1, r21	; 0x01
    3958:	40 83       	st	Z, r20
    395a:	08 95       	ret

0000395c <mulacc>:
    395c:	44 fd       	sbrc	r20, 4
    395e:	17 c0       	rjmp	.+46     	; 0x398e <mulacc+0x32>
    3960:	46 fd       	sbrc	r20, 6
    3962:	17 c0       	rjmp	.+46     	; 0x3992 <mulacc+0x36>
    3964:	ab 01       	movw	r20, r22
    3966:	bc 01       	movw	r22, r24
    3968:	da 01       	movw	r26, r20
    396a:	fb 01       	movw	r30, r22
    396c:	aa 0f       	add	r26, r26
    396e:	bb 1f       	adc	r27, r27
    3970:	ee 1f       	adc	r30, r30
    3972:	ff 1f       	adc	r31, r31
    3974:	10 94       	com	r1
    3976:	d1 f7       	brne	.-12     	; 0x396c <mulacc+0x10>
    3978:	4a 0f       	add	r20, r26
    397a:	5b 1f       	adc	r21, r27
    397c:	6e 1f       	adc	r22, r30
    397e:	7f 1f       	adc	r23, r31
    3980:	cb 01       	movw	r24, r22
    3982:	ba 01       	movw	r22, r20
    3984:	66 0f       	add	r22, r22
    3986:	77 1f       	adc	r23, r23
    3988:	88 1f       	adc	r24, r24
    398a:	99 1f       	adc	r25, r25
    398c:	09 c0       	rjmp	.+18     	; 0x39a0 <mulacc+0x44>
    398e:	33 e0       	ldi	r19, 0x03	; 3
    3990:	01 c0       	rjmp	.+2      	; 0x3994 <mulacc+0x38>
    3992:	34 e0       	ldi	r19, 0x04	; 4
    3994:	66 0f       	add	r22, r22
    3996:	77 1f       	adc	r23, r23
    3998:	88 1f       	adc	r24, r24
    399a:	99 1f       	adc	r25, r25
    399c:	31 50       	subi	r19, 0x01	; 1
    399e:	d1 f7       	brne	.-12     	; 0x3994 <mulacc+0x38>
    39a0:	62 0f       	add	r22, r18
    39a2:	71 1d       	adc	r23, r1
    39a4:	81 1d       	adc	r24, r1
    39a6:	91 1d       	adc	r25, r1
    39a8:	08 95       	ret

000039aa <skip_spaces>:
    39aa:	0f 93       	push	r16
    39ac:	1f 93       	push	r17
    39ae:	cf 93       	push	r28
    39b0:	df 93       	push	r29
    39b2:	8c 01       	movw	r16, r24
    39b4:	c8 01       	movw	r24, r16
    39b6:	f1 d4       	rcall	.+2530   	; 0x439a <fgetc>
    39b8:	ec 01       	movw	r28, r24
    39ba:	97 fd       	sbrc	r25, 7
    39bc:	06 c0       	rjmp	.+12     	; 0x39ca <skip_spaces+0x20>
    39be:	ae d4       	rcall	.+2396   	; 0x431c <isspace>
    39c0:	89 2b       	or	r24, r25
    39c2:	c1 f7       	brne	.-16     	; 0x39b4 <skip_spaces+0xa>
    39c4:	b8 01       	movw	r22, r16
    39c6:	ce 01       	movw	r24, r28
    39c8:	82 d5       	rcall	.+2820   	; 0x44ce <ungetc>
    39ca:	ce 01       	movw	r24, r28
    39cc:	df 91       	pop	r29
    39ce:	cf 91       	pop	r28
    39d0:	1f 91       	pop	r17
    39d2:	0f 91       	pop	r16
    39d4:	08 95       	ret

000039d6 <conv_int>:
    39d6:	a0 e0       	ldi	r26, 0x00	; 0
    39d8:	b0 e0       	ldi	r27, 0x00	; 0
    39da:	e0 ef       	ldi	r30, 0xF0	; 240
    39dc:	fc e1       	ldi	r31, 0x1C	; 28
    39de:	95 c3       	rjmp	.+1834   	; 0x410a <__prologue_saves__+0xc>
    39e0:	7c 01       	movw	r14, r24
    39e2:	8b 01       	movw	r16, r22
    39e4:	6a 01       	movw	r12, r20
    39e6:	d2 2f       	mov	r29, r18
    39e8:	d8 d4       	rcall	.+2480   	; 0x439a <fgetc>
    39ea:	9c 01       	movw	r18, r24
    39ec:	33 27       	eor	r19, r19
    39ee:	2b 32       	cpi	r18, 0x2B	; 43
    39f0:	31 05       	cpc	r19, r1
    39f2:	21 f0       	breq	.+8      	; 0x39fc <conv_int+0x26>
    39f4:	2d 32       	cpi	r18, 0x2D	; 45
    39f6:	31 05       	cpc	r19, r1
    39f8:	51 f4       	brne	.+20     	; 0x3a0e <conv_int+0x38>
    39fa:	d0 68       	ori	r29, 0x80	; 128
    39fc:	01 50       	subi	r16, 0x01	; 1
    39fe:	11 09       	sbc	r17, r1
    3a00:	11 f4       	brne	.+4      	; 0x3a06 <conv_int+0x30>
    3a02:	80 e0       	ldi	r24, 0x00	; 0
    3a04:	64 c0       	rjmp	.+200    	; 0x3ace <conv_int+0xf8>
    3a06:	c7 01       	movw	r24, r14
    3a08:	c8 d4       	rcall	.+2448   	; 0x439a <fgetc>
    3a0a:	97 fd       	sbrc	r25, 7
    3a0c:	fa cf       	rjmp	.-12     	; 0x3a02 <conv_int+0x2c>
    3a0e:	cd 2f       	mov	r28, r29
    3a10:	cd 7f       	andi	r28, 0xFD	; 253
    3a12:	2d 2f       	mov	r18, r29
    3a14:	20 73       	andi	r18, 0x30	; 48
    3a16:	09 f5       	brne	.+66     	; 0x3a5a <conv_int+0x84>
    3a18:	80 33       	cpi	r24, 0x30	; 48
    3a1a:	f9 f4       	brne	.+62     	; 0x3a5a <conv_int+0x84>
    3a1c:	58 01       	movw	r10, r16
    3a1e:	81 e0       	ldi	r24, 0x01	; 1
    3a20:	a8 1a       	sub	r10, r24
    3a22:	b1 08       	sbc	r11, r1
    3a24:	09 f4       	brne	.+2      	; 0x3a28 <conv_int+0x52>
    3a26:	40 c0       	rjmp	.+128    	; 0x3aa8 <conv_int+0xd2>
    3a28:	c7 01       	movw	r24, r14
    3a2a:	b7 d4       	rcall	.+2414   	; 0x439a <fgetc>
    3a2c:	97 fd       	sbrc	r25, 7
    3a2e:	3c c0       	rjmp	.+120    	; 0x3aa8 <conv_int+0xd2>
    3a30:	9c 01       	movw	r18, r24
    3a32:	2f 7d       	andi	r18, 0xDF	; 223
    3a34:	33 27       	eor	r19, r19
    3a36:	28 35       	cpi	r18, 0x58	; 88
    3a38:	31 05       	cpc	r19, r1
    3a3a:	49 f4       	brne	.+18     	; 0x3a4e <conv_int+0x78>
    3a3c:	c2 64       	ori	r28, 0x42	; 66
    3a3e:	02 50       	subi	r16, 0x02	; 2
    3a40:	11 09       	sbc	r17, r1
    3a42:	91 f1       	breq	.+100    	; 0x3aa8 <conv_int+0xd2>
    3a44:	c7 01       	movw	r24, r14
    3a46:	a9 d4       	rcall	.+2386   	; 0x439a <fgetc>
    3a48:	97 ff       	sbrs	r25, 7
    3a4a:	07 c0       	rjmp	.+14     	; 0x3a5a <conv_int+0x84>
    3a4c:	2d c0       	rjmp	.+90     	; 0x3aa8 <conv_int+0xd2>
    3a4e:	d6 ff       	sbrs	r29, 6
    3a50:	02 c0       	rjmp	.+4      	; 0x3a56 <conv_int+0x80>
    3a52:	c2 60       	ori	r28, 0x02	; 2
    3a54:	01 c0       	rjmp	.+2      	; 0x3a58 <conv_int+0x82>
    3a56:	c2 61       	ori	r28, 0x12	; 18
    3a58:	85 01       	movw	r16, r10
    3a5a:	81 2c       	mov	r8, r1
    3a5c:	91 2c       	mov	r9, r1
    3a5e:	54 01       	movw	r10, r8
    3a60:	20 ed       	ldi	r18, 0xD0	; 208
    3a62:	28 0f       	add	r18, r24
    3a64:	28 30       	cpi	r18, 0x08	; 8
    3a66:	78 f0       	brcs	.+30     	; 0x3a86 <conv_int+0xb0>
    3a68:	c4 ff       	sbrs	r28, 4
    3a6a:	03 c0       	rjmp	.+6      	; 0x3a72 <conv_int+0x9c>
    3a6c:	b7 01       	movw	r22, r14
    3a6e:	2f d5       	rcall	.+2654   	; 0x44ce <ungetc>
    3a70:	18 c0       	rjmp	.+48     	; 0x3aa2 <conv_int+0xcc>
    3a72:	2a 30       	cpi	r18, 0x0A	; 10
    3a74:	40 f0       	brcs	.+16     	; 0x3a86 <conv_int+0xb0>
    3a76:	c6 ff       	sbrs	r28, 6
    3a78:	f9 cf       	rjmp	.-14     	; 0x3a6c <conv_int+0x96>
    3a7a:	2f 7d       	andi	r18, 0xDF	; 223
    3a7c:	3f ee       	ldi	r19, 0xEF	; 239
    3a7e:	32 0f       	add	r19, r18
    3a80:	36 30       	cpi	r19, 0x06	; 6
    3a82:	a0 f7       	brcc	.-24     	; 0x3a6c <conv_int+0x96>
    3a84:	27 50       	subi	r18, 0x07	; 7
    3a86:	4c 2f       	mov	r20, r28
    3a88:	c5 01       	movw	r24, r10
    3a8a:	b4 01       	movw	r22, r8
    3a8c:	67 df       	rcall	.-306    	; 0x395c <mulacc>
    3a8e:	4b 01       	movw	r8, r22
    3a90:	5c 01       	movw	r10, r24
    3a92:	c2 60       	ori	r28, 0x02	; 2
    3a94:	01 50       	subi	r16, 0x01	; 1
    3a96:	11 09       	sbc	r17, r1
    3a98:	51 f0       	breq	.+20     	; 0x3aae <conv_int+0xd8>
    3a9a:	c7 01       	movw	r24, r14
    3a9c:	7e d4       	rcall	.+2300   	; 0x439a <fgetc>
    3a9e:	97 ff       	sbrs	r25, 7
    3aa0:	df cf       	rjmp	.-66     	; 0x3a60 <conv_int+0x8a>
    3aa2:	c1 fd       	sbrc	r28, 1
    3aa4:	04 c0       	rjmp	.+8      	; 0x3aae <conv_int+0xd8>
    3aa6:	ad cf       	rjmp	.-166    	; 0x3a02 <conv_int+0x2c>
    3aa8:	81 2c       	mov	r8, r1
    3aaa:	91 2c       	mov	r9, r1
    3aac:	54 01       	movw	r10, r8
    3aae:	c7 ff       	sbrs	r28, 7
    3ab0:	08 c0       	rjmp	.+16     	; 0x3ac2 <conv_int+0xec>
    3ab2:	b0 94       	com	r11
    3ab4:	a0 94       	com	r10
    3ab6:	90 94       	com	r9
    3ab8:	80 94       	com	r8
    3aba:	81 1c       	adc	r8, r1
    3abc:	91 1c       	adc	r9, r1
    3abe:	a1 1c       	adc	r10, r1
    3ac0:	b1 1c       	adc	r11, r1
    3ac2:	2c 2f       	mov	r18, r28
    3ac4:	b5 01       	movw	r22, r10
    3ac6:	a4 01       	movw	r20, r8
    3ac8:	c6 01       	movw	r24, r12
    3aca:	3c df       	rcall	.-392    	; 0x3944 <putval>
    3acc:	81 e0       	ldi	r24, 0x01	; 1
    3ace:	cd b7       	in	r28, 0x3d	; 61
    3ad0:	de b7       	in	r29, 0x3e	; 62
    3ad2:	ec e0       	ldi	r30, 0x0C	; 12
    3ad4:	36 c3       	rjmp	.+1644   	; 0x4142 <__epilogue_restores__+0xc>

00003ad6 <conv_brk>:
    3ad6:	a0 e2       	ldi	r26, 0x20	; 32
    3ad8:	b0 e0       	ldi	r27, 0x00	; 0
    3ada:	e0 e7       	ldi	r30, 0x70	; 112
    3adc:	fd e1       	ldi	r31, 0x1D	; 29
    3ade:	11 c3       	rjmp	.+1570   	; 0x4102 <__prologue_saves__+0x4>
    3ae0:	5c 01       	movw	r10, r24
    3ae2:	4b 01       	movw	r8, r22
    3ae4:	7a 01       	movw	r14, r20
    3ae6:	8e 01       	movw	r16, r28
    3ae8:	0f 5f       	subi	r16, 0xFF	; 255
    3aea:	1f 4f       	sbci	r17, 0xFF	; 255
    3aec:	68 01       	movw	r12, r16
    3aee:	80 e2       	ldi	r24, 0x20	; 32
    3af0:	f8 01       	movw	r30, r16
    3af2:	11 92       	st	Z+, r1
    3af4:	8a 95       	dec	r24
    3af6:	e9 f7       	brne	.-6      	; 0x3af2 <conv_brk+0x1c>
    3af8:	f5 01       	movw	r30, r10
    3afa:	53 80       	ldd	r5, Z+3	; 0x03
    3afc:	40 e0       	ldi	r20, 0x00	; 0
    3afe:	50 e0       	ldi	r21, 0x00	; 0
    3b00:	61 2c       	mov	r6, r1
    3b02:	90 e0       	ldi	r25, 0x00	; 0
    3b04:	71 2c       	mov	r7, r1
    3b06:	a1 e0       	ldi	r26, 0x01	; 1
    3b08:	b0 e0       	ldi	r27, 0x00	; 0
    3b0a:	f9 01       	movw	r30, r18
    3b0c:	53 fc       	sbrc	r5, 3
    3b0e:	85 91       	lpm	r24, Z+
    3b10:	53 fe       	sbrs	r5, 3
    3b12:	81 91       	ld	r24, Z+
    3b14:	8f 01       	movw	r16, r30
    3b16:	48 2e       	mov	r4, r24
    3b18:	9f 01       	movw	r18, r30
    3b1a:	81 11       	cpse	r24, r1
    3b1c:	03 c0       	rjmp	.+6      	; 0x3b24 <conv_brk+0x4e>
    3b1e:	80 e0       	ldi	r24, 0x00	; 0
    3b20:	90 e0       	ldi	r25, 0x00	; 0
    3b22:	94 c0       	rjmp	.+296    	; 0x3c4c <conv_brk+0x176>
    3b24:	8e 35       	cpi	r24, 0x5E	; 94
    3b26:	19 f4       	brne	.+6      	; 0x3b2e <conv_brk+0x58>
    3b28:	41 15       	cp	r20, r1
    3b2a:	51 05       	cpc	r21, r1
    3b2c:	51 f1       	breq	.+84     	; 0x3b82 <conv_brk+0xac>
    3b2e:	67 2d       	mov	r22, r7
    3b30:	70 e0       	ldi	r23, 0x00	; 0
    3b32:	64 17       	cp	r22, r20
    3b34:	75 07       	cpc	r23, r21
    3b36:	3c f4       	brge	.+14     	; 0x3b46 <conv_brk+0x70>
    3b38:	8d 35       	cpi	r24, 0x5D	; 93
    3b3a:	61 f1       	breq	.+88     	; 0x3b94 <conv_brk+0xbe>
    3b3c:	8d 32       	cpi	r24, 0x2D	; 45
    3b3e:	19 f4       	brne	.+6      	; 0x3b46 <conv_brk+0x70>
    3b40:	99 23       	and	r25, r25
    3b42:	11 f1       	breq	.+68     	; 0x3b88 <conv_brk+0xb2>
    3b44:	03 c0       	rjmp	.+6      	; 0x3b4c <conv_brk+0x76>
    3b46:	99 23       	and	r25, r25
    3b48:	09 f4       	brne	.+2      	; 0x3b4c <conv_brk+0x76>
    3b4a:	6b c0       	rjmp	.+214    	; 0x3c22 <conv_brk+0x14c>
    3b4c:	84 2d       	mov	r24, r4
    3b4e:	86 95       	lsr	r24
    3b50:	86 95       	lsr	r24
    3b52:	86 95       	lsr	r24
    3b54:	f6 01       	movw	r30, r12
    3b56:	e8 0f       	add	r30, r24
    3b58:	f1 1d       	adc	r31, r1
    3b5a:	84 2d       	mov	r24, r4
    3b5c:	87 70       	andi	r24, 0x07	; 7
    3b5e:	8d 01       	movw	r16, r26
    3b60:	02 c0       	rjmp	.+4      	; 0x3b66 <conv_brk+0x90>
    3b62:	00 0f       	add	r16, r16
    3b64:	11 1f       	adc	r17, r17
    3b66:	8a 95       	dec	r24
    3b68:	e2 f7       	brpl	.-8      	; 0x3b62 <conv_brk+0x8c>
    3b6a:	c8 01       	movw	r24, r16
    3b6c:	90 81       	ld	r25, Z
    3b6e:	89 2b       	or	r24, r25
    3b70:	80 83       	st	Z, r24
    3b72:	64 14       	cp	r6, r4
    3b74:	59 f0       	breq	.+22     	; 0x3b8c <conv_brk+0xb6>
    3b76:	46 14       	cp	r4, r6
    3b78:	10 f4       	brcc	.+4      	; 0x3b7e <conv_brk+0xa8>
    3b7a:	43 94       	inc	r4
    3b7c:	e7 cf       	rjmp	.-50     	; 0x3b4c <conv_brk+0x76>
    3b7e:	4a 94       	dec	r4
    3b80:	e5 cf       	rjmp	.-54     	; 0x3b4c <conv_brk+0x76>
    3b82:	77 24       	eor	r7, r7
    3b84:	73 94       	inc	r7
    3b86:	03 c0       	rjmp	.+6      	; 0x3b8e <conv_brk+0xb8>
    3b88:	91 e0       	ldi	r25, 0x01	; 1
    3b8a:	01 c0       	rjmp	.+2      	; 0x3b8e <conv_brk+0xb8>
    3b8c:	90 e0       	ldi	r25, 0x00	; 0
    3b8e:	4f 5f       	subi	r20, 0xFF	; 255
    3b90:	5f 4f       	sbci	r21, 0xFF	; 255
    3b92:	bb cf       	rjmp	.-138    	; 0x3b0a <conv_brk+0x34>
    3b94:	99 23       	and	r25, r25
    3b96:	19 f0       	breq	.+6      	; 0x3b9e <conv_brk+0xc8>
    3b98:	8e 81       	ldd	r24, Y+6	; 0x06
    3b9a:	80 62       	ori	r24, 0x20	; 32
    3b9c:	8e 83       	std	Y+6, r24	; 0x06
    3b9e:	71 10       	cpse	r7, r1
    3ba0:	03 c0       	rjmp	.+6      	; 0x3ba8 <conv_brk+0xd2>
    3ba2:	77 24       	eor	r7, r7
    3ba4:	73 94       	inc	r7
    3ba6:	19 c0       	rjmp	.+50     	; 0x3bda <conv_brk+0x104>
    3ba8:	f6 01       	movw	r30, r12
    3baa:	9e 01       	movw	r18, r28
    3bac:	2f 5d       	subi	r18, 0xDF	; 223
    3bae:	3f 4f       	sbci	r19, 0xFF	; 255
    3bb0:	80 81       	ld	r24, Z
    3bb2:	80 95       	com	r24
    3bb4:	81 93       	st	Z+, r24
    3bb6:	2e 17       	cp	r18, r30
    3bb8:	3f 07       	cpc	r19, r31
    3bba:	d1 f7       	brne	.-12     	; 0x3bb0 <conv_brk+0xda>
    3bbc:	f2 cf       	rjmp	.-28     	; 0x3ba2 <conv_brk+0xcc>
    3bbe:	e1 14       	cp	r14, r1
    3bc0:	f1 04       	cpc	r15, r1
    3bc2:	31 f0       	breq	.+12     	; 0x3bd0 <conv_brk+0xfa>
    3bc4:	f7 01       	movw	r30, r14
    3bc6:	80 83       	st	Z, r24
    3bc8:	b7 01       	movw	r22, r14
    3bca:	6f 5f       	subi	r22, 0xFF	; 255
    3bcc:	7f 4f       	sbci	r23, 0xFF	; 255
    3bce:	7b 01       	movw	r14, r22
    3bd0:	71 e0       	ldi	r23, 0x01	; 1
    3bd2:	87 1a       	sub	r8, r23
    3bd4:	91 08       	sbc	r9, r1
    3bd6:	71 2c       	mov	r7, r1
    3bd8:	e9 f0       	breq	.+58     	; 0x3c14 <conv_brk+0x13e>
    3bda:	c5 01       	movw	r24, r10
    3bdc:	de d3       	rcall	.+1980   	; 0x439a <fgetc>
    3bde:	97 fd       	sbrc	r25, 7
    3be0:	17 c0       	rjmp	.+46     	; 0x3c10 <conv_brk+0x13a>
    3be2:	fc 01       	movw	r30, r24
    3be4:	ff 27       	eor	r31, r31
    3be6:	23 e0       	ldi	r18, 0x03	; 3
    3be8:	f5 95       	asr	r31
    3bea:	e7 95       	ror	r30
    3bec:	2a 95       	dec	r18
    3bee:	e1 f7       	brne	.-8      	; 0x3be8 <conv_brk+0x112>
    3bf0:	ec 0d       	add	r30, r12
    3bf2:	fd 1d       	adc	r31, r13
    3bf4:	20 81       	ld	r18, Z
    3bf6:	30 e0       	ldi	r19, 0x00	; 0
    3bf8:	ac 01       	movw	r20, r24
    3bfa:	47 70       	andi	r20, 0x07	; 7
    3bfc:	55 27       	eor	r21, r21
    3bfe:	02 c0       	rjmp	.+4      	; 0x3c04 <conv_brk+0x12e>
    3c00:	35 95       	asr	r19
    3c02:	27 95       	ror	r18
    3c04:	4a 95       	dec	r20
    3c06:	e2 f7       	brpl	.-8      	; 0x3c00 <conv_brk+0x12a>
    3c08:	20 fd       	sbrc	r18, 0
    3c0a:	d9 cf       	rjmp	.-78     	; 0x3bbe <conv_brk+0xe8>
    3c0c:	b5 01       	movw	r22, r10
    3c0e:	5f d4       	rcall	.+2238   	; 0x44ce <ungetc>
    3c10:	71 10       	cpse	r7, r1
    3c12:	85 cf       	rjmp	.-246    	; 0x3b1e <conv_brk+0x48>
    3c14:	e1 14       	cp	r14, r1
    3c16:	f1 04       	cpc	r15, r1
    3c18:	11 f0       	breq	.+4      	; 0x3c1e <conv_brk+0x148>
    3c1a:	f7 01       	movw	r30, r14
    3c1c:	10 82       	st	Z, r1
    3c1e:	c8 01       	movw	r24, r16
    3c20:	15 c0       	rjmp	.+42     	; 0x3c4c <conv_brk+0x176>
    3c22:	68 2f       	mov	r22, r24
    3c24:	66 95       	lsr	r22
    3c26:	66 95       	lsr	r22
    3c28:	66 95       	lsr	r22
    3c2a:	f6 01       	movw	r30, r12
    3c2c:	e6 0f       	add	r30, r22
    3c2e:	f1 1d       	adc	r31, r1
    3c30:	68 2f       	mov	r22, r24
    3c32:	67 70       	andi	r22, 0x07	; 7
    3c34:	8d 01       	movw	r16, r26
    3c36:	02 c0       	rjmp	.+4      	; 0x3c3c <conv_brk+0x166>
    3c38:	00 0f       	add	r16, r16
    3c3a:	11 1f       	adc	r17, r17
    3c3c:	6a 95       	dec	r22
    3c3e:	e2 f7       	brpl	.-8      	; 0x3c38 <conv_brk+0x162>
    3c40:	b8 01       	movw	r22, r16
    3c42:	70 81       	ld	r23, Z
    3c44:	67 2b       	or	r22, r23
    3c46:	60 83       	st	Z, r22
    3c48:	68 2e       	mov	r6, r24
    3c4a:	a1 cf       	rjmp	.-190    	; 0x3b8e <conv_brk+0xb8>
    3c4c:	a0 96       	adiw	r28, 0x20	; 32
    3c4e:	e0 e1       	ldi	r30, 0x10	; 16
    3c50:	74 c2       	rjmp	.+1256   	; 0x413a <__epilogue_restores__+0x4>

00003c52 <conv_flt>:
    3c52:	2f 92       	push	r2
    3c54:	3f 92       	push	r3
    3c56:	4f 92       	push	r4
    3c58:	5f 92       	push	r5
    3c5a:	6f 92       	push	r6
    3c5c:	7f 92       	push	r7
    3c5e:	9f 92       	push	r9
    3c60:	af 92       	push	r10
    3c62:	bf 92       	push	r11
    3c64:	cf 92       	push	r12
    3c66:	df 92       	push	r13
    3c68:	ef 92       	push	r14
    3c6a:	ff 92       	push	r15
    3c6c:	0f 93       	push	r16
    3c6e:	1f 93       	push	r17
    3c70:	cf 93       	push	r28
    3c72:	df 93       	push	r29
    3c74:	6c 01       	movw	r12, r24
    3c76:	8b 01       	movw	r16, r22
    3c78:	1a 01       	movw	r2, r20
    3c7a:	8f d3       	rcall	.+1822   	; 0x439a <fgetc>
    3c7c:	ec 01       	movw	r28, r24
    3c7e:	99 27       	eor	r25, r25
    3c80:	8b 32       	cpi	r24, 0x2B	; 43
    3c82:	91 05       	cpc	r25, r1
    3c84:	29 f0       	breq	.+10     	; 0x3c90 <conv_flt+0x3e>
    3c86:	8d 97       	sbiw	r24, 0x2d	; 45
    3c88:	79 f4       	brne	.+30     	; 0x3ca8 <conv_flt+0x56>
    3c8a:	30 e8       	ldi	r19, 0x80	; 128
    3c8c:	93 2e       	mov	r9, r19
    3c8e:	01 c0       	rjmp	.+2      	; 0x3c92 <conv_flt+0x40>
    3c90:	91 2c       	mov	r9, r1
    3c92:	01 50       	subi	r16, 0x01	; 1
    3c94:	11 09       	sbc	r17, r1
    3c96:	11 f4       	brne	.+4      	; 0x3c9c <conv_flt+0x4a>
    3c98:	80 e0       	ldi	r24, 0x00	; 0
    3c9a:	fe c0       	rjmp	.+508    	; 0x3e98 <conv_flt+0x246>
    3c9c:	c6 01       	movw	r24, r12
    3c9e:	7d d3       	rcall	.+1786   	; 0x439a <fgetc>
    3ca0:	ec 01       	movw	r28, r24
    3ca2:	97 ff       	sbrs	r25, 7
    3ca4:	02 c0       	rjmp	.+4      	; 0x3caa <conv_flt+0x58>
    3ca6:	f8 cf       	rjmp	.-16     	; 0x3c98 <conv_flt+0x46>
    3ca8:	91 2c       	mov	r9, r1
    3caa:	ce 01       	movw	r24, r28
    3cac:	3f d3       	rcall	.+1662   	; 0x432c <tolower>
    3cae:	89 36       	cpi	r24, 0x69	; 105
    3cb0:	91 05       	cpc	r25, r1
    3cb2:	31 f0       	breq	.+12     	; 0x3cc0 <conv_flt+0x6e>
    3cb4:	8e 36       	cpi	r24, 0x6E	; 110
    3cb6:	91 05       	cpc	r25, r1
    3cb8:	81 f5       	brne	.+96     	; 0x3d1a <conv_flt+0xc8>
    3cba:	ce e3       	ldi	r28, 0x3E	; 62
    3cbc:	df e0       	ldi	r29, 0x0F	; 15
    3cbe:	02 c0       	rjmp	.+4      	; 0x3cc4 <conv_flt+0x72>
    3cc0:	c1 e4       	ldi	r28, 0x41	; 65
    3cc2:	df e0       	ldi	r29, 0x0F	; 15
    3cc4:	21 96       	adiw	r28, 0x01	; 1
    3cc6:	fe 01       	movw	r30, r28
    3cc8:	31 97       	sbiw	r30, 0x01	; 1
    3cca:	b4 90       	lpm	r11, Z
    3ccc:	bb 20       	and	r11, r11
    3cce:	b1 f0       	breq	.+44     	; 0x3cfc <conv_flt+0xaa>
    3cd0:	01 50       	subi	r16, 0x01	; 1
    3cd2:	11 09       	sbc	r17, r1
    3cd4:	79 f0       	breq	.+30     	; 0x3cf4 <conv_flt+0xa2>
    3cd6:	c6 01       	movw	r24, r12
    3cd8:	60 d3       	rcall	.+1728   	; 0x439a <fgetc>
    3cda:	7c 01       	movw	r14, r24
    3cdc:	97 fd       	sbrc	r25, 7
    3cde:	0a c0       	rjmp	.+20     	; 0x3cf4 <conv_flt+0xa2>
    3ce0:	25 d3       	rcall	.+1610   	; 0x432c <tolower>
    3ce2:	99 27       	eor	r25, r25
    3ce4:	eb 2d       	mov	r30, r11
    3ce6:	f0 e0       	ldi	r31, 0x00	; 0
    3ce8:	8e 17       	cp	r24, r30
    3cea:	9f 07       	cpc	r25, r31
    3cec:	59 f3       	breq	.-42     	; 0x3cc4 <conv_flt+0x72>
    3cee:	b6 01       	movw	r22, r12
    3cf0:	c7 01       	movw	r24, r14
    3cf2:	ed d3       	rcall	.+2010   	; 0x44ce <ungetc>
    3cf4:	c4 54       	subi	r28, 0x44	; 68
    3cf6:	df 40       	sbci	r29, 0x0F	; 15
    3cf8:	79 f6       	brne	.-98     	; 0x3c98 <conv_flt+0x46>
    3cfa:	03 c0       	rjmp	.+6      	; 0x3d02 <conv_flt+0xb0>
    3cfc:	c1 54       	subi	r28, 0x41	; 65
    3cfe:	df 40       	sbci	r29, 0x0F	; 15
    3d00:	29 f0       	breq	.+10     	; 0x3d0c <conv_flt+0xba>
    3d02:	80 e0       	ldi	r24, 0x00	; 0
    3d04:	90 e0       	ldi	r25, 0x00	; 0
    3d06:	a0 e8       	ldi	r26, 0x80	; 128
    3d08:	bf e7       	ldi	r27, 0x7F	; 127
    3d0a:	04 c0       	rjmp	.+8      	; 0x3d14 <conv_flt+0xc2>
    3d0c:	80 e0       	ldi	r24, 0x00	; 0
    3d0e:	90 e0       	ldi	r25, 0x00	; 0
    3d10:	a0 ec       	ldi	r26, 0xC0	; 192
    3d12:	bf e7       	ldi	r27, 0x7F	; 127
    3d14:	bc 01       	movw	r22, r24
    3d16:	cd 01       	movw	r24, r26
    3d18:	af c0       	rjmp	.+350    	; 0x3e78 <conv_flt+0x226>
    3d1a:	41 2c       	mov	r4, r1
    3d1c:	51 2c       	mov	r5, r1
    3d1e:	32 01       	movw	r6, r4
    3d20:	e1 2c       	mov	r14, r1
    3d22:	f1 2c       	mov	r15, r1
    3d24:	2c 2f       	mov	r18, r28
    3d26:	20 53       	subi	r18, 0x30	; 48
    3d28:	2a 30       	cpi	r18, 0x0A	; 10
    3d2a:	08 f5       	brcc	.+66     	; 0x3d6e <conv_flt+0x11c>
    3d2c:	e9 2d       	mov	r30, r9
    3d2e:	e2 60       	ori	r30, 0x02	; 2
    3d30:	be 2e       	mov	r11, r30
    3d32:	89 2d       	mov	r24, r9
    3d34:	88 70       	andi	r24, 0x08	; 8
    3d36:	92 fe       	sbrs	r9, 2
    3d38:	06 c0       	rjmp	.+12     	; 0x3d46 <conv_flt+0xf4>
    3d3a:	81 11       	cpse	r24, r1
    3d3c:	1f c0       	rjmp	.+62     	; 0x3d7c <conv_flt+0x12a>
    3d3e:	ff ef       	ldi	r31, 0xFF	; 255
    3d40:	ef 1a       	sub	r14, r31
    3d42:	ff 0a       	sbc	r15, r31
    3d44:	1b c0       	rjmp	.+54     	; 0x3d7c <conv_flt+0x12a>
    3d46:	88 23       	and	r24, r24
    3d48:	19 f0       	breq	.+6      	; 0x3d50 <conv_flt+0xfe>
    3d4a:	81 e0       	ldi	r24, 0x01	; 1
    3d4c:	e8 1a       	sub	r14, r24
    3d4e:	f1 08       	sbc	r15, r1
    3d50:	40 e2       	ldi	r20, 0x20	; 32
    3d52:	c3 01       	movw	r24, r6
    3d54:	b2 01       	movw	r22, r4
    3d56:	02 de       	rcall	.-1020   	; 0x395c <mulacc>
    3d58:	2b 01       	movw	r4, r22
    3d5a:	3c 01       	movw	r6, r24
    3d5c:	68 39       	cpi	r22, 0x98	; 152
    3d5e:	79 49       	sbci	r23, 0x99	; 153
    3d60:	89 49       	sbci	r24, 0x99	; 153
    3d62:	99 41       	sbci	r25, 0x19	; 25
    3d64:	58 f0       	brcs	.+22     	; 0x3d7c <conv_flt+0x12a>
    3d66:	f9 2d       	mov	r31, r9
    3d68:	f6 60       	ori	r31, 0x06	; 6
    3d6a:	bf 2e       	mov	r11, r31
    3d6c:	07 c0       	rjmp	.+14     	; 0x3d7c <conv_flt+0x12a>
    3d6e:	2e 3f       	cpi	r18, 0xFE	; 254
    3d70:	81 f4       	brne	.+32     	; 0x3d92 <conv_flt+0x140>
    3d72:	93 fc       	sbrc	r9, 3
    3d74:	0e c0       	rjmp	.+28     	; 0x3d92 <conv_flt+0x140>
    3d76:	29 2d       	mov	r18, r9
    3d78:	28 60       	ori	r18, 0x08	; 8
    3d7a:	b2 2e       	mov	r11, r18
    3d7c:	01 50       	subi	r16, 0x01	; 1
    3d7e:	11 09       	sbc	r17, r1
    3d80:	39 f0       	breq	.+14     	; 0x3d90 <conv_flt+0x13e>
    3d82:	c6 01       	movw	r24, r12
    3d84:	0a d3       	rcall	.+1556   	; 0x439a <fgetc>
    3d86:	ec 01       	movw	r28, r24
    3d88:	9b 2c       	mov	r9, r11
    3d8a:	97 ff       	sbrs	r25, 7
    3d8c:	cb cf       	rjmp	.-106    	; 0x3d24 <conv_flt+0xd2>
    3d8e:	01 c0       	rjmp	.+2      	; 0x3d92 <conv_flt+0x140>
    3d90:	9b 2c       	mov	r9, r11
    3d92:	91 fe       	sbrs	r9, 1
    3d94:	81 cf       	rjmp	.-254    	; 0x3c98 <conv_flt+0x46>
    3d96:	ce 01       	movw	r24, r28
    3d98:	8f 7d       	andi	r24, 0xDF	; 223
    3d9a:	99 27       	eor	r25, r25
    3d9c:	85 34       	cpi	r24, 0x45	; 69
    3d9e:	91 05       	cpc	r25, r1
    3da0:	09 f0       	breq	.+2      	; 0x3da4 <conv_flt+0x152>
    3da2:	3e c0       	rjmp	.+124    	; 0x3e20 <conv_flt+0x1ce>
    3da4:	58 01       	movw	r10, r16
    3da6:	81 e0       	ldi	r24, 0x01	; 1
    3da8:	a8 1a       	sub	r10, r24
    3daa:	b1 08       	sbc	r11, r1
    3dac:	09 f4       	brne	.+2      	; 0x3db0 <conv_flt+0x15e>
    3dae:	74 cf       	rjmp	.-280    	; 0x3c98 <conv_flt+0x46>
    3db0:	c6 01       	movw	r24, r12
    3db2:	f3 d2       	rcall	.+1510   	; 0x439a <fgetc>
    3db4:	ec 01       	movw	r28, r24
    3db6:	97 fd       	sbrc	r25, 7
    3db8:	6f cf       	rjmp	.-290    	; 0x3c98 <conv_flt+0x46>
    3dba:	99 27       	eor	r25, r25
    3dbc:	8b 32       	cpi	r24, 0x2B	; 43
    3dbe:	91 05       	cpc	r25, r1
    3dc0:	29 f0       	breq	.+10     	; 0x3dcc <conv_flt+0x17a>
    3dc2:	8d 97       	sbiw	r24, 0x2d	; 45
    3dc4:	61 f4       	brne	.+24     	; 0x3dde <conv_flt+0x18c>
    3dc6:	e9 2d       	mov	r30, r9
    3dc8:	e0 61       	ori	r30, 0x10	; 16
    3dca:	9e 2e       	mov	r9, r30
    3dcc:	58 01       	movw	r10, r16
    3dce:	f2 e0       	ldi	r31, 0x02	; 2
    3dd0:	af 1a       	sub	r10, r31
    3dd2:	b1 08       	sbc	r11, r1
    3dd4:	09 f4       	brne	.+2      	; 0x3dd8 <conv_flt+0x186>
    3dd6:	60 cf       	rjmp	.-320    	; 0x3c98 <conv_flt+0x46>
    3dd8:	c6 01       	movw	r24, r12
    3dda:	df d2       	rcall	.+1470   	; 0x439a <fgetc>
    3ddc:	ec 01       	movw	r28, r24
    3dde:	ce 01       	movw	r24, r28
    3de0:	c0 97       	sbiw	r24, 0x30	; 48
    3de2:	0a 97       	sbiw	r24, 0x0a	; 10
    3de4:	08 f0       	brcs	.+2      	; 0x3de8 <conv_flt+0x196>
    3de6:	58 cf       	rjmp	.-336    	; 0x3c98 <conv_flt+0x46>
    3de8:	85 01       	movw	r16, r10
    3dea:	a1 2c       	mov	r10, r1
    3dec:	b1 2c       	mov	r11, r1
    3dee:	b5 01       	movw	r22, r10
    3df0:	bb 0c       	add	r11, r11
    3df2:	88 0b       	sbc	r24, r24
    3df4:	99 0b       	sbc	r25, r25
    3df6:	2c 2f       	mov	r18, r28
    3df8:	20 53       	subi	r18, 0x30	; 48
    3dfa:	40 e2       	ldi	r20, 0x20	; 32
    3dfc:	af dd       	rcall	.-1186   	; 0x395c <mulacc>
    3dfe:	5b 01       	movw	r10, r22
    3e00:	01 50       	subi	r16, 0x01	; 1
    3e02:	11 09       	sbc	r17, r1
    3e04:	31 f0       	breq	.+12     	; 0x3e12 <conv_flt+0x1c0>
    3e06:	c6 01       	movw	r24, r12
    3e08:	c8 d2       	rcall	.+1424   	; 0x439a <fgetc>
    3e0a:	ec 01       	movw	r28, r24
    3e0c:	c0 97       	sbiw	r24, 0x30	; 48
    3e0e:	0a 97       	sbiw	r24, 0x0a	; 10
    3e10:	70 f3       	brcs	.-36     	; 0x3dee <conv_flt+0x19c>
    3e12:	94 fe       	sbrs	r9, 4
    3e14:	03 c0       	rjmp	.+6      	; 0x3e1c <conv_flt+0x1ca>
    3e16:	b1 94       	neg	r11
    3e18:	a1 94       	neg	r10
    3e1a:	b1 08       	sbc	r11, r1
    3e1c:	ea 0c       	add	r14, r10
    3e1e:	fb 1c       	adc	r15, r11
    3e20:	01 2b       	or	r16, r17
    3e22:	29 f0       	breq	.+10     	; 0x3e2e <conv_flt+0x1dc>
    3e24:	d7 fd       	sbrc	r29, 7
    3e26:	03 c0       	rjmp	.+6      	; 0x3e2e <conv_flt+0x1dc>
    3e28:	b6 01       	movw	r22, r12
    3e2a:	ce 01       	movw	r24, r28
    3e2c:	50 d3       	rcall	.+1696   	; 0x44ce <ungetc>
    3e2e:	c3 01       	movw	r24, r6
    3e30:	b2 01       	movw	r22, r4
    3e32:	98 d8       	rcall	.-3792   	; 0x2f64 <__floatunsisf>
    3e34:	f7 fe       	sbrs	r15, 7
    3e36:	06 c0       	rjmp	.+12     	; 0x3e44 <conv_flt+0x1f2>
    3e38:	f1 94       	neg	r15
    3e3a:	e1 94       	neg	r14
    3e3c:	f1 08       	sbc	r15, r1
    3e3e:	cd e5       	ldi	r28, 0x5D	; 93
    3e40:	df e0       	ldi	r29, 0x0F	; 15
    3e42:	02 c0       	rjmp	.+4      	; 0x3e48 <conv_flt+0x1f6>
    3e44:	c5 e7       	ldi	r28, 0x75	; 117
    3e46:	df e0       	ldi	r29, 0x0F	; 15
    3e48:	6e 01       	movw	r12, r28
    3e4a:	28 e1       	ldi	r18, 0x18	; 24
    3e4c:	c2 1a       	sub	r12, r18
    3e4e:	d1 08       	sbc	r13, r1
    3e50:	00 e2       	ldi	r16, 0x20	; 32
    3e52:	10 e0       	ldi	r17, 0x00	; 0
    3e54:	e0 16       	cp	r14, r16
    3e56:	f1 06       	cpc	r15, r17
    3e58:	48 f0       	brcs	.+18     	; 0x3e6c <conv_flt+0x21a>
    3e5a:	fe 01       	movw	r30, r28
    3e5c:	25 91       	lpm	r18, Z+
    3e5e:	35 91       	lpm	r19, Z+
    3e60:	45 91       	lpm	r20, Z+
    3e62:	54 91       	lpm	r21, Z
    3e64:	7a d9       	rcall	.-3340   	; 0x315a <__mulsf3>
    3e66:	e0 1a       	sub	r14, r16
    3e68:	f1 0a       	sbc	r15, r17
    3e6a:	f4 cf       	rjmp	.-24     	; 0x3e54 <conv_flt+0x202>
    3e6c:	24 97       	sbiw	r28, 0x04	; 4
    3e6e:	16 95       	lsr	r17
    3e70:	07 95       	ror	r16
    3e72:	cc 16       	cp	r12, r28
    3e74:	dd 06       	cpc	r13, r29
    3e76:	71 f7       	brne	.-36     	; 0x3e54 <conv_flt+0x202>
    3e78:	97 fe       	sbrs	r9, 7
    3e7a:	05 c0       	rjmp	.+10     	; 0x3e86 <conv_flt+0x234>
    3e7c:	dc 01       	movw	r26, r24
    3e7e:	cb 01       	movw	r24, r22
    3e80:	b0 58       	subi	r27, 0x80	; 128
    3e82:	bc 01       	movw	r22, r24
    3e84:	cd 01       	movw	r24, r26
    3e86:	21 14       	cp	r2, r1
    3e88:	31 04       	cpc	r3, r1
    3e8a:	29 f0       	breq	.+10     	; 0x3e96 <conv_flt+0x244>
    3e8c:	f1 01       	movw	r30, r2
    3e8e:	60 83       	st	Z, r22
    3e90:	71 83       	std	Z+1, r23	; 0x01
    3e92:	82 83       	std	Z+2, r24	; 0x02
    3e94:	93 83       	std	Z+3, r25	; 0x03
    3e96:	81 e0       	ldi	r24, 0x01	; 1
    3e98:	df 91       	pop	r29
    3e9a:	cf 91       	pop	r28
    3e9c:	1f 91       	pop	r17
    3e9e:	0f 91       	pop	r16
    3ea0:	ff 90       	pop	r15
    3ea2:	ef 90       	pop	r14
    3ea4:	df 90       	pop	r13
    3ea6:	cf 90       	pop	r12
    3ea8:	bf 90       	pop	r11
    3eaa:	af 90       	pop	r10
    3eac:	9f 90       	pop	r9
    3eae:	7f 90       	pop	r7
    3eb0:	6f 90       	pop	r6
    3eb2:	5f 90       	pop	r5
    3eb4:	4f 90       	pop	r4
    3eb6:	3f 90       	pop	r3
    3eb8:	2f 90       	pop	r2
    3eba:	08 95       	ret

00003ebc <vfscanf>:
    3ebc:	a0 e0       	ldi	r26, 0x00	; 0
    3ebe:	b0 e0       	ldi	r27, 0x00	; 0
    3ec0:	e3 e6       	ldi	r30, 0x63	; 99
    3ec2:	ff e1       	ldi	r31, 0x1F	; 31
    3ec4:	20 c1       	rjmp	.+576    	; 0x4106 <__prologue_saves__+0x8>
    3ec6:	5c 01       	movw	r10, r24
    3ec8:	eb 01       	movw	r28, r22
    3eca:	4a 01       	movw	r8, r20
    3ecc:	fc 01       	movw	r30, r24
    3ece:	17 82       	std	Z+7, r1	; 0x07
    3ed0:	16 82       	std	Z+6, r1	; 0x06
    3ed2:	61 2c       	mov	r6, r1
    3ed4:	f5 01       	movw	r30, r10
    3ed6:	03 81       	ldd	r16, Z+3	; 0x03
    3ed8:	fe 01       	movw	r30, r28
    3eda:	03 fd       	sbrc	r16, 3
    3edc:	85 91       	lpm	r24, Z+
    3ede:	03 ff       	sbrs	r16, 3
    3ee0:	81 91       	ld	r24, Z+
    3ee2:	18 2f       	mov	r17, r24
    3ee4:	ef 01       	movw	r28, r30
    3ee6:	88 23       	and	r24, r24
    3ee8:	09 f4       	brne	.+2      	; 0x3eec <vfscanf+0x30>
    3eea:	00 c1       	rjmp	.+512    	; 0x40ec <vfscanf+0x230>
    3eec:	90 e0       	ldi	r25, 0x00	; 0
    3eee:	16 d2       	rcall	.+1068   	; 0x431c <isspace>
    3ef0:	89 2b       	or	r24, r25
    3ef2:	19 f0       	breq	.+6      	; 0x3efa <vfscanf+0x3e>
    3ef4:	c5 01       	movw	r24, r10
    3ef6:	59 dd       	rcall	.-1358   	; 0x39aa <skip_spaces>
    3ef8:	ed cf       	rjmp	.-38     	; 0x3ed4 <vfscanf+0x18>
    3efa:	15 32       	cpi	r17, 0x25	; 37
    3efc:	41 f4       	brne	.+16     	; 0x3f0e <vfscanf+0x52>
    3efe:	fe 01       	movw	r30, r28
    3f00:	03 fd       	sbrc	r16, 3
    3f02:	15 91       	lpm	r17, Z+
    3f04:	03 ff       	sbrs	r16, 3
    3f06:	11 91       	ld	r17, Z+
    3f08:	ef 01       	movw	r28, r30
    3f0a:	15 32       	cpi	r17, 0x25	; 37
    3f0c:	71 f4       	brne	.+28     	; 0x3f2a <vfscanf+0x6e>
    3f0e:	c5 01       	movw	r24, r10
    3f10:	44 d2       	rcall	.+1160   	; 0x439a <fgetc>
    3f12:	97 fd       	sbrc	r25, 7
    3f14:	e9 c0       	rjmp	.+466    	; 0x40e8 <vfscanf+0x22c>
    3f16:	41 2f       	mov	r20, r17
    3f18:	50 e0       	ldi	r21, 0x00	; 0
    3f1a:	9c 01       	movw	r18, r24
    3f1c:	33 27       	eor	r19, r19
    3f1e:	24 17       	cp	r18, r20
    3f20:	35 07       	cpc	r19, r21
    3f22:	c1 f2       	breq	.-80     	; 0x3ed4 <vfscanf+0x18>
    3f24:	b5 01       	movw	r22, r10
    3f26:	d3 d2       	rcall	.+1446   	; 0x44ce <ungetc>
    3f28:	e1 c0       	rjmp	.+450    	; 0x40ec <vfscanf+0x230>
    3f2a:	1a 32       	cpi	r17, 0x2A	; 42
    3f2c:	41 f4       	brne	.+16     	; 0x3f3e <vfscanf+0x82>
    3f2e:	03 fd       	sbrc	r16, 3
    3f30:	15 91       	lpm	r17, Z+
    3f32:	03 ff       	sbrs	r16, 3
    3f34:	11 91       	ld	r17, Z+
    3f36:	ef 01       	movw	r28, r30
    3f38:	77 24       	eor	r7, r7
    3f3a:	73 94       	inc	r7
    3f3c:	01 c0       	rjmp	.+2      	; 0x3f40 <vfscanf+0x84>
    3f3e:	71 2c       	mov	r7, r1
    3f40:	e1 2c       	mov	r14, r1
    3f42:	f1 2c       	mov	r15, r1
    3f44:	20 ed       	ldi	r18, 0xD0	; 208
    3f46:	21 0f       	add	r18, r17
    3f48:	2a 30       	cpi	r18, 0x0A	; 10
    3f4a:	80 f4       	brcc	.+32     	; 0x3f6c <vfscanf+0xb0>
    3f4c:	f7 2d       	mov	r31, r7
    3f4e:	f2 60       	ori	r31, 0x02	; 2
    3f50:	7f 2e       	mov	r7, r31
    3f52:	b7 01       	movw	r22, r14
    3f54:	80 e0       	ldi	r24, 0x00	; 0
    3f56:	90 e0       	ldi	r25, 0x00	; 0
    3f58:	40 e2       	ldi	r20, 0x20	; 32
    3f5a:	00 dd       	rcall	.-1536   	; 0x395c <mulacc>
    3f5c:	7b 01       	movw	r14, r22
    3f5e:	fe 01       	movw	r30, r28
    3f60:	03 fd       	sbrc	r16, 3
    3f62:	15 91       	lpm	r17, Z+
    3f64:	03 ff       	sbrs	r16, 3
    3f66:	11 91       	ld	r17, Z+
    3f68:	ef 01       	movw	r28, r30
    3f6a:	ec cf       	rjmp	.-40     	; 0x3f44 <vfscanf+0x88>
    3f6c:	71 fe       	sbrs	r7, 1
    3f6e:	04 c0       	rjmp	.+8      	; 0x3f78 <vfscanf+0xbc>
    3f70:	e1 14       	cp	r14, r1
    3f72:	f1 04       	cpc	r15, r1
    3f74:	21 f4       	brne	.+8      	; 0x3f7e <vfscanf+0xc2>
    3f76:	ba c0       	rjmp	.+372    	; 0x40ec <vfscanf+0x230>
    3f78:	ee 24       	eor	r14, r14
    3f7a:	ea 94       	dec	r14
    3f7c:	fe 2c       	mov	r15, r14
    3f7e:	18 36       	cpi	r17, 0x68	; 104
    3f80:	19 f0       	breq	.+6      	; 0x3f88 <vfscanf+0xcc>
    3f82:	1c 36       	cpi	r17, 0x6C	; 108
    3f84:	61 f0       	breq	.+24     	; 0x3f9e <vfscanf+0xe2>
    3f86:	14 c0       	rjmp	.+40     	; 0x3fb0 <vfscanf+0xf4>
    3f88:	fe 01       	movw	r30, r28
    3f8a:	03 fd       	sbrc	r16, 3
    3f8c:	15 91       	lpm	r17, Z+
    3f8e:	03 ff       	sbrs	r16, 3
    3f90:	11 91       	ld	r17, Z+
    3f92:	ef 01       	movw	r28, r30
    3f94:	18 36       	cpi	r17, 0x68	; 104
    3f96:	61 f4       	brne	.+24     	; 0x3fb0 <vfscanf+0xf4>
    3f98:	87 2d       	mov	r24, r7
    3f9a:	88 60       	ori	r24, 0x08	; 8
    3f9c:	78 2e       	mov	r7, r24
    3f9e:	97 2d       	mov	r25, r7
    3fa0:	94 60       	ori	r25, 0x04	; 4
    3fa2:	79 2e       	mov	r7, r25
    3fa4:	fe 01       	movw	r30, r28
    3fa6:	03 fd       	sbrc	r16, 3
    3fa8:	15 91       	lpm	r17, Z+
    3faa:	03 ff       	sbrs	r16, 3
    3fac:	11 91       	ld	r17, Z+
    3fae:	ef 01       	movw	r28, r30
    3fb0:	11 23       	and	r17, r17
    3fb2:	09 f4       	brne	.+2      	; 0x3fb6 <vfscanf+0xfa>
    3fb4:	9b c0       	rjmp	.+310    	; 0x40ec <vfscanf+0x230>
    3fb6:	61 2f       	mov	r22, r17
    3fb8:	70 e0       	ldi	r23, 0x00	; 0
    3fba:	8c e2       	ldi	r24, 0x2C	; 44
    3fbc:	9f e0       	ldi	r25, 0x0F	; 15
    3fbe:	be d1       	rcall	.+892    	; 0x433c <strchr_P>
    3fc0:	89 2b       	or	r24, r25
    3fc2:	09 f4       	brne	.+2      	; 0x3fc6 <vfscanf+0x10a>
    3fc4:	93 c0       	rjmp	.+294    	; 0x40ec <vfscanf+0x230>
    3fc6:	70 fc       	sbrc	r7, 0
    3fc8:	07 c0       	rjmp	.+14     	; 0x3fd8 <vfscanf+0x11c>
    3fca:	f4 01       	movw	r30, r8
    3fcc:	c0 80       	ld	r12, Z
    3fce:	d1 80       	ldd	r13, Z+1	; 0x01
    3fd0:	c4 01       	movw	r24, r8
    3fd2:	02 96       	adiw	r24, 0x02	; 2
    3fd4:	4c 01       	movw	r8, r24
    3fd6:	02 c0       	rjmp	.+4      	; 0x3fdc <vfscanf+0x120>
    3fd8:	c1 2c       	mov	r12, r1
    3fda:	d1 2c       	mov	r13, r1
    3fdc:	1e 36       	cpi	r17, 0x6E	; 110
    3fde:	49 f4       	brne	.+18     	; 0x3ff2 <vfscanf+0x136>
    3fe0:	f5 01       	movw	r30, r10
    3fe2:	46 81       	ldd	r20, Z+6	; 0x06
    3fe4:	57 81       	ldd	r21, Z+7	; 0x07
    3fe6:	60 e0       	ldi	r22, 0x00	; 0
    3fe8:	70 e0       	ldi	r23, 0x00	; 0
    3fea:	27 2d       	mov	r18, r7
    3fec:	c6 01       	movw	r24, r12
    3fee:	aa dc       	rcall	.-1708   	; 0x3944 <putval>
    3ff0:	71 cf       	rjmp	.-286    	; 0x3ed4 <vfscanf+0x18>
    3ff2:	13 36       	cpi	r17, 0x63	; 99
    3ff4:	b1 f4       	brne	.+44     	; 0x4022 <vfscanf+0x166>
    3ff6:	71 fc       	sbrc	r7, 1
    3ff8:	03 c0       	rjmp	.+6      	; 0x4000 <vfscanf+0x144>
    3ffa:	ee 24       	eor	r14, r14
    3ffc:	e3 94       	inc	r14
    3ffe:	f1 2c       	mov	r15, r1
    4000:	c5 01       	movw	r24, r10
    4002:	cb d1       	rcall	.+918    	; 0x439a <fgetc>
    4004:	97 fd       	sbrc	r25, 7
    4006:	70 c0       	rjmp	.+224    	; 0x40e8 <vfscanf+0x22c>
    4008:	c1 14       	cp	r12, r1
    400a:	d1 04       	cpc	r13, r1
    400c:	29 f0       	breq	.+10     	; 0x4018 <vfscanf+0x15c>
    400e:	f6 01       	movw	r30, r12
    4010:	80 83       	st	Z, r24
    4012:	c6 01       	movw	r24, r12
    4014:	01 96       	adiw	r24, 0x01	; 1
    4016:	6c 01       	movw	r12, r24
    4018:	91 e0       	ldi	r25, 0x01	; 1
    401a:	e9 1a       	sub	r14, r25
    401c:	f1 08       	sbc	r15, r1
    401e:	81 f7       	brne	.-32     	; 0x4000 <vfscanf+0x144>
    4020:	5f c0       	rjmp	.+190    	; 0x40e0 <vfscanf+0x224>
    4022:	1b 35       	cpi	r17, 0x5B	; 91
    4024:	51 f4       	brne	.+20     	; 0x403a <vfscanf+0x17e>
    4026:	9e 01       	movw	r18, r28
    4028:	a6 01       	movw	r20, r12
    402a:	b7 01       	movw	r22, r14
    402c:	c5 01       	movw	r24, r10
    402e:	53 dd       	rcall	.-1370   	; 0x3ad6 <conv_brk>
    4030:	ec 01       	movw	r28, r24
    4032:	89 2b       	or	r24, r25
    4034:	09 f0       	breq	.+2      	; 0x4038 <vfscanf+0x17c>
    4036:	54 c0       	rjmp	.+168    	; 0x40e0 <vfscanf+0x224>
    4038:	4e c0       	rjmp	.+156    	; 0x40d6 <vfscanf+0x21a>
    403a:	c5 01       	movw	r24, r10
    403c:	b6 dc       	rcall	.-1684   	; 0x39aa <skip_spaces>
    403e:	97 fd       	sbrc	r25, 7
    4040:	53 c0       	rjmp	.+166    	; 0x40e8 <vfscanf+0x22c>
    4042:	1f 36       	cpi	r17, 0x6F	; 111
    4044:	c9 f1       	breq	.+114    	; 0x40b8 <vfscanf+0x1fc>
    4046:	40 f4       	brcc	.+16     	; 0x4058 <vfscanf+0x19c>
    4048:	14 36       	cpi	r17, 0x64	; 100
    404a:	91 f1       	breq	.+100    	; 0x40b0 <vfscanf+0x1f4>
    404c:	19 36       	cpi	r17, 0x69	; 105
    404e:	b9 f1       	breq	.+110    	; 0x40be <vfscanf+0x202>
    4050:	18 35       	cpi	r17, 0x58	; 88
    4052:	09 f0       	breq	.+2      	; 0x4056 <vfscanf+0x19a>
    4054:	3a c0       	rjmp	.+116    	; 0x40ca <vfscanf+0x20e>
    4056:	28 c0       	rjmp	.+80     	; 0x40a8 <vfscanf+0x1ec>
    4058:	13 37       	cpi	r17, 0x73	; 115
    405a:	a9 f0       	breq	.+42     	; 0x4086 <vfscanf+0x1ca>
    405c:	18 f4       	brcc	.+6      	; 0x4064 <vfscanf+0x1a8>
    405e:	10 37       	cpi	r17, 0x70	; 112
    4060:	19 f1       	breq	.+70     	; 0x40a8 <vfscanf+0x1ec>
    4062:	33 c0       	rjmp	.+102    	; 0x40ca <vfscanf+0x20e>
    4064:	15 37       	cpi	r17, 0x75	; 117
    4066:	21 f1       	breq	.+72     	; 0x40b0 <vfscanf+0x1f4>
    4068:	18 37       	cpi	r17, 0x78	; 120
    406a:	f1 f0       	breq	.+60     	; 0x40a8 <vfscanf+0x1ec>
    406c:	2e c0       	rjmp	.+92     	; 0x40ca <vfscanf+0x20e>
    406e:	c1 14       	cp	r12, r1
    4070:	d1 04       	cpc	r13, r1
    4072:	29 f0       	breq	.+10     	; 0x407e <vfscanf+0x1c2>
    4074:	f6 01       	movw	r30, r12
    4076:	00 83       	st	Z, r16
    4078:	c6 01       	movw	r24, r12
    407a:	01 96       	adiw	r24, 0x01	; 1
    407c:	6c 01       	movw	r12, r24
    407e:	91 e0       	ldi	r25, 0x01	; 1
    4080:	e9 1a       	sub	r14, r25
    4082:	f1 08       	sbc	r15, r1
    4084:	59 f0       	breq	.+22     	; 0x409c <vfscanf+0x1e0>
    4086:	c5 01       	movw	r24, r10
    4088:	88 d1       	rcall	.+784    	; 0x439a <fgetc>
    408a:	8c 01       	movw	r16, r24
    408c:	97 fd       	sbrc	r25, 7
    408e:	06 c0       	rjmp	.+12     	; 0x409c <vfscanf+0x1e0>
    4090:	45 d1       	rcall	.+650    	; 0x431c <isspace>
    4092:	89 2b       	or	r24, r25
    4094:	61 f3       	breq	.-40     	; 0x406e <vfscanf+0x1b2>
    4096:	b5 01       	movw	r22, r10
    4098:	c8 01       	movw	r24, r16
    409a:	19 d2       	rcall	.+1074   	; 0x44ce <ungetc>
    409c:	c1 14       	cp	r12, r1
    409e:	d1 04       	cpc	r13, r1
    40a0:	f9 f0       	breq	.+62     	; 0x40e0 <vfscanf+0x224>
    40a2:	f6 01       	movw	r30, r12
    40a4:	10 82       	st	Z, r1
    40a6:	1c c0       	rjmp	.+56     	; 0x40e0 <vfscanf+0x224>
    40a8:	f7 2d       	mov	r31, r7
    40aa:	f0 64       	ori	r31, 0x40	; 64
    40ac:	7f 2e       	mov	r7, r31
    40ae:	07 c0       	rjmp	.+14     	; 0x40be <vfscanf+0x202>
    40b0:	87 2d       	mov	r24, r7
    40b2:	80 62       	ori	r24, 0x20	; 32
    40b4:	78 2e       	mov	r7, r24
    40b6:	03 c0       	rjmp	.+6      	; 0x40be <vfscanf+0x202>
    40b8:	97 2d       	mov	r25, r7
    40ba:	90 61       	ori	r25, 0x10	; 16
    40bc:	79 2e       	mov	r7, r25
    40be:	27 2d       	mov	r18, r7
    40c0:	a6 01       	movw	r20, r12
    40c2:	b7 01       	movw	r22, r14
    40c4:	c5 01       	movw	r24, r10
    40c6:	87 dc       	rcall	.-1778   	; 0x39d6 <conv_int>
    40c8:	04 c0       	rjmp	.+8      	; 0x40d2 <vfscanf+0x216>
    40ca:	a6 01       	movw	r20, r12
    40cc:	b7 01       	movw	r22, r14
    40ce:	c5 01       	movw	r24, r10
    40d0:	c0 dd       	rcall	.-1152   	; 0x3c52 <conv_flt>
    40d2:	81 11       	cpse	r24, r1
    40d4:	05 c0       	rjmp	.+10     	; 0x40e0 <vfscanf+0x224>
    40d6:	f5 01       	movw	r30, r10
    40d8:	83 81       	ldd	r24, Z+3	; 0x03
    40da:	80 73       	andi	r24, 0x30	; 48
    40dc:	29 f4       	brne	.+10     	; 0x40e8 <vfscanf+0x22c>
    40de:	06 c0       	rjmp	.+12     	; 0x40ec <vfscanf+0x230>
    40e0:	70 fc       	sbrc	r7, 0
    40e2:	f8 ce       	rjmp	.-528    	; 0x3ed4 <vfscanf+0x18>
    40e4:	63 94       	inc	r6
    40e6:	f6 ce       	rjmp	.-532    	; 0x3ed4 <vfscanf+0x18>
    40e8:	66 20       	and	r6, r6
    40ea:	19 f0       	breq	.+6      	; 0x40f2 <vfscanf+0x236>
    40ec:	86 2d       	mov	r24, r6
    40ee:	90 e0       	ldi	r25, 0x00	; 0
    40f0:	02 c0       	rjmp	.+4      	; 0x40f6 <vfscanf+0x23a>
    40f2:	8f ef       	ldi	r24, 0xFF	; 255
    40f4:	9f ef       	ldi	r25, 0xFF	; 255
    40f6:	cd b7       	in	r28, 0x3d	; 61
    40f8:	de b7       	in	r29, 0x3e	; 62
    40fa:	ee e0       	ldi	r30, 0x0E	; 14
    40fc:	20 c0       	rjmp	.+64     	; 0x413e <__epilogue_restores__+0x8>

000040fe <__prologue_saves__>:
    40fe:	2f 92       	push	r2
    4100:	3f 92       	push	r3
    4102:	4f 92       	push	r4
    4104:	5f 92       	push	r5
    4106:	6f 92       	push	r6
    4108:	7f 92       	push	r7
    410a:	8f 92       	push	r8
    410c:	9f 92       	push	r9
    410e:	af 92       	push	r10
    4110:	bf 92       	push	r11
    4112:	cf 92       	push	r12
    4114:	df 92       	push	r13
    4116:	ef 92       	push	r14
    4118:	ff 92       	push	r15
    411a:	0f 93       	push	r16
    411c:	1f 93       	push	r17
    411e:	cf 93       	push	r28
    4120:	df 93       	push	r29
    4122:	cd b7       	in	r28, 0x3d	; 61
    4124:	de b7       	in	r29, 0x3e	; 62
    4126:	ca 1b       	sub	r28, r26
    4128:	db 0b       	sbc	r29, r27
    412a:	0f b6       	in	r0, 0x3f	; 63
    412c:	f8 94       	cli
    412e:	de bf       	out	0x3e, r29	; 62
    4130:	0f be       	out	0x3f, r0	; 63
    4132:	cd bf       	out	0x3d, r28	; 61
    4134:	09 94       	ijmp

00004136 <__epilogue_restores__>:
    4136:	2a 88       	ldd	r2, Y+18	; 0x12
    4138:	39 88       	ldd	r3, Y+17	; 0x11
    413a:	48 88       	ldd	r4, Y+16	; 0x10
    413c:	5f 84       	ldd	r5, Y+15	; 0x0f
    413e:	6e 84       	ldd	r6, Y+14	; 0x0e
    4140:	7d 84       	ldd	r7, Y+13	; 0x0d
    4142:	8c 84       	ldd	r8, Y+12	; 0x0c
    4144:	9b 84       	ldd	r9, Y+11	; 0x0b
    4146:	aa 84       	ldd	r10, Y+10	; 0x0a
    4148:	b9 84       	ldd	r11, Y+9	; 0x09
    414a:	c8 84       	ldd	r12, Y+8	; 0x08
    414c:	df 80       	ldd	r13, Y+7	; 0x07
    414e:	ee 80       	ldd	r14, Y+6	; 0x06
    4150:	fd 80       	ldd	r15, Y+5	; 0x05
    4152:	0c 81       	ldd	r16, Y+4	; 0x04
    4154:	1b 81       	ldd	r17, Y+3	; 0x03
    4156:	aa 81       	ldd	r26, Y+2	; 0x02
    4158:	b9 81       	ldd	r27, Y+1	; 0x01
    415a:	ce 0f       	add	r28, r30
    415c:	d1 1d       	adc	r29, r1
    415e:	0f b6       	in	r0, 0x3f	; 63
    4160:	f8 94       	cli
    4162:	de bf       	out	0x3e, r29	; 62
    4164:	0f be       	out	0x3f, r0	; 63
    4166:	cd bf       	out	0x3d, r28	; 61
    4168:	ed 01       	movw	r28, r26
    416a:	08 95       	ret

0000416c <__ftoa_engine>:
    416c:	28 30       	cpi	r18, 0x08	; 8
    416e:	08 f0       	brcs	.+2      	; 0x4172 <__ftoa_engine+0x6>
    4170:	27 e0       	ldi	r18, 0x07	; 7
    4172:	33 27       	eor	r19, r19
    4174:	da 01       	movw	r26, r20
    4176:	99 0f       	add	r25, r25
    4178:	31 1d       	adc	r19, r1
    417a:	87 fd       	sbrc	r24, 7
    417c:	91 60       	ori	r25, 0x01	; 1
    417e:	00 96       	adiw	r24, 0x00	; 0
    4180:	61 05       	cpc	r22, r1
    4182:	71 05       	cpc	r23, r1
    4184:	39 f4       	brne	.+14     	; 0x4194 <__ftoa_engine+0x28>
    4186:	32 60       	ori	r19, 0x02	; 2
    4188:	2e 5f       	subi	r18, 0xFE	; 254
    418a:	3d 93       	st	X+, r19
    418c:	30 e3       	ldi	r19, 0x30	; 48
    418e:	2a 95       	dec	r18
    4190:	e1 f7       	brne	.-8      	; 0x418a <__ftoa_engine+0x1e>
    4192:	08 95       	ret
    4194:	9f 3f       	cpi	r25, 0xFF	; 255
    4196:	30 f0       	brcs	.+12     	; 0x41a4 <__ftoa_engine+0x38>
    4198:	80 38       	cpi	r24, 0x80	; 128
    419a:	71 05       	cpc	r23, r1
    419c:	61 05       	cpc	r22, r1
    419e:	09 f0       	breq	.+2      	; 0x41a2 <__ftoa_engine+0x36>
    41a0:	3c 5f       	subi	r19, 0xFC	; 252
    41a2:	3c 5f       	subi	r19, 0xFC	; 252
    41a4:	3d 93       	st	X+, r19
    41a6:	91 30       	cpi	r25, 0x01	; 1
    41a8:	08 f0       	brcs	.+2      	; 0x41ac <__ftoa_engine+0x40>
    41aa:	80 68       	ori	r24, 0x80	; 128
    41ac:	91 1d       	adc	r25, r1
    41ae:	df 93       	push	r29
    41b0:	cf 93       	push	r28
    41b2:	1f 93       	push	r17
    41b4:	0f 93       	push	r16
    41b6:	ff 92       	push	r15
    41b8:	ef 92       	push	r14
    41ba:	19 2f       	mov	r17, r25
    41bc:	98 7f       	andi	r25, 0xF8	; 248
    41be:	96 95       	lsr	r25
    41c0:	e9 2f       	mov	r30, r25
    41c2:	96 95       	lsr	r25
    41c4:	96 95       	lsr	r25
    41c6:	e9 0f       	add	r30, r25
    41c8:	ff 27       	eor	r31, r31
    41ca:	e8 59       	subi	r30, 0x98	; 152
    41cc:	fe 4f       	sbci	r31, 0xFE	; 254
    41ce:	99 27       	eor	r25, r25
    41d0:	33 27       	eor	r19, r19
    41d2:	ee 24       	eor	r14, r14
    41d4:	ff 24       	eor	r15, r15
    41d6:	a7 01       	movw	r20, r14
    41d8:	e7 01       	movw	r28, r14
    41da:	05 90       	lpm	r0, Z+
    41dc:	08 94       	sec
    41de:	07 94       	ror	r0
    41e0:	28 f4       	brcc	.+10     	; 0x41ec <__ftoa_engine+0x80>
    41e2:	36 0f       	add	r19, r22
    41e4:	e7 1e       	adc	r14, r23
    41e6:	f8 1e       	adc	r15, r24
    41e8:	49 1f       	adc	r20, r25
    41ea:	51 1d       	adc	r21, r1
    41ec:	66 0f       	add	r22, r22
    41ee:	77 1f       	adc	r23, r23
    41f0:	88 1f       	adc	r24, r24
    41f2:	99 1f       	adc	r25, r25
    41f4:	06 94       	lsr	r0
    41f6:	a1 f7       	brne	.-24     	; 0x41e0 <__ftoa_engine+0x74>
    41f8:	05 90       	lpm	r0, Z+
    41fa:	07 94       	ror	r0
    41fc:	28 f4       	brcc	.+10     	; 0x4208 <__ftoa_engine+0x9c>
    41fe:	e7 0e       	add	r14, r23
    4200:	f8 1e       	adc	r15, r24
    4202:	49 1f       	adc	r20, r25
    4204:	56 1f       	adc	r21, r22
    4206:	c1 1d       	adc	r28, r1
    4208:	77 0f       	add	r23, r23
    420a:	88 1f       	adc	r24, r24
    420c:	99 1f       	adc	r25, r25
    420e:	66 1f       	adc	r22, r22
    4210:	06 94       	lsr	r0
    4212:	a1 f7       	brne	.-24     	; 0x41fc <__ftoa_engine+0x90>
    4214:	05 90       	lpm	r0, Z+
    4216:	07 94       	ror	r0
    4218:	28 f4       	brcc	.+10     	; 0x4224 <__ftoa_engine+0xb8>
    421a:	f8 0e       	add	r15, r24
    421c:	49 1f       	adc	r20, r25
    421e:	56 1f       	adc	r21, r22
    4220:	c7 1f       	adc	r28, r23
    4222:	d1 1d       	adc	r29, r1
    4224:	88 0f       	add	r24, r24
    4226:	99 1f       	adc	r25, r25
    4228:	66 1f       	adc	r22, r22
    422a:	77 1f       	adc	r23, r23
    422c:	06 94       	lsr	r0
    422e:	a1 f7       	brne	.-24     	; 0x4218 <__ftoa_engine+0xac>
    4230:	05 90       	lpm	r0, Z+
    4232:	07 94       	ror	r0
    4234:	20 f4       	brcc	.+8      	; 0x423e <__ftoa_engine+0xd2>
    4236:	49 0f       	add	r20, r25
    4238:	56 1f       	adc	r21, r22
    423a:	c7 1f       	adc	r28, r23
    423c:	d8 1f       	adc	r29, r24
    423e:	99 0f       	add	r25, r25
    4240:	66 1f       	adc	r22, r22
    4242:	77 1f       	adc	r23, r23
    4244:	88 1f       	adc	r24, r24
    4246:	06 94       	lsr	r0
    4248:	a9 f7       	brne	.-22     	; 0x4234 <__ftoa_engine+0xc8>
    424a:	84 91       	lpm	r24, Z
    424c:	10 95       	com	r17
    424e:	17 70       	andi	r17, 0x07	; 7
    4250:	41 f0       	breq	.+16     	; 0x4262 <__ftoa_engine+0xf6>
    4252:	d6 95       	lsr	r29
    4254:	c7 95       	ror	r28
    4256:	57 95       	ror	r21
    4258:	47 95       	ror	r20
    425a:	f7 94       	ror	r15
    425c:	e7 94       	ror	r14
    425e:	1a 95       	dec	r17
    4260:	c1 f7       	brne	.-16     	; 0x4252 <__ftoa_engine+0xe6>
    4262:	ee e0       	ldi	r30, 0x0E	; 14
    4264:	f1 e0       	ldi	r31, 0x01	; 1
    4266:	68 94       	set
    4268:	15 90       	lpm	r1, Z+
    426a:	15 91       	lpm	r17, Z+
    426c:	35 91       	lpm	r19, Z+
    426e:	65 91       	lpm	r22, Z+
    4270:	95 91       	lpm	r25, Z+
    4272:	05 90       	lpm	r0, Z+
    4274:	7f e2       	ldi	r23, 0x2F	; 47
    4276:	73 95       	inc	r23
    4278:	e1 18       	sub	r14, r1
    427a:	f1 0a       	sbc	r15, r17
    427c:	43 0b       	sbc	r20, r19
    427e:	56 0b       	sbc	r21, r22
    4280:	c9 0b       	sbc	r28, r25
    4282:	d0 09       	sbc	r29, r0
    4284:	c0 f7       	brcc	.-16     	; 0x4276 <__ftoa_engine+0x10a>
    4286:	e1 0c       	add	r14, r1
    4288:	f1 1e       	adc	r15, r17
    428a:	43 1f       	adc	r20, r19
    428c:	56 1f       	adc	r21, r22
    428e:	c9 1f       	adc	r28, r25
    4290:	d0 1d       	adc	r29, r0
    4292:	7e f4       	brtc	.+30     	; 0x42b2 <__ftoa_engine+0x146>
    4294:	70 33       	cpi	r23, 0x30	; 48
    4296:	11 f4       	brne	.+4      	; 0x429c <__ftoa_engine+0x130>
    4298:	8a 95       	dec	r24
    429a:	e6 cf       	rjmp	.-52     	; 0x4268 <__ftoa_engine+0xfc>
    429c:	e8 94       	clt
    429e:	01 50       	subi	r16, 0x01	; 1
    42a0:	30 f0       	brcs	.+12     	; 0x42ae <__ftoa_engine+0x142>
    42a2:	08 0f       	add	r16, r24
    42a4:	0a f4       	brpl	.+2      	; 0x42a8 <__ftoa_engine+0x13c>
    42a6:	00 27       	eor	r16, r16
    42a8:	02 17       	cp	r16, r18
    42aa:	08 f4       	brcc	.+2      	; 0x42ae <__ftoa_engine+0x142>
    42ac:	20 2f       	mov	r18, r16
    42ae:	23 95       	inc	r18
    42b0:	02 2f       	mov	r16, r18
    42b2:	7a 33       	cpi	r23, 0x3A	; 58
    42b4:	28 f0       	brcs	.+10     	; 0x42c0 <__ftoa_engine+0x154>
    42b6:	79 e3       	ldi	r23, 0x39	; 57
    42b8:	7d 93       	st	X+, r23
    42ba:	2a 95       	dec	r18
    42bc:	e9 f7       	brne	.-6      	; 0x42b8 <__ftoa_engine+0x14c>
    42be:	10 c0       	rjmp	.+32     	; 0x42e0 <__ftoa_engine+0x174>
    42c0:	7d 93       	st	X+, r23
    42c2:	2a 95       	dec	r18
    42c4:	89 f6       	brne	.-94     	; 0x4268 <__ftoa_engine+0xfc>
    42c6:	06 94       	lsr	r0
    42c8:	97 95       	ror	r25
    42ca:	67 95       	ror	r22
    42cc:	37 95       	ror	r19
    42ce:	17 95       	ror	r17
    42d0:	17 94       	ror	r1
    42d2:	e1 18       	sub	r14, r1
    42d4:	f1 0a       	sbc	r15, r17
    42d6:	43 0b       	sbc	r20, r19
    42d8:	56 0b       	sbc	r21, r22
    42da:	c9 0b       	sbc	r28, r25
    42dc:	d0 09       	sbc	r29, r0
    42de:	98 f0       	brcs	.+38     	; 0x4306 <__ftoa_engine+0x19a>
    42e0:	23 95       	inc	r18
    42e2:	7e 91       	ld	r23, -X
    42e4:	73 95       	inc	r23
    42e6:	7a 33       	cpi	r23, 0x3A	; 58
    42e8:	08 f0       	brcs	.+2      	; 0x42ec <__ftoa_engine+0x180>
    42ea:	70 e3       	ldi	r23, 0x30	; 48
    42ec:	7c 93       	st	X, r23
    42ee:	20 13       	cpse	r18, r16
    42f0:	b8 f7       	brcc	.-18     	; 0x42e0 <__ftoa_engine+0x174>
    42f2:	7e 91       	ld	r23, -X
    42f4:	70 61       	ori	r23, 0x10	; 16
    42f6:	7d 93       	st	X+, r23
    42f8:	30 f0       	brcs	.+12     	; 0x4306 <__ftoa_engine+0x19a>
    42fa:	83 95       	inc	r24
    42fc:	71 e3       	ldi	r23, 0x31	; 49
    42fe:	7d 93       	st	X+, r23
    4300:	70 e3       	ldi	r23, 0x30	; 48
    4302:	2a 95       	dec	r18
    4304:	e1 f7       	brne	.-8      	; 0x42fe <__ftoa_engine+0x192>
    4306:	11 24       	eor	r1, r1
    4308:	ef 90       	pop	r14
    430a:	ff 90       	pop	r15
    430c:	0f 91       	pop	r16
    430e:	1f 91       	pop	r17
    4310:	cf 91       	pop	r28
    4312:	df 91       	pop	r29
    4314:	99 27       	eor	r25, r25
    4316:	87 fd       	sbrc	r24, 7
    4318:	90 95       	com	r25
    431a:	08 95       	ret

0000431c <isspace>:
    431c:	91 11       	cpse	r25, r1
    431e:	4e c1       	rjmp	.+668    	; 0x45bc <__ctype_isfalse>
    4320:	80 32       	cpi	r24, 0x20	; 32
    4322:	19 f0       	breq	.+6      	; 0x432a <isspace+0xe>
    4324:	89 50       	subi	r24, 0x09	; 9
    4326:	85 50       	subi	r24, 0x05	; 5
    4328:	d0 f7       	brcc	.-12     	; 0x431e <isspace+0x2>
    432a:	08 95       	ret

0000432c <tolower>:
    432c:	91 11       	cpse	r25, r1
    432e:	08 95       	ret
    4330:	81 54       	subi	r24, 0x41	; 65
    4332:	8a 51       	subi	r24, 0x1A	; 26
    4334:	08 f4       	brcc	.+2      	; 0x4338 <tolower+0xc>
    4336:	80 5e       	subi	r24, 0xE0	; 224
    4338:	85 5a       	subi	r24, 0xA5	; 165
    433a:	08 95       	ret

0000433c <strchr_P>:
    433c:	fc 01       	movw	r30, r24
    433e:	05 90       	lpm	r0, Z+
    4340:	06 16       	cp	r0, r22
    4342:	21 f0       	breq	.+8      	; 0x434c <strchr_P+0x10>
    4344:	00 20       	and	r0, r0
    4346:	d9 f7       	brne	.-10     	; 0x433e <strchr_P+0x2>
    4348:	c0 01       	movw	r24, r0
    434a:	08 95       	ret
    434c:	31 97       	sbiw	r30, 0x01	; 1
    434e:	cf 01       	movw	r24, r30
    4350:	08 95       	ret

00004352 <strnlen_P>:
    4352:	fc 01       	movw	r30, r24
    4354:	05 90       	lpm	r0, Z+
    4356:	61 50       	subi	r22, 0x01	; 1
    4358:	70 40       	sbci	r23, 0x00	; 0
    435a:	01 10       	cpse	r0, r1
    435c:	d8 f7       	brcc	.-10     	; 0x4354 <strnlen_P+0x2>
    435e:	80 95       	com	r24
    4360:	90 95       	com	r25
    4362:	8e 0f       	add	r24, r30
    4364:	9f 1f       	adc	r25, r31
    4366:	08 95       	ret

00004368 <strncmp>:
    4368:	fb 01       	movw	r30, r22
    436a:	dc 01       	movw	r26, r24
    436c:	41 50       	subi	r20, 0x01	; 1
    436e:	50 40       	sbci	r21, 0x00	; 0
    4370:	30 f0       	brcs	.+12     	; 0x437e <strncmp+0x16>
    4372:	8d 91       	ld	r24, X+
    4374:	01 90       	ld	r0, Z+
    4376:	80 19       	sub	r24, r0
    4378:	19 f4       	brne	.+6      	; 0x4380 <strncmp+0x18>
    437a:	00 20       	and	r0, r0
    437c:	b9 f7       	brne	.-18     	; 0x436c <strncmp+0x4>
    437e:	88 1b       	sub	r24, r24
    4380:	99 0b       	sbc	r25, r25
    4382:	08 95       	ret

00004384 <strnlen>:
    4384:	fc 01       	movw	r30, r24
    4386:	61 50       	subi	r22, 0x01	; 1
    4388:	70 40       	sbci	r23, 0x00	; 0
    438a:	01 90       	ld	r0, Z+
    438c:	01 10       	cpse	r0, r1
    438e:	d8 f7       	brcc	.-10     	; 0x4386 <strnlen+0x2>
    4390:	80 95       	com	r24
    4392:	90 95       	com	r25
    4394:	8e 0f       	add	r24, r30
    4396:	9f 1f       	adc	r25, r31
    4398:	08 95       	ret

0000439a <fgetc>:
    439a:	cf 93       	push	r28
    439c:	df 93       	push	r29
    439e:	ec 01       	movw	r28, r24
    43a0:	2b 81       	ldd	r18, Y+3	; 0x03
    43a2:	20 ff       	sbrs	r18, 0
    43a4:	33 c0       	rjmp	.+102    	; 0x440c <fgetc+0x72>
    43a6:	26 ff       	sbrs	r18, 6
    43a8:	0a c0       	rjmp	.+20     	; 0x43be <fgetc+0x24>
    43aa:	2f 7b       	andi	r18, 0xBF	; 191
    43ac:	2b 83       	std	Y+3, r18	; 0x03
    43ae:	8e 81       	ldd	r24, Y+6	; 0x06
    43b0:	9f 81       	ldd	r25, Y+7	; 0x07
    43b2:	01 96       	adiw	r24, 0x01	; 1
    43b4:	9f 83       	std	Y+7, r25	; 0x07
    43b6:	8e 83       	std	Y+6, r24	; 0x06
    43b8:	8a 81       	ldd	r24, Y+2	; 0x02
    43ba:	90 e0       	ldi	r25, 0x00	; 0
    43bc:	29 c0       	rjmp	.+82     	; 0x4410 <fgetc+0x76>
    43be:	22 ff       	sbrs	r18, 2
    43c0:	0f c0       	rjmp	.+30     	; 0x43e0 <fgetc+0x46>
    43c2:	e8 81       	ld	r30, Y
    43c4:	f9 81       	ldd	r31, Y+1	; 0x01
    43c6:	80 81       	ld	r24, Z
    43c8:	08 2e       	mov	r0, r24
    43ca:	00 0c       	add	r0, r0
    43cc:	99 0b       	sbc	r25, r25
    43ce:	00 97       	sbiw	r24, 0x00	; 0
    43d0:	19 f4       	brne	.+6      	; 0x43d8 <fgetc+0x3e>
    43d2:	20 62       	ori	r18, 0x20	; 32
    43d4:	2b 83       	std	Y+3, r18	; 0x03
    43d6:	1a c0       	rjmp	.+52     	; 0x440c <fgetc+0x72>
    43d8:	31 96       	adiw	r30, 0x01	; 1
    43da:	f9 83       	std	Y+1, r31	; 0x01
    43dc:	e8 83       	st	Y, r30
    43de:	0e c0       	rjmp	.+28     	; 0x43fc <fgetc+0x62>
    43e0:	ea 85       	ldd	r30, Y+10	; 0x0a
    43e2:	fb 85       	ldd	r31, Y+11	; 0x0b
    43e4:	09 95       	icall
    43e6:	97 ff       	sbrs	r25, 7
    43e8:	09 c0       	rjmp	.+18     	; 0x43fc <fgetc+0x62>
    43ea:	2b 81       	ldd	r18, Y+3	; 0x03
    43ec:	01 96       	adiw	r24, 0x01	; 1
    43ee:	11 f0       	breq	.+4      	; 0x43f4 <fgetc+0x5a>
    43f0:	80 e2       	ldi	r24, 0x20	; 32
    43f2:	01 c0       	rjmp	.+2      	; 0x43f6 <fgetc+0x5c>
    43f4:	80 e1       	ldi	r24, 0x10	; 16
    43f6:	82 2b       	or	r24, r18
    43f8:	8b 83       	std	Y+3, r24	; 0x03
    43fa:	08 c0       	rjmp	.+16     	; 0x440c <fgetc+0x72>
    43fc:	2e 81       	ldd	r18, Y+6	; 0x06
    43fe:	3f 81       	ldd	r19, Y+7	; 0x07
    4400:	2f 5f       	subi	r18, 0xFF	; 255
    4402:	3f 4f       	sbci	r19, 0xFF	; 255
    4404:	3f 83       	std	Y+7, r19	; 0x07
    4406:	2e 83       	std	Y+6, r18	; 0x06
    4408:	99 27       	eor	r25, r25
    440a:	02 c0       	rjmp	.+4      	; 0x4410 <fgetc+0x76>
    440c:	8f ef       	ldi	r24, 0xFF	; 255
    440e:	9f ef       	ldi	r25, 0xFF	; 255
    4410:	df 91       	pop	r29
    4412:	cf 91       	pop	r28
    4414:	08 95       	ret

00004416 <fputc>:
    4416:	0f 93       	push	r16
    4418:	1f 93       	push	r17
    441a:	cf 93       	push	r28
    441c:	df 93       	push	r29
    441e:	fb 01       	movw	r30, r22
    4420:	23 81       	ldd	r18, Z+3	; 0x03
    4422:	21 fd       	sbrc	r18, 1
    4424:	03 c0       	rjmp	.+6      	; 0x442c <fputc+0x16>
    4426:	8f ef       	ldi	r24, 0xFF	; 255
    4428:	9f ef       	ldi	r25, 0xFF	; 255
    442a:	2c c0       	rjmp	.+88     	; 0x4484 <fputc+0x6e>
    442c:	22 ff       	sbrs	r18, 2
    442e:	16 c0       	rjmp	.+44     	; 0x445c <fputc+0x46>
    4430:	46 81       	ldd	r20, Z+6	; 0x06
    4432:	57 81       	ldd	r21, Z+7	; 0x07
    4434:	24 81       	ldd	r18, Z+4	; 0x04
    4436:	35 81       	ldd	r19, Z+5	; 0x05
    4438:	42 17       	cp	r20, r18
    443a:	53 07       	cpc	r21, r19
    443c:	44 f4       	brge	.+16     	; 0x444e <fputc+0x38>
    443e:	a0 81       	ld	r26, Z
    4440:	b1 81       	ldd	r27, Z+1	; 0x01
    4442:	9d 01       	movw	r18, r26
    4444:	2f 5f       	subi	r18, 0xFF	; 255
    4446:	3f 4f       	sbci	r19, 0xFF	; 255
    4448:	31 83       	std	Z+1, r19	; 0x01
    444a:	20 83       	st	Z, r18
    444c:	8c 93       	st	X, r24
    444e:	26 81       	ldd	r18, Z+6	; 0x06
    4450:	37 81       	ldd	r19, Z+7	; 0x07
    4452:	2f 5f       	subi	r18, 0xFF	; 255
    4454:	3f 4f       	sbci	r19, 0xFF	; 255
    4456:	37 83       	std	Z+7, r19	; 0x07
    4458:	26 83       	std	Z+6, r18	; 0x06
    445a:	14 c0       	rjmp	.+40     	; 0x4484 <fputc+0x6e>
    445c:	8b 01       	movw	r16, r22
    445e:	ec 01       	movw	r28, r24
    4460:	fb 01       	movw	r30, r22
    4462:	00 84       	ldd	r0, Z+8	; 0x08
    4464:	f1 85       	ldd	r31, Z+9	; 0x09
    4466:	e0 2d       	mov	r30, r0
    4468:	09 95       	icall
    446a:	89 2b       	or	r24, r25
    446c:	e1 f6       	brne	.-72     	; 0x4426 <fputc+0x10>
    446e:	d8 01       	movw	r26, r16
    4470:	16 96       	adiw	r26, 0x06	; 6
    4472:	8d 91       	ld	r24, X+
    4474:	9c 91       	ld	r25, X
    4476:	17 97       	sbiw	r26, 0x07	; 7
    4478:	01 96       	adiw	r24, 0x01	; 1
    447a:	17 96       	adiw	r26, 0x07	; 7
    447c:	9c 93       	st	X, r25
    447e:	8e 93       	st	-X, r24
    4480:	16 97       	sbiw	r26, 0x06	; 6
    4482:	ce 01       	movw	r24, r28
    4484:	df 91       	pop	r29
    4486:	cf 91       	pop	r28
    4488:	1f 91       	pop	r17
    448a:	0f 91       	pop	r16
    448c:	08 95       	ret

0000448e <sprintf>:
    448e:	ae e0       	ldi	r26, 0x0E	; 14
    4490:	b0 e0       	ldi	r27, 0x00	; 0
    4492:	ec e4       	ldi	r30, 0x4C	; 76
    4494:	f2 e2       	ldi	r31, 0x22	; 34
    4496:	41 ce       	rjmp	.-894    	; 0x411a <__prologue_saves__+0x1c>
    4498:	0d 89       	ldd	r16, Y+21	; 0x15
    449a:	1e 89       	ldd	r17, Y+22	; 0x16
    449c:	86 e0       	ldi	r24, 0x06	; 6
    449e:	8c 83       	std	Y+4, r24	; 0x04
    44a0:	1a 83       	std	Y+2, r17	; 0x02
    44a2:	09 83       	std	Y+1, r16	; 0x01
    44a4:	8f ef       	ldi	r24, 0xFF	; 255
    44a6:	9f e7       	ldi	r25, 0x7F	; 127
    44a8:	9e 83       	std	Y+6, r25	; 0x06
    44aa:	8d 83       	std	Y+5, r24	; 0x05
    44ac:	ae 01       	movw	r20, r28
    44ae:	47 5e       	subi	r20, 0xE7	; 231
    44b0:	5f 4f       	sbci	r21, 0xFF	; 255
    44b2:	6f 89       	ldd	r22, Y+23	; 0x17
    44b4:	78 8d       	ldd	r23, Y+24	; 0x18
    44b6:	ce 01       	movw	r24, r28
    44b8:	01 96       	adiw	r24, 0x01	; 1
    44ba:	0e 94 43 19 	call	0x3286	; 0x3286 <vfprintf>
    44be:	ef 81       	ldd	r30, Y+7	; 0x07
    44c0:	f8 85       	ldd	r31, Y+8	; 0x08
    44c2:	e0 0f       	add	r30, r16
    44c4:	f1 1f       	adc	r31, r17
    44c6:	10 82       	st	Z, r1
    44c8:	2e 96       	adiw	r28, 0x0e	; 14
    44ca:	e4 e0       	ldi	r30, 0x04	; 4
    44cc:	42 ce       	rjmp	.-892    	; 0x4152 <__epilogue_restores__+0x1c>

000044ce <ungetc>:
    44ce:	fb 01       	movw	r30, r22
    44d0:	23 81       	ldd	r18, Z+3	; 0x03
    44d2:	20 ff       	sbrs	r18, 0
    44d4:	12 c0       	rjmp	.+36     	; 0x44fa <ungetc+0x2c>
    44d6:	26 fd       	sbrc	r18, 6
    44d8:	10 c0       	rjmp	.+32     	; 0x44fa <ungetc+0x2c>
    44da:	8f 3f       	cpi	r24, 0xFF	; 255
    44dc:	3f ef       	ldi	r19, 0xFF	; 255
    44de:	93 07       	cpc	r25, r19
    44e0:	61 f0       	breq	.+24     	; 0x44fa <ungetc+0x2c>
    44e2:	82 83       	std	Z+2, r24	; 0x02
    44e4:	2f 7d       	andi	r18, 0xDF	; 223
    44e6:	20 64       	ori	r18, 0x40	; 64
    44e8:	23 83       	std	Z+3, r18	; 0x03
    44ea:	26 81       	ldd	r18, Z+6	; 0x06
    44ec:	37 81       	ldd	r19, Z+7	; 0x07
    44ee:	21 50       	subi	r18, 0x01	; 1
    44f0:	31 09       	sbc	r19, r1
    44f2:	37 83       	std	Z+7, r19	; 0x07
    44f4:	26 83       	std	Z+6, r18	; 0x06
    44f6:	99 27       	eor	r25, r25
    44f8:	08 95       	ret
    44fa:	8f ef       	ldi	r24, 0xFF	; 255
    44fc:	9f ef       	ldi	r25, 0xFF	; 255
    44fe:	08 95       	ret

00004500 <__ultoa_invert>:
    4500:	fa 01       	movw	r30, r20
    4502:	aa 27       	eor	r26, r26
    4504:	28 30       	cpi	r18, 0x08	; 8
    4506:	51 f1       	breq	.+84     	; 0x455c <__ultoa_invert+0x5c>
    4508:	20 31       	cpi	r18, 0x10	; 16
    450a:	81 f1       	breq	.+96     	; 0x456c <__ultoa_invert+0x6c>
    450c:	e8 94       	clt
    450e:	6f 93       	push	r22
    4510:	6e 7f       	andi	r22, 0xFE	; 254
    4512:	6e 5f       	subi	r22, 0xFE	; 254
    4514:	7f 4f       	sbci	r23, 0xFF	; 255
    4516:	8f 4f       	sbci	r24, 0xFF	; 255
    4518:	9f 4f       	sbci	r25, 0xFF	; 255
    451a:	af 4f       	sbci	r26, 0xFF	; 255
    451c:	b1 e0       	ldi	r27, 0x01	; 1
    451e:	3e d0       	rcall	.+124    	; 0x459c <__ultoa_invert+0x9c>
    4520:	b4 e0       	ldi	r27, 0x04	; 4
    4522:	3c d0       	rcall	.+120    	; 0x459c <__ultoa_invert+0x9c>
    4524:	67 0f       	add	r22, r23
    4526:	78 1f       	adc	r23, r24
    4528:	89 1f       	adc	r24, r25
    452a:	9a 1f       	adc	r25, r26
    452c:	a1 1d       	adc	r26, r1
    452e:	68 0f       	add	r22, r24
    4530:	79 1f       	adc	r23, r25
    4532:	8a 1f       	adc	r24, r26
    4534:	91 1d       	adc	r25, r1
    4536:	a1 1d       	adc	r26, r1
    4538:	6a 0f       	add	r22, r26
    453a:	71 1d       	adc	r23, r1
    453c:	81 1d       	adc	r24, r1
    453e:	91 1d       	adc	r25, r1
    4540:	a1 1d       	adc	r26, r1
    4542:	20 d0       	rcall	.+64     	; 0x4584 <__ultoa_invert+0x84>
    4544:	09 f4       	brne	.+2      	; 0x4548 <__ultoa_invert+0x48>
    4546:	68 94       	set
    4548:	3f 91       	pop	r19
    454a:	2a e0       	ldi	r18, 0x0A	; 10
    454c:	26 9f       	mul	r18, r22
    454e:	11 24       	eor	r1, r1
    4550:	30 19       	sub	r19, r0
    4552:	30 5d       	subi	r19, 0xD0	; 208
    4554:	31 93       	st	Z+, r19
    4556:	de f6       	brtc	.-74     	; 0x450e <__ultoa_invert+0xe>
    4558:	cf 01       	movw	r24, r30
    455a:	08 95       	ret
    455c:	46 2f       	mov	r20, r22
    455e:	47 70       	andi	r20, 0x07	; 7
    4560:	40 5d       	subi	r20, 0xD0	; 208
    4562:	41 93       	st	Z+, r20
    4564:	b3 e0       	ldi	r27, 0x03	; 3
    4566:	0f d0       	rcall	.+30     	; 0x4586 <__ultoa_invert+0x86>
    4568:	c9 f7       	brne	.-14     	; 0x455c <__ultoa_invert+0x5c>
    456a:	f6 cf       	rjmp	.-20     	; 0x4558 <__ultoa_invert+0x58>
    456c:	46 2f       	mov	r20, r22
    456e:	4f 70       	andi	r20, 0x0F	; 15
    4570:	40 5d       	subi	r20, 0xD0	; 208
    4572:	4a 33       	cpi	r20, 0x3A	; 58
    4574:	18 f0       	brcs	.+6      	; 0x457c <__ultoa_invert+0x7c>
    4576:	49 5d       	subi	r20, 0xD9	; 217
    4578:	31 fd       	sbrc	r19, 1
    457a:	40 52       	subi	r20, 0x20	; 32
    457c:	41 93       	st	Z+, r20
    457e:	02 d0       	rcall	.+4      	; 0x4584 <__ultoa_invert+0x84>
    4580:	a9 f7       	brne	.-22     	; 0x456c <__ultoa_invert+0x6c>
    4582:	ea cf       	rjmp	.-44     	; 0x4558 <__ultoa_invert+0x58>
    4584:	b4 e0       	ldi	r27, 0x04	; 4
    4586:	a6 95       	lsr	r26
    4588:	97 95       	ror	r25
    458a:	87 95       	ror	r24
    458c:	77 95       	ror	r23
    458e:	67 95       	ror	r22
    4590:	ba 95       	dec	r27
    4592:	c9 f7       	brne	.-14     	; 0x4586 <__ultoa_invert+0x86>
    4594:	00 97       	sbiw	r24, 0x00	; 0
    4596:	61 05       	cpc	r22, r1
    4598:	71 05       	cpc	r23, r1
    459a:	08 95       	ret
    459c:	9b 01       	movw	r18, r22
    459e:	ac 01       	movw	r20, r24
    45a0:	0a 2e       	mov	r0, r26
    45a2:	06 94       	lsr	r0
    45a4:	57 95       	ror	r21
    45a6:	47 95       	ror	r20
    45a8:	37 95       	ror	r19
    45aa:	27 95       	ror	r18
    45ac:	ba 95       	dec	r27
    45ae:	c9 f7       	brne	.-14     	; 0x45a2 <__ultoa_invert+0xa2>
    45b0:	62 0f       	add	r22, r18
    45b2:	73 1f       	adc	r23, r19
    45b4:	84 1f       	adc	r24, r20
    45b6:	95 1f       	adc	r25, r21
    45b8:	a0 1d       	adc	r26, r0
    45ba:	08 95       	ret

000045bc <__ctype_isfalse>:
    45bc:	99 27       	eor	r25, r25
    45be:	88 27       	eor	r24, r24

000045c0 <__ctype_istrue>:
    45c0:	08 95       	ret

000045c2 <_exit>:
    45c2:	f8 94       	cli

000045c4 <__stop_program>:
    45c4:	ff cf       	rjmp	.-2      	; 0x45c4 <__stop_program>

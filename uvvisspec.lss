
uvvisspec.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000128  00800100  00004676  0000470a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004676  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000708  00800228  00800228  00004832  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00004832  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00004844  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000380  00000000  00000000  00004884  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000733d  00000000  00000000  00004c04  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002008  00000000  00000000  0000bf41  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003a1a  00000000  00000000  0000df49  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b98  00000000  00000000  00011964  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000293b  00000000  00000000  000124fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004761  00000000  00000000  00014e37  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004e8  00000000  00000000  00019598  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	e6 c7       	rjmp	.+4044   	; 0xfce <__ctors_end>
       2:	00 00       	nop
       4:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__bad_interrupt>
       8:	0c 94 04 08 	jmp	0x1008	; 0x1008 <__bad_interrupt>
       c:	fd c7       	rjmp	.+4090   	; 0x1008 <__bad_interrupt>
       e:	00 00       	nop
      10:	fb c7       	rjmp	.+4086   	; 0x1008 <__bad_interrupt>
      12:	00 00       	nop
      14:	f9 c7       	rjmp	.+4082   	; 0x1008 <__bad_interrupt>
      16:	00 00       	nop
      18:	f7 c7       	rjmp	.+4078   	; 0x1008 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	f5 c7       	rjmp	.+4074   	; 0x1008 <__bad_interrupt>
      1e:	00 00       	nop
      20:	f3 c7       	rjmp	.+4070   	; 0x1008 <__bad_interrupt>
      22:	00 00       	nop
      24:	f1 c7       	rjmp	.+4066   	; 0x1008 <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 b3 12 	jmp	0x2566	; 0x2566 <__vector_10>
      2c:	0c 94 80 13 	jmp	0x2700	; 0x2700 <__vector_11>
      30:	eb c7       	rjmp	.+4054   	; 0x1008 <__bad_interrupt>
      32:	00 00       	nop
      34:	e9 c7       	rjmp	.+4050   	; 0x1008 <__bad_interrupt>
      36:	00 00       	nop
      38:	e7 c7       	rjmp	.+4046   	; 0x1008 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	e5 c7       	rjmp	.+4042   	; 0x1008 <__bad_interrupt>
      3e:	00 00       	nop
      40:	e3 c7       	rjmp	.+4038   	; 0x1008 <__bad_interrupt>
      42:	00 00       	nop
      44:	e1 c7       	rjmp	.+4034   	; 0x1008 <__bad_interrupt>
      46:	00 00       	nop
      48:	df c7       	rjmp	.+4030   	; 0x1008 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	dd c7       	rjmp	.+4026   	; 0x1008 <__bad_interrupt>
      4e:	00 00       	nop
      50:	db c7       	rjmp	.+4022   	; 0x1008 <__bad_interrupt>
      52:	00 00       	nop
      54:	d9 c7       	rjmp	.+4018   	; 0x1008 <__bad_interrupt>
      56:	00 00       	nop
      58:	d7 c7       	rjmp	.+4014   	; 0x1008 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	d5 c7       	rjmp	.+4010   	; 0x1008 <__bad_interrupt>
      5e:	00 00       	nop
      60:	d3 c7       	rjmp	.+4006   	; 0x1008 <__bad_interrupt>
      62:	00 00       	nop
      64:	d1 c7       	rjmp	.+4002   	; 0x1008 <__bad_interrupt>
      66:	00 00       	nop
      68:	cf c7       	rjmp	.+3998   	; 0x1008 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	cd c7       	rjmp	.+3994   	; 0x1008 <__bad_interrupt>
      6e:	00 00       	nop
      70:	cb c7       	rjmp	.+3990   	; 0x1008 <__bad_interrupt>
      72:	00 00       	nop
      74:	c9 c7       	rjmp	.+3986   	; 0x1008 <__bad_interrupt>
      76:	00 00       	nop
      78:	c7 c7       	rjmp	.+3982   	; 0x1008 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	c5 c7       	rjmp	.+3978   	; 0x1008 <__bad_interrupt>
      7e:	00 00       	nop
      80:	c3 c7       	rjmp	.+3974   	; 0x1008 <__bad_interrupt>
      82:	00 00       	nop
      84:	c1 c7       	rjmp	.+3970   	; 0x1008 <__bad_interrupt>
      86:	00 00       	nop
      88:	bf c7       	rjmp	.+3966   	; 0x1008 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	bd c7       	rjmp	.+3962   	; 0x1008 <__bad_interrupt>
      8e:	00 00       	nop
      90:	bb c7       	rjmp	.+3958   	; 0x1008 <__bad_interrupt>
      92:	00 00       	nop
      94:	b9 c7       	rjmp	.+3954   	; 0x1008 <__bad_interrupt>
      96:	00 00       	nop
      98:	b7 c7       	rjmp	.+3950   	; 0x1008 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	b5 c7       	rjmp	.+3946   	; 0x1008 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	b3 c7       	rjmp	.+3942   	; 0x1008 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	b1 c7       	rjmp	.+3938   	; 0x1008 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	af c7       	rjmp	.+3934   	; 0x1008 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	08 00       	.word	0x0008	; ????
      ae:	00 00       	nop
      b0:	be 92       	st	-X, r11
      b2:	24 49       	sbci	r18, 0x94	; 148
      b4:	12 3e       	cpi	r17, 0xE2	; 226
      b6:	ab aa       	std	Y+51, r10	; 0x33
      b8:	aa 2a       	or	r10, r26
      ba:	be cd       	rjmp	.-1156   	; 0xfffffc38 <__eeprom_end+0xff7efc38>
      bc:	cc cc       	rjmp	.-1640   	; 0xfffffa56 <__eeprom_end+0xff7efa56>
      be:	4c 3e       	cpi	r20, 0xEC	; 236
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	be ab       	std	Y+54, r27	; 0x36
      c6:	aa aa       	std	Y+50, r10	; 0x32
      c8:	aa 3e       	cpi	r26, 0xEA	; 234
      ca:	00 00       	nop
      cc:	00 00       	nop
      ce:	bf 00       	.word	0x00bf	; ????
      d0:	00 00       	nop
      d2:	80 3f       	cpi	r24, 0xF0	; 240
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	00 08       	sbc	r0, r0
      da:	41 78       	andi	r20, 0x81	; 129
      dc:	d3 bb       	out	0x13, r29	; 19
      de:	43 87       	std	Z+11, r20	; 0x0b
      e0:	d1 13       	cpse	r29, r17
      e2:	3d 19       	sub	r19, r13
      e4:	0e 3c       	cpi	r16, 0xCE	; 206
      e6:	c3 bd       	out	0x23, r28	; 35
      e8:	42 82       	std	Z+2, r4	; 0x02
      ea:	ad 2b       	or	r26, r29
      ec:	3e 68       	ori	r19, 0x8E	; 142
      ee:	ec 82       	std	Y+4, r14	; 0x04
      f0:	76 be       	out	0x36, r7	; 54
      f2:	d9 8f       	std	Y+25, r29	; 0x19
      f4:	e1 a9       	ldd	r30, Z+49	; 0x31
      f6:	3e 4c       	sbci	r19, 0xCE	; 206
      f8:	80 ef       	ldi	r24, 0xF0	; 240
      fa:	ff be       	out	0x3f, r15	; 63
      fc:	01 c4       	rjmp	.+2050   	; 0x900 <spectralsensitivitycoeff+0x322>
      fe:	ff 7f       	andi	r31, 0xFF	; 255
     100:	3f 00       	.word	0x003f	; ????
     102:	00 00       	nop
     104:	00 00       	nop

00000106 <__trampolines_end>:
     106:	6e 61       	ori	r22, 0x1E	; 30
     108:	6e 00       	.word	0x006e	; ????

0000010a <__c.2332>:
     10a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     11a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     12a:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     13a:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     14a:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     15a:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     16a:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     17a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     18a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     19a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1aa:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1ba:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1ca:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1da:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1ea:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1fa:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000208 <wl_lut_1nm>:
     208:	02 00 02 00 02 00 03 00 03 00 03 00 04 00 04 00     ................
     218:	05 00 05 00 05 00 06 00 06 00 06 00 07 00 07 00     ................
     228:	08 00 08 00 08 00 09 00 09 00 09 00 0a 00 0a 00     ................
     238:	0b 00 0b 00 0b 00 0c 00 0c 00 0c 00 0d 00 0d 00     ................
     248:	0d 00 0e 00 0e 00 0f 00 0f 00 0f 00 10 00 10 00     ................
     258:	10 00 11 00 11 00 12 00 12 00 12 00 13 00 13 00     ................
     268:	13 00 14 00 14 00 15 00 15 00 15 00 16 00 16 00     ................
     278:	16 00 17 00 17 00 18 00 18 00 18 00 19 00 19 00     ................
     288:	1a 00 1a 00 1a 00 1b 00 1b 00 1b 00 1c 00 1c 00     ................
     298:	1d 00 1d 00 1d 00 1e 00 1e 00 1e 00 1f 00 1f 00     ................
     2a8:	20 00 20 00 20 00 21 00 21 00 22 00 22 00 22 00      . . .!.!.".".".
     2b8:	23 00 23 00 23 00 24 00 24 00 25 00 25 00 25 00     #.#.#.$.$.%.%.%.
     2c8:	26 00 26 00 27 00 27 00 27 00 28 00 28 00 28 00     &.&.'.'.'.(.(.(.
     2d8:	29 00 29 00 2a 00 2a 00 2a 00 2b 00 2b 00 2c 00     ).).*.*.*.+.+.,.
     2e8:	2c 00 2c 00 2d 00 2d 00 2e 00 2e 00 2e 00 2f 00     ,.,.-.-......./.
     2f8:	2f 00 2f 00 30 00 30 00 31 00 31 00 31 00 32 00     /./.0.0.1.1.1.2.
     308:	32 00 33 00 33 00 33 00 34 00 34 00 35 00 35 00     2.3.3.3.4.4.5.5.
     318:	35 00 36 00 36 00 37 00 37 00 37 00 38 00 38 00     5.6.6.7.7.7.8.8.
     328:	39 00 39 00 39 00 3a 00 3a 00 3b 00 3b 00 3b 00     9.9.9.:.:.;.;.;.
     338:	3c 00 3c 00 3d 00 3d 00 3d 00 3e 00 3e 00 3f 00     <.<.=.=.=.>.>.?.
     348:	3f 00 3f 00 40 00 40 00 41 00 41 00 41 00 42 00     ?.?.@.@.A.A.A.B.
     358:	42 00 43 00 43 00 43 00 44 00 44 00 45 00 45 00     B.C.C.C.D.D.E.E.
     368:	45 00 46 00 46 00 47 00 47 00 48 00 48 00 48 00     E.F.F.G.G.H.H.H.
     378:	49 00 49 00 4a 00 4a 00 4a 00 4b 00 4b 00 4c 00     I.I.J.J.J.K.K.L.
     388:	4c 00 4c 00 4d 00 4d 00 4e 00 4e 00 4f 00 4f 00     L.L.M.M.N.N.O.O.
     398:	4f 00 50 00 50 00 51 00 51 00 51 00 52 00 52 00     O.P.P.Q.Q.Q.R.R.
     3a8:	53 00 53 00 54 00 54 00 54 00 55 00 55 00 56 00     S.S.T.T.T.U.U.V.
     3b8:	56 00 57 00 57 00 57 00 58 00 58 00 59 00 59 00     V.W.W.W.X.X.Y.Y.
     3c8:	5a 00 5a 00 5a 00 5b 00 5b 00 5c 00 5c 00 5d 00     Z.Z.Z.[.[.\.\.].
     3d8:	5d 00 5d 00 5e 00 5e 00 5f 00 5f 00 60 00 60 00     ].].^.^._._.`.`.
     3e8:	60 00 61 00 61 00 62 00 62 00 63 00 63 00 63 00     `.a.a.b.b.c.c.c.
     3f8:	64 00 64 00 65 00 65 00 66 00 66 00 67 00 67 00     d.d.e.e.f.f.g.g.
     408:	67 00 68 00 68 00 69 00 69 00 6a 00 6a 00 6b 00     g.h.h.i.i.j.j.k.
     418:	6b 00 6b 00 6c 00 6c 00 6d 00 6d 00 6e 00 6e 00     k.k.l.l.m.m.n.n.
     428:	6f 00 6f 00 6f 00 70 00 70 00 71 00 71 00 72 00     o.o.o.p.p.q.q.r.
     438:	72 00 73 00 73 00 74 00 74 00 74 00 75 00 75 00     r.s.s.t.t.t.u.u.
     448:	76 00 76 00 77 00 77 00 78 00 78 00 79 00 79 00     v.v.w.w.x.x.y.y.
     458:	7a 00 7a 00 7a 00 7b 00 7b 00 7c 00 7c 00 7d 00     z.z.z.{.{.|.|.}.
     468:	7d 00 7e 00 7e 00 7f 00 7f 00 80 00 80 00 81 00     }.~.~...........
     478:	81 00 82 00 82 00 82 00 83 00 83 00 84 00 84 00     ................
     488:	85 00 85 00 86 00 86 00 87 00 87 00 88 00 88 00     ................
     498:	89 00 89 00 8a 00 8a 00 8b 00 8b 00 8c 00 8c 00     ................
     4a8:	8d 00 8d 00 8e 00 8e 00 8f 00 8f 00 90 00 90 00     ................
     4b8:	91 00 91 00 92 00 92 00 93 00 93 00 94 00 94 00     ................
     4c8:	95 00 95 00 96 00 96 00 97 00 97 00 98 00 98 00     ................
     4d8:	99 00 99 00 9a 00 9a 00 9b 00 9b 00 9c 00 9c 00     ................
     4e8:	9d 00 9d 00 9e 00 9e 00 9f 00 9f 00 a0 00 a0 00     ................
     4f8:	a1 00 a1 00 a2 00 a3 00 a3 00 a4 00 a4 00 a5 00     ................
     508:	a5 00 a6 00 a6 00 a7 00 a7 00 a8 00 a8 00 a9 00     ................
     518:	a9 00 aa 00 ab 00 ab 00 ac 00 ac 00 ad 00 ad 00     ................
     528:	ae 00 ae 00 af 00 af 00 b0 00 b1 00 b1 00 b2 00     ................
     538:	b2 00 b3 00 b3 00 b4 00 b4 00 b5 00 b6 00 b6 00     ................
     548:	b7 00 b7 00 b8 00 b8 00 b9 00 ba 00 ba 00 bb 00     ................
     558:	bb 00 bc 00 bc 00 bd 00 be 00 be 00 bf 00 bf 00     ................
     568:	c0 00 c0 00 c1 00 c2 00 c2 00 c3 00 c3 00 c4 00     ................
     578:	c5 00 c5 00 c6 00 c6 00 c7 00 c8 00 c8 00 c9 00     ................
     588:	c9 00 ca 00 cb 00 cb 00 cc 00 cc 00 cd 00 ce 00     ................
     598:	ce 00 cf 00 d0 00 d0 00 d1 00 d1 00 d2 00 d3 00     ................
     5a8:	d3 00 d4 00 d5 00 d5 00 d6 00 d6 00 d7 00 d8 00     ................
     5b8:	d8 00 d9 00 da 00 da 00 db 00 dc 00 dc 00 dd 00     ................
     5c8:	de 00 de 00 df 00 df 00 e0 00 e1 00 e1 00 e2 00     ................
     5d8:	e3 00 e3 00 e4 00                                   ......

000005de <spectralsensitivitycoeff>:
     5de:	55 27 91 4b 55 27 91 4b 55 27 91 4b 55 27 91 4b     U'.KU'.KU'.KU'.K
     5ee:	55 27 91 4b b6 2f 91 4b c1 59 91 4b 35 6b 91 4b     U'.K./.K.Y.K5k.K
     5fe:	5a 4f 91 4b 0f 08 90 4b 79 91 8d 4b e0 38 8b 4b     ZO.K...Ky..K.8.K
     60e:	d3 45 89 4b 1c b7 8a 4b 5e b8 8d 4b b3 46 91 4b     .E.K...K^..K.F.K
     61e:	f5 4d 95 4b bb 50 9b 4b 54 62 a1 4b 61 3c a7 4b     .M.K.P.KTb.Ka<.K
     62e:	4c b6 ab 4b 2e 0e ad 4b 98 cd ad 4b 94 06 ae 4b     L..K...K...K...K
     63e:	45 c7 ac 4b 53 32 aa 4b 82 9a a7 4b c6 44 a5 4b     E..KS2.K...K.D.K
     64e:	2a 67 a5 4b ac 03 a7 4b e1 51 a9 4b a2 5f ac 4b     *g.K...K.Q.K._.K
     65e:	b5 9a b3 4b 6c d8 bb 4b 82 6c c4 4b 31 0f cd 4b     ...Kl..K.l.K1..K
     66e:	cf ed d4 4b 73 81 dc 4b 7f a3 e3 4b ba 8f e9 4b     ...Ks..K...K...K
     67e:	6e 50 ec 4b 9b 5d ee 4b 71 b8 ef 4b 57 66 ef 4b     nP.K.].Kq..KWf.K
     68e:	46 5c ec 4b 27 da e8 4b 30 09 e5 4b 41 f4 e0 4b     F\.K'..K0..KA..K
     69e:	14 b9 dc 4b 5d ad d8 4b 2b fc d4 4b 38 4b d3 4b     ...K]..K+..K8K.K
     6ae:	ac bb d3 4b be 9c d4 4b 26 d3 d5 4b 9e 67 d7 4b     ...K...K&..K.g.K
     6be:	37 53 d9 4b 85 87 db 4b 26 16 de 4b c6 58 e2 4b     7S.K...K&..K.X.K
     6ce:	9c 16 e8 4b 0b 0e ee 4b 79 1a f4 4b 74 aa f9 4b     ...K...Ky..Kt..K
     6de:	98 b3 fe 4b 6e cd 01 4c 8c 2f 04 4c 6f 81 06 4c     ...Kn..L./.Lo..L
     6ee:	07 b6 08 4c 04 b0 0a 4c 61 54 0c 4c bc 86 0c 4c     ...L...LaT.L...L
     6fe:	e0 a4 0a 4c 43 69 08 4c a2 ee 05 4c a7 43 03 4c     ...LCi.L...L.C.L
     70e:	92 69 00 4c 74 20 fb 4b 51 8b f5 4b 60 58 f0 4b     .i.Lt .KQ..K`X.K
     71e:	e7 cb ec 4b 6e 99 e9 4b 16 c9 e6 4b e2 62 e4 4b     ...Kn..K...K.b.K
     72e:	73 81 e4 4b c6 2a e5 4b 8f 0e e6 4b 9d 10 e7 4b     s..K.*.K...K...K
     73e:	80 e2 e7 4b 7f 8e e8 4b cb 22 e9 4b 31 95 e9 4b     ...K...K.".K1..K
     74e:	0c 6f e9 4b 19 78 e8 4b 9b 5c e7 4b 83 25 e6 4b     .o.K.x.K.\.K.%.K
     75e:	d6 d8 e4 4b e0 5f e3 4b a4 e0 e1 4b 28 5f e0 4b     ...K._.K...K(_.K
     76e:	63 df de 4b b5 7e dd 4b 8e 2f dc 4b e2 e7 da 4b     c..K.~.K./.K...K
     77e:	29 a8 d9 4b 88 7a d8 4b 64 6d d7 4b 4f 6a d6 4b     )..K.z.Kdm.KOj.K
     78e:	59 72 d5 4b 8f 86 d4 4b c2 da d3 4b d4 46 d3 4b     Yr.K...K...K.F.K
     79e:	98 bf d2 4b c6 44 d2 4b eb ea d1 4b 4b cb d1 4b     ...K.D.K...KK..K
     7ae:	0d b1 d1 4b 64 97 d1 4b 97 79 d1 4b 62 25 d1 4b     ...Kd..K.y.Kb%.K
     7be:	e3 b5 d0 4b b7 3c d0 4b ff b9 cf 4b cf 28 cf 4b     ...K.<.K...K.(.K
     7ce:	65 5a ce 4b a0 86 cd 4b f0 b0 cc 4b b7 dc cb 4b     eZ.K...K...K...K
     7de:	9b 25 cb 4b 12 99 ca 4b 3d 0b ca 4b 87 76 c9 4b     .%.K...K=..K.v.K
     7ee:	77 d5 c8 4b 13 d3 c7 4b eb 8e c6 4b d0 3b c5 4b     w..K...K...K.;.K
     7fe:	6b dc c3 4b 58 73 c2 4b 6b e9 c0 4b 41 53 bf 4b     k..KXs.Kk..KAS.K
     80e:	df b8 bd 4b 7e 1b bc 4b 53 7c ba 4b f2 c1 b8 4b     ...K~..KS|.K...K
     81e:	81 09 b7 4b e2 5c b5 4b 61 c2 b3 4b 2a 40 b2 4b     ...K.\.Ka..K*@.K
     82e:	bb af b1 4b 42 46 b1 4b 5c df b0 4b f2 6c b0 4b     ...KBF.K\..K.l.K
     83e:	34 e1 af 4b f5 23 ae 4b 67 17 ac 4b 45 f7 a9 4b     4..K.#.Kg..KE..K
     84e:	48 ce a7 4b f7 a6 a5 4b cc de a3 4b f9 47 a2 4b     H..K...K...K.G.K
     85e:	d9 bd a0 4b 50 3f 9f 4b 46 cb 9d 4b 05 6c 9c 4b     ...KP?.KF..K.l.K
     86e:	8e 23 9b 4b 6b e7 99 4b f5 b9 98 4b 7b 9d 97 4b     .#.Kk..K...K{..K
     87e:	26 ab 96 4b 7e 54 96 4b e0 08 96 4b 1b c0 95 4b     &..K~T.K...K...K
     88e:	2c 72 95 4b 39 17 95 4b fc 1b 94 4b bb d7 92 4b     ,r.K9..K...K...K
     89e:	b2 87 91 4b c6 31 90 4b bd db 8e 4b f3 99 8d 4b     ...K.1.K...K...K
     8ae:	ff a0 8c 4b c6 b1 8b 4b 42 cc 8a 4b 6a f0 89 4b     ...K...KB..Kj..K
     8be:	35 1e 89 4b ec 6b 88 4b 77 d6 87 4b 2b 4d 87 4b     5..K.k.Kw..K+M.K
     8ce:	be d1 86 4b d9 65 86 4b 1e 0b 86 4b 84 40 86 4b     ...K.e.K...K.@.K
     8de:	f7 a3 86 4b 0b 0d 87 4b c3 74 87 4b 4c d4 87 4b     ...K...K.t.KL..K
     8ee:	f9 24 88 4b 07 b3 87 4b 84 1e 87 4b a6 7c 86 4b     .$.K...K...K.|.K
     8fe:	73 d1 85 4b d8 20 85 4b ad 6e 84 4b c4 f0 83 4b     s..K. .K.n.K...K
     90e:	b6 77 83 4b 4d fa 82 4b 1c 75 82 4b c9 e4 81 4b     .w.KM..K.u.K...K
     91e:	0f 46 81 4b ca 07 80 4b f3 1b 7d 4b a0 20 7a 4b     .F.K...K..}K. zK
     92e:	ee 2c 77 4b d8 4f 74 4b 02 98 71 4b b5 fe 6f 4b     .,wK.OtK..qK..oK
     93e:	d5 b7 6f 4b 92 9c 6f 4b c4 a3 6f 4b 74 c4 6f 4b     ..oK..oK..oKt.oK
     94e:	df f5 6f 4b 75 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ..oKu/pK./pK./pK
     95e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     96e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     97e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     98e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     99e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     9ae:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     9be:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     9ce:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     9de:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     9ee:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     9fe:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     a0e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     a1e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     a2e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     a3e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK
     a4e:	8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b 8a 2f 70 4b     ./pK./pK./pK./pK

00000a5e <wccoeff>:
     a5e:	00 00 98 43 7b 14 2e 40 c3 64 aa ba 3a 99 f2 b6     ...C{..@.d..:...
     a6e:	3f ed 24 32 78 a9 4a 2c                             ?.$2x.J,

00000a76 <name>:
     a76:	55 56 56 49 53 53 50 45 43 00                       UVVISSPEC.

00000a80 <model>:
     a80:	43 50 31 36 30 00                                   CP160.

00000a86 <serialnumber>:
     a86:	43 50 31 36 30 32 31 41 30 32 37 37 39 00           CP16021A02779.

00000a94 <wl_1nm>:
     a94:	36 01 37 01 38 01 39 01 3a 01 3b 01 3c 01 3d 01     6.7.8.9.:.;.<.=.
     aa4:	3e 01 3f 01 40 01 41 01 42 01 43 01 44 01 45 01     >.?.@.A.B.C.D.E.
     ab4:	46 01 47 01 48 01 49 01 4a 01 4b 01 4c 01 4d 01     F.G.H.I.J.K.L.M.
     ac4:	4e 01 4f 01 50 01 51 01 52 01 53 01 54 01 55 01     N.O.P.Q.R.S.T.U.
     ad4:	56 01 57 01 58 01 59 01 5a 01 5b 01 5c 01 5d 01     V.W.X.Y.Z.[.\.].
     ae4:	5e 01 5f 01 60 01 61 01 62 01 63 01 64 01 65 01     ^._.`.a.b.c.d.e.
     af4:	66 01 67 01 68 01 69 01 6a 01 6b 01 6c 01 6d 01     f.g.h.i.j.k.l.m.
     b04:	6e 01 6f 01 70 01 71 01 72 01 73 01 74 01 75 01     n.o.p.q.r.s.t.u.
     b14:	76 01 77 01 78 01 79 01 7a 01 7b 01 7c 01 7d 01     v.w.x.y.z.{.|.}.
     b24:	7e 01 7f 01 80 01 81 01 82 01 83 01 84 01 85 01     ~...............
     b34:	86 01 87 01 88 01 89 01 8a 01 8b 01 8c 01 8d 01     ................
     b44:	8e 01 8f 01 90 01 91 01 92 01 93 01 94 01 95 01     ................
     b54:	96 01 97 01 98 01 99 01 9a 01 9b 01 9c 01 9d 01     ................
     b64:	9e 01 9f 01 a0 01 a1 01 a2 01 a3 01 a4 01 a5 01     ................
     b74:	a6 01 a7 01 a8 01 a9 01 aa 01 ab 01 ac 01 ad 01     ................
     b84:	ae 01 af 01 b0 01 b1 01 b2 01 b3 01 b4 01 b5 01     ................
     b94:	b6 01 b7 01 b8 01 b9 01 ba 01 bb 01 bc 01 bd 01     ................
     ba4:	be 01 bf 01 c0 01 c1 01 c2 01 c3 01 c4 01 c5 01     ................
     bb4:	c6 01 c7 01 c8 01 c9 01 ca 01 cb 01 cc 01 cd 01     ................
     bc4:	ce 01 cf 01 d0 01 d1 01 d2 01 d3 01 d4 01 d5 01     ................
     bd4:	d6 01 d7 01 d8 01 d9 01 da 01 db 01 dc 01 dd 01     ................
     be4:	de 01 df 01 e0 01 e1 01 e2 01 e3 01 e4 01 e5 01     ................
     bf4:	e6 01 e7 01 e8 01 e9 01 ea 01 eb 01 ec 01 ed 01     ................
     c04:	ee 01 ef 01 f0 01 f1 01 f2 01 f3 01 f4 01 f5 01     ................
     c14:	f6 01 f7 01 f8 01 f9 01 fa 01 fb 01 fc 01 fd 01     ................
     c24:	fe 01 ff 01 00 02 01 02 02 02 03 02 04 02 05 02     ................
     c34:	06 02 07 02 08 02 09 02 0a 02 0b 02 0c 02 0d 02     ................
     c44:	0e 02 0f 02 10 02 11 02 12 02 13 02 14 02 15 02     ................
     c54:	16 02 17 02 18 02 19 02 1a 02 1b 02 1c 02 1d 02     ................
     c64:	1e 02 1f 02 20 02 21 02 22 02 23 02 24 02 25 02     .... .!.".#.$.%.
     c74:	26 02 27 02 28 02 29 02 2a 02 2b 02 2c 02 2d 02     &.'.(.).*.+.,.-.
     c84:	2e 02 2f 02 30 02 31 02 32 02 33 02 34 02 35 02     ../.0.1.2.3.4.5.
     c94:	36 02 37 02 38 02 39 02 3a 02 3b 02 3c 02 3d 02     6.7.8.9.:.;.<.=.
     ca4:	3e 02 3f 02 40 02 41 02 42 02 43 02 44 02 45 02     >.?.@.A.B.C.D.E.
     cb4:	46 02 47 02 48 02 49 02 4a 02 4b 02 4c 02 4d 02     F.G.H.I.J.K.L.M.
     cc4:	4e 02 4f 02 50 02 51 02 52 02 53 02 54 02 55 02     N.O.P.Q.R.S.T.U.
     cd4:	56 02 57 02 58 02 59 02 5a 02 5b 02 5c 02 5d 02     V.W.X.Y.Z.[.\.].
     ce4:	5e 02 5f 02 60 02 61 02 62 02 63 02 64 02 65 02     ^._.`.a.b.c.d.e.
     cf4:	66 02 67 02 68 02 69 02 6a 02 6b 02 6c 02 6d 02     f.g.h.i.j.k.l.m.
     d04:	6e 02 6f 02 70 02 71 02 72 02 73 02 74 02 75 02     n.o.p.q.r.s.t.u.
     d14:	76 02 77 02 78 02 79 02 7a 02 7b 02 7c 02 7d 02     v.w.x.y.z.{.|.}.
     d24:	7e 02 7f 02 80 02 81 02 82 02 83 02 84 02 85 02     ~...............
     d34:	86 02 87 02 88 02 89 02 8a 02 8b 02 8c 02 8d 02     ................
     d44:	8e 02 8f 02 90 02 91 02 92 02 93 02 94 02 95 02     ................
     d54:	96 02 97 02 98 02 99 02 9a 02 9b 02 9c 02 9d 02     ................
     d64:	9e 02 9f 02 a0 02 a1 02 a2 02 a3 02 a4 02 a5 02     ................
     d74:	a6 02 a7 02 a8 02 a9 02 aa 02 ab 02 ac 02 ad 02     ................
     d84:	ae 02 af 02 b0 02 b1 02 b2 02 b3 02 b4 02 b5 02     ................
     d94:	b6 02 b7 02 b8 02 b9 02 ba 02 bb 02 bc 02 bd 02     ................
     da4:	be 02 bf 02 c0 02 c1 02 c2 02 c3 02 c4 02 c5 02     ................
     db4:	c6 02 c7 02 c8 02 c9 02 ca 02 cb 02 cc 02 cd 02     ................
     dc4:	ce 02 cf 02 d0 02 d1 02 d2 02 d3 02 d4 02 d5 02     ................
     dd4:	d6 02 d7 02 d8 02 d9 02 da 02 db 02 dc 02 dd 02     ................
     de4:	de 02 df 02 e0 02 e1 02 e2 02 e3 02 e4 02 e5 02     ................
     df4:	e6 02 e7 02 e8 02 e9 02 ea 02 eb 02 ec 02 ed 02     ................
     e04:	ee 02 ef 02 f0 02 f1 02 f2 02 f3 02 f4 02 f5 02     ................
     e14:	f6 02 f7 02 f8 02 f9 02 fa 02 fb 02 fc 02 fd 02     ................
     e24:	fe 02 ff 02 00 03 01 03 02 03 03 03 04 03 05 03     ................
     e34:	06 03 07 03 08 03 09 03 0a 03 0b 03 0c 03 0d 03     ................
     e44:	0e 03 0f 03 10 03 11 03 12 03 13 03 14 03 15 03     ................
     e54:	16 03 17 03 18 03 19 03 1a 03 1b 03 1c 03 1d 03     ................
     e64:	1e 03 1f 03 20 03                                   .... .

00000e6a <wl_10nm>:
     e6a:	36 01 40 01 4a 01 54 01 5e 01 68 01 72 01 7c 01     6.@.J.T.^.h.r.|.
     e7a:	86 01 90 01 9a 01 a4 01 ae 01 b8 01 c2 01 cc 01     ................
     e8a:	d6 01 e0 01 ea 01 f4 01 fe 01 08 02 12 02 1c 02     ................
     e9a:	26 02 30 02 3a 02 44 02 4e 02 58 02 62 02 6c 02     &.0.:.D.N.X.b.l.
     eaa:	76 02 80 02 8a 02 94 02 9e 02 a8 02 b2 02 bc 02     v...............
     eba:	c6 02 d0 02 da 02 e4 02 ee 02 f8 02 02 03 0c 03     ................
     eca:	16 03 20 03                                         .. .

00000ece <unitcoeff>:
     ece:	17 b7 d1 38 17 b7 51 39 6f 12 03 3a 6f 12 83 3a     ...8..Q9o..:o..:
     ede:	6f 12 03 3b 0a d7 a3 3b 0a d7 23 3c 0a d7 a3 3c     o..;...;..#<...<
     eee:	cd cc 4c 3d cd cc cc 3d                             ..L=...=

00000ef6 <ProductString>:
     ef6:	24 03 4d 00 69 00 6e 00 69 00 20 00 53 00 70 00     $.M.i.n.i. .S.p.
     f06:	65 00 63 00 74 00 72 00 6f 00 6d 00 65 00 74 00     e.c.t.r.o.m.e.t.
     f16:	65 00 72 00 00 00                                   e.r...

00000f1c <ManufacturerString>:
     f1c:	0e 03 4f 00 50 00 54 00 43 00 4f 00 4d 00 00 00     ..O.P.T.C.O.M...

00000f2c <LanguageString>:
     f2c:	04 03 09 04                                         ....

00000f30 <ConfigurationDescriptor>:
     f30:	09 02 3e 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..>.....2.......
     f40:	01 00 05 24 00 10 01 04 24 02 06 05 24 06 00 01     ...$....$...$...
     f50:	07 05 82 03 08 00 ff 09 04 01 00 02 0a 00 00 00     ................
     f60:	07 05 04 02 10 00 05 07 05 83 02 10 00 05           ..............

00000f6e <DeviceDescriptor>:
     f6e:	12 01 10 01 02 00 00 08 a3 21 01 20 01 00 01 02     .........!. ....
     f7e:	dc 01                                               ..

00000f80 <__c.2529>:
     f80:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     f90:	47 00                                               G.

00000f92 <pstr_an>:
     f92:	61 6e 00                                            an.

00000f95 <pstr_nfinity>:
     f95:	6e 66 69 6e 69 74 79 00                             nfinity.

00000f9d <pwr_m10>:
     f9d:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     fad:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000fb5 <pwr_p10>:
     fb5:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     fc5:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

00000fce <__ctors_end>:
     fce:	11 24       	eor	r1, r1
     fd0:	1f be       	out	0x3f, r1	; 63
     fd2:	cf ef       	ldi	r28, 0xFF	; 255
     fd4:	da e0       	ldi	r29, 0x0A	; 10
     fd6:	de bf       	out	0x3e, r29	; 62
     fd8:	cd bf       	out	0x3d, r28	; 61

00000fda <__do_copy_data>:
     fda:	12 e0       	ldi	r17, 0x02	; 2
     fdc:	a0 e0       	ldi	r26, 0x00	; 0
     fde:	b1 e0       	ldi	r27, 0x01	; 1
     fe0:	e6 e7       	ldi	r30, 0x76	; 118
     fe2:	f6 e4       	ldi	r31, 0x46	; 70
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <__do_copy_data+0x10>
     fe6:	05 90       	lpm	r0, Z+
     fe8:	0d 92       	st	X+, r0
     fea:	a8 32       	cpi	r26, 0x28	; 40
     fec:	b1 07       	cpc	r27, r17
     fee:	d9 f7       	brne	.-10     	; 0xfe6 <__do_copy_data+0xc>

00000ff0 <__do_clear_bss>:
     ff0:	29 e0       	ldi	r18, 0x09	; 9
     ff2:	a8 e2       	ldi	r26, 0x28	; 40
     ff4:	b2 e0       	ldi	r27, 0x02	; 2
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <.do_clear_bss_start>

00000ff8 <.do_clear_bss_loop>:
     ff8:	1d 92       	st	X+, r1

00000ffa <.do_clear_bss_start>:
     ffa:	a0 33       	cpi	r26, 0x30	; 48
     ffc:	b2 07       	cpc	r27, r18
     ffe:	e1 f7       	brne	.-8      	; 0xff8 <.do_clear_bss_loop>
    1000:	0e 94 2c 10 	call	0x2058	; 0x2058 <main>
    1004:	0c 94 39 23 	jmp	0x4672	; 0x4672 <_exit>

00001008 <__bad_interrupt>:
    1008:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000100c <conv_wl>:
    case EXPOSURE_TIME_SEL_100ms:
        return EXPOSURE_TIME_100ms;
    default:
        return EXPOSURE_TIME_100us;
    }
}
    100c:	4f 92       	push	r4
    100e:	5f 92       	push	r5
    1010:	6f 92       	push	r6
    1012:	7f 92       	push	r7
    1014:	8f 92       	push	r8
    1016:	9f 92       	push	r9
    1018:	af 92       	push	r10
    101a:	bf 92       	push	r11
    101c:	cf 92       	push	r12
    101e:	df 92       	push	r13
    1020:	ef 92       	push	r14
    1022:	ff 92       	push	r15
    1024:	cf 93       	push	r28
    1026:	df 93       	push	r29
    1028:	cd b7       	in	r28, 0x3d	; 61
    102a:	de b7       	in	r29, 0x3e	; 62
    102c:	60 97       	sbiw	r28, 0x10	; 16
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	de bf       	out	0x3e, r29	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	cd bf       	out	0x3d, r28	; 61
    1038:	ee e5       	ldi	r30, 0x5E	; 94
    103a:	fa e0       	ldi	r31, 0x0A	; 10
    103c:	85 90       	lpm	r8, Z+
    103e:	95 90       	lpm	r9, Z+
    1040:	a5 90       	lpm	r10, Z+
    1042:	b4 90       	lpm	r11, Z
    1044:	e2 e6       	ldi	r30, 0x62	; 98
    1046:	fa e0       	ldi	r31, 0x0A	; 10
    1048:	45 90       	lpm	r4, Z+
    104a:	55 90       	lpm	r5, Z+
    104c:	65 90       	lpm	r6, Z+
    104e:	74 90       	lpm	r7, Z
    1050:	e6 e6       	ldi	r30, 0x66	; 102
    1052:	fa e0       	ldi	r31, 0x0A	; 10
    1054:	25 91       	lpm	r18, Z+
    1056:	35 91       	lpm	r19, Z+
    1058:	45 91       	lpm	r20, Z+
    105a:	54 91       	lpm	r21, Z
    105c:	29 83       	std	Y+1, r18	; 0x01
    105e:	3a 83       	std	Y+2, r19	; 0x02
    1060:	4b 83       	std	Y+3, r20	; 0x03
    1062:	5c 83       	std	Y+4, r21	; 0x04
    1064:	ea e6       	ldi	r30, 0x6A	; 106
    1066:	fa e0       	ldi	r31, 0x0A	; 10
    1068:	25 91       	lpm	r18, Z+
    106a:	35 91       	lpm	r19, Z+
    106c:	45 91       	lpm	r20, Z+
    106e:	54 91       	lpm	r21, Z
    1070:	2d 83       	std	Y+5, r18	; 0x05
    1072:	3e 83       	std	Y+6, r19	; 0x06
    1074:	4f 83       	std	Y+7, r20	; 0x07
    1076:	58 87       	std	Y+8, r21	; 0x08
    1078:	ee e6       	ldi	r30, 0x6E	; 110
    107a:	fa e0       	ldi	r31, 0x0A	; 10
    107c:	25 91       	lpm	r18, Z+
    107e:	35 91       	lpm	r19, Z+
    1080:	45 91       	lpm	r20, Z+
    1082:	54 91       	lpm	r21, Z
    1084:	29 87       	std	Y+9, r18	; 0x09
    1086:	3a 87       	std	Y+10, r19	; 0x0a
    1088:	4b 87       	std	Y+11, r20	; 0x0b
    108a:	5c 87       	std	Y+12, r21	; 0x0c
    108c:	e2 e7       	ldi	r30, 0x72	; 114
    108e:	fa e0       	ldi	r31, 0x0A	; 10
    1090:	25 91       	lpm	r18, Z+
    1092:	35 91       	lpm	r19, Z+
    1094:	45 91       	lpm	r20, Z+
    1096:	54 91       	lpm	r21, Z
    1098:	2d 87       	std	Y+13, r18	; 0x0d
    109a:	3e 87       	std	Y+14, r19	; 0x0e
    109c:	4f 87       	std	Y+15, r20	; 0x0f
    109e:	58 8b       	std	Y+16, r21	; 0x10
    10a0:	bc 01       	movw	r22, r24
    10a2:	6f 5f       	subi	r22, 0xFF	; 255
    10a4:	7f 4f       	sbci	r23, 0xFF	; 255
    10a6:	07 2e       	mov	r0, r23
    10a8:	00 0c       	add	r0, r0
    10aa:	88 0b       	sbc	r24, r24
    10ac:	99 0b       	sbc	r25, r25
    10ae:	0e 94 0c 18 	call	0x3018	; 0x3018 <__floatsisf>
    10b2:	6b 01       	movw	r12, r22
    10b4:	7c 01       	movw	r14, r24
    10b6:	9b 01       	movw	r18, r22
    10b8:	ac 01       	movw	r20, r24
    10ba:	c3 01       	movw	r24, r6
    10bc:	b2 01       	movw	r22, r4
    10be:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    10c2:	a5 01       	movw	r20, r10
    10c4:	94 01       	movw	r18, r8
    10c6:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    10ca:	4b 01       	movw	r8, r22
    10cc:	5c 01       	movw	r10, r24
    10ce:	a7 01       	movw	r20, r14
    10d0:	96 01       	movw	r18, r12
    10d2:	69 81       	ldd	r22, Y+1	; 0x01
    10d4:	7a 81       	ldd	r23, Y+2	; 0x02
    10d6:	8b 81       	ldd	r24, Y+3	; 0x03
    10d8:	9c 81       	ldd	r25, Y+4	; 0x04
    10da:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    10de:	a7 01       	movw	r20, r14
    10e0:	96 01       	movw	r18, r12
    10e2:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    10e6:	9b 01       	movw	r18, r22
    10e8:	ac 01       	movw	r20, r24
    10ea:	c5 01       	movw	r24, r10
    10ec:	b4 01       	movw	r22, r8
    10ee:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    10f2:	4b 01       	movw	r8, r22
    10f4:	5c 01       	movw	r10, r24
    10f6:	a7 01       	movw	r20, r14
    10f8:	96 01       	movw	r18, r12
    10fa:	6d 81       	ldd	r22, Y+5	; 0x05
    10fc:	7e 81       	ldd	r23, Y+6	; 0x06
    10fe:	8f 81       	ldd	r24, Y+7	; 0x07
    1100:	98 85       	ldd	r25, Y+8	; 0x08
    1102:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1106:	a7 01       	movw	r20, r14
    1108:	96 01       	movw	r18, r12
    110a:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    110e:	a7 01       	movw	r20, r14
    1110:	96 01       	movw	r18, r12
    1112:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1116:	9b 01       	movw	r18, r22
    1118:	ac 01       	movw	r20, r24
    111a:	c5 01       	movw	r24, r10
    111c:	b4 01       	movw	r22, r8
    111e:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    1122:	4b 01       	movw	r8, r22
    1124:	5c 01       	movw	r10, r24
    1126:	a7 01       	movw	r20, r14
    1128:	96 01       	movw	r18, r12
    112a:	69 85       	ldd	r22, Y+9	; 0x09
    112c:	7a 85       	ldd	r23, Y+10	; 0x0a
    112e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1130:	9c 85       	ldd	r25, Y+12	; 0x0c
    1132:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1136:	a7 01       	movw	r20, r14
    1138:	96 01       	movw	r18, r12
    113a:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    113e:	a7 01       	movw	r20, r14
    1140:	96 01       	movw	r18, r12
    1142:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1146:	a7 01       	movw	r20, r14
    1148:	96 01       	movw	r18, r12
    114a:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    114e:	9b 01       	movw	r18, r22
    1150:	ac 01       	movw	r20, r24
    1152:	c5 01       	movw	r24, r10
    1154:	b4 01       	movw	r22, r8
    1156:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    115a:	4b 01       	movw	r8, r22
    115c:	5c 01       	movw	r10, r24
    115e:	a7 01       	movw	r20, r14
    1160:	96 01       	movw	r18, r12
    1162:	6d 85       	ldd	r22, Y+13	; 0x0d
    1164:	7e 85       	ldd	r23, Y+14	; 0x0e
    1166:	8f 85       	ldd	r24, Y+15	; 0x0f
    1168:	98 89       	ldd	r25, Y+16	; 0x10
    116a:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    116e:	a7 01       	movw	r20, r14
    1170:	96 01       	movw	r18, r12
    1172:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1176:	a7 01       	movw	r20, r14
    1178:	96 01       	movw	r18, r12
    117a:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    117e:	a7 01       	movw	r20, r14
    1180:	96 01       	movw	r18, r12
    1182:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1186:	a7 01       	movw	r20, r14
    1188:	96 01       	movw	r18, r12
    118a:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    118e:	9b 01       	movw	r18, r22
    1190:	ac 01       	movw	r20, r24
    1192:	c5 01       	movw	r24, r10
    1194:	b4 01       	movw	r22, r8
    1196:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    119a:	60 96       	adiw	r28, 0x10	; 16
    119c:	0f b6       	in	r0, 0x3f	; 63
    119e:	f8 94       	cli
    11a0:	de bf       	out	0x3e, r29	; 62
    11a2:	0f be       	out	0x3f, r0	; 63
    11a4:	cd bf       	out	0x3d, r28	; 61
    11a6:	df 91       	pop	r29
    11a8:	cf 91       	pop	r28
    11aa:	ff 90       	pop	r15
    11ac:	ef 90       	pop	r14
    11ae:	df 90       	pop	r13
    11b0:	cf 90       	pop	r12
    11b2:	bf 90       	pop	r11
    11b4:	af 90       	pop	r10
    11b6:	9f 90       	pop	r9
    11b8:	8f 90       	pop	r8
    11ba:	7f 90       	pop	r7
    11bc:	6f 90       	pop	r6
    11be:	5f 90       	pop	r5
    11c0:	4f 90       	pop	r4
    11c2:	08 95       	ret

000011c4 <EVENT_USB_Device_Connect>:
    11c4:	08 95       	ret

000011c6 <EVENT_USB_Device_Disconnect>:
    11c6:	08 95       	ret

000011c8 <EVENT_USB_Device_ConfigurationChanged>:
    11c8:	80 e0       	ldi	r24, 0x00	; 0
    11ca:	91 e0       	ldi	r25, 0x01	; 1
    11cc:	0c 94 41 15 	jmp	0x2a82	; 0x2a82 <CDC_Device_ConfigureEndpoints>

000011d0 <EVENT_USB_Device_ControlRequest>:
    11d0:	80 e0       	ldi	r24, 0x00	; 0
    11d2:	91 e0       	ldi	r25, 0x01	; 1
    11d4:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <CDC_Device_ProcessControlRequest>

000011d8 <EVENT_CDC_Device_ControLineStateChanged>:
    11d8:	08 95       	ret

000011da <delay>:
    11da:	00 00       	nop
    11dc:	00 00       	nop
    11de:	00 00       	nop
    11e0:	00 00       	nop
    11e2:	00 00       	nop
    11e4:	08 95       	ret

000011e6 <adc_temp_read>:
    11e6:	8f 92       	push	r8
    11e8:	9f 92       	push	r9
    11ea:	af 92       	push	r10
    11ec:	bf 92       	push	r11
    11ee:	cf 92       	push	r12
    11f0:	df 92       	push	r13
    11f2:	ef 92       	push	r14
    11f4:	ff 92       	push	r15
    11f6:	80 e4       	ldi	r24, 0x40	; 64
    11f8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    11fc:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1200:	87 60       	ori	r24, 0x07	; 7
    1202:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    1206:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    120a:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    120e:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
    1212:	87 ec       	ldi	r24, 0xC7	; 199
    1214:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1218:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    121c:	86 fd       	sbrc	r24, 6
    121e:	fc cf       	rjmp	.-8      	; 0x1218 <adc_temp_read+0x32>
    1220:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    1224:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    1228:	70 e0       	ldi	r23, 0x00	; 0
    122a:	78 2b       	or	r23, r24
    122c:	73 70       	andi	r23, 0x03	; 3
    122e:	07 2e       	mov	r0, r23
    1230:	00 0c       	add	r0, r0
    1232:	88 0b       	sbc	r24, r24
    1234:	99 0b       	sbc	r25, r25
    1236:	0e 94 0c 18 	call	0x3018	; 0x3018 <__floatsisf>
    123a:	20 e0       	ldi	r18, 0x00	; 0
    123c:	30 ec       	ldi	r19, 0xC0	; 192
    123e:	4f e7       	ldi	r20, 0x7F	; 127
    1240:	54 e4       	ldi	r21, 0x44	; 68
    1242:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    1246:	20 e0       	ldi	r18, 0x00	; 0
    1248:	30 e0       	ldi	r19, 0x00	; 0
    124a:	40 ea       	ldi	r20, 0xA0	; 160
    124c:	50 e4       	ldi	r21, 0x40	; 64
    124e:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1252:	4b 01       	movw	r8, r22
    1254:	5c 01       	movw	r10, r24
    1256:	9b 01       	movw	r18, r22
    1258:	ac 01       	movw	r20, r24
    125a:	60 e0       	ldi	r22, 0x00	; 0
    125c:	70 e0       	ldi	r23, 0x00	; 0
    125e:	80 ea       	ldi	r24, 0xA0	; 160
    1260:	90 e4       	ldi	r25, 0x40	; 64
    1262:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    1266:	6b 01       	movw	r12, r22
    1268:	7c 01       	movw	r14, r24
    126a:	20 e0       	ldi	r18, 0x00	; 0
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	a9 01       	movw	r20, r18
    1270:	0e 94 6d 17 	call	0x2eda	; 0x2eda <__cmpsf2>
    1274:	88 23       	and	r24, r24
    1276:	69 f0       	breq	.+26     	; 0x1292 <adc_temp_read+0xac>
    1278:	20 e0       	ldi	r18, 0x00	; 0
    127a:	30 e4       	ldi	r19, 0x40	; 64
    127c:	4c e1       	ldi	r20, 0x1C	; 28
    127e:	56 e4       	ldi	r21, 0x46	; 70
    1280:	c5 01       	movw	r24, r10
    1282:	b4 01       	movw	r22, r8
    1284:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1288:	a7 01       	movw	r20, r14
    128a:	96 01       	movw	r18, r12
    128c:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    1290:	03 c0       	rjmp	.+6      	; 0x1298 <adc_temp_read+0xb2>
    1292:	60 e0       	ldi	r22, 0x00	; 0
    1294:	70 e0       	ldi	r23, 0x00	; 0
    1296:	cb 01       	movw	r24, r22
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	30 e4       	ldi	r19, 0x40	; 64
    129c:	4c e1       	ldi	r20, 0x1C	; 28
    129e:	56 e4       	ldi	r21, 0x46	; 70
    12a0:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    12a4:	0e 94 c5 18 	call	0x318a	; 0x318a <log>
    12a8:	20 e0       	ldi	r18, 0x00	; 0
    12aa:	30 eb       	ldi	r19, 0xB0	; 176
    12ac:	46 e5       	ldi	r20, 0x56	; 86
    12ae:	55 e4       	ldi	r21, 0x45	; 69
    12b0:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    12b4:	2f e0       	ldi	r18, 0x0F	; 15
    12b6:	3f ec       	ldi	r19, 0xCF	; 207
    12b8:	4b e5       	ldi	r20, 0x5B	; 91
    12ba:	5b e3       	ldi	r21, 0x3B	; 59
    12bc:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    12c0:	9b 01       	movw	r18, r22
    12c2:	ac 01       	movw	r20, r24
    12c4:	60 e0       	ldi	r22, 0x00	; 0
    12c6:	70 e0       	ldi	r23, 0x00	; 0
    12c8:	80 e8       	ldi	r24, 0x80	; 128
    12ca:	9f e3       	ldi	r25, 0x3F	; 63
    12cc:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    12d0:	23 e3       	ldi	r18, 0x33	; 51
    12d2:	33 e9       	ldi	r19, 0x93	; 147
    12d4:	48 e8       	ldi	r20, 0x88	; 136
    12d6:	53 e4       	ldi	r21, 0x43	; 67
    12d8:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    12dc:	ff 90       	pop	r15
    12de:	ef 90       	pop	r14
    12e0:	df 90       	pop	r13
    12e2:	cf 90       	pop	r12
    12e4:	bf 90       	pop	r11
    12e6:	af 90       	pop	r10
    12e8:	9f 90       	pop	r9
    12ea:	8f 90       	pop	r8
    12ec:	08 95       	ret

000012ee <mcp3201_init>:
    12ee:	d2 d6       	rcall	.+3492   	; 0x2094 <spi_init>
    12f0:	20 9a       	sbi	0x04, 0	; 4
    12f2:	28 9a       	sbi	0x05, 0	; 5
    12f4:	08 95       	ret

000012f6 <mcp3201_read>:
    12f6:	cf 93       	push	r28
    12f8:	28 98       	cbi	0x05, 0	; 5
    12fa:	00 00       	nop
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	d3 d6       	rcall	.+3494   	; 0x20a6 <spi_transfer>
    1300:	c8 2f       	mov	r28, r24
    1302:	80 e0       	ldi	r24, 0x00	; 0
    1304:	d0 d6       	rcall	.+3488   	; 0x20a6 <spi_transfer>
    1306:	28 9a       	sbi	0x05, 0	; 5
    1308:	cf 71       	andi	r28, 0x1F	; 31
    130a:	40 e8       	ldi	r20, 0x80	; 128
    130c:	c4 9f       	mul	r28, r20
    130e:	90 01       	movw	r18, r0
    1310:	11 24       	eor	r1, r1
    1312:	86 95       	lsr	r24
    1314:	a9 01       	movw	r20, r18
    1316:	48 2b       	or	r20, r24
    1318:	ca 01       	movw	r24, r20
    131a:	cf 91       	pop	r28
    131c:	08 95       	ret

0000131e <c12880ma_init>:
    131e:	81 9a       	sbi	0x10, 1	; 16
    1320:	89 98       	cbi	0x11, 1	; 17
    1322:	85 9a       	sbi	0x10, 5	; 16
    1324:	8d 98       	cbi	0x11, 5	; 17
    1326:	e0 e8       	ldi	r30, 0x80	; 128
    1328:	f4 e0       	ldi	r31, 0x04	; 4
    132a:	11 92       	st	Z+, r1
    132c:	11 92       	st	Z+, r1
    132e:	11 92       	st	Z+, r1
    1330:	11 92       	st	Z+, r1
    1332:	89 e0       	ldi	r24, 0x09	; 9
    1334:	e0 30       	cpi	r30, 0x00	; 0
    1336:	f8 07       	cpc	r31, r24
    1338:	c1 f7       	brne	.-16     	; 0x132a <c12880ma_init+0xc>
    133a:	08 95       	ret

0000133c <c12880ma_read>:
    133c:	cf 92       	push	r12
    133e:	df 92       	push	r13
    1340:	ef 92       	push	r14
    1342:	ff 92       	push	r15
    1344:	0f 93       	push	r16
    1346:	1f 93       	push	r17
    1348:	cf 93       	push	r28
    134a:	df 93       	push	r29
    134c:	c0 e8       	ldi	r28, 0x80	; 128
    134e:	d4 e0       	ldi	r29, 0x04	; 4
    1350:	fe 01       	movw	r30, r28
    1352:	11 92       	st	Z+, r1
    1354:	11 92       	st	Z+, r1
    1356:	11 92       	st	Z+, r1
    1358:	11 92       	st	Z+, r1
    135a:	89 e0       	ldi	r24, 0x09	; 9
    135c:	e0 30       	cpi	r30, 0x00	; 0
    135e:	f8 07       	cpc	r31, r24
    1360:	c1 f7       	brne	.-16     	; 0x1352 <c12880ma_read+0x16>
    1362:	89 98       	cbi	0x11, 1	; 17
    1364:	3a df       	rcall	.-396    	; 0x11da <delay>
    1366:	89 9a       	sbi	0x11, 1	; 17
    1368:	38 df       	rcall	.-400    	; 0x11da <delay>
    136a:	89 98       	cbi	0x11, 1	; 17
    136c:	8d 9a       	sbi	0x11, 5	; 17
    136e:	35 df       	rcall	.-406    	; 0x11da <delay>
    1370:	03 e0       	ldi	r16, 0x03	; 3
    1372:	10 e0       	ldi	r17, 0x00	; 0
    1374:	89 9a       	sbi	0x11, 1	; 17
    1376:	31 df       	rcall	.-414    	; 0x11da <delay>
    1378:	89 98       	cbi	0x11, 1	; 17
    137a:	2f df       	rcall	.-418    	; 0x11da <delay>
    137c:	01 50       	subi	r16, 0x01	; 1
    137e:	11 09       	sbc	r17, r1
    1380:	c9 f7       	brne	.-14     	; 0x1374 <c12880ma_read+0x38>
    1382:	c1 2c       	mov	r12, r1
    1384:	d1 2c       	mov	r13, r1
    1386:	76 01       	movw	r14, r12
    1388:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <exposure_time>
    138c:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <exposure_time+0x1>
    1390:	a0 91 21 01 	lds	r26, 0x0121	; 0x800121 <exposure_time+0x2>
    1394:	b0 91 22 01 	lds	r27, 0x0122	; 0x800122 <exposure_time+0x3>
    1398:	c8 16       	cp	r12, r24
    139a:	d9 06       	cpc	r13, r25
    139c:	ea 06       	cpc	r14, r26
    139e:	fb 06       	cpc	r15, r27
    13a0:	54 f4       	brge	.+20     	; 0x13b6 <c12880ma_read+0x7a>
    13a2:	89 9a       	sbi	0x11, 1	; 17
    13a4:	1a df       	rcall	.-460    	; 0x11da <delay>
    13a6:	89 98       	cbi	0x11, 1	; 17
    13a8:	18 df       	rcall	.-464    	; 0x11da <delay>
    13aa:	8f ef       	ldi	r24, 0xFF	; 255
    13ac:	c8 1a       	sub	r12, r24
    13ae:	d8 0a       	sbc	r13, r24
    13b0:	e8 0a       	sbc	r14, r24
    13b2:	f8 0a       	sbc	r15, r24
    13b4:	e9 cf       	rjmp	.-46     	; 0x1388 <c12880ma_read+0x4c>
    13b6:	8d 98       	cbi	0x11, 5	; 17
    13b8:	08 e5       	ldi	r16, 0x58	; 88
    13ba:	10 e0       	ldi	r17, 0x00	; 0
    13bc:	89 9a       	sbi	0x11, 1	; 17
    13be:	0d df       	rcall	.-486    	; 0x11da <delay>
    13c0:	89 98       	cbi	0x11, 1	; 17
    13c2:	0b df       	rcall	.-490    	; 0x11da <delay>
    13c4:	01 50       	subi	r16, 0x01	; 1
    13c6:	11 09       	sbc	r17, r1
    13c8:	c9 f7       	brne	.-14     	; 0x13bc <c12880ma_read+0x80>
    13ca:	95 df       	rcall	.-214    	; 0x12f6 <mcp3201_read>
    13cc:	bc 01       	movw	r22, r24
    13ce:	80 e0       	ldi	r24, 0x00	; 0
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	0e 94 0a 18 	call	0x3014	; 0x3014 <__floatunsisf>
    13d6:	69 93       	st	Y+, r22
    13d8:	79 93       	st	Y+, r23
    13da:	89 93       	st	Y+, r24
    13dc:	99 93       	st	Y+, r25
    13de:	89 9a       	sbi	0x11, 1	; 17
    13e0:	fc de       	rcall	.-520    	; 0x11da <delay>
    13e2:	89 98       	cbi	0x11, 1	; 17
    13e4:	fa de       	rcall	.-524    	; 0x11da <delay>
    13e6:	89 e0       	ldi	r24, 0x09	; 9
    13e8:	c0 30       	cpi	r28, 0x00	; 0
    13ea:	d8 07       	cpc	r29, r24
    13ec:	71 f7       	brne	.-36     	; 0x13ca <c12880ma_read+0x8e>
    13ee:	df 91       	pop	r29
    13f0:	cf 91       	pop	r28
    13f2:	1f 91       	pop	r17
    13f4:	0f 91       	pop	r16
    13f6:	ff 90       	pop	r15
    13f8:	ef 90       	pop	r14
    13fa:	df 90       	pop	r13
    13fc:	cf 90       	pop	r12
    13fe:	08 95       	ret

00001400 <check_status>:
    1400:	cf 92       	push	r12
    1402:	df 92       	push	r13
    1404:	ef 92       	push	r14
    1406:	ff 92       	push	r15
    1408:	cf 93       	push	r28
    140a:	df 93       	push	r29
    140c:	c0 90 1b 01 	lds	r12, 0x011B	; 0x80011b <temperature>
    1410:	d0 90 1c 01 	lds	r13, 0x011C	; 0x80011c <temperature+0x1>
    1414:	e0 90 1d 01 	lds	r14, 0x011D	; 0x80011d <temperature+0x2>
    1418:	f0 90 1e 01 	lds	r15, 0x011E	; 0x80011e <temperature+0x3>
    141c:	20 e0       	ldi	r18, 0x00	; 0
    141e:	30 e0       	ldi	r19, 0x00	; 0
    1420:	40 e2       	ldi	r20, 0x20	; 32
    1422:	52 e4       	ldi	r21, 0x42	; 66
    1424:	c7 01       	movw	r24, r14
    1426:	b6 01       	movw	r22, r12
    1428:	0e 94 bc 18 	call	0x3178	; 0x3178 <__gesf2>
    142c:	18 16       	cp	r1, r24
    142e:	d4 f0       	brlt	.+52     	; 0x1464 <check_status+0x64>
    1430:	a7 01       	movw	r20, r14
    1432:	96 01       	movw	r18, r12
    1434:	60 91 36 02 	lds	r22, 0x0236	; 0x800236 <temperature_dark>
    1438:	70 91 37 02 	lds	r23, 0x0237	; 0x800237 <temperature_dark+0x1>
    143c:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <temperature_dark+0x2>
    1440:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <temperature_dark+0x3>
    1444:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    1448:	9f 77       	andi	r25, 0x7F	; 127
    144a:	d1 e0       	ldi	r29, 0x01	; 1
    144c:	c0 e0       	ldi	r28, 0x00	; 0
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	40 e0       	ldi	r20, 0x00	; 0
    1454:	50 e4       	ldi	r21, 0x40	; 64
    1456:	0e 94 bc 18 	call	0x3178	; 0x3178 <__gesf2>
    145a:	87 fd       	sbrc	r24, 7
    145c:	d0 e0       	ldi	r29, 0x00	; 0
    145e:	8d 2f       	mov	r24, r29
    1460:	9c 2f       	mov	r25, r28
    1462:	02 c0       	rjmp	.+4      	; 0x1468 <check_status+0x68>
    1464:	82 e0       	ldi	r24, 0x02	; 2
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	df 91       	pop	r29
    146a:	cf 91       	pop	r28
    146c:	ff 90       	pop	r15
    146e:	ef 90       	pop	r14
    1470:	df 90       	pop	r13
    1472:	cf 90       	pop	r12
    1474:	08 95       	ret

00001476 <SetupHardware>:
    1476:	53 df       	rcall	.-346    	; 0x131e <c12880ma_init>
    1478:	3a df       	rcall	.-396    	; 0x12ee <mcp3201_init>
    147a:	84 b7       	in	r24, 0x34	; 52
    147c:	87 7f       	andi	r24, 0xF7	; 247
    147e:	84 bf       	out	0x34, r24	; 52
    1480:	0f b6       	in	r0, 0x3f	; 63
    1482:	f8 94       	cli
    1484:	a8 95       	wdr
    1486:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    148a:	88 61       	ori	r24, 0x18	; 24
    148c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    1490:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
    1494:	0f be       	out	0x3f, r0	; 63
    1496:	90 e0       	ldi	r25, 0x00	; 0
    1498:	80 e8       	ldi	r24, 0x80	; 128
    149a:	0f b6       	in	r0, 0x3f	; 63
    149c:	f8 94       	cli
    149e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    14a2:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
    14a6:	0f be       	out	0x3f, r0	; 63
    14a8:	0c 94 96 12 	jmp	0x252c	; 0x252c <USB_Init>

000014ac <correct>:
    14ac:	2f 92       	push	r2
    14ae:	3f 92       	push	r3
    14b0:	4f 92       	push	r4
    14b2:	5f 92       	push	r5
    14b4:	6f 92       	push	r6
    14b6:	7f 92       	push	r7
    14b8:	8f 92       	push	r8
    14ba:	9f 92       	push	r9
    14bc:	af 92       	push	r10
    14be:	bf 92       	push	r11
    14c0:	cf 92       	push	r12
    14c2:	df 92       	push	r13
    14c4:	ef 92       	push	r14
    14c6:	ff 92       	push	r15
    14c8:	0f 93       	push	r16
    14ca:	1f 93       	push	r17
    14cc:	cf 93       	push	r28
    14ce:	df 93       	push	r29
    14d0:	00 d0       	rcall	.+0      	; 0x14d2 <correct+0x26>
    14d2:	00 d0       	rcall	.+0      	; 0x14d4 <correct+0x28>
    14d4:	cd b7       	in	r28, 0x3d	; 61
    14d6:	de b7       	in	r29, 0x3e	; 62
    14d8:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <exposure_time_sel>
    14dc:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <exposure_time_sel+0x1>
    14e0:	88 0f       	add	r24, r24
    14e2:	99 1f       	adc	r25, r25
    14e4:	88 0f       	add	r24, r24
    14e6:	99 1f       	adc	r25, r25
    14e8:	fc 01       	movw	r30, r24
    14ea:	ed 5d       	subi	r30, 0xDD	; 221
    14ec:	fe 4f       	sbci	r31, 0xFE	; 254
    14ee:	80 80       	ld	r8, Z
    14f0:	91 80       	ldd	r9, Z+1	; 0x01
    14f2:	a2 80       	ldd	r10, Z+2	; 0x02
    14f4:	b3 80       	ldd	r11, Z+3	; 0x03
    14f6:	9c 01       	movw	r18, r24
    14f8:	22 53       	subi	r18, 0x32	; 50
    14fa:	31 4f       	sbci	r19, 0xF1	; 241
    14fc:	3a 83       	std	Y+2, r19	; 0x02
    14fe:	29 83       	std	Y+1, r18	; 0x01
    1500:	80 e8       	ldi	r24, 0x80	; 128
    1502:	94 e0       	ldi	r25, 0x04	; 4
    1504:	9c 83       	std	Y+4, r25	; 0x04
    1506:	8b 83       	std	Y+3, r24	; 0x03
    1508:	30 e4       	ldi	r19, 0x40	; 64
    150a:	23 2e       	mov	r2, r19
    150c:	32 e0       	ldi	r19, 0x02	; 2
    150e:	33 2e       	mov	r3, r19
    1510:	0e ed       	ldi	r16, 0xDE	; 222
    1512:	15 e0       	ldi	r17, 0x05	; 5
    1514:	f1 01       	movw	r30, r2
    1516:	61 91       	ld	r22, Z+
    1518:	71 91       	ld	r23, Z+
    151a:	1f 01       	movw	r2, r30
    151c:	07 2e       	mov	r0, r23
    151e:	00 0c       	add	r0, r0
    1520:	88 0b       	sbc	r24, r24
    1522:	99 0b       	sbc	r25, r25
    1524:	0e 94 0c 18 	call	0x3018	; 0x3018 <__floatsisf>
    1528:	a5 01       	movw	r20, r10
    152a:	94 01       	movw	r18, r8
    152c:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1530:	9b 01       	movw	r18, r22
    1532:	ac 01       	movw	r20, r24
    1534:	eb 81       	ldd	r30, Y+3	; 0x03
    1536:	fc 81       	ldd	r31, Y+4	; 0x04
    1538:	60 81       	ld	r22, Z
    153a:	71 81       	ldd	r23, Z+1	; 0x01
    153c:	82 81       	ldd	r24, Z+2	; 0x02
    153e:	93 81       	ldd	r25, Z+3	; 0x03
    1540:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    1544:	6b 01       	movw	r12, r22
    1546:	7c 01       	movw	r14, r24
    1548:	20 e0       	ldi	r18, 0x00	; 0
    154a:	30 e0       	ldi	r19, 0x00	; 0
    154c:	a9 01       	movw	r20, r18
    154e:	0e 94 6d 17 	call	0x2eda	; 0x2eda <__cmpsf2>
    1552:	87 ff       	sbrs	r24, 7
    1554:	03 c0       	rjmp	.+6      	; 0x155c <correct+0xb0>
    1556:	c1 2c       	mov	r12, r1
    1558:	d1 2c       	mov	r13, r1
    155a:	76 01       	movw	r14, r12
    155c:	e9 81       	ldd	r30, Y+1	; 0x01
    155e:	fa 81       	ldd	r31, Y+2	; 0x02
    1560:	25 91       	lpm	r18, Z+
    1562:	35 91       	lpm	r19, Z+
    1564:	45 91       	lpm	r20, Z+
    1566:	54 91       	lpm	r21, Z
    1568:	f8 01       	movw	r30, r16
    156a:	45 90       	lpm	r4, Z+
    156c:	55 90       	lpm	r5, Z+
    156e:	65 90       	lpm	r6, Z+
    1570:	74 90       	lpm	r7, Z
    1572:	c7 01       	movw	r24, r14
    1574:	b6 01       	movw	r22, r12
    1576:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    157a:	a3 01       	movw	r20, r6
    157c:	92 01       	movw	r18, r4
    157e:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    1582:	6b 01       	movw	r12, r22
    1584:	7c 01       	movw	r14, r24
    1586:	2f e5       	ldi	r18, 0x5F	; 95
    1588:	30 e7       	ldi	r19, 0x70	; 112
    158a:	49 e8       	ldi	r20, 0x89	; 137
    158c:	50 e3       	ldi	r21, 0x30	; 48
    158e:	0e 94 6d 17 	call	0x2eda	; 0x2eda <__cmpsf2>
    1592:	eb 81       	ldd	r30, Y+3	; 0x03
    1594:	fc 81       	ldd	r31, Y+4	; 0x04
    1596:	87 fd       	sbrc	r24, 7
    1598:	05 c0       	rjmp	.+10     	; 0x15a4 <correct+0xf8>
    159a:	c0 82       	st	Z, r12
    159c:	d1 82       	std	Z+1, r13	; 0x01
    159e:	e2 82       	std	Z+2, r14	; 0x02
    15a0:	f3 82       	std	Z+3, r15	; 0x03
    15a2:	04 c0       	rjmp	.+8      	; 0x15ac <correct+0x100>
    15a4:	10 82       	st	Z, r1
    15a6:	11 82       	std	Z+1, r1	; 0x01
    15a8:	12 82       	std	Z+2, r1	; 0x02
    15aa:	13 82       	std	Z+3, r1	; 0x03
    15ac:	2b 81       	ldd	r18, Y+3	; 0x03
    15ae:	3c 81       	ldd	r19, Y+4	; 0x04
    15b0:	2c 5f       	subi	r18, 0xFC	; 252
    15b2:	3f 4f       	sbci	r19, 0xFF	; 255
    15b4:	3c 83       	std	Y+4, r19	; 0x04
    15b6:	2b 83       	std	Y+3, r18	; 0x03
    15b8:	0c 5f       	subi	r16, 0xFC	; 252
    15ba:	1f 4f       	sbci	r17, 0xFF	; 255
    15bc:	20 50       	subi	r18, 0x00	; 0
    15be:	39 40       	sbci	r19, 0x09	; 9
    15c0:	09 f0       	breq	.+2      	; 0x15c4 <correct+0x118>
    15c2:	a8 cf       	rjmp	.-176    	; 0x1514 <correct+0x68>
    15c4:	0f 90       	pop	r0
    15c6:	0f 90       	pop	r0
    15c8:	0f 90       	pop	r0
    15ca:	0f 90       	pop	r0
    15cc:	df 91       	pop	r29
    15ce:	cf 91       	pop	r28
    15d0:	1f 91       	pop	r17
    15d2:	0f 91       	pop	r16
    15d4:	ff 90       	pop	r15
    15d6:	ef 90       	pop	r14
    15d8:	df 90       	pop	r13
    15da:	cf 90       	pop	r12
    15dc:	bf 90       	pop	r11
    15de:	af 90       	pop	r10
    15e0:	9f 90       	pop	r9
    15e2:	8f 90       	pop	r8
    15e4:	7f 90       	pop	r7
    15e6:	6f 90       	pop	r6
    15e8:	5f 90       	pop	r5
    15ea:	4f 90       	pop	r4
    15ec:	3f 90       	pop	r3
    15ee:	2f 90       	pop	r2
    15f0:	08 95       	ret

000015f2 <measure>:
void measure()
{
    15f2:	6f 92       	push	r6
    15f4:	7f 92       	push	r7
    15f6:	8f 92       	push	r8
    15f8:	9f 92       	push	r9
    15fa:	af 92       	push	r10
    15fc:	bf 92       	push	r11
    15fe:	cf 92       	push	r12
    1600:	df 92       	push	r13
    1602:	ef 92       	push	r14
    1604:	ff 92       	push	r15
    1606:	0f 93       	push	r16
    1608:	1f 93       	push	r17
    160a:	cf 93       	push	r28
    160c:	df 93       	push	r29
    if(auto_exposure)
    160e:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <auto_exposure>
    1612:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <auto_exposure+0x1>
    1616:	89 2b       	or	r24, r25
    1618:	09 f4       	brne	.+2      	; 0x161c <measure+0x2a>
    161a:	4e c0       	rjmp	.+156    	; 0x16b8 <measure+0xc6>
    161c:	09 e4       	ldi	r16, 0x49	; 73
    161e:	11 e0       	ldi	r17, 0x01	; 1
    1620:	c0 e0       	ldi	r28, 0x00	; 0
    1622:	d0 e0       	ldi	r29, 0x00	; 0
    1624:	ce 01       	movw	r24, r28
    1626:	01 97       	sbiw	r24, 0x01	; 1
    1628:	09 97       	sbiw	r24, 0x09	; 9
    162a:	30 f4       	brcc	.+12     	; 0x1638 <measure+0x46>
    162c:	f8 01       	movw	r30, r16
    162e:	80 81       	ld	r24, Z
    1630:	91 81       	ldd	r25, Z+1	; 0x01
    1632:	a0 e0       	ldi	r26, 0x00	; 0
    1634:	b0 e0       	ldi	r27, 0x00	; 0
    1636:	04 c0       	rjmp	.+8      	; 0x1640 <measure+0x4e>
    1638:	82 e0       	ldi	r24, 0x02	; 2
    163a:	90 e0       	ldi	r25, 0x00	; 0
    163c:	a0 e0       	ldi	r26, 0x00	; 0
    163e:	b0 e0       	ldi	r27, 0x00	; 0
    {
        for(int i=0;i<EXPOSURE_TIME_SEL_N;i++)
        {
            exposure_time = select_exposure_time(i);
    1640:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
    1644:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
    1648:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
    164c:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
            exposure_time_sel = i;
    1650:	d0 93 3b 02 	sts	0x023B, r29	; 0x80023b <exposure_time_sel+0x1>
    1654:	c0 93 3a 02 	sts	0x023A, r28	; 0x80023a <exposure_time_sel>
            c12880ma_read();
    1658:	71 de       	rcall	.-798    	; 0x133c <c12880ma_read>
    165a:	30 e8       	ldi	r19, 0x80	; 128
    165c:	83 2e       	mov	r8, r19
    165e:	34 e0       	ldi	r19, 0x04	; 4

            float max = 0;
    1660:	93 2e       	mov	r9, r19
    1662:	61 2c       	mov	r6, r1
    1664:	71 2c       	mov	r7, r1
    1666:	a1 2c       	mov	r10, r1
            float th = 1000.0f;
            for(int i=0;i<C12880MA_CHANELS;i++)
            {
                max = MAX(max, opticalPower[i]);
    1668:	b1 2c       	mov	r11, r1
    166a:	f4 01       	movw	r30, r8
    166c:	c1 90       	ld	r12, Z+
    166e:	d1 90       	ld	r13, Z+
    1670:	e1 90       	ld	r14, Z+
    1672:	f1 90       	ld	r15, Z+
    1674:	4f 01       	movw	r8, r30
    1676:	93 01       	movw	r18, r6
    1678:	a5 01       	movw	r20, r10
    167a:	c7 01       	movw	r24, r14
    167c:	b6 01       	movw	r22, r12
    167e:	0e 94 6d 17 	call	0x2eda	; 0x2eda <__cmpsf2>
    1682:	87 fd       	sbrc	r24, 7
    1684:	02 c0       	rjmp	.+4      	; 0x168a <measure+0x98>
    1686:	36 01       	movw	r6, r12
            exposure_time_sel = i;
            c12880ma_read();

            float max = 0;
            float th = 1000.0f;
            for(int i=0;i<C12880MA_CHANELS;i++)
    1688:	57 01       	movw	r10, r14
    168a:	f0 e0       	ldi	r31, 0x00	; 0
    168c:	8f 16       	cp	r8, r31
    168e:	f9 e0       	ldi	r31, 0x09	; 9
    1690:	9f 06       	cpc	r9, r31
            {
                max = MAX(max, opticalPower[i]);
            }
            if(max >= th)
    1692:	59 f7       	brne	.-42     	; 0x166a <measure+0x78>
    1694:	20 e0       	ldi	r18, 0x00	; 0
    1696:	30 e0       	ldi	r19, 0x00	; 0
    1698:	4a e7       	ldi	r20, 0x7A	; 122
    169a:	54 e4       	ldi	r21, 0x44	; 68
    169c:	b3 01       	movw	r22, r6
    169e:	c5 01       	movw	r24, r10
    16a0:	0e 94 bc 18 	call	0x3178	; 0x3178 <__gesf2>
    16a4:	87 ff       	sbrs	r24, 7
}
void measure()
{
    if(auto_exposure)
    {
        for(int i=0;i<EXPOSURE_TIME_SEL_N;i++)
    16a6:	35 c0       	rjmp	.+106    	; 0x1712 <measure+0x120>
    16a8:	21 96       	adiw	r28, 0x01	; 1
    16aa:	0e 5f       	subi	r16, 0xFE	; 254
    16ac:	1f 4f       	sbci	r17, 0xFF	; 255
    16ae:	ca 30       	cpi	r28, 0x0A	; 10
    16b0:	d1 05       	cpc	r29, r1
    16b2:	09 f0       	breq	.+2      	; 0x16b6 <measure+0xc4>
    16b4:	b7 cf       	rjmp	.-146    	; 0x1624 <measure+0x32>
    16b6:	2d c0       	rjmp	.+90     	; 0x1712 <measure+0x120>
    16b8:	80 91 3a 02 	lds	r24, 0x023A	; 0x80023a <exposure_time_sel>
    16bc:	90 91 3b 02 	lds	r25, 0x023B	; 0x80023b <exposure_time_sel+0x1>
    16c0:	01 97       	sbiw	r24, 0x01	; 1
    16c2:	89 30       	cpi	r24, 0x09	; 9
    16c4:	91 05       	cpc	r25, r1
    16c6:	50 f4       	brcc	.+20     	; 0x16dc <measure+0xea>
    16c8:	88 0f       	add	r24, r24
    16ca:	99 1f       	adc	r25, r25
    16cc:	fc 01       	movw	r30, r24
    16ce:	e5 5b       	subi	r30, 0xB5	; 181
    16d0:	fe 4f       	sbci	r31, 0xFE	; 254
    16d2:	80 81       	ld	r24, Z
    16d4:	91 81       	ldd	r25, Z+1	; 0x01
    16d6:	a0 e0       	ldi	r26, 0x00	; 0
    16d8:	b0 e0       	ldi	r27, 0x00	; 0
    }
}

long select_exposure_time(int sel)
{
    switch (sel)
    16da:	04 c0       	rjmp	.+8      	; 0x16e4 <measure+0xf2>
    16dc:	82 e0       	ldi	r24, 0x02	; 2
    16de:	90 e0       	ldi	r25, 0x00	; 0
    16e0:	a0 e0       	ldi	r26, 0x00	; 0
                break;
        }
    }
    else
    {
        exposure_time = select_exposure_time(exposure_time_sel);
    16e2:	b0 e0       	ldi	r27, 0x00	; 0
    16e4:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
    16e8:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
    16ec:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
    16f0:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
        c12880ma_read();
    }
}
    16f4:	df 91       	pop	r29
    16f6:	cf 91       	pop	r28
    16f8:	1f 91       	pop	r17
    16fa:	0f 91       	pop	r16
    16fc:	ff 90       	pop	r15
    16fe:	ef 90       	pop	r14
    1700:	df 90       	pop	r13
    1702:	cf 90       	pop	r12
    1704:	bf 90       	pop	r11
    1706:	af 90       	pop	r10
    1708:	9f 90       	pop	r9
    170a:	8f 90       	pop	r8
        }
    }
    else
    {
        exposure_time = select_exposure_time(exposure_time_sel);
        c12880ma_read();
    170c:	7f 90       	pop	r7
    170e:	6f 90       	pop	r6
    }
}
    1710:	15 ce       	rjmp	.-982    	; 0x133c <c12880ma_read>
    1712:	df 91       	pop	r29
    1714:	cf 91       	pop	r28
    1716:	1f 91       	pop	r17
    1718:	0f 91       	pop	r16
    171a:	ff 90       	pop	r15
    171c:	ef 90       	pop	r14
    171e:	df 90       	pop	r13
    1720:	cf 90       	pop	r12
    1722:	bf 90       	pop	r11
    1724:	af 90       	pop	r10
    1726:	9f 90       	pop	r9
    1728:	8f 90       	pop	r8
    172a:	7f 90       	pop	r7
    172c:	6f 90       	pop	r6

    return t;
}

void mcp3201_init()
{
    172e:	08 95       	ret

00001730 <dark>:
    1730:	2f 92       	push	r2
    1732:	3f 92       	push	r3
    1734:	4f 92       	push	r4
    1736:	5f 92       	push	r5
    1738:	6f 92       	push	r6
    173a:	7f 92       	push	r7
    173c:	8f 92       	push	r8
    173e:	9f 92       	push	r9
    1740:	af 92       	push	r10
    1742:	bf 92       	push	r11
    1744:	cf 92       	push	r12
    1746:	df 92       	push	r13
    1748:	ef 92       	push	r14
    174a:	ff 92       	push	r15
    174c:	0f 93       	push	r16
    174e:	1f 93       	push	r17
    1750:	cf 93       	push	r28
    1752:	df 93       	push	r29
    1754:	cd b7       	in	r28, 0x3d	; 61
    1756:	de b7       	in	r29, 0x3e	; 62
    1758:	28 97       	sbiw	r28, 0x08	; 8
    175a:	0f b6       	in	r0, 0x3f	; 63
    175c:	f8 94       	cli
    175e:	de bf       	out	0x3e, r29	; 62
    1760:	0f be       	out	0x3f, r0	; 63
    1762:	cd bf       	out	0x3d, r28	; 61
    1764:	23 e2       	ldi	r18, 0x23	; 35
    1766:	31 e0       	ldi	r19, 0x01	; 1
    1768:	3a 83       	std	Y+2, r19	; 0x02
    176a:	29 83       	std	Y+1, r18	; 0x01
    176c:	89 e4       	ldi	r24, 0x49	; 73
    176e:	91 e0       	ldi	r25, 0x01	; 1
    1770:	9e 83       	std	Y+6, r25	; 0x06
    1772:	8d 83       	std	Y+5, r24	; 0x05
    1774:	89 01       	movw	r16, r18
    1776:	21 2c       	mov	r2, r1
    1778:	31 2c       	mov	r3, r1
    177a:	c1 01       	movw	r24, r2
    177c:	01 97       	sbiw	r24, 0x01	; 1
    177e:	09 97       	sbiw	r24, 0x09	; 9
    1780:	38 f4       	brcc	.+14     	; 0x1790 <dark+0x60>
    1782:	ad 81       	ldd	r26, Y+5	; 0x05
    1784:	be 81       	ldd	r27, Y+6	; 0x06
    1786:	8d 91       	ld	r24, X+
    1788:	9c 91       	ld	r25, X
    178a:	a0 e0       	ldi	r26, 0x00	; 0
    178c:	b0 e0       	ldi	r27, 0x00	; 0
    178e:	04 c0       	rjmp	.+8      	; 0x1798 <dark+0x68>
    1790:	82 e0       	ldi	r24, 0x02	; 2
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	a0 e0       	ldi	r26, 0x00	; 0
    1796:	b0 e0       	ldi	r27, 0x00	; 0
    1798:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
    179c:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
    17a0:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
    17a4:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
    17a8:	c9 dd       	rcall	.-1134   	; 0x133c <c12880ma_read>
    17aa:	e0 e8       	ldi	r30, 0x80	; 128
    17ac:	f4 e0       	ldi	r31, 0x04	; 4
    17ae:	fc 83       	std	Y+4, r31	; 0x04
    17b0:	eb 83       	std	Y+3, r30	; 0x03
    17b2:	f8 87       	std	Y+8, r31	; 0x08
    17b4:	ef 83       	std	Y+7, r30	; 0x07
    17b6:	af 81       	ldd	r26, Y+7	; 0x07
    17b8:	b8 85       	ldd	r27, Y+8	; 0x08
    17ba:	4d 90       	ld	r4, X+
    17bc:	5d 90       	ld	r5, X+
    17be:	6d 90       	ld	r6, X+
    17c0:	7d 90       	ld	r7, X+
    17c2:	b8 87       	std	Y+8, r27	; 0x08
    17c4:	af 83       	std	Y+7, r26	; 0x07
    17c6:	18 96       	adiw	r26, 0x08	; 8
    17c8:	cd 90       	ld	r12, X+
    17ca:	dd 90       	ld	r13, X+
    17cc:	ed 90       	ld	r14, X+
    17ce:	fc 90       	ld	r15, X
    17d0:	1b 97       	sbiw	r26, 0x0b	; 11
    17d2:	20 e0       	ldi	r18, 0x00	; 0
    17d4:	30 e0       	ldi	r19, 0x00	; 0
    17d6:	40 e4       	ldi	r20, 0x40	; 64
    17d8:	51 e4       	ldi	r21, 0x41	; 65
    17da:	6d 91       	ld	r22, X+
    17dc:	7d 91       	ld	r23, X+
    17de:	8d 91       	ld	r24, X+
    17e0:	9c 91       	ld	r25, X
    17e2:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    17e6:	4b 01       	movw	r8, r22
    17e8:	5c 01       	movw	r10, r24
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	40 e4       	ldi	r20, 0x40	; 64
    17f0:	50 ec       	ldi	r21, 0xC0	; 192
    17f2:	c3 01       	movw	r24, r6
    17f4:	b2 01       	movw	r22, r4
    17f6:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    17fa:	9b 01       	movw	r18, r22
    17fc:	ac 01       	movw	r20, r24
    17fe:	c5 01       	movw	r24, r10
    1800:	b4 01       	movw	r22, r8
    1802:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    1806:	4b 01       	movw	r8, r22
    1808:	5c 01       	movw	r10, r24
    180a:	20 e0       	ldi	r18, 0x00	; 0
    180c:	30 e0       	ldi	r19, 0x00	; 0
    180e:	48 e8       	ldi	r20, 0x88	; 136
    1810:	51 e4       	ldi	r21, 0x41	; 65
    1812:	ef 81       	ldd	r30, Y+7	; 0x07
    1814:	f8 85       	ldd	r31, Y+8	; 0x08
    1816:	64 81       	ldd	r22, Z+4	; 0x04
    1818:	75 81       	ldd	r23, Z+5	; 0x05
    181a:	86 81       	ldd	r24, Z+6	; 0x06
    181c:	97 81       	ldd	r25, Z+7	; 0x07
    181e:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1822:	9b 01       	movw	r18, r22
    1824:	ac 01       	movw	r20, r24
    1826:	c5 01       	movw	r24, r10
    1828:	b4 01       	movw	r22, r8
    182a:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    182e:	4b 01       	movw	r8, r22
    1830:	5c 01       	movw	r10, r24
    1832:	20 e0       	ldi	r18, 0x00	; 0
    1834:	30 e0       	ldi	r19, 0x00	; 0
    1836:	40 e4       	ldi	r20, 0x40	; 64
    1838:	51 e4       	ldi	r21, 0x41	; 65
    183a:	c7 01       	movw	r24, r14
    183c:	b6 01       	movw	r22, r12
    183e:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1842:	9b 01       	movw	r18, r22
    1844:	ac 01       	movw	r20, r24
    1846:	c5 01       	movw	r24, r10
    1848:	b4 01       	movw	r22, r8
    184a:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    184e:	4b 01       	movw	r8, r22
    1850:	5c 01       	movw	r10, r24
    1852:	20 e0       	ldi	r18, 0x00	; 0
    1854:	30 e0       	ldi	r19, 0x00	; 0
    1856:	40 e4       	ldi	r20, 0x40	; 64
    1858:	50 e4       	ldi	r21, 0x40	; 64
    185a:	c7 01       	movw	r24, r14
    185c:	b6 01       	movw	r22, r12
    185e:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1862:	9b 01       	movw	r18, r22
    1864:	ac 01       	movw	r20, r24
    1866:	c5 01       	movw	r24, r10
    1868:	b4 01       	movw	r22, r8
    186a:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    186e:	20 e0       	ldi	r18, 0x00	; 0
    1870:	30 e0       	ldi	r19, 0x00	; 0
    1872:	4c e0       	ldi	r20, 0x0C	; 12
    1874:	52 e4       	ldi	r21, 0x42	; 66
    1876:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    187a:	af 81       	ldd	r26, Y+7	; 0x07
    187c:	b8 85       	ldd	r27, Y+8	; 0x08
    187e:	14 96       	adiw	r26, 0x04	; 4
    1880:	6d 93       	st	X+, r22
    1882:	7d 93       	st	X+, r23
    1884:	8d 93       	st	X+, r24
    1886:	9c 93       	st	X, r25
    1888:	17 97       	sbiw	r26, 0x07	; 7
    188a:	e0 ef       	ldi	r30, 0xF0	; 240
    188c:	f8 e0       	ldi	r31, 0x08	; 8
    188e:	ea 17       	cp	r30, r26
    1890:	fb 07       	cpc	r31, r27
    1892:	09 f0       	breq	.+2      	; 0x1896 <dark+0x166>
    1894:	90 cf       	rjmp	.-224    	; 0x17b6 <dark+0x86>
    1896:	80 e0       	ldi	r24, 0x00	; 0
    1898:	90 ef       	ldi	r25, 0xF0	; 240
    189a:	af e7       	ldi	r26, 0x7F	; 127
    189c:	b5 e4       	ldi	r27, 0x45	; 69
    189e:	f8 01       	movw	r30, r16
    18a0:	80 83       	st	Z, r24
    18a2:	91 83       	std	Z+1, r25	; 0x01
    18a4:	a2 83       	std	Z+2, r26	; 0x02
    18a6:	b3 83       	std	Z+3, r27	; 0x03
    18a8:	20 e4       	ldi	r18, 0x40	; 64
    18aa:	32 e0       	ldi	r19, 0x02	; 2
    18ac:	38 87       	std	Y+8, r19	; 0x08
    18ae:	2f 83       	std	Y+7, r18	; 0x07
    18b0:	33 e0       	ldi	r19, 0x03	; 3
    18b2:	23 16       	cp	r2, r19
    18b4:	31 04       	cpc	r3, r1
    18b6:	61 f4       	brne	.+24     	; 0x18d0 <dark+0x1a0>
    18b8:	ab 81       	ldd	r26, Y+3	; 0x03
    18ba:	bc 81       	ldd	r27, Y+4	; 0x04
    18bc:	6d 91       	ld	r22, X+
    18be:	7d 91       	ld	r23, X+
    18c0:	8d 91       	ld	r24, X+
    18c2:	9c 91       	ld	r25, X
    18c4:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__fixsfsi>
    18c8:	ef 81       	ldd	r30, Y+7	; 0x07
    18ca:	f8 85       	ldd	r31, Y+8	; 0x08
    18cc:	71 83       	std	Z+1, r23	; 0x01
    18ce:	60 83       	st	Z, r22
    18d0:	ab 81       	ldd	r26, Y+3	; 0x03
    18d2:	bc 81       	ldd	r27, Y+4	; 0x04
    18d4:	cd 90       	ld	r12, X+
    18d6:	dd 90       	ld	r13, X+
    18d8:	ed 90       	ld	r14, X+
    18da:	fd 90       	ld	r15, X+
    18dc:	bc 83       	std	Y+4, r27	; 0x04
    18de:	ab 83       	std	Y+3, r26	; 0x03
    18e0:	a7 01       	movw	r20, r14
    18e2:	96 01       	movw	r18, r12
    18e4:	f8 01       	movw	r30, r16
    18e6:	60 81       	ld	r22, Z
    18e8:	71 81       	ldd	r23, Z+1	; 0x01
    18ea:	82 81       	ldd	r24, Z+2	; 0x02
    18ec:	93 81       	ldd	r25, Z+3	; 0x03
    18ee:	0e 94 bc 18 	call	0x3178	; 0x3178 <__gesf2>
    18f2:	18 16       	cp	r1, r24
    18f4:	34 f4       	brge	.+12     	; 0x1902 <dark+0x1d2>
    18f6:	d8 01       	movw	r26, r16
    18f8:	cd 92       	st	X+, r12
    18fa:	dd 92       	st	X+, r13
    18fc:	ed 92       	st	X+, r14
    18fe:	fc 92       	st	X, r15
    1900:	13 97       	sbiw	r26, 0x03	; 3
    1902:	ef 81       	ldd	r30, Y+7	; 0x07
    1904:	f8 85       	ldd	r31, Y+8	; 0x08
    1906:	32 96       	adiw	r30, 0x02	; 2
    1908:	f8 87       	std	Y+8, r31	; 0x08
    190a:	ef 83       	std	Y+7, r30	; 0x07
    190c:	20 e0       	ldi	r18, 0x00	; 0
    190e:	39 e0       	ldi	r19, 0x09	; 9
    1910:	8b 81       	ldd	r24, Y+3	; 0x03
    1912:	9c 81       	ldd	r25, Y+4	; 0x04
    1914:	28 17       	cp	r18, r24
    1916:	39 07       	cpc	r19, r25
    1918:	59 f6       	brne	.-106    	; 0x18b0 <dark+0x180>
    191a:	9f ef       	ldi	r25, 0xFF	; 255
    191c:	29 1a       	sub	r2, r25
    191e:	39 0a       	sbc	r3, r25
    1920:	0c 5f       	subi	r16, 0xFC	; 252
    1922:	1f 4f       	sbci	r17, 0xFF	; 255
    1924:	ad 81       	ldd	r26, Y+5	; 0x05
    1926:	be 81       	ldd	r27, Y+6	; 0x06
    1928:	12 96       	adiw	r26, 0x02	; 2
    192a:	be 83       	std	Y+6, r27	; 0x06
    192c:	ad 83       	std	Y+5, r26	; 0x05
    192e:	ba e0       	ldi	r27, 0x0A	; 10
    1930:	2b 16       	cp	r2, r27
    1932:	31 04       	cpc	r3, r1
    1934:	09 f0       	breq	.+2      	; 0x1938 <dark+0x208>
    1936:	21 cf       	rjmp	.-446    	; 0x177a <dark+0x4a>
    1938:	c0 90 2f 01 	lds	r12, 0x012F	; 0x80012f <darkopticalPowerGain+0xc>
    193c:	d0 90 30 01 	lds	r13, 0x0130	; 0x800130 <darkopticalPowerGain+0xd>
    1940:	e0 90 31 01 	lds	r14, 0x0131	; 0x800131 <darkopticalPowerGain+0xe>
    1944:	f0 90 32 01 	lds	r15, 0x0132	; 0x800132 <darkopticalPowerGain+0xf>
    1948:	a7 01       	movw	r20, r14
    194a:	96 01       	movw	r18, r12
    194c:	e9 81       	ldd	r30, Y+1	; 0x01
    194e:	fa 81       	ldd	r31, Y+2	; 0x02
    1950:	60 81       	ld	r22, Z
    1952:	71 81       	ldd	r23, Z+1	; 0x01
    1954:	82 81       	ldd	r24, Z+2	; 0x02
    1956:	93 81       	ldd	r25, Z+3	; 0x03
    1958:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    195c:	a9 81       	ldd	r26, Y+1	; 0x01
    195e:	ba 81       	ldd	r27, Y+2	; 0x02
    1960:	6d 93       	st	X+, r22
    1962:	7d 93       	st	X+, r23
    1964:	8d 93       	st	X+, r24
    1966:	9d 93       	st	X+, r25
    1968:	ba 83       	std	Y+2, r27	; 0x02
    196a:	a9 83       	std	Y+1, r26	; 0x01
    196c:	eb e4       	ldi	r30, 0x4B	; 75
    196e:	f1 e0       	ldi	r31, 0x01	; 1
    1970:	ea 17       	cp	r30, r26
    1972:	fb 07       	cpc	r31, r27
    1974:	49 f7       	brne	.-46     	; 0x1948 <dark+0x218>
    1976:	37 dc       	rcall	.-1938   	; 0x11e6 <adc_temp_read>
    1978:	60 93 36 02 	sts	0x0236, r22	; 0x800236 <temperature_dark>
    197c:	70 93 37 02 	sts	0x0237, r23	; 0x800237 <temperature_dark+0x1>
    1980:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <temperature_dark+0x2>
    1984:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <temperature_dark+0x3>
    1988:	28 96       	adiw	r28, 0x08	; 8
    198a:	0f b6       	in	r0, 0x3f	; 63
    198c:	f8 94       	cli
    198e:	de bf       	out	0x3e, r29	; 62
    1990:	0f be       	out	0x3f, r0	; 63
    1992:	cd bf       	out	0x3d, r28	; 61
    1994:	df 91       	pop	r29
    1996:	cf 91       	pop	r28
    1998:	1f 91       	pop	r17
    199a:	0f 91       	pop	r16
    199c:	ff 90       	pop	r15
    199e:	ef 90       	pop	r14
    19a0:	df 90       	pop	r13
    19a2:	cf 90       	pop	r12
    19a4:	bf 90       	pop	r11
    19a6:	af 90       	pop	r10
    19a8:	9f 90       	pop	r9
    19aa:	8f 90       	pop	r8
    19ac:	7f 90       	pop	r7
    19ae:	6f 90       	pop	r6
    19b0:	5f 90       	pop	r5
    19b2:	4f 90       	pop	r4
    19b4:	3f 90       	pop	r3
    19b6:	2f 90       	pop	r2
    19b8:	08 95       	ret

000019ba <CDC_Recive_Event>:
    19ba:	80 e0       	ldi	r24, 0x00	; 0
    19bc:	91 e0       	ldi	r25, 0x01	; 1
    19be:	0e 94 05 16 	call	0x2c0a	; 0x2c0a <CDC_Device_ReceiveByte>
    19c2:	18 16       	cp	r1, r24
    19c4:	19 06       	cpc	r1, r25
    19c6:	9c f4       	brge	.+38     	; 0x19ee <CDC_Recive_Event+0x34>
    19c8:	20 91 00 09 	lds	r18, 0x0900	; 0x800900 <cdc_recive_index>
    19cc:	30 91 01 09 	lds	r19, 0x0901	; 0x800901 <cdc_recive_index+0x1>
    19d0:	f9 01       	movw	r30, r18
    19d2:	ee 5f       	subi	r30, 0xFE	; 254
    19d4:	f6 4f       	sbci	r31, 0xF6	; 246
    19d6:	80 83       	st	Z, r24
    19d8:	2f 5f       	subi	r18, 0xFF	; 255
    19da:	3f 4f       	sbci	r19, 0xFF	; 255
    19dc:	30 93 01 09 	sts	0x0901, r19	; 0x800901 <cdc_recive_index+0x1>
    19e0:	20 93 00 09 	sts	0x0900, r18	; 0x800900 <cdc_recive_index>
    19e4:	0a 97       	sbiw	r24, 0x0a	; 10
    19e6:	19 f4       	brne	.+6      	; 0x19ee <CDC_Recive_Event+0x34>
    19e8:	81 e0       	ldi	r24, 0x01	; 1
    19ea:	80 93 22 09 	sts	0x0922, r24	; 0x800922 <cdc_recived>
    19ee:	08 95       	ret

000019f0 <CDC_Recive_Event_Process>:
    19f0:	2f 92       	push	r2
    19f2:	3f 92       	push	r3
    19f4:	4f 92       	push	r4
    19f6:	5f 92       	push	r5
    19f8:	6f 92       	push	r6
    19fa:	7f 92       	push	r7
    19fc:	8f 92       	push	r8
    19fe:	9f 92       	push	r9
    1a00:	af 92       	push	r10
    1a02:	bf 92       	push	r11
    1a04:	cf 92       	push	r12
    1a06:	df 92       	push	r13
    1a08:	ef 92       	push	r14
    1a0a:	ff 92       	push	r15
    1a0c:	0f 93       	push	r16
    1a0e:	1f 93       	push	r17
    1a10:	cf 93       	push	r28
    1a12:	df 93       	push	r29
    1a14:	cd b7       	in	r28, 0x3d	; 61
    1a16:	de b7       	in	r29, 0x3e	; 62
    1a18:	ce 56       	subi	r28, 0x6E	; 110
    1a1a:	d1 09       	sbc	r29, r1
    1a1c:	0f b6       	in	r0, 0x3f	; 63
    1a1e:	f8 94       	cli
    1a20:	de bf       	out	0x3e, r29	; 62
    1a22:	0f be       	out	0x3f, r0	; 63
    1a24:	cd bf       	out	0x3d, r28	; 61
    1a26:	80 91 22 09 	lds	r24, 0x0922	; 0x800922 <cdc_recived>
    1a2a:	88 23       	and	r24, r24
    1a2c:	09 f4       	brne	.+2      	; 0x1a30 <CDC_Recive_Event_Process+0x40>
    1a2e:	fa c2       	rjmp	.+1524   	; 0x2024 <CDC_Recive_Event_Process+0x634>
    1a30:	10 92 22 09 	sts	0x0922, r1	; 0x800922 <cdc_recived>
    1a34:	45 e0       	ldi	r20, 0x05	; 5
    1a36:	50 e0       	ldi	r21, 0x00	; 0
    1a38:	6d e5       	ldi	r22, 0x5D	; 93
    1a3a:	71 e0       	ldi	r23, 0x01	; 1
    1a3c:	82 e0       	ldi	r24, 0x02	; 2
    1a3e:	99 e0       	ldi	r25, 0x09	; 9
    1a40:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1a44:	89 2b       	or	r24, r25
    1a46:	09 f0       	breq	.+2      	; 0x1a4a <CDC_Recive_Event_Process+0x5a>
    1a48:	61 c0       	rjmp	.+194    	; 0x1b0c <CDC_Recive_Event_Process+0x11c>
    1a4a:	d3 dd       	rcall	.-1114   	; 0x15f2 <measure>
    1a4c:	2f dd       	rcall	.-1442   	; 0x14ac <correct>
    1a4e:	60 e8       	ldi	r22, 0x80	; 128
    1a50:	e6 2e       	mov	r14, r22
    1a52:	64 e0       	ldi	r22, 0x04	; 4
    1a54:	f6 2e       	mov	r15, r22
    1a56:	00 e0       	ldi	r16, 0x00	; 0
    1a58:	10 e0       	ldi	r17, 0x00	; 0
    1a5a:	78 e0       	ldi	r23, 0x08	; 8
    1a5c:	67 2e       	mov	r6, r23
    1a5e:	72 e0       	ldi	r23, 0x02	; 2
    1a60:	77 2e       	mov	r7, r23
    1a62:	ec ed       	ldi	r30, 0xDC	; 220
    1a64:	8e 2e       	mov	r8, r30
    1a66:	e5 e0       	ldi	r30, 0x05	; 5
    1a68:	9e 2e       	mov	r9, r30
    1a6a:	f0 e2       	ldi	r31, 0x20	; 32
    1a6c:	5f 2e       	mov	r5, r31
    1a6e:	9e 01       	movw	r18, r28
    1a70:	2f 5f       	subi	r18, 0xFF	; 255
    1a72:	3f 4f       	sbci	r19, 0xFF	; 255
    1a74:	69 01       	movw	r12, r18
    1a76:	a3 e6       	ldi	r26, 0x63	; 99
    1a78:	aa 2e       	mov	r10, r26
    1a7a:	a1 e0       	ldi	r26, 0x01	; 1
    1a7c:	ba 2e       	mov	r11, r26
    1a7e:	f3 01       	movw	r30, r6
    1a80:	85 91       	lpm	r24, Z+
    1a82:	94 91       	lpm	r25, Z
    1a84:	01 97       	sbiw	r24, 0x01	; 1
    1a86:	08 17       	cp	r16, r24
    1a88:	19 07       	cpc	r17, r25
    1a8a:	80 f1       	brcs	.+96     	; 0x1aec <CDC_Recive_Event_Process+0xfc>
    1a8c:	f4 01       	movw	r30, r8
    1a8e:	85 91       	lpm	r24, Z+
    1a90:	94 91       	lpm	r25, Z
    1a92:	01 96       	adiw	r24, 0x01	; 1
    1a94:	80 17       	cp	r24, r16
    1a96:	91 07       	cpc	r25, r17
    1a98:	48 f1       	brcs	.+82     	; 0x1aec <CDC_Recive_Event_Process+0xfc>
    1a9a:	c8 01       	movw	r24, r16
    1a9c:	b7 da       	rcall	.-2706   	; 0x100c <conv_wl>
    1a9e:	d6 01       	movw	r26, r12
    1aa0:	e5 2d       	mov	r30, r5
    1aa2:	1d 92       	st	X+, r1
    1aa4:	ea 95       	dec	r30
    1aa6:	e9 f7       	brne	.-6      	; 0x1aa2 <CDC_Recive_Event_Process+0xb2>
    1aa8:	d7 01       	movw	r26, r14
    1aaa:	13 96       	adiw	r26, 0x03	; 3
    1aac:	2c 91       	ld	r18, X
    1aae:	13 97       	sbiw	r26, 0x03	; 3
    1ab0:	2f 93       	push	r18
    1ab2:	12 96       	adiw	r26, 0x02	; 2
    1ab4:	2c 91       	ld	r18, X
    1ab6:	12 97       	sbiw	r26, 0x02	; 2
    1ab8:	2f 93       	push	r18
    1aba:	11 96       	adiw	r26, 0x01	; 1
    1abc:	2c 91       	ld	r18, X
    1abe:	11 97       	sbiw	r26, 0x01	; 1
    1ac0:	2f 93       	push	r18
    1ac2:	2c 91       	ld	r18, X
    1ac4:	2f 93       	push	r18
    1ac6:	9f 93       	push	r25
    1ac8:	8f 93       	push	r24
    1aca:	7f 93       	push	r23
    1acc:	6f 93       	push	r22
    1ace:	bf 92       	push	r11
    1ad0:	af 92       	push	r10
    1ad2:	df 92       	push	r13
    1ad4:	cf 92       	push	r12
    1ad6:	0e 94 9f 22 	call	0x453e	; 0x453e <sprintf>
    1ada:	b6 01       	movw	r22, r12
    1adc:	80 e0       	ldi	r24, 0x00	; 0
    1ade:	91 e0       	ldi	r25, 0x01	; 1
    1ae0:	f5 d7       	rcall	.+4074   	; 0x2acc <CDC_Device_SendString>
    1ae2:	0f b6       	in	r0, 0x3f	; 63
    1ae4:	f8 94       	cli
    1ae6:	de bf       	out	0x3e, r29	; 62
    1ae8:	0f be       	out	0x3f, r0	; 63
    1aea:	cd bf       	out	0x3d, r28	; 61
    1aec:	0f 5f       	subi	r16, 0xFF	; 255
    1aee:	1f 4f       	sbci	r17, 0xFF	; 255
    1af0:	f4 e0       	ldi	r31, 0x04	; 4
    1af2:	ef 0e       	add	r14, r31
    1af4:	f1 1c       	adc	r15, r1
    1af6:	00 32       	cpi	r16, 0x20	; 32
    1af8:	21 e0       	ldi	r18, 0x01	; 1
    1afa:	12 07       	cpc	r17, r18
    1afc:	09 f0       	breq	.+2      	; 0x1b00 <CDC_Recive_Event_Process+0x110>
    1afe:	bf cf       	rjmp	.-130    	; 0x1a7e <CDC_Recive_Event_Process+0x8e>
    1b00:	6a e0       	ldi	r22, 0x0A	; 10
    1b02:	80 e0       	ldi	r24, 0x00	; 0
    1b04:	91 e0       	ldi	r25, 0x01	; 1
    1b06:	0e 94 86 15 	call	0x2b0c	; 0x2b0c <CDC_Device_SendByte>
    1b0a:	81 c2       	rjmp	.+1282   	; 0x200e <CDC_Recive_Event_Process+0x61e>
    1b0c:	49 e0       	ldi	r20, 0x09	; 9
    1b0e:	50 e0       	ldi	r21, 0x00	; 0
    1b10:	6a e6       	ldi	r22, 0x6A	; 106
    1b12:	71 e0       	ldi	r23, 0x01	; 1
    1b14:	82 e0       	ldi	r24, 0x02	; 2
    1b16:	99 e0       	ldi	r25, 0x09	; 9
    1b18:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1b1c:	89 2b       	or	r24, r25
    1b1e:	09 f0       	breq	.+2      	; 0x1b22 <CDC_Recive_Event_Process+0x132>
    1b20:	c2 c0       	rjmp	.+388    	; 0x1ca6 <CDC_Recive_Event_Process+0x2b6>
    1b22:	67 dd       	rcall	.-1330   	; 0x15f2 <measure>
    1b24:	c3 dc       	rcall	.-1658   	; 0x14ac <correct>
    1b26:	54 e9       	ldi	r21, 0x94	; 148
    1b28:	25 2e       	mov	r2, r21
    1b2a:	5a e0       	ldi	r21, 0x0A	; 10
    1b2c:	35 2e       	mov	r3, r21
    1b2e:	88 e0       	ldi	r24, 0x08	; 8
    1b30:	92 e0       	ldi	r25, 0x02	; 2
    1b32:	a9 96       	adiw	r28, 0x29	; 41
    1b34:	9f af       	std	Y+63, r25	; 0x3f
    1b36:	8e af       	std	Y+62, r24	; 0x3e
    1b38:	a9 97       	sbiw	r28, 0x29	; 41
    1b3a:	de 01       	movw	r26, r28
    1b3c:	11 96       	adiw	r26, 0x01	; 1
    1b3e:	a7 96       	adiw	r28, 0x27	; 39
    1b40:	bf af       	std	Y+63, r27	; 0x3f
    1b42:	ae af       	std	Y+62, r26	; 0x3e
    1b44:	a7 97       	sbiw	r28, 0x27	; 39
    1b46:	f1 01       	movw	r30, r2
    1b48:	25 91       	lpm	r18, Z+
    1b4a:	34 91       	lpm	r19, Z
    1b4c:	ab 96       	adiw	r28, 0x2b	; 43
    1b4e:	3f af       	std	Y+63, r19	; 0x3f
    1b50:	2e af       	std	Y+62, r18	; 0x3e
    1b52:	ab 97       	sbiw	r28, 0x2b	; 43
    1b54:	a9 96       	adiw	r28, 0x29	; 41
    1b56:	ee ad       	ldd	r30, Y+62	; 0x3e
    1b58:	ff ad       	ldd	r31, Y+63	; 0x3f
    1b5a:	a9 97       	sbiw	r28, 0x29	; 41
    1b5c:	05 91       	lpm	r16, Z+
    1b5e:	14 91       	lpm	r17, Z
    1b60:	78 01       	movw	r14, r16
    1b62:	31 e0       	ldi	r19, 0x01	; 1
    1b64:	e3 1a       	sub	r14, r19
    1b66:	f1 08       	sbc	r15, r1
    1b68:	c7 01       	movw	r24, r14
    1b6a:	50 da       	rcall	.-2912   	; 0x100c <conv_wl>
    1b6c:	4b 01       	movw	r8, r22
    1b6e:	5c 01       	movw	r10, r24
    1b70:	c8 01       	movw	r24, r16
    1b72:	4c da       	rcall	.-2920   	; 0x100c <conv_wl>
    1b74:	af 96       	adiw	r28, 0x2f	; 47
    1b76:	6c af       	std	Y+60, r22	; 0x3c
    1b78:	7d af       	std	Y+61, r23	; 0x3d
    1b7a:	8e af       	std	Y+62, r24	; 0x3e
    1b7c:	9f af       	std	Y+63, r25	; 0x3f
    1b7e:	af 97       	sbiw	r28, 0x2f	; 47
    1b80:	f7 01       	movw	r30, r14
    1b82:	ee 0f       	add	r30, r30
    1b84:	ff 1f       	adc	r31, r31
    1b86:	ee 0f       	add	r30, r30
    1b88:	ff 1f       	adc	r31, r31
    1b8a:	e0 58       	subi	r30, 0x80	; 128
    1b8c:	fb 4f       	sbci	r31, 0xFB	; 251
    1b8e:	40 80       	ld	r4, Z
    1b90:	51 80       	ldd	r5, Z+1	; 0x01
    1b92:	62 80       	ldd	r6, Z+2	; 0x02
    1b94:	73 80       	ldd	r7, Z+3	; 0x03
    1b96:	00 0f       	add	r16, r16
    1b98:	11 1f       	adc	r17, r17
    1b9a:	00 0f       	add	r16, r16
    1b9c:	11 1f       	adc	r17, r17
    1b9e:	f8 01       	movw	r30, r16
    1ba0:	e0 58       	subi	r30, 0x80	; 128
    1ba2:	fb 4f       	sbci	r31, 0xFB	; 251
    1ba4:	a3 01       	movw	r20, r6
    1ba6:	92 01       	movw	r18, r4
    1ba8:	60 81       	ld	r22, Z
    1baa:	71 81       	ldd	r23, Z+1	; 0x01
    1bac:	82 81       	ldd	r24, Z+2	; 0x02
    1bae:	93 81       	ldd	r25, Z+3	; 0x03
    1bb0:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    1bb4:	6b 01       	movw	r12, r22
    1bb6:	7c 01       	movw	r14, r24
    1bb8:	ab 96       	adiw	r28, 0x2b	; 43
    1bba:	ae ad       	ldd	r26, Y+62	; 0x3e
    1bbc:	bf ad       	ldd	r27, Y+63	; 0x3f
    1bbe:	ab 97       	sbiw	r28, 0x2b	; 43
    1bc0:	bd 01       	movw	r22, r26
    1bc2:	bb 0f       	add	r27, r27
    1bc4:	88 0b       	sbc	r24, r24
    1bc6:	99 0b       	sbc	r25, r25
    1bc8:	0e 94 0c 18 	call	0x3018	; 0x3018 <__floatsisf>
    1bcc:	a5 01       	movw	r20, r10
    1bce:	94 01       	movw	r18, r8
    1bd0:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    1bd4:	9b 01       	movw	r18, r22
    1bd6:	ac 01       	movw	r20, r24
    1bd8:	c7 01       	movw	r24, r14
    1bda:	b6 01       	movw	r22, r12
    1bdc:	0e 94 05 19 	call	0x320a	; 0x320a <__mulsf3>
    1be0:	6b 01       	movw	r12, r22
    1be2:	7c 01       	movw	r14, r24
    1be4:	a5 01       	movw	r20, r10
    1be6:	94 01       	movw	r18, r8
    1be8:	af 96       	adiw	r28, 0x2f	; 47
    1bea:	6c ad       	ldd	r22, Y+60	; 0x3c
    1bec:	7d ad       	ldd	r23, Y+61	; 0x3d
    1bee:	8e ad       	ldd	r24, Y+62	; 0x3e
    1bf0:	9f ad       	ldd	r25, Y+63	; 0x3f
    1bf2:	af 97       	sbiw	r28, 0x2f	; 47
    1bf4:	0e 94 08 17 	call	0x2e10	; 0x2e10 <__subsf3>
    1bf8:	9b 01       	movw	r18, r22
    1bfa:	ac 01       	movw	r20, r24
    1bfc:	c7 01       	movw	r24, r14
    1bfe:	b6 01       	movw	r22, r12
    1c00:	0e 94 71 17 	call	0x2ee2	; 0x2ee2 <__divsf3>
    1c04:	a3 01       	movw	r20, r6
    1c06:	92 01       	movw	r18, r4
    1c08:	0e 94 09 17 	call	0x2e12	; 0x2e12 <__addsf3>
    1c0c:	16 2f       	mov	r17, r22
    1c0e:	07 2f       	mov	r16, r23
    1c10:	f8 2e       	mov	r15, r24
    1c12:	e9 2e       	mov	r14, r25
    1c14:	20 e0       	ldi	r18, 0x00	; 0
    1c16:	30 e0       	ldi	r19, 0x00	; 0
    1c18:	a9 01       	movw	r20, r18
    1c1a:	0e 94 6d 17 	call	0x2eda	; 0x2eda <__cmpsf2>
    1c1e:	87 ff       	sbrs	r24, 7
    1c20:	04 c0       	rjmp	.+8      	; 0x1c2a <CDC_Recive_Event_Process+0x23a>
    1c22:	10 e0       	ldi	r17, 0x00	; 0
    1c24:	00 e0       	ldi	r16, 0x00	; 0
    1c26:	f1 2c       	mov	r15, r1
    1c28:	e1 2c       	mov	r14, r1
    1c2a:	a7 96       	adiw	r28, 0x27	; 39
    1c2c:	ee ad       	ldd	r30, Y+62	; 0x3e
    1c2e:	ff ad       	ldd	r31, Y+63	; 0x3f
    1c30:	a7 97       	sbiw	r28, 0x27	; 39
    1c32:	20 e2       	ldi	r18, 0x20	; 32
    1c34:	11 92       	st	Z+, r1
    1c36:	2a 95       	dec	r18
    1c38:	e9 f7       	brne	.-6      	; 0x1c34 <CDC_Recive_Event_Process+0x244>
    1c3a:	ef 92       	push	r14
    1c3c:	ff 92       	push	r15
    1c3e:	0f 93       	push	r16
    1c40:	1f 93       	push	r17
    1c42:	ab 96       	adiw	r28, 0x2b	; 43
    1c44:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c46:	ab 97       	sbiw	r28, 0x2b	; 43
    1c48:	3f 93       	push	r19
    1c4a:	aa 96       	adiw	r28, 0x2a	; 42
    1c4c:	8f ad       	ldd	r24, Y+63	; 0x3f
    1c4e:	aa 97       	sbiw	r28, 0x2a	; 42
    1c50:	8f 93       	push	r24
    1c52:	a3 e7       	ldi	r26, 0x73	; 115
    1c54:	b1 e0       	ldi	r27, 0x01	; 1
    1c56:	bf 93       	push	r27
    1c58:	af 93       	push	r26
    1c5a:	21 e0       	ldi	r18, 0x01	; 1
    1c5c:	30 e0       	ldi	r19, 0x00	; 0
    1c5e:	2c 0f       	add	r18, r28
    1c60:	3d 1f       	adc	r19, r29
    1c62:	3f 93       	push	r19
    1c64:	2f 93       	push	r18
    1c66:	0e 94 9f 22 	call	0x453e	; 0x453e <sprintf>
    1c6a:	be 01       	movw	r22, r28
    1c6c:	6f 5f       	subi	r22, 0xFF	; 255
    1c6e:	7f 4f       	sbci	r23, 0xFF	; 255
    1c70:	80 e0       	ldi	r24, 0x00	; 0
    1c72:	91 e0       	ldi	r25, 0x01	; 1
    1c74:	2b d7       	rcall	.+3670   	; 0x2acc <CDC_Device_SendString>
    1c76:	32 e0       	ldi	r19, 0x02	; 2
    1c78:	23 0e       	add	r2, r19
    1c7a:	31 1c       	adc	r3, r1
    1c7c:	a9 96       	adiw	r28, 0x29	; 41
    1c7e:	8e ad       	ldd	r24, Y+62	; 0x3e
    1c80:	9f ad       	ldd	r25, Y+63	; 0x3f
    1c82:	a9 97       	sbiw	r28, 0x29	; 41
    1c84:	02 96       	adiw	r24, 0x02	; 2
    1c86:	a9 96       	adiw	r28, 0x29	; 41
    1c88:	9f af       	std	Y+63, r25	; 0x3f
    1c8a:	8e af       	std	Y+62, r24	; 0x3e
    1c8c:	a9 97       	sbiw	r28, 0x29	; 41
    1c8e:	0f b6       	in	r0, 0x3f	; 63
    1c90:	f8 94       	cli
    1c92:	de bf       	out	0x3e, r29	; 62
    1c94:	0f be       	out	0x3f, r0	; 63
    1c96:	cd bf       	out	0x3d, r28	; 61
    1c98:	ba e6       	ldi	r27, 0x6A	; 106
    1c9a:	2b 16       	cp	r2, r27
    1c9c:	be e0       	ldi	r27, 0x0E	; 14
    1c9e:	3b 06       	cpc	r3, r27
    1ca0:	09 f0       	breq	.+2      	; 0x1ca4 <CDC_Recive_Event_Process+0x2b4>
    1ca2:	51 cf       	rjmp	.-350    	; 0x1b46 <CDC_Recive_Event_Process+0x156>
    1ca4:	2d cf       	rjmp	.-422    	; 0x1b00 <CDC_Recive_Event_Process+0x110>
    1ca6:	43 e0       	ldi	r20, 0x03	; 3
    1ca8:	50 e0       	ldi	r21, 0x00	; 0
    1caa:	6a e7       	ldi	r22, 0x7A	; 122
    1cac:	71 e0       	ldi	r23, 0x01	; 1
    1cae:	82 e0       	ldi	r24, 0x02	; 2
    1cb0:	99 e0       	ldi	r25, 0x09	; 9
    1cb2:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1cb6:	89 2b       	or	r24, r25
    1cb8:	99 f5       	brne	.+102    	; 0x1d20 <CDC_Recive_Event_Process+0x330>
    1cba:	9b dc       	rcall	.-1738   	; 0x15f2 <measure>
    1cbc:	00 e8       	ldi	r16, 0x80	; 128
    1cbe:	14 e0       	ldi	r17, 0x04	; 4
    1cc0:	80 e0       	ldi	r24, 0x00	; 0
    1cc2:	a8 2e       	mov	r10, r24
    1cc4:	89 e0       	ldi	r24, 0x09	; 9
    1cc6:	b8 2e       	mov	r11, r24
    1cc8:	90 e1       	ldi	r25, 0x10	; 16
    1cca:	99 2e       	mov	r9, r25
    1ccc:	fe 01       	movw	r30, r28
    1cce:	31 96       	adiw	r30, 0x01	; 1
    1cd0:	7f 01       	movw	r14, r30
    1cd2:	2e e7       	ldi	r18, 0x7E	; 126
    1cd4:	c2 2e       	mov	r12, r18
    1cd6:	21 e0       	ldi	r18, 0x01	; 1
    1cd8:	d2 2e       	mov	r13, r18
    1cda:	d7 01       	movw	r26, r14
    1cdc:	e9 2d       	mov	r30, r9
    1cde:	1d 92       	st	X+, r1
    1ce0:	ea 95       	dec	r30
    1ce2:	e9 f7       	brne	.-6      	; 0x1cde <CDC_Recive_Event_Process+0x2ee>
    1ce4:	d8 01       	movw	r26, r16
    1ce6:	6d 91       	ld	r22, X+
    1ce8:	7d 91       	ld	r23, X+
    1cea:	8d 91       	ld	r24, X+
    1cec:	9d 91       	ld	r25, X+
    1cee:	8d 01       	movw	r16, r26
    1cf0:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <__fixsfsi>
    1cf4:	7f 93       	push	r23
    1cf6:	6f 93       	push	r22
    1cf8:	df 92       	push	r13
    1cfa:	cf 92       	push	r12
    1cfc:	ff 92       	push	r15
    1cfe:	ef 92       	push	r14
    1d00:	0e 94 9f 22 	call	0x453e	; 0x453e <sprintf>
    1d04:	b7 01       	movw	r22, r14
    1d06:	80 e0       	ldi	r24, 0x00	; 0
    1d08:	91 e0       	ldi	r25, 0x01	; 1
    1d0a:	e0 d6       	rcall	.+3520   	; 0x2acc <CDC_Device_SendString>
    1d0c:	0f 90       	pop	r0
    1d0e:	0f 90       	pop	r0
    1d10:	0f 90       	pop	r0
    1d12:	0f 90       	pop	r0
    1d14:	0f 90       	pop	r0
    1d16:	0f 90       	pop	r0
    1d18:	a0 16       	cp	r10, r16
    1d1a:	b1 06       	cpc	r11, r17
    1d1c:	f1 f6       	brne	.-68     	; 0x1cda <CDC_Recive_Event_Process+0x2ea>
    1d1e:	f0 ce       	rjmp	.-544    	; 0x1b00 <CDC_Recive_Event_Process+0x110>
    1d20:	44 e0       	ldi	r20, 0x04	; 4
    1d22:	50 e0       	ldi	r21, 0x00	; 0
    1d24:	62 e8       	ldi	r22, 0x82	; 130
    1d26:	71 e0       	ldi	r23, 0x01	; 1
    1d28:	82 e0       	ldi	r24, 0x02	; 2
    1d2a:	99 e0       	ldi	r25, 0x09	; 9
    1d2c:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1d30:	89 2b       	or	r24, r25
    1d32:	11 f4       	brne	.+4      	; 0x1d38 <CDC_Recive_Event_Process+0x348>
    1d34:	fd dc       	rcall	.-1542   	; 0x1730 <dark>
    1d36:	63 c1       	rjmp	.+710    	; 0x1ffe <CDC_Recive_Event_Process+0x60e>
    1d38:	43 e0       	ldi	r20, 0x03	; 3
    1d3a:	50 e0       	ldi	r21, 0x00	; 0
    1d3c:	6c e8       	ldi	r22, 0x8C	; 140
    1d3e:	71 e0       	ldi	r23, 0x01	; 1
    1d40:	82 e0       	ldi	r24, 0x02	; 2
    1d42:	99 e0       	ldi	r25, 0x09	; 9
    1d44:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1d48:	89 2b       	or	r24, r25
    1d4a:	09 f0       	breq	.+2      	; 0x1d4e <CDC_Recive_Event_Process+0x35e>
    1d4c:	4e c0       	rjmp	.+156    	; 0x1dea <CDC_Recive_Event_Process+0x3fa>
    1d4e:	fe 01       	movw	r30, r28
    1d50:	31 96       	adiw	r30, 0x01	; 1
    1d52:	1f 01       	movw	r2, r30
    1d54:	84 e6       	ldi	r24, 0x64	; 100
    1d56:	df 01       	movw	r26, r30
    1d58:	1d 92       	st	X+, r1
    1d5a:	8a 95       	dec	r24
    1d5c:	e9 f7       	brne	.-6      	; 0x1d58 <CDC_Recive_Event_Process+0x368>
    1d5e:	e2 e7       	ldi	r30, 0x72	; 114
    1d60:	fa e0       	ldi	r31, 0x0A	; 10
    1d62:	05 91       	lpm	r16, Z+
    1d64:	15 91       	lpm	r17, Z+
    1d66:	25 91       	lpm	r18, Z+
    1d68:	34 91       	lpm	r19, Z
    1d6a:	ee e6       	ldi	r30, 0x6E	; 110
    1d6c:	fa e0       	ldi	r31, 0x0A	; 10
    1d6e:	45 90       	lpm	r4, Z+
    1d70:	55 90       	lpm	r5, Z+
    1d72:	65 90       	lpm	r6, Z+
    1d74:	74 90       	lpm	r7, Z
    1d76:	ea e6       	ldi	r30, 0x6A	; 106
    1d78:	fa e0       	ldi	r31, 0x0A	; 10
    1d7a:	85 90       	lpm	r8, Z+
    1d7c:	95 90       	lpm	r9, Z+
    1d7e:	a5 90       	lpm	r10, Z+
    1d80:	b4 90       	lpm	r11, Z
    1d82:	e6 e6       	ldi	r30, 0x66	; 102
    1d84:	fa e0       	ldi	r31, 0x0A	; 10
    1d86:	c5 90       	lpm	r12, Z+
    1d88:	d5 90       	lpm	r13, Z+
    1d8a:	e5 90       	lpm	r14, Z+
    1d8c:	f4 90       	lpm	r15, Z
    1d8e:	e2 e6       	ldi	r30, 0x62	; 98
    1d90:	fa e0       	ldi	r31, 0x0A	; 10
    1d92:	45 91       	lpm	r20, Z+
    1d94:	55 91       	lpm	r21, Z+
    1d96:	65 91       	lpm	r22, Z+
    1d98:	74 91       	lpm	r23, Z
    1d9a:	ee e5       	ldi	r30, 0x5E	; 94
    1d9c:	fa e0       	ldi	r31, 0x0A	; 10
    1d9e:	85 91       	lpm	r24, Z+
    1da0:	95 91       	lpm	r25, Z+
    1da2:	a5 91       	lpm	r26, Z+
    1da4:	b4 91       	lpm	r27, Z
    1da6:	3f 93       	push	r19
    1da8:	2f 93       	push	r18
    1daa:	1f 93       	push	r17
    1dac:	0f 93       	push	r16
    1dae:	7f 92       	push	r7
    1db0:	6f 92       	push	r6
    1db2:	5f 92       	push	r5
    1db4:	4f 92       	push	r4
    1db6:	bf 92       	push	r11
    1db8:	af 92       	push	r10
    1dba:	9f 92       	push	r9
    1dbc:	8f 92       	push	r8
    1dbe:	ff 92       	push	r15
    1dc0:	ef 92       	push	r14
    1dc2:	df 92       	push	r13
    1dc4:	cf 92       	push	r12
    1dc6:	7f 93       	push	r23
    1dc8:	6f 93       	push	r22
    1dca:	5f 93       	push	r21
    1dcc:	4f 93       	push	r20
    1dce:	bf 93       	push	r27
    1dd0:	af 93       	push	r26
    1dd2:	9f 93       	push	r25
    1dd4:	8f 93       	push	r24
    1dd6:	81 e9       	ldi	r24, 0x91	; 145
    1dd8:	91 e0       	ldi	r25, 0x01	; 1
    1dda:	9f 93       	push	r25
    1ddc:	8f 93       	push	r24
    1dde:	3f 92       	push	r3
    1de0:	2f 92       	push	r2
    1de2:	0e 94 9f 22 	call	0x453e	; 0x453e <sprintf>
    1de6:	b1 01       	movw	r22, r2
    1de8:	36 c0       	rjmp	.+108    	; 0x1e56 <CDC_Recive_Event_Process+0x466>
    1dea:	43 e0       	ldi	r20, 0x03	; 3
    1dec:	50 e0       	ldi	r21, 0x00	; 0
    1dee:	69 ea       	ldi	r22, 0xA9	; 169
    1df0:	71 e0       	ldi	r23, 0x01	; 1
    1df2:	82 e0       	ldi	r24, 0x02	; 2
    1df4:	99 e0       	ldi	r25, 0x09	; 9
    1df6:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1dfa:	89 2b       	or	r24, r25
    1dfc:	a9 f5       	brne	.+106    	; 0x1e68 <CDC_Recive_Event_Process+0x478>
    1dfe:	8e 01       	movw	r16, r28
    1e00:	0f 5f       	subi	r16, 0xFF	; 255
    1e02:	1f 4f       	sbci	r17, 0xFF	; 255
    1e04:	80 e4       	ldi	r24, 0x40	; 64
    1e06:	d8 01       	movw	r26, r16
    1e08:	1d 92       	st	X+, r1
    1e0a:	8a 95       	dec	r24
    1e0c:	e9 f7       	brne	.-6      	; 0x1e08 <CDC_Recive_Event_Process+0x418>
    1e0e:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <status>
    1e12:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <status+0x1>
    1e16:	00 97       	sbiw	r24, 0x00	; 0
    1e18:	21 f0       	breq	.+8      	; 0x1e22 <CDC_Recive_Event_Process+0x432>
    1e1a:	01 97       	sbiw	r24, 0x01	; 1
    1e1c:	21 f0       	breq	.+8      	; 0x1e26 <CDC_Recive_Event_Process+0x436>
    1e1e:	85 e4       	ldi	r24, 0x45	; 69
    1e20:	03 c0       	rjmp	.+6      	; 0x1e28 <CDC_Recive_Event_Process+0x438>
    1e22:	82 e5       	ldi	r24, 0x52	; 82
    1e24:	01 c0       	rjmp	.+2      	; 0x1e28 <CDC_Recive_Event_Process+0x438>
    1e26:	87 e5       	ldi	r24, 0x57	; 87
    1e28:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <temperature+0x3>
    1e2c:	9f 93       	push	r25
    1e2e:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <temperature+0x2>
    1e32:	9f 93       	push	r25
    1e34:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <temperature+0x1>
    1e38:	9f 93       	push	r25
    1e3a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <temperature>
    1e3e:	9f 93       	push	r25
    1e40:	1f 92       	push	r1
    1e42:	8f 93       	push	r24
    1e44:	8d ea       	ldi	r24, 0xAD	; 173
    1e46:	91 e0       	ldi	r25, 0x01	; 1
    1e48:	9f 93       	push	r25
    1e4a:	8f 93       	push	r24
    1e4c:	1f 93       	push	r17
    1e4e:	0f 93       	push	r16
    1e50:	0e 94 9f 22 	call	0x453e	; 0x453e <sprintf>
    1e54:	b8 01       	movw	r22, r16
    1e56:	80 e0       	ldi	r24, 0x00	; 0
    1e58:	91 e0       	ldi	r25, 0x01	; 1
    1e5a:	38 d6       	rcall	.+3184   	; 0x2acc <CDC_Device_SendString>
    1e5c:	0f b6       	in	r0, 0x3f	; 63
    1e5e:	f8 94       	cli
    1e60:	de bf       	out	0x3e, r29	; 62
    1e62:	0f be       	out	0x3f, r0	; 63
    1e64:	cd bf       	out	0x3d, r28	; 61
    1e66:	d3 c0       	rjmp	.+422    	; 0x200e <CDC_Recive_Event_Process+0x61e>
    1e68:	44 e0       	ldi	r20, 0x04	; 4
    1e6a:	50 e0       	ldi	r21, 0x00	; 0
    1e6c:	69 eb       	ldi	r22, 0xB9	; 185
    1e6e:	71 e0       	ldi	r23, 0x01	; 1
    1e70:	82 e0       	ldi	r24, 0x02	; 2
    1e72:	99 e0       	ldi	r25, 0x09	; 9
    1e74:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1e78:	89 2b       	or	r24, r25
    1e7a:	09 f0       	breq	.+2      	; 0x1e7e <CDC_Recive_Event_Process+0x48e>
    1e7c:	c3 c0       	rjmp	.+390    	; 0x2004 <CDC_Recive_Event_Process+0x614>
    1e7e:	48 e0       	ldi	r20, 0x08	; 8
    1e80:	50 e0       	ldi	r21, 0x00	; 0
    1e82:	6e eb       	ldi	r22, 0xBE	; 190
    1e84:	71 e0       	ldi	r23, 0x01	; 1
    1e86:	82 e0       	ldi	r24, 0x02	; 2
    1e88:	99 e0       	ldi	r25, 0x09	; 9
    1e8a:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1e8e:	89 2b       	or	r24, r25
    1e90:	39 f4       	brne	.+14     	; 0x1ea0 <CDC_Recive_Event_Process+0x4b0>
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	90 e0       	ldi	r25, 0x00	; 0
    1e96:	90 93 3d 02 	sts	0x023D, r25	; 0x80023d <auto_exposure+0x1>
    1e9a:	80 93 3c 02 	sts	0x023C, r24	; 0x80023c <auto_exposure>
    1e9e:	af c0       	rjmp	.+350    	; 0x1ffe <CDC_Recive_Event_Process+0x60e>
    1ea0:	49 e0       	ldi	r20, 0x09	; 9
    1ea2:	50 e0       	ldi	r21, 0x00	; 0
    1ea4:	67 ec       	ldi	r22, 0xC7	; 199
    1ea6:	71 e0       	ldi	r23, 0x01	; 1
    1ea8:	82 e0       	ldi	r24, 0x02	; 2
    1eaa:	99 e0       	ldi	r25, 0x09	; 9
    1eac:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1eb0:	89 2b       	or	r24, r25
    1eb2:	49 f4       	brne	.+18     	; 0x1ec6 <CDC_Recive_Event_Process+0x4d6>
    1eb4:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1eb8:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1ebc:	10 92 3b 02 	sts	0x023B, r1	; 0x80023b <exposure_time_sel+0x1>
    1ec0:	10 92 3a 02 	sts	0x023A, r1	; 0x80023a <exposure_time_sel>
    1ec4:	9c c0       	rjmp	.+312    	; 0x1ffe <CDC_Recive_Event_Process+0x60e>
    1ec6:	49 e0       	ldi	r20, 0x09	; 9
    1ec8:	50 e0       	ldi	r21, 0x00	; 0
    1eca:	61 ed       	ldi	r22, 0xD1	; 209
    1ecc:	71 e0       	ldi	r23, 0x01	; 1
    1ece:	82 e0       	ldi	r24, 0x02	; 2
    1ed0:	99 e0       	ldi	r25, 0x09	; 9
    1ed2:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1ed6:	89 2b       	or	r24, r25
    1ed8:	39 f4       	brne	.+14     	; 0x1ee8 <CDC_Recive_Event_Process+0x4f8>
    1eda:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1ede:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	90 e0       	ldi	r25, 0x00	; 0
    1ee6:	87 c0       	rjmp	.+270    	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1ee8:	49 e0       	ldi	r20, 0x09	; 9
    1eea:	50 e0       	ldi	r21, 0x00	; 0
    1eec:	6b ed       	ldi	r22, 0xDB	; 219
    1eee:	71 e0       	ldi	r23, 0x01	; 1
    1ef0:	82 e0       	ldi	r24, 0x02	; 2
    1ef2:	99 e0       	ldi	r25, 0x09	; 9
    1ef4:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1ef8:	89 2b       	or	r24, r25
    1efa:	39 f4       	brne	.+14     	; 0x1f0a <CDC_Recive_Event_Process+0x51a>
    1efc:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f00:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f04:	82 e0       	ldi	r24, 0x02	; 2
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	76 c0       	rjmp	.+236    	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1f0a:	47 e0       	ldi	r20, 0x07	; 7
    1f0c:	50 e0       	ldi	r21, 0x00	; 0
    1f0e:	65 ee       	ldi	r22, 0xE5	; 229
    1f10:	71 e0       	ldi	r23, 0x01	; 1
    1f12:	82 e0       	ldi	r24, 0x02	; 2
    1f14:	99 e0       	ldi	r25, 0x09	; 9
    1f16:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1f1a:	89 2b       	or	r24, r25
    1f1c:	39 f4       	brne	.+14     	; 0x1f2c <CDC_Recive_Event_Process+0x53c>
    1f1e:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f22:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f26:	83 e0       	ldi	r24, 0x03	; 3
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	65 c0       	rjmp	.+202    	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1f2c:	47 e0       	ldi	r20, 0x07	; 7
    1f2e:	50 e0       	ldi	r21, 0x00	; 0
    1f30:	6d ee       	ldi	r22, 0xED	; 237
    1f32:	71 e0       	ldi	r23, 0x01	; 1
    1f34:	82 e0       	ldi	r24, 0x02	; 2
    1f36:	99 e0       	ldi	r25, 0x09	; 9
    1f38:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1f3c:	89 2b       	or	r24, r25
    1f3e:	39 f4       	brne	.+14     	; 0x1f4e <CDC_Recive_Event_Process+0x55e>
    1f40:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f44:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f48:	84 e0       	ldi	r24, 0x04	; 4
    1f4a:	90 e0       	ldi	r25, 0x00	; 0
    1f4c:	54 c0       	rjmp	.+168    	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1f4e:	47 e0       	ldi	r20, 0x07	; 7
    1f50:	50 e0       	ldi	r21, 0x00	; 0
    1f52:	65 ef       	ldi	r22, 0xF5	; 245
    1f54:	71 e0       	ldi	r23, 0x01	; 1
    1f56:	82 e0       	ldi	r24, 0x02	; 2
    1f58:	99 e0       	ldi	r25, 0x09	; 9
    1f5a:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1f5e:	89 2b       	or	r24, r25
    1f60:	39 f4       	brne	.+14     	; 0x1f70 <CDC_Recive_Event_Process+0x580>
    1f62:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f66:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f6a:	85 e0       	ldi	r24, 0x05	; 5
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	43 c0       	rjmp	.+134    	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1f70:	48 e0       	ldi	r20, 0x08	; 8
    1f72:	50 e0       	ldi	r21, 0x00	; 0
    1f74:	6d ef       	ldi	r22, 0xFD	; 253
    1f76:	71 e0       	ldi	r23, 0x01	; 1
    1f78:	82 e0       	ldi	r24, 0x02	; 2
    1f7a:	99 e0       	ldi	r25, 0x09	; 9
    1f7c:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1f80:	89 2b       	or	r24, r25
    1f82:	39 f4       	brne	.+14     	; 0x1f92 <CDC_Recive_Event_Process+0x5a2>
    1f84:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1f88:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1f8c:	86 e0       	ldi	r24, 0x06	; 6
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	32 c0       	rjmp	.+100    	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1f92:	48 e0       	ldi	r20, 0x08	; 8
    1f94:	50 e0       	ldi	r21, 0x00	; 0
    1f96:	66 e0       	ldi	r22, 0x06	; 6
    1f98:	72 e0       	ldi	r23, 0x02	; 2
    1f9a:	82 e0       	ldi	r24, 0x02	; 2
    1f9c:	99 e0       	ldi	r25, 0x09	; 9
    1f9e:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1fa2:	89 2b       	or	r24, r25
    1fa4:	39 f4       	brne	.+14     	; 0x1fb4 <CDC_Recive_Event_Process+0x5c4>
    1fa6:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1faa:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1fae:	87 e0       	ldi	r24, 0x07	; 7
    1fb0:	90 e0       	ldi	r25, 0x00	; 0
    1fb2:	21 c0       	rjmp	.+66     	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1fb4:	48 e0       	ldi	r20, 0x08	; 8
    1fb6:	50 e0       	ldi	r21, 0x00	; 0
    1fb8:	6f e0       	ldi	r22, 0x0F	; 15
    1fba:	72 e0       	ldi	r23, 0x02	; 2
    1fbc:	82 e0       	ldi	r24, 0x02	; 2
    1fbe:	99 e0       	ldi	r25, 0x09	; 9
    1fc0:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1fc4:	89 2b       	or	r24, r25
    1fc6:	39 f4       	brne	.+14     	; 0x1fd6 <CDC_Recive_Event_Process+0x5e6>
    1fc8:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1fcc:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1fd0:	88 e0       	ldi	r24, 0x08	; 8
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	10 c0       	rjmp	.+32     	; 0x1ff6 <CDC_Recive_Event_Process+0x606>
    1fd6:	49 e0       	ldi	r20, 0x09	; 9
    1fd8:	50 e0       	ldi	r21, 0x00	; 0
    1fda:	68 e1       	ldi	r22, 0x18	; 24
    1fdc:	72 e0       	ldi	r23, 0x02	; 2
    1fde:	82 e0       	ldi	r24, 0x02	; 2
    1fe0:	99 e0       	ldi	r25, 0x09	; 9
    1fe2:	0e 94 0c 22 	call	0x4418	; 0x4418 <strncmp>
    1fe6:	89 2b       	or	r24, r25
    1fe8:	51 f4       	brne	.+20     	; 0x1ffe <CDC_Recive_Event_Process+0x60e>
    1fea:	10 92 3d 02 	sts	0x023D, r1	; 0x80023d <auto_exposure+0x1>
    1fee:	10 92 3c 02 	sts	0x023C, r1	; 0x80023c <auto_exposure>
    1ff2:	89 e0       	ldi	r24, 0x09	; 9
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	90 93 3b 02 	sts	0x023B, r25	; 0x80023b <exposure_time_sel+0x1>
    1ffa:	80 93 3a 02 	sts	0x023A, r24	; 0x80023a <exposure_time_sel>
    1ffe:	67 e8       	ldi	r22, 0x87	; 135
    2000:	71 e0       	ldi	r23, 0x01	; 1
    2002:	02 c0       	rjmp	.+4      	; 0x2008 <CDC_Recive_Event_Process+0x618>
    2004:	62 e2       	ldi	r22, 0x22	; 34
    2006:	72 e0       	ldi	r23, 0x02	; 2
    2008:	80 e0       	ldi	r24, 0x00	; 0
    200a:	91 e0       	ldi	r25, 0x01	; 1
    200c:	5f d5       	rcall	.+2750   	; 0x2acc <CDC_Device_SendString>
    200e:	80 e2       	ldi	r24, 0x20	; 32
    2010:	e2 e0       	ldi	r30, 0x02	; 2
    2012:	f9 e0       	ldi	r31, 0x09	; 9
    2014:	df 01       	movw	r26, r30
    2016:	1d 92       	st	X+, r1
    2018:	8a 95       	dec	r24
    201a:	e9 f7       	brne	.-6      	; 0x2016 <CDC_Recive_Event_Process+0x626>
    201c:	10 92 01 09 	sts	0x0901, r1	; 0x800901 <cdc_recive_index+0x1>
    2020:	10 92 00 09 	sts	0x0900, r1	; 0x800900 <cdc_recive_index>
    2024:	c2 59       	subi	r28, 0x92	; 146
    2026:	df 4f       	sbci	r29, 0xFF	; 255
    2028:	0f b6       	in	r0, 0x3f	; 63
    202a:	f8 94       	cli
    202c:	de bf       	out	0x3e, r29	; 62
    202e:	0f be       	out	0x3f, r0	; 63
    2030:	cd bf       	out	0x3d, r28	; 61
    2032:	df 91       	pop	r29
    2034:	cf 91       	pop	r28
    2036:	1f 91       	pop	r17
    2038:	0f 91       	pop	r16
    203a:	ff 90       	pop	r15
    203c:	ef 90       	pop	r14
    203e:	df 90       	pop	r13
    2040:	cf 90       	pop	r12
    2042:	bf 90       	pop	r11
    2044:	af 90       	pop	r10
    2046:	9f 90       	pop	r9
    2048:	8f 90       	pop	r8
    204a:	7f 90       	pop	r7
    204c:	6f 90       	pop	r6
    204e:	5f 90       	pop	r5
    2050:	4f 90       	pop	r4
    2052:	3f 90       	pop	r3
    2054:	2f 90       	pop	r2
    2056:	08 95       	ret

00002058 <main>:
    2058:	0e da       	rcall	.-3044   	; 0x1476 <SetupHardware>
    205a:	68 e2       	ldi	r22, 0x28	; 40
    205c:	72 e0       	ldi	r23, 0x02	; 2
    205e:	80 e0       	ldi	r24, 0x00	; 0
    2060:	91 e0       	ldi	r25, 0x01	; 1
    2062:	11 d6       	rcall	.+3106   	; 0x2c86 <CDC_Device_CreateStream>
    2064:	78 94       	sei
    2066:	6a d9       	rcall	.-3372   	; 0x133c <c12880ma_read>
    2068:	be d8       	rcall	.-3716   	; 0x11e6 <adc_temp_read>
    206a:	bd d8       	rcall	.-3718   	; 0x11e6 <adc_temp_read>
    206c:	60 93 1b 01 	sts	0x011B, r22	; 0x80011b <temperature>
    2070:	70 93 1c 01 	sts	0x011C, r23	; 0x80011c <temperature+0x1>
    2074:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <temperature+0x2>
    2078:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <temperature+0x3>
    207c:	c1 d9       	rcall	.-3198   	; 0x1400 <check_status>
    207e:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <status+0x1>
    2082:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <status>
    2086:	b4 dc       	rcall	.-1688   	; 0x19f0 <CDC_Recive_Event_Process>
    2088:	98 dc       	rcall	.-1744   	; 0x19ba <CDC_Recive_Event>
    208a:	80 e0       	ldi	r24, 0x00	; 0
    208c:	91 e0       	ldi	r25, 0x01	; 1
    208e:	a7 d5       	rcall	.+2894   	; 0x2bde <CDC_Device_USBTask>
    2090:	de d4       	rcall	.+2492   	; 0x2a4e <USB_USBTask>
    2092:	eb cf       	rjmp	.-42     	; 0x206a <main+0x12>

00002094 <spi_init>:
#define DD_MOSI DDB2
#define DD_SCK DDB1

void spi_init()
{
    DDR_SPI |= (1 << DD_MOSI) | (1 << DD_SCK);
    2094:	84 b1       	in	r24, 0x04	; 4
    2096:	86 60       	ori	r24, 0x06	; 6
    2098:	84 b9       	out	0x04, r24	; 4
    SPCR = (1 << SPE) | (1 << MSTR);// | (1 << SPR0);// | (1 << CPOL) | (1 << CPHA);
    209a:	80 e5       	ldi	r24, 0x50	; 80
    209c:	8c bd       	out	0x2c, r24	; 44
    SPSR |= (1 << SPI2X);
    209e:	8d b5       	in	r24, 0x2d	; 45
    20a0:	81 60       	ori	r24, 0x01	; 1
    20a2:	8d bd       	out	0x2d, r24	; 45
    20a4:	08 95       	ret

000020a6 <spi_transfer>:
}

uint8_t spi_transfer(uint8_t value)
{
    SPDR = value;
    20a6:	8e bd       	out	0x2e, r24	; 46
    asm volatile("nop");
    20a8:	00 00       	nop
    while (!(SPSR & (1 << SPIF)));
    20aa:	0d b4       	in	r0, 0x2d	; 45
    20ac:	07 fe       	sbrs	r0, 7
    20ae:	fd cf       	rjmp	.-6      	; 0x20aa <spi_transfer+0x4>

    return SPDR;
    20b0:	8e b5       	in	r24, 0x2e	; 46
    20b2:	08 95       	ret

000020b4 <CALLBACK_USB_GetDescriptor>:
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
	uint16_t    Size    = NO_DESCRIPTOR;

	switch (DescriptorType)
    20b4:	29 2f       	mov	r18, r25
    20b6:	33 27       	eor	r19, r19
    20b8:	22 30       	cpi	r18, 0x02	; 2
    20ba:	31 05       	cpc	r19, r1
    20bc:	59 f0       	breq	.+22     	; 0x20d4 <CALLBACK_USB_GetDescriptor+0x20>
    20be:	23 30       	cpi	r18, 0x03	; 3
    20c0:	31 05       	cpc	r19, r1
    20c2:	69 f0       	breq	.+26     	; 0x20de <CALLBACK_USB_GetDescriptor+0x2a>
    20c4:	21 30       	cpi	r18, 0x01	; 1
    20c6:	31 05       	cpc	r19, r1
    20c8:	e9 f4       	brne	.+58     	; 0x2104 <CALLBACK_USB_GetDescriptor+0x50>
	{
		case DTYPE_Device:
			Address = &DeviceDescriptor;
			Size    = sizeof(USB_Descriptor_Device_t);
    20ca:	82 e1       	ldi	r24, 0x12	; 18
    20cc:	90 e0       	ldi	r25, 0x00	; 0
	uint16_t    Size    = NO_DESCRIPTOR;

	switch (DescriptorType)
	{
		case DTYPE_Device:
			Address = &DeviceDescriptor;
    20ce:	2e e6       	ldi	r18, 0x6E	; 110
    20d0:	3f e0       	ldi	r19, 0x0F	; 15
    20d2:	1c c0       	rjmp	.+56     	; 0x210c <CALLBACK_USB_GetDescriptor+0x58>
			Size    = sizeof(USB_Descriptor_Device_t);
			break;
		case DTYPE_Configuration:
			Address = &ConfigurationDescriptor;
			Size    = sizeof(USB_Descriptor_Configuration_t);
    20d4:	8e e3       	ldi	r24, 0x3E	; 62
    20d6:	90 e0       	ldi	r25, 0x00	; 0
		case DTYPE_Device:
			Address = &DeviceDescriptor;
			Size    = sizeof(USB_Descriptor_Device_t);
			break;
		case DTYPE_Configuration:
			Address = &ConfigurationDescriptor;
    20d8:	20 e3       	ldi	r18, 0x30	; 48
    20da:	3f e0       	ldi	r19, 0x0F	; 15
			Size    = sizeof(USB_Descriptor_Configuration_t);
			break;
    20dc:	17 c0       	rjmp	.+46     	; 0x210c <CALLBACK_USB_GetDescriptor+0x58>
		case DTYPE_String:
			switch (DescriptorNumber)
    20de:	99 27       	eor	r25, r25
    20e0:	81 30       	cpi	r24, 0x01	; 1
    20e2:	91 05       	cpc	r25, r1
    20e4:	49 f0       	breq	.+18     	; 0x20f8 <CALLBACK_USB_GetDescriptor+0x44>
    20e6:	28 f0       	brcs	.+10     	; 0x20f2 <CALLBACK_USB_GetDescriptor+0x3e>
    20e8:	02 97       	sbiw	r24, 0x02	; 2
    20ea:	61 f4       	brne	.+24     	; 0x2104 <CALLBACK_USB_GetDescriptor+0x50>
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
					break;
				case STRING_ID_Product:
					Address = &ProductString;
					Size    = pgm_read_byte(&ProductString.Header.Size);
    20ec:	e6 ef       	ldi	r30, 0xF6	; 246
    20ee:	fe e0       	ldi	r31, 0x0E	; 14
    20f0:	05 c0       	rjmp	.+10     	; 0x20fc <CALLBACK_USB_GetDescriptor+0x48>
		case DTYPE_String:
			switch (DescriptorNumber)
			{
				case STRING_ID_Language:
					Address = &LanguageString;
					Size    = pgm_read_byte(&LanguageString.Header.Size);
    20f2:	ec e2       	ldi	r30, 0x2C	; 44
    20f4:	ff e0       	ldi	r31, 0x0F	; 15
    20f6:	02 c0       	rjmp	.+4      	; 0x20fc <CALLBACK_USB_GetDescriptor+0x48>
					break;
				case STRING_ID_Manufacturer:
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
    20f8:	ec e1       	ldi	r30, 0x1C	; 28
    20fa:	ff e0       	ldi	r31, 0x0F	; 15
					break;
				case STRING_ID_Product:
					Address = &ProductString;
					Size    = pgm_read_byte(&ProductString.Header.Size);
    20fc:	84 91       	lpm	r24, Z
    20fe:	90 e0       	ldi	r25, 0x00	; 0
				case STRING_ID_Manufacturer:
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
					break;
				case STRING_ID_Product:
					Address = &ProductString;
    2100:	9f 01       	movw	r18, r30
					Size    = pgm_read_byte(&ProductString.Header.Size);
					break;
    2102:	04 c0       	rjmp	.+8      	; 0x210c <CALLBACK_USB_GetDescriptor+0x58>
{
	const uint8_t  DescriptorType   = (wValue >> 8);
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
	uint16_t    Size    = NO_DESCRIPTOR;
    2104:	80 e0       	ldi	r24, 0x00	; 0
    2106:	90 e0       	ldi	r25, 0x00	; 0
                                    const void** const DescriptorAddress)
{
	const uint8_t  DescriptorType   = (wValue >> 8);
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
    2108:	20 e0       	ldi	r18, 0x00	; 0
    210a:	30 e0       	ldi	r19, 0x00	; 0
			}

			break;
	}

	*DescriptorAddress = Address;
    210c:	fa 01       	movw	r30, r20
    210e:	31 83       	std	Z+1, r19	; 0x01
    2110:	20 83       	st	Z, r18
	return Size;
}
    2112:	08 95       	ret

00002114 <Endpoint_Write_Stream_LE>:
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_RWCSTREAM_BusSuspended;
	}

	return ENDPOINT_RWCSTREAM_NoError;
}
    2114:	cf 92       	push	r12
    2116:	df 92       	push	r13
    2118:	ef 92       	push	r14
    211a:	ff 92       	push	r15
    211c:	0f 93       	push	r16
    211e:	1f 93       	push	r17
    2120:	cf 93       	push	r28
    2122:	df 93       	push	r29
    2124:	ec 01       	movw	r28, r24
    2126:	8b 01       	movw	r16, r22
    2128:	7a 01       	movw	r14, r20
    212a:	8d d1       	rcall	.+794    	; 0x2446 <Endpoint_WaitUntilReady>
    212c:	81 11       	cpse	r24, r1
    212e:	32 c0       	rjmp	.+100    	; 0x2194 <Endpoint_Write_Stream_LE+0x80>
    2130:	e1 14       	cp	r14, r1
    2132:	f1 04       	cpc	r15, r1
    2134:	39 f0       	breq	.+14     	; 0x2144 <Endpoint_Write_Stream_LE+0x30>
    2136:	f7 01       	movw	r30, r14
    2138:	80 81       	ld	r24, Z
    213a:	91 81       	ldd	r25, Z+1	; 0x01
    213c:	08 1b       	sub	r16, r24
    213e:	19 0b       	sbc	r17, r25
    2140:	c8 0f       	add	r28, r24
    2142:	d9 1f       	adc	r29, r25
    2144:	c1 2c       	mov	r12, r1
    2146:	d1 2c       	mov	r13, r1
    2148:	01 15       	cp	r16, r1
    214a:	11 05       	cpc	r17, r1
    214c:	11 f1       	breq	.+68     	; 0x2192 <Endpoint_Write_Stream_LE+0x7e>
    214e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2152:	85 fd       	sbrc	r24, 5
    2154:	15 c0       	rjmp	.+42     	; 0x2180 <Endpoint_Write_Stream_LE+0x6c>
    2156:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    215a:	8e 77       	andi	r24, 0x7E	; 126
    215c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2160:	e1 14       	cp	r14, r1
    2162:	f1 04       	cpc	r15, r1
    2164:	49 f0       	breq	.+18     	; 0x2178 <Endpoint_Write_Stream_LE+0x64>
    2166:	f7 01       	movw	r30, r14
    2168:	80 81       	ld	r24, Z
    216a:	91 81       	ldd	r25, Z+1	; 0x01
    216c:	c8 0e       	add	r12, r24
    216e:	d9 1e       	adc	r13, r25
    2170:	d1 82       	std	Z+1, r13	; 0x01
    2172:	c0 82       	st	Z, r12
    2174:	85 e0       	ldi	r24, 0x05	; 5
    2176:	0e c0       	rjmp	.+28     	; 0x2194 <Endpoint_Write_Stream_LE+0x80>
    2178:	66 d1       	rcall	.+716    	; 0x2446 <Endpoint_WaitUntilReady>
    217a:	88 23       	and	r24, r24
    217c:	29 f3       	breq	.-54     	; 0x2148 <Endpoint_Write_Stream_LE+0x34>
    217e:	0a c0       	rjmp	.+20     	; 0x2194 <Endpoint_Write_Stream_LE+0x80>
    2180:	89 91       	ld	r24, Y+
    2182:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2186:	01 50       	subi	r16, 0x01	; 1
    2188:	11 09       	sbc	r17, r1
    218a:	ff ef       	ldi	r31, 0xFF	; 255
    218c:	cf 1a       	sub	r12, r31
    218e:	df 0a       	sbc	r13, r31
    2190:	db cf       	rjmp	.-74     	; 0x2148 <Endpoint_Write_Stream_LE+0x34>
    2192:	80 e0       	ldi	r24, 0x00	; 0
    2194:	df 91       	pop	r29
    2196:	cf 91       	pop	r28
    2198:	1f 91       	pop	r17
    219a:	0f 91       	pop	r16
    219c:	ff 90       	pop	r15
    219e:	ef 90       	pop	r14
    21a0:	df 90       	pop	r13
    21a2:	cf 90       	pop	r12
    21a4:	08 95       	ret

000021a6 <Endpoint_Write_Control_Stream_LE>:
    21a6:	20 91 2e 09 	lds	r18, 0x092E	; 0x80092e <USB_ControlRequest+0x6>
    21aa:	30 91 2f 09 	lds	r19, 0x092F	; 0x80092f <USB_ControlRequest+0x7>
    21ae:	26 17       	cp	r18, r22
    21b0:	37 07       	cpc	r19, r23
    21b2:	48 f0       	brcs	.+18     	; 0x21c6 <Endpoint_Write_Control_Stream_LE+0x20>
    21b4:	61 15       	cp	r22, r1
    21b6:	71 05       	cpc	r23, r1
    21b8:	39 f4       	brne	.+14     	; 0x21c8 <Endpoint_Write_Control_Stream_LE+0x22>
    21ba:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21be:	2e 77       	andi	r18, 0x7E	; 126
    21c0:	20 93 e8 00 	sts	0x00E8, r18	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21c4:	01 c0       	rjmp	.+2      	; 0x21c8 <Endpoint_Write_Control_Stream_LE+0x22>
    21c6:	b9 01       	movw	r22, r18
    21c8:	fc 01       	movw	r30, r24
    21ca:	20 e0       	ldi	r18, 0x00	; 0
    21cc:	61 15       	cp	r22, r1
    21ce:	71 05       	cpc	r23, r1
    21d0:	79 f1       	breq	.+94     	; 0x2230 <Endpoint_Write_Control_Stream_LE+0x8a>
    21d2:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    21d6:	88 23       	and	r24, r24
    21d8:	f1 f1       	breq	.+124    	; 0x2256 <Endpoint_Write_Control_Stream_LE+0xb0>
    21da:	85 30       	cpi	r24, 0x05	; 5
    21dc:	f1 f1       	breq	.+124    	; 0x225a <Endpoint_Write_Control_Stream_LE+0xb4>
    21de:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21e2:	83 fd       	sbrc	r24, 3
    21e4:	3c c0       	rjmp	.+120    	; 0x225e <Endpoint_Write_Control_Stream_LE+0xb8>
    21e6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21ea:	82 fd       	sbrc	r24, 2
    21ec:	2e c0       	rjmp	.+92     	; 0x224a <Endpoint_Write_Control_Stream_LE+0xa4>
    21ee:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21f2:	80 ff       	sbrs	r24, 0
    21f4:	eb cf       	rjmp	.-42     	; 0x21cc <Endpoint_Write_Control_Stream_LE+0x26>
    21f6:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    21fa:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    21fe:	90 e0       	ldi	r25, 0x00	; 0
    2200:	92 2b       	or	r25, r18
    2202:	61 15       	cp	r22, r1
    2204:	71 05       	cpc	r23, r1
    2206:	51 f0       	breq	.+20     	; 0x221c <Endpoint_Write_Control_Stream_LE+0x76>
    2208:	88 30       	cpi	r24, 0x08	; 8
    220a:	91 05       	cpc	r25, r1
    220c:	38 f4       	brcc	.+14     	; 0x221c <Endpoint_Write_Control_Stream_LE+0x76>
    220e:	21 91       	ld	r18, Z+
    2210:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2214:	61 50       	subi	r22, 0x01	; 1
    2216:	71 09       	sbc	r23, r1
    2218:	01 96       	adiw	r24, 0x01	; 1
    221a:	f3 cf       	rjmp	.-26     	; 0x2202 <Endpoint_Write_Control_Stream_LE+0x5c>
    221c:	21 e0       	ldi	r18, 0x01	; 1
    221e:	08 97       	sbiw	r24, 0x08	; 8
    2220:	09 f0       	breq	.+2      	; 0x2224 <Endpoint_Write_Control_Stream_LE+0x7e>
    2222:	20 e0       	ldi	r18, 0x00	; 0
    2224:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2228:	8e 77       	andi	r24, 0x7E	; 126
    222a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    222e:	ce cf       	rjmp	.-100    	; 0x21cc <Endpoint_Write_Control_Stream_LE+0x26>
    2230:	21 11       	cpse	r18, r1
    2232:	cf cf       	rjmp	.-98     	; 0x21d2 <Endpoint_Write_Control_Stream_LE+0x2c>
    2234:	0a c0       	rjmp	.+20     	; 0x224a <Endpoint_Write_Control_Stream_LE+0xa4>
    2236:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    223a:	88 23       	and	r24, r24
    223c:	61 f0       	breq	.+24     	; 0x2256 <Endpoint_Write_Control_Stream_LE+0xb0>
    223e:	85 30       	cpi	r24, 0x05	; 5
    2240:	61 f0       	breq	.+24     	; 0x225a <Endpoint_Write_Control_Stream_LE+0xb4>
    2242:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2246:	83 fd       	sbrc	r24, 3
    2248:	0a c0       	rjmp	.+20     	; 0x225e <Endpoint_Write_Control_Stream_LE+0xb8>
    224a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    224e:	82 ff       	sbrs	r24, 2
    2250:	f2 cf       	rjmp	.-28     	; 0x2236 <Endpoint_Write_Control_Stream_LE+0x90>
    2252:	80 e0       	ldi	r24, 0x00	; 0
    2254:	08 95       	ret
    2256:	82 e0       	ldi	r24, 0x02	; 2
    2258:	08 95       	ret
    225a:	83 e0       	ldi	r24, 0x03	; 3
    225c:	08 95       	ret
    225e:	81 e0       	ldi	r24, 0x01	; 1
    2260:	08 95       	ret

00002262 <Endpoint_Write_Control_PStream_LE>:
                            uint16_t Length)
{
	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
	bool     LastPacketFull = false;

	if (Length > USB_ControlRequest.wLength)
    2262:	20 91 2e 09 	lds	r18, 0x092E	; 0x80092e <USB_ControlRequest+0x6>
    2266:	30 91 2f 09 	lds	r19, 0x092F	; 0x80092f <USB_ControlRequest+0x7>
    226a:	26 17       	cp	r18, r22
    226c:	37 07       	cpc	r19, r23
    226e:	48 f0       	brcs	.+18     	; 0x2282 <Endpoint_Write_Control_PStream_LE+0x20>
	  Length = USB_ControlRequest.wLength;
	else if (!(Length))
    2270:	61 15       	cp	r22, r1
    2272:	71 05       	cpc	r23, r1
    2274:	39 f4       	brne	.+14     	; 0x2284 <Endpoint_Write_Control_PStream_LE+0x22>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    2276:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    227a:	2e 77       	andi	r18, 0x7E	; 126
    227c:	20 93 e8 00 	sts	0x00E8, r18	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2280:	01 c0       	rjmp	.+2      	; 0x2284 <Endpoint_Write_Control_PStream_LE+0x22>
    2282:	b9 01       	movw	r22, r18
    2284:	fc 01       	movw	r30, r24
    2286:	20 e0       	ldi	r18, 0x00	; 0
	  Endpoint_ClearIN();

	while (Length || LastPacketFull)
    2288:	61 15       	cp	r22, r1
    228a:	71 05       	cpc	r23, r1
    228c:	91 f1       	breq	.+100    	; 0x22f2 <Endpoint_Write_Control_PStream_LE+0x90>
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    228e:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    2292:	88 23       	and	r24, r24
    2294:	09 f4       	brne	.+2      	; 0x2298 <Endpoint_Write_Control_PStream_LE+0x36>
    2296:	40 c0       	rjmp	.+128    	; 0x2318 <Endpoint_Write_Control_PStream_LE+0xb6>
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    2298:	85 30       	cpi	r24, 0x05	; 5
    229a:	09 f4       	brne	.+2      	; 0x229e <Endpoint_Write_Control_PStream_LE+0x3c>
    229c:	3f c0       	rjmp	.+126    	; 0x231c <Endpoint_Write_Control_PStream_LE+0xba>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    229e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
    22a2:	83 fd       	sbrc	r24, 3
    22a4:	3d c0       	rjmp	.+122    	; 0x2320 <Endpoint_Write_Control_PStream_LE+0xbe>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    22a6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_HostAborted;
		else if (Endpoint_IsOUTReceived())
    22aa:	82 fd       	sbrc	r24, 2
    22ac:	2f c0       	rjmp	.+94     	; 0x230c <Endpoint_Write_Control_PStream_LE+0xaa>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    22ae:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  break;

		if (Endpoint_IsINReady())
    22b2:	80 ff       	sbrs	r24, 0
    22b4:	e9 cf       	rjmp	.-46     	; 0x2288 <Endpoint_Write_Control_PStream_LE+0x26>
			static inline uint16_t Endpoint_BytesInEndpoint(void)
			{
				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					return UEBCX;
				#elif defined(USB_SERIES_4_AVR)
					return (((uint16_t)UEBCHX << 8) | UEBCLX);
    22b6:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    22ba:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    22be:	90 e0       	ldi	r25, 0x00	; 0
    22c0:	92 2b       	or	r25, r18
		{
			uint16_t BytesInEndpoint = Endpoint_BytesInEndpoint();

			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
    22c2:	61 15       	cp	r22, r1
    22c4:	71 05       	cpc	r23, r1
    22c6:	59 f0       	breq	.+22     	; 0x22de <Endpoint_Write_Control_PStream_LE+0x7c>
    22c8:	88 30       	cpi	r24, 0x08	; 8
    22ca:	91 05       	cpc	r25, r1
    22cc:	40 f4       	brcc	.+16     	; 0x22de <Endpoint_Write_Control_PStream_LE+0x7c>
			{
				TEMPLATE_TRANSFER_BYTE(DataStream);
    22ce:	24 91       	lpm	r18, Z
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    22d0:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				TEMPLATE_BUFFER_MOVE(DataStream, 1);
    22d4:	31 96       	adiw	r30, 0x01	; 1
				Length--;
    22d6:	61 50       	subi	r22, 0x01	; 1
    22d8:	71 09       	sbc	r23, r1
				BytesInEndpoint++;
    22da:	01 96       	adiw	r24, 0x01	; 1
    22dc:	f2 cf       	rjmp	.-28     	; 0x22c2 <Endpoint_Write_Control_PStream_LE+0x60>
			}

			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
    22de:	21 e0       	ldi	r18, 0x01	; 1
    22e0:	08 97       	sbiw	r24, 0x08	; 8
    22e2:	09 f0       	breq	.+2      	; 0x22e6 <Endpoint_Write_Control_PStream_LE+0x84>
    22e4:	20 e0       	ldi	r18, 0x00	; 0
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    22e6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    22ea:	8e 77       	andi	r24, 0x7E	; 126
    22ec:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    22f0:	cb cf       	rjmp	.-106    	; 0x2288 <Endpoint_Write_Control_PStream_LE+0x26>
	if (Length > USB_ControlRequest.wLength)
	  Length = USB_ControlRequest.wLength;
	else if (!(Length))
	  Endpoint_ClearIN();

	while (Length || LastPacketFull)
    22f2:	21 11       	cpse	r18, r1
    22f4:	cc cf       	rjmp	.-104    	; 0x228e <Endpoint_Write_Control_PStream_LE+0x2c>
    22f6:	0a c0       	rjmp	.+20     	; 0x230c <Endpoint_Write_Control_PStream_LE+0xaa>
		}
	}

	while (!(Endpoint_IsOUTReceived()))
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    22f8:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    22fc:	88 23       	and	r24, r24
    22fe:	61 f0       	breq	.+24     	; 0x2318 <Endpoint_Write_Control_PStream_LE+0xb6>
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    2300:	85 30       	cpi	r24, 0x05	; 5
    2302:	61 f0       	breq	.+24     	; 0x231c <Endpoint_Write_Control_PStream_LE+0xba>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2304:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
    2308:	83 fd       	sbrc	r24, 3
    230a:	0a c0       	rjmp	.+20     	; 0x2320 <Endpoint_Write_Control_PStream_LE+0xbe>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    230c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
			Endpoint_ClearIN();
		}
	}

	while (!(Endpoint_IsOUTReceived()))
    2310:	82 ff       	sbrs	r24, 2
    2312:	f2 cf       	rjmp	.-28     	; 0x22f8 <Endpoint_Write_Control_PStream_LE+0x96>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
	}

	return ENDPOINT_RWCSTREAM_NoError;
    2314:	80 e0       	ldi	r24, 0x00	; 0
    2316:	08 95       	ret
	while (Length || LastPacketFull)
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
    2318:	82 e0       	ldi	r24, 0x02	; 2
    231a:	08 95       	ret
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_RWCSTREAM_BusSuspended;
    231c:	83 e0       	ldi	r24, 0x03	; 3
    231e:	08 95       	ret
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
    2320:	81 e0       	ldi	r24, 0x01	; 1
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
	}

	return ENDPOINT_RWCSTREAM_NoError;
}
    2322:	08 95       	ret

00002324 <Endpoint_ConfigureEndpoint_Prv>:
		UEIENX  = 0;
		UEINTX  = 0;
		UECFG1X = 0;
		Endpoint_DisableEndpoint();
	}
}
    2324:	98 2f       	mov	r25, r24
    2326:	97 30       	cpi	r25, 0x07	; 7
    2328:	68 f5       	brcc	.+90     	; 0x2384 <Endpoint_ConfigureEndpoint_Prv+0x60>
    232a:	90 93 e9 00 	sts	0x00E9, r25	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    232e:	98 17       	cp	r25, r24
    2330:	39 f0       	breq	.+14     	; 0x2340 <Endpoint_ConfigureEndpoint_Prv+0x1c>
    2332:	70 91 ec 00 	lds	r23, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2336:	20 91 ed 00 	lds	r18, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    233a:	50 91 f0 00 	lds	r21, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    233e:	03 c0       	rjmp	.+6      	; 0x2346 <Endpoint_ConfigureEndpoint_Prv+0x22>
    2340:	24 2f       	mov	r18, r20
    2342:	76 2f       	mov	r23, r22
    2344:	50 e0       	ldi	r21, 0x00	; 0
    2346:	21 fd       	sbrc	r18, 1
    2348:	02 c0       	rjmp	.+4      	; 0x234e <Endpoint_ConfigureEndpoint_Prv+0x2a>
    234a:	9f 5f       	subi	r25, 0xFF	; 255
    234c:	ec cf       	rjmp	.-40     	; 0x2326 <Endpoint_ConfigureEndpoint_Prv+0x2>
    234e:	30 91 eb 00 	lds	r19, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2352:	3e 7f       	andi	r19, 0xFE	; 254
    2354:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2358:	30 91 ed 00 	lds	r19, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    235c:	3d 7f       	andi	r19, 0xFD	; 253
    235e:	30 93 ed 00 	sts	0x00ED, r19	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    2362:	30 91 eb 00 	lds	r19, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2366:	31 60       	ori	r19, 0x01	; 1
    2368:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    236c:	70 93 ec 00 	sts	0x00EC, r23	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2370:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    2374:	50 93 f0 00 	sts	0x00F0, r21	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2378:	20 91 ee 00 	lds	r18, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    237c:	27 fd       	sbrc	r18, 7
    237e:	e5 cf       	rjmp	.-54     	; 0x234a <Endpoint_ConfigureEndpoint_Prv+0x26>
    2380:	80 e0       	ldi	r24, 0x00	; 0
    2382:	08 95       	ret
    2384:	8f 70       	andi	r24, 0x0F	; 15
    2386:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    238a:	81 e0       	ldi	r24, 0x01	; 1
    238c:	08 95       	ret

0000238e <Endpoint_ConfigureEndpointTable>:
    238e:	0f 93       	push	r16
    2390:	1f 93       	push	r17
    2392:	cf 93       	push	r28
    2394:	df 93       	push	r29
    2396:	06 2f       	mov	r16, r22
    2398:	ec 01       	movw	r28, r24
    239a:	10 e0       	ldi	r17, 0x00	; 0
    239c:	10 17       	cp	r17, r16
    239e:	71 f1       	breq	.+92     	; 0x23fc <Endpoint_ConfigureEndpointTable+0x6e>
    23a0:	68 81       	ld	r22, Y
    23a2:	61 11       	cpse	r22, r1
    23a4:	03 c0       	rjmp	.+6      	; 0x23ac <Endpoint_ConfigureEndpointTable+0x1e>
    23a6:	1f 5f       	subi	r17, 0xFF	; 255
    23a8:	25 96       	adiw	r28, 0x05	; 5
    23aa:	f8 cf       	rjmp	.-16     	; 0x239c <Endpoint_ConfigureEndpointTable+0xe>
    23ac:	2c 81       	ldd	r18, Y+4	; 0x04
    23ae:	a9 81       	ldd	r26, Y+1	; 0x01
    23b0:	ba 81       	ldd	r27, Y+2	; 0x02
    23b2:	9b 81       	ldd	r25, Y+3	; 0x03
    23b4:	86 2f       	mov	r24, r22
    23b6:	8f 70       	andi	r24, 0x0F	; 15
    23b8:	87 30       	cpi	r24, 0x07	; 7
    23ba:	10 f0       	brcs	.+4      	; 0x23c0 <Endpoint_ConfigureEndpointTable+0x32>
    23bc:	80 e0       	ldi	r24, 0x00	; 0
    23be:	1f c0       	rjmp	.+62     	; 0x23fe <Endpoint_ConfigureEndpointTable+0x70>
    23c0:	22 30       	cpi	r18, 0x02	; 2
    23c2:	10 f4       	brcc	.+4      	; 0x23c8 <Endpoint_ConfigureEndpointTable+0x3a>
    23c4:	42 e0       	ldi	r20, 0x02	; 2
    23c6:	01 c0       	rjmp	.+2      	; 0x23ca <Endpoint_ConfigureEndpointTable+0x3c>
    23c8:	46 e0       	ldi	r20, 0x06	; 6
    23ca:	e8 e0       	ldi	r30, 0x08	; 8
    23cc:	f0 e0       	ldi	r31, 0x00	; 0
    23ce:	20 e0       	ldi	r18, 0x00	; 0
    23d0:	ea 17       	cp	r30, r26
    23d2:	fb 07       	cpc	r31, r27
    23d4:	20 f4       	brcc	.+8      	; 0x23de <Endpoint_ConfigureEndpointTable+0x50>
    23d6:	2f 5f       	subi	r18, 0xFF	; 255
    23d8:	ee 0f       	add	r30, r30
    23da:	ff 1f       	adc	r31, r31
    23dc:	f9 cf       	rjmp	.-14     	; 0x23d0 <Endpoint_ConfigureEndpointTable+0x42>
    23de:	22 95       	swap	r18
    23e0:	20 7f       	andi	r18, 0xF0	; 240
    23e2:	42 2b       	or	r20, r18
    23e4:	50 e4       	ldi	r21, 0x40	; 64
    23e6:	95 9f       	mul	r25, r21
    23e8:	90 01       	movw	r18, r0
    23ea:	11 24       	eor	r1, r1
    23ec:	66 1f       	adc	r22, r22
    23ee:	66 27       	eor	r22, r22
    23f0:	66 1f       	adc	r22, r22
    23f2:	62 2b       	or	r22, r18
    23f4:	97 df       	rcall	.-210    	; 0x2324 <Endpoint_ConfigureEndpoint_Prv>
    23f6:	81 11       	cpse	r24, r1
    23f8:	d6 cf       	rjmp	.-84     	; 0x23a6 <Endpoint_ConfigureEndpointTable+0x18>
    23fa:	e0 cf       	rjmp	.-64     	; 0x23bc <Endpoint_ConfigureEndpointTable+0x2e>
    23fc:	81 e0       	ldi	r24, 0x01	; 1
    23fe:	df 91       	pop	r29
    2400:	cf 91       	pop	r28
    2402:	1f 91       	pop	r17
    2404:	0f 91       	pop	r16
    2406:	08 95       	ret

00002408 <Endpoint_ClearStatusStage>:

void Endpoint_ClearStatusStage(void)
{
	if (USB_ControlRequest.bmRequestType & REQDIR_DEVICETOHOST)
    2408:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    240c:	87 ff       	sbrs	r24, 7
    240e:	11 c0       	rjmp	.+34     	; 0x2432 <Endpoint_ClearStatusStage+0x2a>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    2410:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	{
		while (!(Endpoint_IsOUTReceived()))
    2414:	82 fd       	sbrc	r24, 2
    2416:	05 c0       	rjmp	.+10     	; 0x2422 <Endpoint_ClearStatusStage+0x1a>
		{
			if (USB_DeviceState == DEVICE_STATE_Unattached)
    2418:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    241c:	81 11       	cpse	r24, r1
    241e:	f8 cf       	rjmp	.-16     	; 0x2410 <Endpoint_ClearStatusStage+0x8>
    2420:	11 c0       	rjmp	.+34     	; 0x2444 <Endpoint_ClearStatusStage+0x3c>
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    2422:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2426:	8b 77       	andi	r24, 0x7B	; 123
    2428:	0b c0       	rjmp	.+22     	; 0x2440 <Endpoint_ClearStatusStage+0x38>
	}
	else
	{
		while (!(Endpoint_IsINReady()))
		{
			if (USB_DeviceState == DEVICE_STATE_Unattached)
    242a:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    242e:	88 23       	and	r24, r24
    2430:	49 f0       	breq	.+18     	; 0x2444 <Endpoint_ClearStatusStage+0x3c>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    2432:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

		Endpoint_ClearOUT();
	}
	else
	{
		while (!(Endpoint_IsINReady()))
    2436:	80 ff       	sbrs	r24, 0
    2438:	f8 cf       	rjmp	.-16     	; 0x242a <Endpoint_ClearStatusStage+0x22>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    243a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    243e:	8e 77       	andi	r24, 0x7E	; 126
    2440:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2444:	08 95       	ret

00002446 <Endpoint_WaitUntilReady>:
			 *  \return Current USB frame number from the USB controller.
			 */
			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline uint16_t USB_Device_GetFrameNumber(void)
			{
				return UDFNUM;
    2446:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    244a:	30 91 e5 00 	lds	r19, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
    244e:	95 e6       	ldi	r25, 0x65	; 101
			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
			 */
			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetEndpointDirection(void)
			{
				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
    2450:	40 91 ec 00 	lds	r20, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2454:	84 2f       	mov	r24, r20
    2456:	81 70       	andi	r24, 0x01	; 1
    2458:	40 ff       	sbrs	r20, 0
    245a:	23 c0       	rjmp	.+70     	; 0x24a2 <Endpoint_WaitUntilReady+0x5c>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    245c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	for (;;)
	{
		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
		{
			if (Endpoint_IsINReady())
    2460:	80 fd       	sbrc	r24, 0
    2462:	1d c0       	rjmp	.+58     	; 0x249e <Endpoint_WaitUntilReady+0x58>
		{
			if (Endpoint_IsOUTReceived())
			  return ENDPOINT_READYWAIT_NoError;
		}

		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    2464:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    2468:	88 23       	and	r24, r24
    246a:	99 f0       	breq	.+38     	; 0x2492 <Endpoint_WaitUntilReady+0x4c>
		  return ENDPOINT_READYWAIT_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    246c:	85 30       	cpi	r24, 0x05	; 5
    246e:	99 f0       	breq	.+38     	; 0x2496 <Endpoint_WaitUntilReady+0x50>
			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
			 */
			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsStalled(void)
			{
				return ((UECONX & (1 << STALLRQ)) ? true : false);
    2470:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
		  return ENDPOINT_READYWAIT_BusSuspended;
		else if (Endpoint_IsStalled())
    2474:	85 fd       	sbrc	r24, 5
    2476:	11 c0       	rjmp	.+34     	; 0x249a <Endpoint_WaitUntilReady+0x54>
    2478:	40 91 e4 00 	lds	r20, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    247c:	50 91 e5 00 	lds	r21, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
		  return ENDPOINT_READYWAIT_EndpointStalled;

		uint16_t CurrentFrameNumber = USB_Device_GetFrameNumber();

		if (CurrentFrameNumber != PreviousFrameNumber)
    2480:	24 17       	cp	r18, r20
    2482:	35 07       	cpc	r19, r21
    2484:	29 f3       	breq	.-54     	; 0x2450 <Endpoint_WaitUntilReady+0xa>
    2486:	91 50       	subi	r25, 0x01	; 1
		{
			PreviousFrameNumber = CurrentFrameNumber;

			if (!(TimeoutMSRem--))
    2488:	11 f0       	breq	.+4      	; 0x248e <Endpoint_WaitUntilReady+0x48>
    248a:	9a 01       	movw	r18, r20
    248c:	e1 cf       	rjmp	.-62     	; 0x2450 <Endpoint_WaitUntilReady+0xa>
			  return ENDPOINT_READYWAIT_Timeout;
    248e:	84 e0       	ldi	r24, 0x04	; 4
    2490:	08 95       	ret
		}

		uint8_t USB_DeviceState_LCL = USB_DeviceState;

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
		  return ENDPOINT_READYWAIT_DeviceDisconnected;
    2492:	82 e0       	ldi	r24, 0x02	; 2
    2494:	08 95       	ret
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_READYWAIT_BusSuspended;
    2496:	83 e0       	ldi	r24, 0x03	; 3
    2498:	08 95       	ret
		else if (Endpoint_IsStalled())
		  return ENDPOINT_READYWAIT_EndpointStalled;
    249a:	81 e0       	ldi	r24, 0x01	; 1
    249c:	08 95       	ret
	for (;;)
	{
		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
		{
			if (Endpoint_IsINReady())
			  return ENDPOINT_READYWAIT_NoError;
    249e:	80 e0       	ldi	r24, 0x00	; 0
    24a0:	08 95       	ret
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    24a2:	40 91 e8 00 	lds	r20, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		}
		else
		{
			if (Endpoint_IsOUTReceived())
    24a6:	42 ff       	sbrs	r20, 2
    24a8:	dd cf       	rjmp	.-70     	; 0x2464 <Endpoint_WaitUntilReady+0x1e>

			if (!(TimeoutMSRem--))
			  return ENDPOINT_READYWAIT_Timeout;
		}
	}
}
    24aa:	08 95       	ret

000024ac <USB_ResetInterface>:

	USB_IsInitialized = false;
}

void USB_ResetInterface(void)
{
    24ac:	0f 93       	push	r16
    24ae:	1f 93       	push	r17
    24b0:	cf 93       	push	r28
	#if defined(USB_CAN_BE_BOTH)
	bool UIDModeSelectEnabled = ((UHWCON & (1 << UIDE)) != 0);
	#endif

	USB_INT_DisableAllInterrupts();
	USB_INT_ClearAllInterrupts();
    24b2:	df 93       	push	r29
    24b4:	4b d0       	rcall	.+150    	; 0x254c <USB_INT_DisableAllInterrupts>
			}

			static inline void USB_Controller_Reset(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Controller_Reset(void)
			{
				USBCON &= ~(1 << USBE);
    24b6:	52 d0       	rcall	.+164    	; 0x255c <USB_INT_ClearAllInterrupts>
    24b8:	c8 ed       	ldi	r28, 0xD8	; 216
    24ba:	d0 e0       	ldi	r29, 0x00	; 0
    24bc:	88 81       	ld	r24, Y
    24be:	8f 77       	andi	r24, 0x7F	; 127
				USBCON |=  (1 << USBE);
    24c0:	88 83       	st	Y, r24
    24c2:	88 81       	ld	r24, Y
    24c4:	80 68       	ori	r24, 0x80	; 128
			}

			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Unfreeze(void)
			{
				USBCON &= ~(1 << FRZCLK);
    24c6:	88 83       	st	Y, r24
    24c8:	88 81       	ld	r24, Y
    24ca:	8f 7d       	andi	r24, 0xDF	; 223
			}

			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_Off(void)
			{
				PLLCSR = 0;
    24cc:	88 83       	st	Y, r24
}

#if defined(USB_CAN_BE_DEVICE)
static void USB_Init_Device(void)
{
	USB_DeviceState                 = DEVICE_STATE_Unattached;
    24ce:	19 bc       	out	0x29, r1	; 41
    24d0:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <USB_DeviceState>
	USB_Device_ConfigurationNumber  = 0;
    24d4:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <USB_Device_ConfigurationNumber>

	#if !defined(NO_DEVICE_REMOTE_WAKEUP)
	USB_Device_RemoteWakeupEnabled  = false;
    24d8:	10 92 25 09 	sts	0x0925, r1	; 0x800925 <USB_Device_RemoteWakeupEnabled>
	#endif

	#if !defined(NO_DEVICE_SELF_POWER)
	USB_Device_CurrentlySelfPowered = false;
    24dc:	10 92 24 09 	sts	0x0924, r1	; 0x800924 <USB_Device_CurrentlySelfPowered>
			}

			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_SetFullSpeed(void)
			{
				UDCON &= ~(1 << LSM);
    24e0:	00 ee       	ldi	r16, 0xE0	; 224
    24e2:	10 e0       	ldi	r17, 0x00	; 0
    24e4:	f8 01       	movw	r30, r16
    24e6:	80 81       	ld	r24, Z
    24e8:	8b 7f       	andi	r24, 0xFB	; 251
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						USBCON |= (1 << VBUSTE);
    24ea:	80 83       	st	Z, r24
    24ec:	88 81       	ld	r24, Y
    24ee:	81 60       	ori	r24, 0x01	; 1
				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);

				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
				  return false;

				return Endpoint_ConfigureEndpoint_Prv(Number,
    24f0:	88 83       	st	Y, r24
    24f2:	42 e0       	ldi	r20, 0x02	; 2
    24f4:	60 e0       	ldi	r22, 0x00	; 0
    24f6:	80 e0       	ldi	r24, 0x00	; 0
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
    24f8:	15 df       	rcall	.-470    	; 0x2324 <Endpoint_ConfigureEndpoint_Prv>
    24fa:	e1 ee       	ldi	r30, 0xE1	; 225
    24fc:	f0 e0       	ldi	r31, 0x00	; 0
    24fe:	80 81       	ld	r24, Z
    2500:	8e 7f       	andi	r24, 0xFE	; 254
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  |= (1 << SUSPE);
    2502:	80 83       	st	Z, r24
    2504:	e2 ee       	ldi	r30, 0xE2	; 226
    2506:	f0 e0       	ldi	r31, 0x00	; 0
    2508:	80 81       	ld	r24, Z
    250a:	81 60       	ori	r24, 0x01	; 1
						break;
					case USB_INT_EORSTI:
						UDIEN  |= (1 << EORSTE);
    250c:	80 83       	st	Z, r24
    250e:	80 81       	ld	r24, Z
    2510:	88 60       	ori	r24, 0x08	; 8
			 *  register and despite the datasheet making no mention of its requirement in host mode.
			 */
			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Attach(void)
			{
				UDCON  &= ~(1 << DETACH);
    2512:	80 83       	st	Z, r24
    2514:	f8 01       	movw	r30, r16
    2516:	80 81       	ld	r24, Z
    2518:	8e 7f       	andi	r24, 0xFE	; 254

			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_OTGPAD_On(void)
			{
				USBCON |=  (1 << OTGPADE);
    251a:	80 83       	st	Z, r24
    251c:	88 81       	ld	r24, Y
    251e:	80 61       	ori	r24, 0x10	; 16
	}

	#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
	USB_OTGPAD_On();
	#endif
}
    2520:	88 83       	st	Y, r24
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	1f 91       	pop	r17
    2528:	0f 91       	pop	r16
    252a:	08 95       	ret

0000252c <USB_Init>:
			}

			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_OTGPAD_Off(void)
			{
				USBCON &= ~(1 << OTGPADE);
    252c:	e8 ed       	ldi	r30, 0xD8	; 216
    252e:	f0 e0       	ldi	r31, 0x00	; 0
    2530:	80 81       	ld	r24, Z
    2532:	8f 7e       	andi	r24, 0xEF	; 239
    2534:	80 83       	st	Z, r24

			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_REG_On(void)
			{
			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
				UHWCON |=  (1 << UVREGE);
    2536:	e7 ed       	ldi	r30, 0xD7	; 215
    2538:	f0 e0       	ldi	r31, 0x00	; 0
    253a:	80 81       	ld	r24, Z
    253c:	81 60       	ori	r24, 0x01	; 1
    253e:	80 83       	st	Z, r24
	  USB_REG_Off();

	if (!(USB_Options & USB_OPT_MANUAL_PLL))
	{
		#if defined(USB_SERIES_4_AVR)
		PLLFRQ = (1 << PDIV2);
    2540:	84 e0       	ldi	r24, 0x04	; 4
    2542:	82 bf       	out	0x32, r24	; 50
		UHWCON &= ~(1 << UIDE);
		USB_CurrentMode = Mode;
	}
	#endif

	USB_IsInitialized = true;
    2544:	81 e0       	ldi	r24, 0x01	; 1
    2546:	80 93 26 09 	sts	0x0926, r24	; 0x800926 <USB_IsInitialized>
    254a:	b0 cf       	rjmp	.-160    	; 0x24ac <USB_ResetInterface>

0000254c <USB_INT_DisableAllInterrupts>:
void USB_INT_DisableAllInterrupts(void)
{
	#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	USBCON &= ~((1 << VBUSTE) | (1 << IDTE));
	#elif defined(USB_SERIES_4_AVR)
	USBCON &= ~(1 << VBUSTE);
    254c:	e8 ed       	ldi	r30, 0xD8	; 216
    254e:	f0 e0       	ldi	r31, 0x00	; 0
    2550:	80 81       	ld	r24, Z
    2552:	8e 7f       	andi	r24, 0xFE	; 254
    2554:	80 83       	st	Z, r24
	#if defined(USB_CAN_BE_HOST)
	UHIEN   = 0;
	#endif

	#if defined(USB_CAN_BE_DEVICE)
	UDIEN   = 0;
    2556:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    255a:	08 95       	ret

0000255c <USB_INT_ClearAllInterrupts>:
}

void USB_INT_ClearAllInterrupts(void)
{
	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	USBINT = 0;
    255c:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
	#if defined(USB_CAN_BE_HOST)
	UHINT  = 0;
	#endif

	#if defined(USB_CAN_BE_DEVICE)
	UDINT  = 0;
    2560:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    2564:	08 95       	ret

00002566 <__vector_10>:
	#endif
}

ISR(USB_GEN_vect, ISR_BLOCK)
{
    2566:	1f 92       	push	r1
    2568:	0f 92       	push	r0
    256a:	0f b6       	in	r0, 0x3f	; 63
    256c:	0f 92       	push	r0
    256e:	11 24       	eor	r1, r1
    2570:	2f 93       	push	r18
    2572:	3f 93       	push	r19
    2574:	4f 93       	push	r20
    2576:	5f 93       	push	r21
    2578:	6f 93       	push	r22
    257a:	7f 93       	push	r23
    257c:	8f 93       	push	r24
    257e:	9f 93       	push	r25
    2580:	af 93       	push	r26
    2582:	bf 93       	push	r27
    2584:	ef 93       	push	r30
    2586:	ff 93       	push	r31
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
					case USB_INT_EORSTI:
						return (UDINT  & (1 << EORSTI));
					case USB_INT_SOFI:
						return (UDINT  & (1 << SOFI));
    2588:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
	#if defined(USB_CAN_BE_DEVICE)
	#if !defined(NO_SOF_EVENTS)
	if (USB_INT_HasOccurred(USB_INT_SOFI) && USB_INT_IsEnabled(USB_INT_SOFI))
    258c:	82 ff       	sbrs	r24, 2
    258e:	0a c0       	rjmp	.+20     	; 0x25a4 <__vector_10+0x3e>
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
					case USB_INT_EORSTI:
						return (UDIEN  & (1 << EORSTE));
					case USB_INT_SOFI:
						return (UDIEN  & (1 << SOFE));
    2590:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2594:	82 ff       	sbrs	r24, 2
    2596:	06 c0       	rjmp	.+12     	; 0x25a4 <__vector_10+0x3e>
						break;
					case USB_INT_EORSTI:
						UDINT  &= ~(1 << EORSTI);
						break;
					case USB_INT_SOFI:
						UDINT  &= ~(1 << SOFI);
    2598:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    259c:	8b 7f       	andi	r24, 0xFB	; 251
    259e:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						return (USBINT & (1 << VBUSTI));
    25a2:	54 d2       	rcall	.+1192   	; 0x2a4c <USB_Event_Stub>
    25a4:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
		EVENT_USB_Device_StartOfFrame();
	}
	#endif

	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	if (USB_INT_HasOccurred(USB_INT_VBUSTI) && USB_INT_IsEnabled(USB_INT_VBUSTI))
    25a8:	80 ff       	sbrs	r24, 0
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						return (USBCON & (1 << VBUSTE));
    25aa:	1f c0       	rjmp	.+62     	; 0x25ea <__vector_10+0x84>
    25ac:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    25b0:	80 ff       	sbrs	r24, 0
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						USBINT &= ~(1 << VBUSTI);
    25b2:	1b c0       	rjmp	.+54     	; 0x25ea <__vector_10+0x84>
    25b4:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
    25b8:	8e 7f       	andi	r24, 0xFE	; 254
    25ba:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false otherwise.
				 */
				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
				static inline bool USB_VBUS_GetStatus(void)
				{
					return ((USBSTA & (1 << VBUS)) ? true : false);
    25be:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
	{
		USB_INT_Clear(USB_INT_VBUSTI);

		if (USB_VBUS_GetStatus())
    25c2:	80 ff       	sbrs	r24, 0

		/* Inline Functions: */
			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_On(void)
			{
				PLLCSR = USB_PLL_PSC;
    25c4:	0d c0       	rjmp	.+26     	; 0x25e0 <__vector_10+0x7a>
    25c6:	80 e1       	ldi	r24, 0x10	; 16
				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
    25c8:	89 bd       	out	0x29, r24	; 41
    25ca:	82 e1       	ldi	r24, 0x12	; 18
		{
			if (!(USB_Options & USB_OPT_MANUAL_PLL))
			{
				USB_PLL_On();
				while (!(USB_PLL_IsReady()));
    25cc:	89 bd       	out	0x29, r24	; 41
    25ce:	09 b4       	in	r0, 0x29	; 41
    25d0:	00 fe       	sbrs	r0, 0
			}

			USB_DeviceState = DEVICE_STATE_Powered;
    25d2:	fd cf       	rjmp	.-6      	; 0x25ce <__vector_10+0x68>
    25d4:	81 e0       	ldi	r24, 0x01	; 1
    25d6:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
			EVENT_USB_Device_Connect();
    25da:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <EVENT_USB_Device_Connect>
			}

			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_Off(void)
			{
				PLLCSR = 0;
    25de:	05 c0       	rjmp	.+10     	; 0x25ea <__vector_10+0x84>
		else
		{
			if (!(USB_Options & USB_OPT_MANUAL_PLL))
			  USB_PLL_Off();

			USB_DeviceState = DEVICE_STATE_Unattached;
    25e0:	19 bc       	out	0x29, r1	; 41
    25e2:	10 92 27 09 	sts	0x0927, r1	; 0x800927 <USB_DeviceState>
			EVENT_USB_Device_Disconnect();
    25e6:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <EVENT_USB_Device_Disconnect>
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
    25ea:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
		}
	}
	#endif

	if (USB_INT_HasOccurred(USB_INT_SUSPI) && USB_INT_IsEnabled(USB_INT_SUSPI))
    25ee:	80 ff       	sbrs	r24, 0
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
    25f0:	18 c0       	rjmp	.+48     	; 0x2622 <__vector_10+0xbc>
    25f2:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    25f6:	80 ff       	sbrs	r24, 0
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  &= ~(1 << SUSPE);
    25f8:	14 c0       	rjmp	.+40     	; 0x2622 <__vector_10+0xbc>
    25fa:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    25fe:	8e 7f       	andi	r24, 0xFE	; 254
    2600:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
						USBCON |= (1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
    2604:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2608:	80 61       	ori	r24, 0x10	; 16
    260a:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
			#endif

			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Freeze(void)
			{
				USBCON |=  (1 << FRZCLK);
    260e:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    2612:	80 62       	ori	r24, 0x20	; 32
    2614:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>

		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
		USB_DeviceState = DEVICE_STATE_Unattached;
		EVENT_USB_Device_Disconnect();
		#else
		USB_DeviceState = DEVICE_STATE_Suspended;
    2618:	19 bc       	out	0x29, r1	; 41
    261a:	85 e0       	ldi	r24, 0x05	; 5
		EVENT_USB_Device_Suspend();
    261c:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
					case USB_INT_IDTI:
						return (USBINT & (1 << IDTI));
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
    2620:	15 d2       	rcall	.+1066   	; 0x2a4c <USB_Event_Stub>
    2622:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
		#endif
	}

	if (USB_INT_HasOccurred(USB_INT_WAKEUPI) && USB_INT_IsEnabled(USB_INT_WAKEUPI))
    2626:	84 ff       	sbrs	r24, 4
					case USB_INT_IDTI:
						return (USBCON & (1 << IDTE));
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
    2628:	2f c0       	rjmp	.+94     	; 0x2688 <__vector_10+0x122>
    262a:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    262e:	84 ff       	sbrs	r24, 4

		/* Inline Functions: */
			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_On(void)
			{
				PLLCSR = USB_PLL_PSC;
    2630:	2b c0       	rjmp	.+86     	; 0x2688 <__vector_10+0x122>
    2632:	80 e1       	ldi	r24, 0x10	; 16
				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
    2634:	89 bd       	out	0x29, r24	; 41
    2636:	82 e1       	ldi	r24, 0x12	; 18
	{
		if (!(USB_Options & USB_OPT_MANUAL_PLL))
		{
			USB_PLL_On();
			while (!(USB_PLL_IsReady()));
    2638:	89 bd       	out	0x29, r24	; 41
    263a:	09 b4       	in	r0, 0x29	; 41
    263c:	00 fe       	sbrs	r0, 0
			}

			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Unfreeze(void)
			{
				USBCON &= ~(1 << FRZCLK);
    263e:	fd cf       	rjmp	.-6      	; 0x263a <__vector_10+0xd4>
    2640:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    2644:	8f 7d       	andi	r24, 0xDF	; 223
    2646:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
						USBINT &= ~(1 << IDTI);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
    264a:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    264e:	8f 7e       	andi	r24, 0xEF	; 239
    2650:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
						USBCON &= ~(1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
    2654:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2658:	8f 7e       	andi	r24, 0xEF	; 239
    265a:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  |= (1 << SUSPE);
    265e:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    2662:	81 60       	ori	r24, 0x01	; 1
    2664:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
		USB_INT_Clear(USB_INT_WAKEUPI);

		USB_INT_Disable(USB_INT_WAKEUPI);
		USB_INT_Enable(USB_INT_SUSPI);

		if (USB_Device_ConfigurationNumber)
    2668:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <USB_Device_ConfigurationNumber>
    266c:	88 23       	and	r24, r24
		  USB_DeviceState = DEVICE_STATE_Configured;
    266e:	11 f0       	breq	.+4      	; 0x2674 <__vector_10+0x10e>
    2670:	84 e0       	ldi	r24, 0x04	; 4
			}

			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline bool USB_Device_IsAddressSet(void)
			{
				return (UDADDR & (1 << ADDEN));
    2672:	07 c0       	rjmp	.+14     	; 0x2682 <__vector_10+0x11c>
    2674:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
		else
		  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Addressed : DEVICE_STATE_Powered;
    2678:	87 fd       	sbrc	r24, 7
    267a:	02 c0       	rjmp	.+4      	; 0x2680 <__vector_10+0x11a>
    267c:	81 e0       	ldi	r24, 0x01	; 1
    267e:	01 c0       	rjmp	.+2      	; 0x2682 <__vector_10+0x11c>

		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
		EVENT_USB_Device_Connect();
		#else
		EVENT_USB_Device_WakeUp();
    2680:	83 e0       	ldi	r24, 0x03	; 3
    2682:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
					case USB_INT_EORSTI:
						return (UDINT  & (1 << EORSTI));
    2686:	e2 d1       	rcall	.+964    	; 0x2a4c <USB_Event_Stub>
		#endif
	}

	if (USB_INT_HasOccurred(USB_INT_EORSTI) && USB_INT_IsEnabled(USB_INT_EORSTI))
    2688:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
					case USB_INT_EORSTI:
						return (UDIEN  & (1 << EORSTE));
    268c:	83 ff       	sbrs	r24, 3
    268e:	27 c0       	rjmp	.+78     	; 0x26de <__vector_10+0x178>
    2690:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
						break;
					case USB_INT_EORSTI:
						UDINT  &= ~(1 << EORSTI);
    2694:	83 ff       	sbrs	r24, 3
    2696:	23 c0       	rjmp	.+70     	; 0x26de <__vector_10+0x178>
    2698:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    269c:	87 7f       	andi	r24, 0xF7	; 247
	{
		USB_INT_Clear(USB_INT_EORSTI);

		USB_DeviceState                = DEVICE_STATE_Default;
    269e:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    26a2:	82 e0       	ldi	r24, 0x02	; 2
		USB_Device_ConfigurationNumber = 0;
    26a4:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
    26a8:	10 92 23 09 	sts	0x0923, r1	; 0x800923 <USB_Device_ConfigurationNumber>
    26ac:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    26b0:	8e 7f       	andi	r24, 0xFE	; 254
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  &= ~(1 << SUSPE);
    26b2:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    26b6:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    26ba:	8e 7f       	andi	r24, 0xFE	; 254
						USBCON |= (1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
    26bc:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    26c0:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);

				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
				  return false;

				return Endpoint_ConfigureEndpoint_Prv(Number,
    26c4:	80 61       	ori	r24, 0x10	; 16
    26c6:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    26ca:	42 e0       	ldi	r20, 0x02	; 2
						break;
					case USB_INT_SOFI:
						UDIEN  |= (1 << SOFE);
						break;
					case USB_INT_RXSTPI:
						UEIENX |= (1 << RXSTPE);
    26cc:	60 e0       	ldi	r22, 0x00	; 0
    26ce:	80 e0       	ldi	r24, 0x00	; 0
    26d0:	29 de       	rcall	.-942    	; 0x2324 <Endpoint_ConfigureEndpoint_Prv>
    26d2:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>

		#if defined(INTERRUPT_CONTROL_ENDPOINT)
		USB_INT_Enable(USB_INT_RXSTPI);
		#endif

		EVENT_USB_Device_Reset();
    26d6:	88 60       	ori	r24, 0x08	; 8
		USB_ResetInterface();

		EVENT_USB_UIDChange();
	}
	#endif
}
    26d8:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    26dc:	b7 d1       	rcall	.+878    	; 0x2a4c <USB_Event_Stub>
    26de:	ff 91       	pop	r31
    26e0:	ef 91       	pop	r30
    26e2:	bf 91       	pop	r27
    26e4:	af 91       	pop	r26
    26e6:	9f 91       	pop	r25
    26e8:	8f 91       	pop	r24
    26ea:	7f 91       	pop	r23
    26ec:	6f 91       	pop	r22
    26ee:	5f 91       	pop	r21
    26f0:	4f 91       	pop	r20
    26f2:	3f 91       	pop	r19
    26f4:	2f 91       	pop	r18
    26f6:	0f 90       	pop	r0
    26f8:	0f be       	out	0x3f, r0	; 63
    26fa:	0f 90       	pop	r0
    26fc:	1f 90       	pop	r1
    26fe:	18 95       	reti

00002700 <__vector_11>:
    2700:	1f 92       	push	r1
    2702:	0f 92       	push	r0
    2704:	0f b6       	in	r0, 0x3f	; 63
    2706:	0f 92       	push	r0
    2708:	11 24       	eor	r1, r1
    270a:	2f 93       	push	r18
    270c:	3f 93       	push	r19
    270e:	4f 93       	push	r20
    2710:	5f 93       	push	r21
    2712:	6f 93       	push	r22
    2714:	7f 93       	push	r23
    2716:	8f 93       	push	r24
    2718:	9f 93       	push	r25
    271a:	af 93       	push	r26
    271c:	bf 93       	push	r27
    271e:	cf 93       	push	r28
    2720:	df 93       	push	r29
    2722:	ef 93       	push	r30
    2724:	ff 93       	push	r31
    2726:	c0 91 e9 00 	lds	r28, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    272a:	cf 70       	andi	r28, 0x0F	; 15
    272c:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2730:	d8 2f       	mov	r29, r24
    2732:	d1 70       	andi	r29, 0x01	; 1
    2734:	80 fd       	sbrc	r24, 0
    2736:	d0 e8       	ldi	r29, 0x80	; 128
    2738:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    273c:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2740:	87 7f       	andi	r24, 0xF7	; 247
    2742:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2746:	78 94       	sei
    2748:	1e d0       	rcall	.+60     	; 0x2786 <USB_Device_ProcessControlRequest>
    274a:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    274e:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2752:	88 60       	ori	r24, 0x08	; 8
    2754:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    2758:	cd 2b       	or	r28, r29
    275a:	cf 70       	andi	r28, 0x0F	; 15
    275c:	c0 93 e9 00 	sts	0x00E9, r28	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2760:	ff 91       	pop	r31
    2762:	ef 91       	pop	r30
    2764:	df 91       	pop	r29
    2766:	cf 91       	pop	r28
    2768:	bf 91       	pop	r27
    276a:	af 91       	pop	r26
    276c:	9f 91       	pop	r25
    276e:	8f 91       	pop	r24
    2770:	7f 91       	pop	r23
    2772:	6f 91       	pop	r22
    2774:	5f 91       	pop	r21
    2776:	4f 91       	pop	r20
    2778:	3f 91       	pop	r19
    277a:	2f 91       	pop	r18
    277c:	0f 90       	pop	r0
    277e:	0f be       	out	0x3f, r0	; 63
    2780:	0f 90       	pop	r0
    2782:	1f 90       	pop	r1
    2784:	18 95       	reti

00002786 <USB_Device_ProcessControlRequest>:
#if !defined(NO_DEVICE_REMOTE_WAKEUP)
bool    USB_Device_RemoteWakeupEnabled;
#endif

void USB_Device_ProcessControlRequest(void)
{
    2786:	1f 93       	push	r17
    2788:	cf 93       	push	r28
    278a:	df 93       	push	r29
    278c:	cd b7       	in	r28, 0x3d	; 61
    278e:	de b7       	in	r29, 0x3e	; 62
    2790:	aa 97       	sbiw	r28, 0x2a	; 42
    2792:	0f b6       	in	r0, 0x3f	; 63
    2794:	f8 94       	cli
    2796:	de bf       	out	0x3e, r29	; 62
    2798:	0f be       	out	0x3f, r0	; 63
    279a:	cd bf       	out	0x3d, r28	; 61
    279c:	e8 e2       	ldi	r30, 0x28	; 40
    279e:	f9 e0       	ldi	r31, 0x09	; 9
			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
			 */
			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_Read_8(void)
			{
				return UEDATX;
    27a0:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
	#else
	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;

	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeaderByte++)
	  *(RequestHeader++) = Endpoint_Read_8();
    27a4:	81 93       	st	Z+, r24
	USB_ControlRequest.wIndex        = Endpoint_Read_16_LE();
	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
	#else
	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;

	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeaderByte++)
    27a6:	29 e0       	ldi	r18, 0x09	; 9
    27a8:	e0 33       	cpi	r30, 0x30	; 48
    27aa:	f2 07       	cpc	r31, r18
    27ac:	c9 f7       	brne	.-14     	; 0x27a0 <USB_Device_ProcessControlRequest+0x1a>
	  *(RequestHeader++) = Endpoint_Read_8();
	#endif

	EVENT_USB_Device_ControlRequest();
    27ae:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <EVENT_USB_Device_ControlRequest>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    27b2:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	if (Endpoint_IsSETUPReceived())
    27b6:	83 ff       	sbrs	r24, 3
    27b8:	31 c1       	rjmp	.+610    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
	{
		uint8_t bmRequestType = USB_ControlRequest.bmRequestType;
    27ba:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>

		switch (USB_ControlRequest.bRequest)
    27be:	90 91 29 09 	lds	r25, 0x0929	; 0x800929 <USB_ControlRequest+0x1>
    27c2:	95 30       	cpi	r25, 0x05	; 5
    27c4:	09 f4       	brne	.+2      	; 0x27c8 <USB_Device_ProcessControlRequest+0x42>
    27c6:	83 c0       	rjmp	.+262    	; 0x28ce <USB_Device_ProcessControlRequest+0x148>
    27c8:	30 f4       	brcc	.+12     	; 0x27d6 <USB_Device_ProcessControlRequest+0x50>
    27ca:	91 30       	cpi	r25, 0x01	; 1
    27cc:	a9 f1       	breq	.+106    	; 0x2838 <USB_Device_ProcessControlRequest+0xb2>
    27ce:	68 f0       	brcs	.+26     	; 0x27ea <USB_Device_ProcessControlRequest+0x64>
    27d0:	93 30       	cpi	r25, 0x03	; 3
    27d2:	91 f1       	breq	.+100    	; 0x2838 <USB_Device_ProcessControlRequest+0xb2>
    27d4:	23 c1       	rjmp	.+582    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    27d6:	98 30       	cpi	r25, 0x08	; 8
    27d8:	09 f4       	brne	.+2      	; 0x27dc <USB_Device_ProcessControlRequest+0x56>
    27da:	ef c0       	rjmp	.+478    	; 0x29ba <USB_Device_ProcessControlRequest+0x234>
    27dc:	99 30       	cpi	r25, 0x09	; 9
    27de:	09 f4       	brne	.+2      	; 0x27e2 <USB_Device_ProcessControlRequest+0x5c>
    27e0:	fb c0       	rjmp	.+502    	; 0x29d8 <USB_Device_ProcessControlRequest+0x252>
    27e2:	96 30       	cpi	r25, 0x06	; 6
    27e4:	09 f0       	breq	.+2      	; 0x27e8 <USB_Device_ProcessControlRequest+0x62>
    27e6:	1a c1       	rjmp	.+564    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    27e8:	94 c0       	rjmp	.+296    	; 0x2912 <USB_Device_ProcessControlRequest+0x18c>
		{
			case REQ_GetStatus:
				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    27ea:	80 38       	cpi	r24, 0x80	; 128
    27ec:	21 f0       	breq	.+8      	; 0x27f6 <USB_Device_ProcessControlRequest+0x70>
    27ee:	82 38       	cpi	r24, 0x82	; 130
    27f0:	09 f0       	breq	.+2      	; 0x27f4 <USB_Device_ProcessControlRequest+0x6e>
    27f2:	14 c1       	rjmp	.+552    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    27f4:	08 c0       	rjmp	.+16     	; 0x2806 <USB_Device_ProcessControlRequest+0x80>
	Endpoint_ClearOUT();
}

static void USB_Device_GetStatus(void)
{
	uint8_t CurrentStatus = 0;
    27f6:	80 91 24 09 	lds	r24, 0x0924	; 0x800924 <USB_Device_CurrentlySelfPowered>
			if (USB_Device_CurrentlySelfPowered)
			  CurrentStatus |= FEATURE_SELFPOWERED_ENABLED;
			#endif

			#if !defined(NO_DEVICE_REMOTE_WAKEUP)
			if (USB_Device_RemoteWakeupEnabled)
    27fa:	90 91 25 09 	lds	r25, 0x0925	; 0x800925 <USB_Device_RemoteWakeupEnabled>
    27fe:	99 23       	and	r25, r25
    2800:	89 f0       	breq	.+34     	; 0x2824 <USB_Device_ProcessControlRequest+0x9e>
			  CurrentStatus |= FEATURE_REMOTE_WAKEUP_ENABLED;
    2802:	82 60       	ori	r24, 0x02	; 2
    2804:	0f c0       	rjmp	.+30     	; 0x2824 <USB_Device_ProcessControlRequest+0x9e>
			break;
		}
		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT):
		{
			#if !defined(CONTROL_ONLY_DEVICE)
			uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
    2806:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    280a:	8f 70       	andi	r24, 0x0F	; 15

			if (EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
    280c:	87 30       	cpi	r24, 0x07	; 7
    280e:	08 f0       	brcs	.+2      	; 0x2812 <USB_Device_ProcessControlRequest+0x8c>
    2810:	05 c1       	rjmp	.+522    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2812:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
			 */
			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsStalled(void)
			{
				return ((UECONX & (1 << STALLRQ)) ? true : false);
    2816:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
				return;

			Endpoint_SelectEndpoint(EndpointIndex);

			CurrentStatus = Endpoint_IsStalled();
    281a:	85 fb       	bst	r24, 5
    281c:	88 27       	eor	r24, r24
    281e:	80 f9       	bld	r24, 0
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2820:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2824:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2828:	97 7f       	andi	r25, 0xF7	; 247
    282a:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_16_LE(const uint16_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_16_LE(const uint16_t Data)
			{
				UEDATX = (Data & 0xFF);
    282e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 8);
    2832:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2836:	cc c0       	rjmp	.+408    	; 0x29d0 <USB_Device_ProcessControlRequest+0x24a>
				}

				break;
			case REQ_ClearFeature:
			case REQ_SetFeature:
				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    2838:	28 2f       	mov	r18, r24
    283a:	2d 7f       	andi	r18, 0xFD	; 253
    283c:	09 f0       	breq	.+2      	; 0x2840 <USB_Device_ProcessControlRequest+0xba>
    283e:	ee c0       	rjmp	.+476    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
	Endpoint_ClearStatusStage();
}

static void USB_Device_ClearSetFeature(void)
{
	switch (USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT)
    2840:	88 23       	and	r24, r24
    2842:	19 f0       	breq	.+6      	; 0x284a <USB_Device_ProcessControlRequest+0xc4>
    2844:	82 30       	cpi	r24, 0x02	; 2
    2846:	61 f0       	breq	.+24     	; 0x2860 <USB_Device_ProcessControlRequest+0xda>
    2848:	e9 c0       	rjmp	.+466    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
	{
		#if !defined(NO_DEVICE_REMOTE_WAKEUP)
		case REQREC_DEVICE:
		{
			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_DeviceRemoteWakeup)
    284a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    284e:	81 30       	cpi	r24, 0x01	; 1
    2850:	09 f0       	breq	.+2      	; 0x2854 <USB_Device_ProcessControlRequest+0xce>
    2852:	e4 c0       	rjmp	.+456    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
			  USB_Device_RemoteWakeupEnabled = (USB_ControlRequest.bRequest == REQ_SetFeature);
    2854:	93 30       	cpi	r25, 0x03	; 3
    2856:	09 f0       	breq	.+2      	; 0x285a <USB_Device_ProcessControlRequest+0xd4>
    2858:	80 e0       	ldi	r24, 0x00	; 0
    285a:	80 93 25 09 	sts	0x0925, r24	; 0x800925 <USB_Device_RemoteWakeupEnabled>
    285e:	2e c0       	rjmp	.+92     	; 0x28bc <USB_Device_ProcessControlRequest+0x136>
		}
		#endif
		#if !defined(CONTROL_ONLY_DEVICE)
		case REQREC_ENDPOINT:
		{
			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_EndpointHalt)
    2860:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    2864:	81 11       	cpse	r24, r1
    2866:	2a c0       	rjmp	.+84     	; 0x28bc <USB_Device_ProcessControlRequest+0x136>
			{
				uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
    2868:	80 91 2c 09 	lds	r24, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    286c:	8f 70       	andi	r24, 0x0F	; 15

				if (EndpointIndex == ENDPOINT_CONTROLEP || EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
    286e:	2f ef       	ldi	r18, 0xFF	; 255
    2870:	28 0f       	add	r18, r24
    2872:	26 30       	cpi	r18, 0x06	; 6
    2874:	08 f0       	brcs	.+2      	; 0x2878 <USB_Device_ProcessControlRequest+0xf2>
    2876:	d2 c0       	rjmp	.+420    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2878:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
			 */
			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsEnabled(void)
			{
				return ((UECONX & (1 << EPEN)) ? true : false);
    287c:	20 91 eb 00 	lds	r18, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
				  return;

				Endpoint_SelectEndpoint(EndpointIndex);

				if (Endpoint_IsEnabled())
    2880:	20 ff       	sbrs	r18, 0
    2882:	1c c0       	rjmp	.+56     	; 0x28bc <USB_Device_ProcessControlRequest+0x136>
				{
					if (USB_ControlRequest.bRequest == REQ_SetFeature)
    2884:	93 30       	cpi	r25, 0x03	; 3
    2886:	21 f4       	brne	.+8      	; 0x2890 <USB_Device_ProcessControlRequest+0x10a>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_StallTransaction(void)
			{
				UECONX |= (1 << STALLRQ);
    2888:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    288c:	80 62       	ori	r24, 0x20	; 32
    288e:	14 c0       	rjmp	.+40     	; 0x28b8 <USB_Device_ProcessControlRequest+0x132>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearStall(void)
			{
				UECONX |= (1 << STALLRQC);
    2890:	90 91 eb 00 	lds	r25, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2894:	90 61       	ori	r25, 0x10	; 16
    2896:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
			 */
			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
			{
				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
    289a:	21 e0       	ldi	r18, 0x01	; 1
    289c:	30 e0       	ldi	r19, 0x00	; 0
    289e:	a9 01       	movw	r20, r18
    28a0:	02 c0       	rjmp	.+4      	; 0x28a6 <USB_Device_ProcessControlRequest+0x120>
    28a2:	44 0f       	add	r20, r20
    28a4:	55 1f       	adc	r21, r21
    28a6:	8a 95       	dec	r24
    28a8:	e2 f7       	brpl	.-8      	; 0x28a2 <USB_Device_ProcessControlRequest+0x11c>
    28aa:	40 93 ea 00 	sts	0x00EA, r20	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
				UERST = 0;
    28ae:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>

			/** Resets the data toggle of the currently selected endpoint. */
			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ResetDataToggle(void)
			{
				UECONX |= (1 << RSTDT);
    28b2:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    28b6:	88 60       	ori	r24, 0x08	; 8
    28b8:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    28bc:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    28c0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    28c4:	87 7f       	andi	r24, 0xF7	; 247
    28c6:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);

	Endpoint_ClearSETUP();

	Endpoint_ClearStatusStage();
    28ca:	9e dd       	rcall	.-1220   	; 0x2408 <Endpoint_ClearStatusStage>
					USB_Device_ClearSetFeature();
				}

				break;
			case REQ_SetAddress:
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
    28cc:	a7 c0       	rjmp	.+334    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    28ce:	81 11       	cpse	r24, r1
	}
}

static void USB_Device_SetAddress(void)
{
	uint8_t DeviceAddress = (USB_ControlRequest.wValue & 0x7F);
    28d0:	a5 c0       	rjmp	.+330    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    28d2:	10 91 2a 09 	lds	r17, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
			#endif

			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
			{
				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
    28d6:	1f 77       	andi	r17, 0x7F	; 127
    28d8:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    28dc:	80 78       	andi	r24, 0x80	; 128
    28de:	81 2b       	or	r24, r17
    28e0:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    28e4:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    28e8:	87 7f       	andi	r24, 0xF7	; 247

	USB_Device_SetDeviceAddress(DeviceAddress);

	Endpoint_ClearSETUP();

	Endpoint_ClearStatusStage();
    28ea:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    28ee:	8c dd       	rcall	.-1256   	; 0x2408 <Endpoint_ClearStatusStage>
    28f0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	while (!(Endpoint_IsINReady()));
    28f4:	80 ff       	sbrs	r24, 0
			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
			{
				(void)Address;

				UDADDR |= (1 << ADDEN);
    28f6:	fc cf       	rjmp	.-8      	; 0x28f0 <USB_Device_ProcessControlRequest+0x16a>
    28f8:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    28fc:	80 68       	ori	r24, 0x80	; 128
    28fe:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>

	USB_Device_EnableDeviceAddress(DeviceAddress);

	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
    2902:	11 11       	cpse	r17, r1
    2904:	02 c0       	rjmp	.+4      	; 0x290a <USB_Device_ProcessControlRequest+0x184>
    2906:	82 e0       	ldi	r24, 0x02	; 2
    2908:	01 c0       	rjmp	.+2      	; 0x290c <USB_Device_ProcessControlRequest+0x186>
    290a:	83 e0       	ldi	r24, 0x03	; 3
    290c:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
				  USB_Device_SetAddress();

				break;
			case REQ_GetDescriptor:
				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    2910:	85 c0       	rjmp	.+266    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    2912:	80 58       	subi	r24, 0x80	; 128
    2914:	82 30       	cpi	r24, 0x02	; 2
    2916:	08 f0       	brcs	.+2      	; 0x291a <USB_Device_ProcessControlRequest+0x194>
	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIPTORS))
	uint8_t DescriptorAddressSpace;
	#endif

	#if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
    2918:	81 c0       	rjmp	.+258    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    291a:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    291e:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <USB_ControlRequest+0x3>
    2922:	8c 3d       	cpi	r24, 0xDC	; 220
    2924:	53 e0       	ldi	r21, 0x03	; 3
    2926:	95 07       	cpc	r25, r21
	{
		USB_Descriptor_Header_t Header;
		uint16_t                UnicodeString[INTERNAL_SERIAL_LENGTH_BITS / 4];
	} SignatureDescriptor;

	SignatureDescriptor.Header.Type = DTYPE_String;
    2928:	71 f5       	brne	.+92     	; 0x2986 <USB_Device_ProcessControlRequest+0x200>
    292a:	83 e0       	ldi	r24, 0x03	; 3
	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
    292c:	8a 83       	std	Y+2, r24	; 0x02
    292e:	8a e2       	ldi	r24, 0x2A	; 42
			static inline uint_reg_t GetGlobalInterruptMask(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				return SREG;
    2930:	89 83       	std	Y+1, r24	; 0x01
			static inline void GlobalInterruptDisable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				cli();
    2932:	4f b7       	in	r20, 0x3f	; 63
				__builtin_ssrf(AVR32_SR_GM_OFFSET);
				#elif (ARCH == ARCH_XMEGA)
				cli();
				#endif

				GCC_MEMORY_BARRIER();
    2934:	f8 94       	cli
    2936:	de 01       	movw	r26, r28
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
    2938:	13 96       	adiw	r26, 0x03	; 3
			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString)
			{
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
    293a:	20 e0       	ldi	r18, 0x00	; 0

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
				{
					uint8_t SerialByte = boot_signature_byte_get(SigReadAddress);
    293c:	3e e0       	ldi	r19, 0x0E	; 14
    293e:	51 e2       	ldi	r21, 0x21	; 33
    2940:	e3 2f       	mov	r30, r19
    2942:	f0 e0       	ldi	r31, 0x00	; 0
    2944:	50 93 57 00 	sts	0x0057, r21	; 0x800057 <__TEXT_REGION_LENGTH__+0x7e0057>

					if (SerialCharNum & 0x01)
    2948:	e4 91       	lpm	r30, Z
    294a:	20 ff       	sbrs	r18, 0
					{
						SerialByte >>= 4;
    294c:	03 c0       	rjmp	.+6      	; 0x2954 <USB_Device_ProcessControlRequest+0x1ce>
    294e:	e2 95       	swap	r30
						SigReadAddress++;
    2950:	ef 70       	andi	r30, 0x0F	; 15
					}

					SerialByte &= 0x0F;
    2952:	3f 5f       	subi	r19, 0xFF	; 255
    2954:	ef 70       	andi	r30, 0x0F	; 15
    2956:	8e 2f       	mov	r24, r30

					UnicodeString[SerialCharNum] = cpu_to_le16((SerialByte >= 10) ?
    2958:	90 e0       	ldi	r25, 0x00	; 0
    295a:	ea 30       	cpi	r30, 0x0A	; 10
    295c:	10 f0       	brcs	.+4      	; 0x2962 <USB_Device_ProcessControlRequest+0x1dc>
    295e:	c7 96       	adiw	r24, 0x37	; 55
    2960:	01 c0       	rjmp	.+2      	; 0x2964 <USB_Device_ProcessControlRequest+0x1de>
    2962:	c0 96       	adiw	r24, 0x30	; 48
    2964:	8d 93       	st	X+, r24
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
    2966:	9d 93       	st	X+, r25
    2968:	2f 5f       	subi	r18, 0xFF	; 255
    296a:	24 31       	cpi	r18, 0x14	; 20
			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				SREG = GlobalIntState;
    296c:	49 f7       	brne	.-46     	; 0x2940 <USB_Device_ProcessControlRequest+0x1ba>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    296e:	4f bf       	out	0x3f, r20	; 63
    2970:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2974:	87 7f       	andi	r24, 0xF7	; 247
    2976:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	USB_Device_GetSerialString(SignatureDescriptor.UnicodeString);

	Endpoint_ClearSETUP();

	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
    297a:	6a e2       	ldi	r22, 0x2A	; 42
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	ce 01       	movw	r24, r28
    2980:	01 96       	adiw	r24, 0x01	; 1
    2982:	11 dc       	rcall	.-2014   	; 0x21a6 <Endpoint_Write_Control_Stream_LE>
		USB_Device_GetInternalSerialDescriptor();
		return;
	}
	#endif

	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIndex,
    2984:	14 c0       	rjmp	.+40     	; 0x29ae <USB_Device_ProcessControlRequest+0x228>
    2986:	60 91 2c 09 	lds	r22, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    298a:	70 91 2d 09 	lds	r23, 0x092D	; 0x80092d <USB_ControlRequest+0x5>
    298e:	ae 01       	movw	r20, r28
    2990:	4f 5f       	subi	r20, 0xFF	; 255
    2992:	5f 4f       	sbci	r21, 0xFF	; 255
    2994:	8f db       	rcall	.-2274   	; 0x20b4 <CALLBACK_USB_GetDescriptor>
    2996:	bc 01       	movw	r22, r24
    2998:	89 2b       	or	r24, r25
    299a:	09 f4       	brne	.+2      	; 0x299e <USB_Device_ProcessControlRequest+0x218>
    299c:	3f c0       	rjmp	.+126    	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    299e:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29a2:	97 7f       	andi	r25, 0xF7	; 247
	#if defined(USE_RAM_DESCRIPTORS) || !defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
	Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
	#elif defined(USE_EEPROM_DESCRIPTORS)
	Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
	#elif defined(USE_FLASH_DESCRIPTORS)
	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
    29a4:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29a8:	89 81       	ldd	r24, Y+1	; 0x01
    29aa:	9a 81       	ldd	r25, Y+2	; 0x02
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    29ac:	5a dc       	rcall	.-1868   	; 0x2262 <Endpoint_Write_Control_PStream_LE>
    29ae:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29b2:	8b 77       	andi	r24, 0x7B	; 123
    29b4:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
					USB_Device_GetDescriptor();
				}

				break;
			case REQ_GetConfiguration:
				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
    29b8:	31 c0       	rjmp	.+98     	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    29ba:	80 38       	cpi	r24, 0x80	; 128
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    29bc:	79 f5       	brne	.+94     	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    29be:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29c2:	87 7f       	andi	r24, 0xF7	; 247
    29c4:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

static void USB_Device_GetConfiguration(void)
{
	Endpoint_ClearSETUP();

	Endpoint_Write_8(USB_Device_ConfigurationNumber);
    29c8:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <USB_Device_ConfigurationNumber>
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    29cc:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    29d0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29d4:	8e 77       	andi	r24, 0x7E	; 126
				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
				  USB_Device_GetConfiguration();

				break;
			case REQ_SetConfiguration:
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
    29d6:	77 cf       	rjmp	.-274    	; 0x28c6 <USB_Device_ProcessControlRequest+0x140>
    29d8:	81 11       	cpse	r24, r1
}

static void USB_Device_SetConfiguration(void)
{
	#if defined(FIXED_NUM_CONFIGURATIONS)
	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
    29da:	20 c0       	rjmp	.+64     	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    29dc:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    29e0:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <USB_ControlRequest+0x3>
    29e4:	99 27       	eor	r25, r25
    29e6:	02 97       	sbiw	r24, 0x02	; 2
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    29e8:	cc f4       	brge	.+50     	; 0x2a1c <USB_Device_ProcessControlRequest+0x296>
    29ea:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29ee:	87 7f       	andi	r24, 0xF7	; 247
	#endif
	#endif

	Endpoint_ClearSETUP();

	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
    29f0:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    29f4:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>

	Endpoint_ClearStatusStage();
    29f8:	80 93 23 09 	sts	0x0923, r24	; 0x800923 <USB_Device_ConfigurationNumber>

	if (USB_Device_ConfigurationNumber)
    29fc:	05 dd       	rcall	.-1526   	; 0x2408 <Endpoint_ClearStatusStage>
    29fe:	80 91 23 09 	lds	r24, 0x0923	; 0x800923 <USB_Device_ConfigurationNumber>
    2a02:	81 11       	cpse	r24, r1
			}

			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline bool USB_Device_IsAddressSet(void)
			{
				return (UDADDR & (1 << ADDEN));
    2a04:	06 c0       	rjmp	.+12     	; 0x2a12 <USB_Device_ProcessControlRequest+0x28c>
    2a06:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
	  USB_DeviceState = DEVICE_STATE_Configured;
	else
	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
    2a0a:	87 fd       	sbrc	r24, 7
    2a0c:	02 c0       	rjmp	.+4      	; 0x2a12 <USB_Device_ProcessControlRequest+0x28c>
    2a0e:	81 e0       	ldi	r24, 0x01	; 1
    2a10:	01 c0       	rjmp	.+2      	; 0x2a14 <USB_Device_ProcessControlRequest+0x28e>
    2a12:	84 e0       	ldi	r24, 0x04	; 4
    2a14:	80 93 27 09 	sts	0x0927, r24	; 0x800927 <USB_DeviceState>

	EVENT_USB_Device_ConfigurationChanged();
    2a18:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <EVENT_USB_Device_ConfigurationChanged>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2a1c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			default:
				break;
		}
	}

	if (Endpoint_IsSETUPReceived())
    2a20:	83 ff       	sbrs	r24, 3
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2a22:	0a c0       	rjmp	.+20     	; 0x2a38 <USB_Device_ProcessControlRequest+0x2b2>
    2a24:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2a28:	87 7f       	andi	r24, 0xF7	; 247
    2a2a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_StallTransaction(void)
			{
				UECONX |= (1 << STALLRQ);
    2a2e:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    2a32:	80 62       	ori	r24, 0x20	; 32
    2a34:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
	{
		Endpoint_ClearSETUP();
		Endpoint_StallTransaction();
	}
}
    2a38:	aa 96       	adiw	r28, 0x2a	; 42
    2a3a:	0f b6       	in	r0, 0x3f	; 63
    2a3c:	f8 94       	cli
    2a3e:	de bf       	out	0x3e, r29	; 62
    2a40:	0f be       	out	0x3f, r0	; 63
    2a42:	cd bf       	out	0x3d, r28	; 61
    2a44:	df 91       	pop	r29
    2a46:	cf 91       	pop	r28
    2a48:	1f 91       	pop	r17
    2a4a:	08 95       	ret

00002a4c <USB_Event_Stub>:
#define  __INCLUDE_FROM_EVENTS_C
#define  __INCLUDE_FROM_USB_DRIVER
#include "Events.h"

void USB_Event_Stub(void)
{
    2a4c:	08 95       	ret

00002a4e <USB_USBTask>:
#if defined(USB_CAN_BE_DEVICE) && !defined(DEVICE_STATE_AS_GPIOR)
volatile uint8_t     USB_DeviceState;
#endif

void USB_USBTask(void)
{
    2a4e:	cf 93       	push	r28
}

#if defined(USB_CAN_BE_DEVICE)
static void USB_DeviceTask(void)
{
	if (USB_DeviceState == DEVICE_STATE_Unattached)
    2a50:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    2a54:	88 23       	and	r24, r24
    2a56:	99 f0       	breq	.+38     	; 0x2a7e <USB_USBTask+0x30>
			 */
			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
    2a58:	c0 91 e9 00 	lds	r28, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2a5c:	cf 70       	andi	r28, 0x0F	; 15
			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
			 */
			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetEndpointDirection(void)
			{
				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
    2a5e:	90 91 ec 00 	lds	r25, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    2a62:	89 2f       	mov	r24, r25
    2a64:	81 70       	andi	r24, 0x01	; 1
    2a66:	90 fd       	sbrc	r25, 0
    2a68:	80 e8       	ldi	r24, 0x80	; 128
			 */
			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
    2a6a:	c8 2b       	or	r28, r24
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2a6c:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2a70:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	uint8_t PrevEndpoint = Endpoint_GetCurrentEndpoint();

	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);

	if (Endpoint_IsSETUPReceived())
	  USB_Device_ProcessControlRequest();
    2a74:	83 fd       	sbrc	r24, 3
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    2a76:	87 de       	rcall	.-754    	; 0x2786 <USB_Device_ProcessControlRequest>
    2a78:	cf 70       	andi	r28, 0x0F	; 15
    2a7a:	c0 93 e9 00 	sts	0x00E9, r28	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
	#elif defined(USB_CAN_BE_HOST)
		USB_HostTask();
	#elif defined(USB_CAN_BE_DEVICE)
		USB_DeviceTask();
	#endif
}
    2a7e:	cf 91       	pop	r28
    2a80:	08 95       	ret

00002a82 <CDC_Device_ConfigureEndpoints>:

void CDC_Device_CreateBlockingStream(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
                                     FILE* const Stream)
{
	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar_Blocking, _FDEV_SETUP_RW);
	fdev_set_udata(Stream, CDCInterfaceInfo);
    2a82:	cf 93       	push	r28
    2a84:	df 93       	push	r29
    2a86:	ec 01       	movw	r28, r24
    2a88:	fc 01       	movw	r30, r24
    2a8a:	70 96       	adiw	r30, 0x10	; 16
    2a8c:	8b e0       	ldi	r24, 0x0B	; 11
    2a8e:	df 01       	movw	r26, r30
    2a90:	1d 92       	st	X+, r1
    2a92:	8a 95       	dec	r24
    2a94:	e9 f7       	brne	.-6      	; 0x2a90 <CDC_Device_ConfigureEndpoints+0xe>
    2a96:	82 e0       	ldi	r24, 0x02	; 2
    2a98:	8c 83       	std	Y+4, r24	; 0x04
    2a9a:	89 87       	std	Y+9, r24	; 0x09
    2a9c:	83 e0       	ldi	r24, 0x03	; 3
    2a9e:	8e 87       	std	Y+14, r24	; 0x0e
    2aa0:	61 e0       	ldi	r22, 0x01	; 1
    2aa2:	ce 01       	movw	r24, r28
    2aa4:	01 96       	adiw	r24, 0x01	; 1
    2aa6:	73 dc       	rcall	.-1818   	; 0x238e <Endpoint_ConfigureEndpointTable>
    2aa8:	88 23       	and	r24, r24
    2aaa:	61 f0       	breq	.+24     	; 0x2ac4 <CDC_Device_ConfigureEndpoints+0x42>
    2aac:	61 e0       	ldi	r22, 0x01	; 1
    2aae:	ce 01       	movw	r24, r28
    2ab0:	06 96       	adiw	r24, 0x06	; 6
    2ab2:	6d dc       	rcall	.-1830   	; 0x238e <Endpoint_ConfigureEndpointTable>
    2ab4:	88 23       	and	r24, r24
    2ab6:	31 f0       	breq	.+12     	; 0x2ac4 <CDC_Device_ConfigureEndpoints+0x42>
    2ab8:	61 e0       	ldi	r22, 0x01	; 1
    2aba:	ce 01       	movw	r24, r28
    2abc:	0b 96       	adiw	r24, 0x0b	; 11
    2abe:	df 91       	pop	r29
    2ac0:	cf 91       	pop	r28
    2ac2:	65 cc       	rjmp	.-1846   	; 0x238e <Endpoint_ConfigureEndpointTable>
    2ac4:	80 e0       	ldi	r24, 0x00	; 0
    2ac6:	df 91       	pop	r29
    2ac8:	cf 91       	pop	r28
    2aca:	08 95       	ret

00002acc <CDC_Device_SendString>:
    2acc:	db 01       	movw	r26, r22
    2ace:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2ad2:	24 30       	cpi	r18, 0x04	; 4
    2ad4:	c9 f4       	brne	.+50     	; 0x2b08 <CDC_Device_SendString+0x3c>
    2ad6:	fc 01       	movw	r30, r24
    2ad8:	44 89       	ldd	r20, Z+20	; 0x14
    2ada:	55 89       	ldd	r21, Z+21	; 0x15
    2adc:	66 89       	ldd	r22, Z+22	; 0x16
    2ade:	77 89       	ldd	r23, Z+23	; 0x17
    2ae0:	45 2b       	or	r20, r21
    2ae2:	46 2b       	or	r20, r22
    2ae4:	47 2b       	or	r20, r23
    2ae6:	81 f0       	breq	.+32     	; 0x2b08 <CDC_Device_SendString+0x3c>
    2ae8:	81 81       	ldd	r24, Z+1	; 0x01
    2aea:	8f 70       	andi	r24, 0x0F	; 15
    2aec:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2af0:	fd 01       	movw	r30, r26
    2af2:	01 90       	ld	r0, Z+
    2af4:	00 20       	and	r0, r0
    2af6:	e9 f7       	brne	.-6      	; 0x2af2 <CDC_Device_SendString+0x26>
    2af8:	31 97       	sbiw	r30, 0x01	; 1
    2afa:	bf 01       	movw	r22, r30
    2afc:	6a 1b       	sub	r22, r26
    2afe:	7b 0b       	sbc	r23, r27
    2b00:	40 e0       	ldi	r20, 0x00	; 0
    2b02:	50 e0       	ldi	r21, 0x00	; 0
    2b04:	cd 01       	movw	r24, r26
    2b06:	06 cb       	rjmp	.-2548   	; 0x2114 <Endpoint_Write_Stream_LE>
    2b08:	82 e0       	ldi	r24, 0x02	; 2
    2b0a:	08 95       	ret

00002b0c <CDC_Device_SendByte>:
    2b0c:	0f 93       	push	r16
    2b0e:	1f 93       	push	r17
    2b10:	cf 93       	push	r28
    2b12:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2b16:	24 30       	cpi	r18, 0x04	; 4
    2b18:	f9 f4       	brne	.+62     	; 0x2b58 <CDC_Device_SendByte+0x4c>
    2b1a:	fc 01       	movw	r30, r24
    2b1c:	04 89       	ldd	r16, Z+20	; 0x14
    2b1e:	15 89       	ldd	r17, Z+21	; 0x15
    2b20:	26 89       	ldd	r18, Z+22	; 0x16
    2b22:	37 89       	ldd	r19, Z+23	; 0x17
    2b24:	01 2b       	or	r16, r17
    2b26:	02 2b       	or	r16, r18
    2b28:	03 2b       	or	r16, r19
    2b2a:	b1 f0       	breq	.+44     	; 0x2b58 <CDC_Device_SendByte+0x4c>
    2b2c:	c6 2f       	mov	r28, r22
    2b2e:	81 81       	ldd	r24, Z+1	; 0x01
    2b30:	8f 70       	andi	r24, 0x0F	; 15
    2b32:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2b36:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b3a:	85 ff       	sbrs	r24, 5
    2b3c:	04 c0       	rjmp	.+8      	; 0x2b46 <CDC_Device_SendByte+0x3a>
    2b3e:	c0 93 f1 00 	sts	0x00F1, r28	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2b42:	80 e0       	ldi	r24, 0x00	; 0
    2b44:	0a c0       	rjmp	.+20     	; 0x2b5a <CDC_Device_SendByte+0x4e>
    2b46:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b4a:	8e 77       	andi	r24, 0x7E	; 126
    2b4c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2b50:	7a dc       	rcall	.-1804   	; 0x2446 <Endpoint_WaitUntilReady>
    2b52:	88 23       	and	r24, r24
    2b54:	a1 f3       	breq	.-24     	; 0x2b3e <CDC_Device_SendByte+0x32>
    2b56:	01 c0       	rjmp	.+2      	; 0x2b5a <CDC_Device_SendByte+0x4e>
    2b58:	82 e0       	ldi	r24, 0x02	; 2
    2b5a:	cf 91       	pop	r28
    2b5c:	1f 91       	pop	r17
    2b5e:	0f 91       	pop	r16
    2b60:	08 95       	ret

00002b62 <CDC_Device_putchar>:
    2b62:	fb 01       	movw	r30, r22
    2b64:	68 2f       	mov	r22, r24
    2b66:	84 85       	ldd	r24, Z+12	; 0x0c
    2b68:	95 85       	ldd	r25, Z+13	; 0x0d
    2b6a:	d0 df       	rcall	.-96     	; 0x2b0c <CDC_Device_SendByte>
    2b6c:	21 e0       	ldi	r18, 0x01	; 1
    2b6e:	30 e0       	ldi	r19, 0x00	; 0
    2b70:	81 11       	cpse	r24, r1
    2b72:	02 c0       	rjmp	.+4      	; 0x2b78 <CDC_Device_putchar+0x16>
    2b74:	20 e0       	ldi	r18, 0x00	; 0
    2b76:	30 e0       	ldi	r19, 0x00	; 0
    2b78:	88 27       	eor	r24, r24
    2b7a:	99 27       	eor	r25, r25
    2b7c:	82 1b       	sub	r24, r18
    2b7e:	93 0b       	sbc	r25, r19
    2b80:	08 95       	ret

00002b82 <CDC_Device_Flush>:
    2b82:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2b86:	24 30       	cpi	r18, 0x04	; 4
    2b88:	41 f5       	brne	.+80     	; 0x2bda <CDC_Device_Flush+0x58>
    2b8a:	fc 01       	movw	r30, r24
    2b8c:	44 89       	ldd	r20, Z+20	; 0x14
    2b8e:	55 89       	ldd	r21, Z+21	; 0x15
    2b90:	66 89       	ldd	r22, Z+22	; 0x16
    2b92:	77 89       	ldd	r23, Z+23	; 0x17
    2b94:	45 2b       	or	r20, r21
    2b96:	46 2b       	or	r20, r22
    2b98:	47 2b       	or	r20, r23
    2b9a:	f9 f0       	breq	.+62     	; 0x2bda <CDC_Device_Flush+0x58>
    2b9c:	81 81       	ldd	r24, Z+1	; 0x01
    2b9e:	8f 70       	andi	r24, 0x0F	; 15
    2ba0:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2ba4:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2ba8:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2bac:	90 e0       	ldi	r25, 0x00	; 0
    2bae:	92 2b       	or	r25, r18
    2bb0:	89 2b       	or	r24, r25
    2bb2:	89 f0       	breq	.+34     	; 0x2bd6 <CDC_Device_Flush+0x54>
    2bb4:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bb8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bbc:	8e 77       	andi	r24, 0x7E	; 126
    2bbe:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bc2:	95 fd       	sbrc	r25, 5
    2bc4:	08 c0       	rjmp	.+16     	; 0x2bd6 <CDC_Device_Flush+0x54>
    2bc6:	3f dc       	rcall	.-1922   	; 0x2446 <Endpoint_WaitUntilReady>
    2bc8:	81 11       	cpse	r24, r1
    2bca:	08 c0       	rjmp	.+16     	; 0x2bdc <CDC_Device_Flush+0x5a>
    2bcc:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bd0:	8e 77       	andi	r24, 0x7E	; 126
    2bd2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2bd6:	80 e0       	ldi	r24, 0x00	; 0
    2bd8:	08 95       	ret
    2bda:	82 e0       	ldi	r24, 0x02	; 2
    2bdc:	08 95       	ret

00002bde <CDC_Device_USBTask>:
    2bde:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2be2:	24 30       	cpi	r18, 0x04	; 4
    2be4:	89 f4       	brne	.+34     	; 0x2c08 <CDC_Device_USBTask+0x2a>
    2be6:	fc 01       	movw	r30, r24
    2be8:	44 89       	ldd	r20, Z+20	; 0x14
    2bea:	55 89       	ldd	r21, Z+21	; 0x15
    2bec:	66 89       	ldd	r22, Z+22	; 0x16
    2bee:	77 89       	ldd	r23, Z+23	; 0x17
    2bf0:	45 2b       	or	r20, r21
    2bf2:	46 2b       	or	r20, r22
    2bf4:	47 2b       	or	r20, r23
    2bf6:	41 f0       	breq	.+16     	; 0x2c08 <CDC_Device_USBTask+0x2a>
    2bf8:	21 81       	ldd	r18, Z+1	; 0x01
    2bfa:	2f 70       	andi	r18, 0x0F	; 15
    2bfc:	20 93 e9 00 	sts	0x00E9, r18	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2c00:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2c04:	20 fd       	sbrc	r18, 0
    2c06:	bd cf       	rjmp	.-134    	; 0x2b82 <CDC_Device_Flush>
    2c08:	08 95       	ret

00002c0a <CDC_Device_ReceiveByte>:
    2c0a:	20 91 27 09 	lds	r18, 0x0927	; 0x800927 <USB_DeviceState>
    2c0e:	24 30       	cpi	r18, 0x04	; 4
    2c10:	19 f0       	breq	.+6      	; 0x2c18 <CDC_Device_ReceiveByte+0xe>
    2c12:	8f ef       	ldi	r24, 0xFF	; 255
    2c14:	9f ef       	ldi	r25, 0xFF	; 255
    2c16:	08 95       	ret
    2c18:	fc 01       	movw	r30, r24
    2c1a:	44 89       	ldd	r20, Z+20	; 0x14
    2c1c:	55 89       	ldd	r21, Z+21	; 0x15
    2c1e:	66 89       	ldd	r22, Z+22	; 0x16
    2c20:	77 89       	ldd	r23, Z+23	; 0x17
    2c22:	45 2b       	or	r20, r21
    2c24:	46 2b       	or	r20, r22
    2c26:	47 2b       	or	r20, r23
    2c28:	a1 f3       	breq	.-24     	; 0x2c12 <CDC_Device_ReceiveByte+0x8>
    2c2a:	86 81       	ldd	r24, Z+6	; 0x06
    2c2c:	8f 70       	andi	r24, 0x0F	; 15
    2c2e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2c32:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2c36:	82 ff       	sbrs	r24, 2
    2c38:	ec cf       	rjmp	.-40     	; 0x2c12 <CDC_Device_ReceiveByte+0x8>
    2c3a:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2c3e:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2c42:	90 e0       	ldi	r25, 0x00	; 0
    2c44:	92 2b       	or	r25, r18
    2c46:	89 2b       	or	r24, r25
    2c48:	21 f0       	breq	.+8      	; 0x2c52 <CDC_Device_ReceiveByte+0x48>
    2c4a:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2c4e:	30 e0       	ldi	r19, 0x00	; 0
    2c50:	02 c0       	rjmp	.+4      	; 0x2c56 <CDC_Device_ReceiveByte+0x4c>
    2c52:	2f ef       	ldi	r18, 0xFF	; 255
    2c54:	3f ef       	ldi	r19, 0xFF	; 255
    2c56:	40 91 f3 00 	lds	r20, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2c5a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2c5e:	90 e0       	ldi	r25, 0x00	; 0
    2c60:	94 2b       	or	r25, r20
    2c62:	89 2b       	or	r24, r25
    2c64:	29 f4       	brne	.+10     	; 0x2c70 <CDC_Device_ReceiveByte+0x66>
    2c66:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2c6a:	8b 77       	andi	r24, 0x7B	; 123
    2c6c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2c70:	c9 01       	movw	r24, r18
    2c72:	08 95       	ret

00002c74 <CDC_Device_getchar>:
    2c74:	fc 01       	movw	r30, r24
    2c76:	84 85       	ldd	r24, Z+12	; 0x0c
    2c78:	95 85       	ldd	r25, Z+13	; 0x0d
    2c7a:	c7 df       	rcall	.-114    	; 0x2c0a <CDC_Device_ReceiveByte>
    2c7c:	97 ff       	sbrs	r25, 7
    2c7e:	02 c0       	rjmp	.+4      	; 0x2c84 <CDC_Device_getchar+0x10>
    2c80:	8e ef       	ldi	r24, 0xFE	; 254
    2c82:	9f ef       	ldi	r25, 0xFF	; 255
    2c84:	08 95       	ret

00002c86 <CDC_Device_CreateStream>:
    2c86:	fb 01       	movw	r30, r22
    2c88:	2e e0       	ldi	r18, 0x0E	; 14
    2c8a:	db 01       	movw	r26, r22
    2c8c:	1d 92       	st	X+, r1
    2c8e:	2a 95       	dec	r18
    2c90:	e9 f7       	brne	.-6      	; 0x2c8c <CDC_Device_CreateStream+0x6>
    2c92:	23 e0       	ldi	r18, 0x03	; 3
    2c94:	23 83       	std	Z+3, r18	; 0x03
    2c96:	21 eb       	ldi	r18, 0xB1	; 177
    2c98:	35 e1       	ldi	r19, 0x15	; 21
    2c9a:	31 87       	std	Z+9, r19	; 0x09
    2c9c:	20 87       	std	Z+8, r18	; 0x08
    2c9e:	2a e3       	ldi	r18, 0x3A	; 58
    2ca0:	36 e1       	ldi	r19, 0x16	; 22
    2ca2:	33 87       	std	Z+11, r19	; 0x0b
    2ca4:	22 87       	std	Z+10, r18	; 0x0a
    2ca6:	95 87       	std	Z+13, r25	; 0x0d
    2ca8:	84 87       	std	Z+12, r24	; 0x0c
    2caa:	08 95       	ret

00002cac <CDC_Device_Event_Stub>:
	return ReceivedByte;
}
#endif

void CDC_Device_Event_Stub(void)
{
    2cac:	08 95       	ret

00002cae <CDC_Device_ProcessControlRequest>:
#define  __INCLUDE_FROM_CDC_DRIVER
#define  __INCLUDE_FROM_CDC_DEVICE_C
#include "CDCClassDevice.h"

void CDC_Device_ProcessControlRequest(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
{
    2cae:	cf 93       	push	r28
    2cb0:	df 93       	push	r29
    2cb2:	ec 01       	movw	r28, r24
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    2cb4:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	if (!(Endpoint_IsSETUPReceived()))
    2cb8:	83 ff       	sbrs	r24, 3
    2cba:	a7 c0       	rjmp	.+334    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
	  return;

	if (USB_ControlRequest.wIndex != CDCInterfaceInfo->Config.ControlInterfaceNumber)
    2cbc:	88 81       	ld	r24, Y
    2cbe:	90 e0       	ldi	r25, 0x00	; 0
    2cc0:	20 91 2c 09 	lds	r18, 0x092C	; 0x80092c <USB_ControlRequest+0x4>
    2cc4:	30 91 2d 09 	lds	r19, 0x092D	; 0x80092d <USB_ControlRequest+0x5>
    2cc8:	28 17       	cp	r18, r24
    2cca:	39 07       	cpc	r19, r25
    2ccc:	09 f0       	breq	.+2      	; 0x2cd0 <CDC_Device_ProcessControlRequest+0x22>
    2cce:	9d c0       	rjmp	.+314    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
	  return;

	switch (USB_ControlRequest.bRequest)
    2cd0:	80 91 29 09 	lds	r24, 0x0929	; 0x800929 <USB_ControlRequest+0x1>
    2cd4:	81 32       	cpi	r24, 0x21	; 33
    2cd6:	61 f0       	breq	.+24     	; 0x2cf0 <CDC_Device_ProcessControlRequest+0x42>
    2cd8:	20 f4       	brcc	.+8      	; 0x2ce2 <CDC_Device_ProcessControlRequest+0x34>
    2cda:	80 32       	cpi	r24, 0x20	; 32
    2cdc:	09 f4       	brne	.+2      	; 0x2ce0 <CDC_Device_ProcessControlRequest+0x32>
    2cde:	3e c0       	rjmp	.+124    	; 0x2d5c <CDC_Device_ProcessControlRequest+0xae>
    2ce0:	94 c0       	rjmp	.+296    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
    2ce2:	82 32       	cpi	r24, 0x22	; 34
    2ce4:	09 f4       	brne	.+2      	; 0x2ce8 <CDC_Device_ProcessControlRequest+0x3a>
    2ce6:	6c c0       	rjmp	.+216    	; 0x2dc0 <CDC_Device_ProcessControlRequest+0x112>
    2ce8:	83 32       	cpi	r24, 0x23	; 35
    2cea:	09 f4       	brne	.+2      	; 0x2cee <CDC_Device_ProcessControlRequest+0x40>
    2cec:	7e c0       	rjmp	.+252    	; 0x2dea <CDC_Device_ProcessControlRequest+0x13c>
    2cee:	8d c0       	rjmp	.+282    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
	{
		case CDC_REQ_GetLineEncoding:
			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE))
    2cf0:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    2cf4:	81 3a       	cpi	r24, 0xA1	; 161
    2cf6:	09 f0       	breq	.+2      	; 0x2cfa <CDC_Device_ProcessControlRequest+0x4c>
    2cf8:	88 c0       	rjmp	.+272    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2cfa:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2cfe:	87 7f       	andi	r24, 0xF7	; 247
    2d00:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    2d04:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();

				while (!(Endpoint_IsINReady()));
    2d08:	80 ff       	sbrs	r24, 0
    2d0a:	fc cf       	rjmp	.-8      	; 0x2d04 <CDC_Device_ProcessControlRequest+0x56>

				Endpoint_Write_32_LE(CDCInterfaceInfo->State.LineEncoding.BaudRateBPS);
    2d0c:	8c 89       	ldd	r24, Y+20	; 0x14
    2d0e:	9d 89       	ldd	r25, Y+21	; 0x15
    2d10:	ae 89       	ldd	r26, Y+22	; 0x16
    2d12:	bf 89       	ldd	r27, Y+23	; 0x17
			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_32_LE(const uint32_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_32_LE(const uint32_t Data)
			{
				UEDATX = (Data &  0xFF);
    2d14:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 8);
    2d18:	49 2f       	mov	r20, r25
    2d1a:	5a 2f       	mov	r21, r26
    2d1c:	6b 2f       	mov	r22, r27
    2d1e:	77 27       	eor	r23, r23
    2d20:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 16);
    2d24:	ad 01       	movw	r20, r26
    2d26:	66 27       	eor	r22, r22
    2d28:	77 27       	eor	r23, r23
    2d2a:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 24);
    2d2e:	8b 2f       	mov	r24, r27
    2d30:	99 27       	eor	r25, r25
    2d32:	aa 27       	eor	r26, r26
    2d34:	bb 27       	eor	r27, r27
    2d36:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
    2d3a:	88 8d       	ldd	r24, Y+24	; 0x18
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    2d3c:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
    2d40:	89 8d       	ldd	r24, Y+25	; 0x19
    2d42:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);
    2d46:	8a 8d       	ldd	r24, Y+26	; 0x1a
    2d48:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    2d4c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2d50:	8e 77       	andi	r24, 0x7E	; 126
    2d52:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2d56:	df 91       	pop	r29
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);

				Endpoint_ClearIN();
				Endpoint_ClearStatusStage();
    2d58:	cf 91       	pop	r28
			}

			break;
		case CDC_REQ_SetLineEncoding:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2d5a:	56 cb       	rjmp	.-2388   	; 0x2408 <Endpoint_ClearStatusStage>
    2d5c:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    2d60:	81 32       	cpi	r24, 0x21	; 33
    2d62:	09 f0       	breq	.+2      	; 0x2d66 <CDC_Device_ProcessControlRequest+0xb8>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2d64:	52 c0       	rjmp	.+164    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
    2d66:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2d6a:	87 7f       	andi	r24, 0xF7	; 247
    2d6c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    2d70:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();

				while (!(Endpoint_IsOUTReceived()))
    2d74:	82 fd       	sbrc	r24, 2
				{
					if (USB_DeviceState == DEVICE_STATE_Unattached)
    2d76:	05 c0       	rjmp	.+10     	; 0x2d82 <CDC_Device_ProcessControlRequest+0xd4>
    2d78:	80 91 27 09 	lds	r24, 0x0927	; 0x800927 <USB_DeviceState>
    2d7c:	81 11       	cpse	r24, r1
    2d7e:	f8 cf       	rjmp	.-16     	; 0x2d70 <CDC_Device_ProcessControlRequest+0xc2>
				{
					uint32_t Value;
					uint8_t  Bytes[4];
				} Data;

				Data.Bytes[0] = UEDATX;
    2d80:	44 c0       	rjmp	.+136    	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
    2d82:	30 91 f1 00 	lds	r19, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[1] = UEDATX;
    2d86:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[2] = UEDATX;
    2d8a:	90 91 f1 00 	lds	r25, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[3] = UEDATX;
    2d8e:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
					  return;
				}

				CDCInterfaceInfo->State.LineEncoding.BaudRateBPS = Endpoint_Read_32_LE();
    2d92:	3c 8b       	std	Y+20, r19	; 0x14
    2d94:	2d 8b       	std	Y+21, r18	; 0x15
    2d96:	9e 8b       	std	Y+22, r25	; 0x16
			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
			 */
			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_Read_8(void)
			{
				return UEDATX;
    2d98:	8f 8b       	std	Y+23, r24	; 0x17
    2d9a:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2d9e:	88 8f       	std	Y+24, r24	; 0x18
    2da0:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2da4:	89 8f       	std	Y+25, r24	; 0x19
    2da6:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    2daa:	8a 8f       	std	Y+26, r24	; 0x1a
    2dac:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2db0:	8b 77       	andi	r24, 0x7B	; 123
				CDCInterfaceInfo->State.LineEncoding.CharFormat  = Endpoint_Read_8();
				CDCInterfaceInfo->State.LineEncoding.ParityType  = Endpoint_Read_8();
				CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();

				Endpoint_ClearOUT();
				Endpoint_ClearStatusStage();
    2db2:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2db6:	28 db       	rcall	.-2480   	; 0x2408 <Endpoint_ClearStatusStage>
				CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();

				Endpoint_ClearOUT();
				Endpoint_ClearStatusStage();

				EVENT_CDC_Device_LineEncodingChanged(CDCInterfaceInfo);
    2db8:	ce 01       	movw	r24, r28
    2dba:	df 91       	pop	r29
			}

			break;
		case CDC_REQ_SetControlLineState:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2dbc:	cf 91       	pop	r28
    2dbe:	76 cf       	rjmp	.-276    	; 0x2cac <CDC_Device_Event_Stub>
    2dc0:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2dc4:	81 32       	cpi	r24, 0x21	; 33
    2dc6:	09 f5       	brne	.+66     	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
    2dc8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();
    2dcc:	87 7f       	andi	r24, 0xF7	; 247
    2dce:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;
    2dd2:	1a db       	rcall	.-2508   	; 0x2408 <Endpoint_ClearStatusStage>
    2dd4:	80 91 2a 09 	lds	r24, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
    2dd8:	90 91 2b 09 	lds	r25, 0x092B	; 0x80092b <USB_ControlRequest+0x3>

				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
    2ddc:	99 8b       	std	Y+17, r25	; 0x11
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2dde:	88 8b       	std	Y+16, r24	; 0x10
    2de0:	ce 01       	movw	r24, r28
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();

				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;

				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
    2de2:	df 91       	pop	r29
    2de4:	cf 91       	pop	r28
			}

			break;
		case CDC_REQ_SendBreak:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2de6:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <EVENT_CDC_Device_ControLineStateChanged>
    2dea:	80 91 28 09 	lds	r24, 0x0928	; 0x800928 <USB_ControlRequest>
    2dee:	81 32       	cpi	r24, 0x21	; 33
    2df0:	61 f4       	brne	.+24     	; 0x2e0a <CDC_Device_ProcessControlRequest+0x15c>
    2df2:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();
    2df6:	87 7f       	andi	r24, 0xF7	; 247

				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
    2df8:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			}

			break;
	}
}
    2dfc:	05 db       	rcall	.-2550   	; 0x2408 <Endpoint_ClearStatusStage>
    2dfe:	60 91 2a 09 	lds	r22, 0x092A	; 0x80092a <USB_ControlRequest+0x2>
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();

				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
    2e02:	ce 01       	movw	r24, r28
			}

			break;
	}
}
    2e04:	df 91       	pop	r29
    2e06:	cf 91       	pop	r28
    2e08:	51 cf       	rjmp	.-350    	; 0x2cac <CDC_Device_Event_Stub>
    2e0a:	df 91       	pop	r29
    2e0c:	cf 91       	pop	r28
    2e0e:	08 95       	ret

00002e10 <__subsf3>:
    2e10:	50 58       	subi	r21, 0x80	; 128

00002e12 <__addsf3>:
    2e12:	bb 27       	eor	r27, r27
    2e14:	aa 27       	eor	r26, r26
    2e16:	0e d0       	rcall	.+28     	; 0x2e34 <__addsf3x>
    2e18:	75 c1       	rjmp	.+746    	; 0x3104 <__fp_round>
    2e1a:	66 d1       	rcall	.+716    	; 0x30e8 <__fp_pscA>
    2e1c:	30 f0       	brcs	.+12     	; 0x2e2a <__addsf3+0x18>
    2e1e:	6b d1       	rcall	.+726    	; 0x30f6 <__fp_pscB>
    2e20:	20 f0       	brcs	.+8      	; 0x2e2a <__addsf3+0x18>
    2e22:	31 f4       	brne	.+12     	; 0x2e30 <__addsf3+0x1e>
    2e24:	9f 3f       	cpi	r25, 0xFF	; 255
    2e26:	11 f4       	brne	.+4      	; 0x2e2c <__addsf3+0x1a>
    2e28:	1e f4       	brtc	.+6      	; 0x2e30 <__addsf3+0x1e>
    2e2a:	5b c1       	rjmp	.+694    	; 0x30e2 <__fp_nan>
    2e2c:	0e f4       	brtc	.+2      	; 0x2e30 <__addsf3+0x1e>
    2e2e:	e0 95       	com	r30
    2e30:	e7 fb       	bst	r30, 7
    2e32:	51 c1       	rjmp	.+674    	; 0x30d6 <__fp_inf>

00002e34 <__addsf3x>:
    2e34:	e9 2f       	mov	r30, r25
    2e36:	77 d1       	rcall	.+750    	; 0x3126 <__fp_split3>
    2e38:	80 f3       	brcs	.-32     	; 0x2e1a <__addsf3+0x8>
    2e3a:	ba 17       	cp	r27, r26
    2e3c:	62 07       	cpc	r22, r18
    2e3e:	73 07       	cpc	r23, r19
    2e40:	84 07       	cpc	r24, r20
    2e42:	95 07       	cpc	r25, r21
    2e44:	18 f0       	brcs	.+6      	; 0x2e4c <__addsf3x+0x18>
    2e46:	71 f4       	brne	.+28     	; 0x2e64 <__addsf3x+0x30>
    2e48:	9e f5       	brtc	.+102    	; 0x2eb0 <__addsf3x+0x7c>
    2e4a:	8f c1       	rjmp	.+798    	; 0x316a <__fp_zero>
    2e4c:	0e f4       	brtc	.+2      	; 0x2e50 <__addsf3x+0x1c>
    2e4e:	e0 95       	com	r30
    2e50:	0b 2e       	mov	r0, r27
    2e52:	ba 2f       	mov	r27, r26
    2e54:	a0 2d       	mov	r26, r0
    2e56:	0b 01       	movw	r0, r22
    2e58:	b9 01       	movw	r22, r18
    2e5a:	90 01       	movw	r18, r0
    2e5c:	0c 01       	movw	r0, r24
    2e5e:	ca 01       	movw	r24, r20
    2e60:	a0 01       	movw	r20, r0
    2e62:	11 24       	eor	r1, r1
    2e64:	ff 27       	eor	r31, r31
    2e66:	59 1b       	sub	r21, r25
    2e68:	99 f0       	breq	.+38     	; 0x2e90 <__addsf3x+0x5c>
    2e6a:	59 3f       	cpi	r21, 0xF9	; 249
    2e6c:	50 f4       	brcc	.+20     	; 0x2e82 <__addsf3x+0x4e>
    2e6e:	50 3e       	cpi	r21, 0xE0	; 224
    2e70:	68 f1       	brcs	.+90     	; 0x2ecc <__addsf3x+0x98>
    2e72:	1a 16       	cp	r1, r26
    2e74:	f0 40       	sbci	r31, 0x00	; 0
    2e76:	a2 2f       	mov	r26, r18
    2e78:	23 2f       	mov	r18, r19
    2e7a:	34 2f       	mov	r19, r20
    2e7c:	44 27       	eor	r20, r20
    2e7e:	58 5f       	subi	r21, 0xF8	; 248
    2e80:	f3 cf       	rjmp	.-26     	; 0x2e68 <__addsf3x+0x34>
    2e82:	46 95       	lsr	r20
    2e84:	37 95       	ror	r19
    2e86:	27 95       	ror	r18
    2e88:	a7 95       	ror	r26
    2e8a:	f0 40       	sbci	r31, 0x00	; 0
    2e8c:	53 95       	inc	r21
    2e8e:	c9 f7       	brne	.-14     	; 0x2e82 <__addsf3x+0x4e>
    2e90:	7e f4       	brtc	.+30     	; 0x2eb0 <__addsf3x+0x7c>
    2e92:	1f 16       	cp	r1, r31
    2e94:	ba 0b       	sbc	r27, r26
    2e96:	62 0b       	sbc	r22, r18
    2e98:	73 0b       	sbc	r23, r19
    2e9a:	84 0b       	sbc	r24, r20
    2e9c:	ba f0       	brmi	.+46     	; 0x2ecc <__addsf3x+0x98>
    2e9e:	91 50       	subi	r25, 0x01	; 1
    2ea0:	a1 f0       	breq	.+40     	; 0x2eca <__addsf3x+0x96>
    2ea2:	ff 0f       	add	r31, r31
    2ea4:	bb 1f       	adc	r27, r27
    2ea6:	66 1f       	adc	r22, r22
    2ea8:	77 1f       	adc	r23, r23
    2eaa:	88 1f       	adc	r24, r24
    2eac:	c2 f7       	brpl	.-16     	; 0x2e9e <__addsf3x+0x6a>
    2eae:	0e c0       	rjmp	.+28     	; 0x2ecc <__addsf3x+0x98>
    2eb0:	ba 0f       	add	r27, r26
    2eb2:	62 1f       	adc	r22, r18
    2eb4:	73 1f       	adc	r23, r19
    2eb6:	84 1f       	adc	r24, r20
    2eb8:	48 f4       	brcc	.+18     	; 0x2ecc <__addsf3x+0x98>
    2eba:	87 95       	ror	r24
    2ebc:	77 95       	ror	r23
    2ebe:	67 95       	ror	r22
    2ec0:	b7 95       	ror	r27
    2ec2:	f7 95       	ror	r31
    2ec4:	9e 3f       	cpi	r25, 0xFE	; 254
    2ec6:	08 f0       	brcs	.+2      	; 0x2eca <__addsf3x+0x96>
    2ec8:	b3 cf       	rjmp	.-154    	; 0x2e30 <__addsf3+0x1e>
    2eca:	93 95       	inc	r25
    2ecc:	88 0f       	add	r24, r24
    2ece:	08 f0       	brcs	.+2      	; 0x2ed2 <__addsf3x+0x9e>
    2ed0:	99 27       	eor	r25, r25
    2ed2:	ee 0f       	add	r30, r30
    2ed4:	97 95       	ror	r25
    2ed6:	87 95       	ror	r24
    2ed8:	08 95       	ret

00002eda <__cmpsf2>:
    2eda:	d9 d0       	rcall	.+434    	; 0x308e <__fp_cmp>
    2edc:	08 f4       	brcc	.+2      	; 0x2ee0 <__cmpsf2+0x6>
    2ede:	81 e0       	ldi	r24, 0x01	; 1
    2ee0:	08 95       	ret

00002ee2 <__divsf3>:
    2ee2:	0c d0       	rcall	.+24     	; 0x2efc <__divsf3x>
    2ee4:	0f c1       	rjmp	.+542    	; 0x3104 <__fp_round>
    2ee6:	07 d1       	rcall	.+526    	; 0x30f6 <__fp_pscB>
    2ee8:	40 f0       	brcs	.+16     	; 0x2efa <__divsf3+0x18>
    2eea:	fe d0       	rcall	.+508    	; 0x30e8 <__fp_pscA>
    2eec:	30 f0       	brcs	.+12     	; 0x2efa <__divsf3+0x18>
    2eee:	21 f4       	brne	.+8      	; 0x2ef8 <__divsf3+0x16>
    2ef0:	5f 3f       	cpi	r21, 0xFF	; 255
    2ef2:	19 f0       	breq	.+6      	; 0x2efa <__divsf3+0x18>
    2ef4:	f0 c0       	rjmp	.+480    	; 0x30d6 <__fp_inf>
    2ef6:	51 11       	cpse	r21, r1
    2ef8:	39 c1       	rjmp	.+626    	; 0x316c <__fp_szero>
    2efa:	f3 c0       	rjmp	.+486    	; 0x30e2 <__fp_nan>

00002efc <__divsf3x>:
    2efc:	14 d1       	rcall	.+552    	; 0x3126 <__fp_split3>
    2efe:	98 f3       	brcs	.-26     	; 0x2ee6 <__divsf3+0x4>

00002f00 <__divsf3_pse>:
    2f00:	99 23       	and	r25, r25
    2f02:	c9 f3       	breq	.-14     	; 0x2ef6 <__divsf3+0x14>
    2f04:	55 23       	and	r21, r21
    2f06:	b1 f3       	breq	.-20     	; 0x2ef4 <__divsf3+0x12>
    2f08:	95 1b       	sub	r25, r21
    2f0a:	55 0b       	sbc	r21, r21
    2f0c:	bb 27       	eor	r27, r27
    2f0e:	aa 27       	eor	r26, r26
    2f10:	62 17       	cp	r22, r18
    2f12:	73 07       	cpc	r23, r19
    2f14:	84 07       	cpc	r24, r20
    2f16:	38 f0       	brcs	.+14     	; 0x2f26 <__divsf3_pse+0x26>
    2f18:	9f 5f       	subi	r25, 0xFF	; 255
    2f1a:	5f 4f       	sbci	r21, 0xFF	; 255
    2f1c:	22 0f       	add	r18, r18
    2f1e:	33 1f       	adc	r19, r19
    2f20:	44 1f       	adc	r20, r20
    2f22:	aa 1f       	adc	r26, r26
    2f24:	a9 f3       	breq	.-22     	; 0x2f10 <__divsf3_pse+0x10>
    2f26:	33 d0       	rcall	.+102    	; 0x2f8e <__divsf3_pse+0x8e>
    2f28:	0e 2e       	mov	r0, r30
    2f2a:	3a f0       	brmi	.+14     	; 0x2f3a <__divsf3_pse+0x3a>
    2f2c:	e0 e8       	ldi	r30, 0x80	; 128
    2f2e:	30 d0       	rcall	.+96     	; 0x2f90 <__divsf3_pse+0x90>
    2f30:	91 50       	subi	r25, 0x01	; 1
    2f32:	50 40       	sbci	r21, 0x00	; 0
    2f34:	e6 95       	lsr	r30
    2f36:	00 1c       	adc	r0, r0
    2f38:	ca f7       	brpl	.-14     	; 0x2f2c <__divsf3_pse+0x2c>
    2f3a:	29 d0       	rcall	.+82     	; 0x2f8e <__divsf3_pse+0x8e>
    2f3c:	fe 2f       	mov	r31, r30
    2f3e:	27 d0       	rcall	.+78     	; 0x2f8e <__divsf3_pse+0x8e>
    2f40:	66 0f       	add	r22, r22
    2f42:	77 1f       	adc	r23, r23
    2f44:	88 1f       	adc	r24, r24
    2f46:	bb 1f       	adc	r27, r27
    2f48:	26 17       	cp	r18, r22
    2f4a:	37 07       	cpc	r19, r23
    2f4c:	48 07       	cpc	r20, r24
    2f4e:	ab 07       	cpc	r26, r27
    2f50:	b0 e8       	ldi	r27, 0x80	; 128
    2f52:	09 f0       	breq	.+2      	; 0x2f56 <__divsf3_pse+0x56>
    2f54:	bb 0b       	sbc	r27, r27
    2f56:	80 2d       	mov	r24, r0
    2f58:	bf 01       	movw	r22, r30
    2f5a:	ff 27       	eor	r31, r31
    2f5c:	93 58       	subi	r25, 0x83	; 131
    2f5e:	5f 4f       	sbci	r21, 0xFF	; 255
    2f60:	2a f0       	brmi	.+10     	; 0x2f6c <__divsf3_pse+0x6c>
    2f62:	9e 3f       	cpi	r25, 0xFE	; 254
    2f64:	51 05       	cpc	r21, r1
    2f66:	68 f0       	brcs	.+26     	; 0x2f82 <__divsf3_pse+0x82>
    2f68:	b6 c0       	rjmp	.+364    	; 0x30d6 <__fp_inf>
    2f6a:	00 c1       	rjmp	.+512    	; 0x316c <__fp_szero>
    2f6c:	5f 3f       	cpi	r21, 0xFF	; 255
    2f6e:	ec f3       	brlt	.-6      	; 0x2f6a <__divsf3_pse+0x6a>
    2f70:	98 3e       	cpi	r25, 0xE8	; 232
    2f72:	dc f3       	brlt	.-10     	; 0x2f6a <__divsf3_pse+0x6a>
    2f74:	86 95       	lsr	r24
    2f76:	77 95       	ror	r23
    2f78:	67 95       	ror	r22
    2f7a:	b7 95       	ror	r27
    2f7c:	f7 95       	ror	r31
    2f7e:	9f 5f       	subi	r25, 0xFF	; 255
    2f80:	c9 f7       	brne	.-14     	; 0x2f74 <__divsf3_pse+0x74>
    2f82:	88 0f       	add	r24, r24
    2f84:	91 1d       	adc	r25, r1
    2f86:	96 95       	lsr	r25
    2f88:	87 95       	ror	r24
    2f8a:	97 f9       	bld	r25, 7
    2f8c:	08 95       	ret
    2f8e:	e1 e0       	ldi	r30, 0x01	; 1
    2f90:	66 0f       	add	r22, r22
    2f92:	77 1f       	adc	r23, r23
    2f94:	88 1f       	adc	r24, r24
    2f96:	bb 1f       	adc	r27, r27
    2f98:	62 17       	cp	r22, r18
    2f9a:	73 07       	cpc	r23, r19
    2f9c:	84 07       	cpc	r24, r20
    2f9e:	ba 07       	cpc	r27, r26
    2fa0:	20 f0       	brcs	.+8      	; 0x2faa <__divsf3_pse+0xaa>
    2fa2:	62 1b       	sub	r22, r18
    2fa4:	73 0b       	sbc	r23, r19
    2fa6:	84 0b       	sbc	r24, r20
    2fa8:	ba 0b       	sbc	r27, r26
    2faa:	ee 1f       	adc	r30, r30
    2fac:	88 f7       	brcc	.-30     	; 0x2f90 <__divsf3_pse+0x90>
    2fae:	e0 95       	com	r30
    2fb0:	08 95       	ret

00002fb2 <__fixsfsi>:
    2fb2:	04 d0       	rcall	.+8      	; 0x2fbc <__fixunssfsi>
    2fb4:	68 94       	set
    2fb6:	b1 11       	cpse	r27, r1
    2fb8:	d9 c0       	rjmp	.+434    	; 0x316c <__fp_szero>
    2fba:	08 95       	ret

00002fbc <__fixunssfsi>:
    2fbc:	bc d0       	rcall	.+376    	; 0x3136 <__fp_splitA>
    2fbe:	88 f0       	brcs	.+34     	; 0x2fe2 <__fixunssfsi+0x26>
    2fc0:	9f 57       	subi	r25, 0x7F	; 127
    2fc2:	90 f0       	brcs	.+36     	; 0x2fe8 <__fixunssfsi+0x2c>
    2fc4:	b9 2f       	mov	r27, r25
    2fc6:	99 27       	eor	r25, r25
    2fc8:	b7 51       	subi	r27, 0x17	; 23
    2fca:	a0 f0       	brcs	.+40     	; 0x2ff4 <__fixunssfsi+0x38>
    2fcc:	d1 f0       	breq	.+52     	; 0x3002 <__fixunssfsi+0x46>
    2fce:	66 0f       	add	r22, r22
    2fd0:	77 1f       	adc	r23, r23
    2fd2:	88 1f       	adc	r24, r24
    2fd4:	99 1f       	adc	r25, r25
    2fd6:	1a f0       	brmi	.+6      	; 0x2fde <__fixunssfsi+0x22>
    2fd8:	ba 95       	dec	r27
    2fda:	c9 f7       	brne	.-14     	; 0x2fce <__fixunssfsi+0x12>
    2fdc:	12 c0       	rjmp	.+36     	; 0x3002 <__fixunssfsi+0x46>
    2fde:	b1 30       	cpi	r27, 0x01	; 1
    2fe0:	81 f0       	breq	.+32     	; 0x3002 <__fixunssfsi+0x46>
    2fe2:	c3 d0       	rcall	.+390    	; 0x316a <__fp_zero>
    2fe4:	b1 e0       	ldi	r27, 0x01	; 1
    2fe6:	08 95       	ret
    2fe8:	c0 c0       	rjmp	.+384    	; 0x316a <__fp_zero>
    2fea:	67 2f       	mov	r22, r23
    2fec:	78 2f       	mov	r23, r24
    2fee:	88 27       	eor	r24, r24
    2ff0:	b8 5f       	subi	r27, 0xF8	; 248
    2ff2:	39 f0       	breq	.+14     	; 0x3002 <__fixunssfsi+0x46>
    2ff4:	b9 3f       	cpi	r27, 0xF9	; 249
    2ff6:	cc f3       	brlt	.-14     	; 0x2fea <__fixunssfsi+0x2e>
    2ff8:	86 95       	lsr	r24
    2ffa:	77 95       	ror	r23
    2ffc:	67 95       	ror	r22
    2ffe:	b3 95       	inc	r27
    3000:	d9 f7       	brne	.-10     	; 0x2ff8 <__fixunssfsi+0x3c>
    3002:	3e f4       	brtc	.+14     	; 0x3012 <__fixunssfsi+0x56>
    3004:	90 95       	com	r25
    3006:	80 95       	com	r24
    3008:	70 95       	com	r23
    300a:	61 95       	neg	r22
    300c:	7f 4f       	sbci	r23, 0xFF	; 255
    300e:	8f 4f       	sbci	r24, 0xFF	; 255
    3010:	9f 4f       	sbci	r25, 0xFF	; 255
    3012:	08 95       	ret

00003014 <__floatunsisf>:
    3014:	e8 94       	clt
    3016:	09 c0       	rjmp	.+18     	; 0x302a <__floatsisf+0x12>

00003018 <__floatsisf>:
    3018:	97 fb       	bst	r25, 7
    301a:	3e f4       	brtc	.+14     	; 0x302a <__floatsisf+0x12>
    301c:	90 95       	com	r25
    301e:	80 95       	com	r24
    3020:	70 95       	com	r23
    3022:	61 95       	neg	r22
    3024:	7f 4f       	sbci	r23, 0xFF	; 255
    3026:	8f 4f       	sbci	r24, 0xFF	; 255
    3028:	9f 4f       	sbci	r25, 0xFF	; 255
    302a:	99 23       	and	r25, r25
    302c:	a9 f0       	breq	.+42     	; 0x3058 <__floatsisf+0x40>
    302e:	f9 2f       	mov	r31, r25
    3030:	96 e9       	ldi	r25, 0x96	; 150
    3032:	bb 27       	eor	r27, r27
    3034:	93 95       	inc	r25
    3036:	f6 95       	lsr	r31
    3038:	87 95       	ror	r24
    303a:	77 95       	ror	r23
    303c:	67 95       	ror	r22
    303e:	b7 95       	ror	r27
    3040:	f1 11       	cpse	r31, r1
    3042:	f8 cf       	rjmp	.-16     	; 0x3034 <__floatsisf+0x1c>
    3044:	fa f4       	brpl	.+62     	; 0x3084 <__floatsisf+0x6c>
    3046:	bb 0f       	add	r27, r27
    3048:	11 f4       	brne	.+4      	; 0x304e <__floatsisf+0x36>
    304a:	60 ff       	sbrs	r22, 0
    304c:	1b c0       	rjmp	.+54     	; 0x3084 <__floatsisf+0x6c>
    304e:	6f 5f       	subi	r22, 0xFF	; 255
    3050:	7f 4f       	sbci	r23, 0xFF	; 255
    3052:	8f 4f       	sbci	r24, 0xFF	; 255
    3054:	9f 4f       	sbci	r25, 0xFF	; 255
    3056:	16 c0       	rjmp	.+44     	; 0x3084 <__floatsisf+0x6c>
    3058:	88 23       	and	r24, r24
    305a:	11 f0       	breq	.+4      	; 0x3060 <__floatsisf+0x48>
    305c:	96 e9       	ldi	r25, 0x96	; 150
    305e:	11 c0       	rjmp	.+34     	; 0x3082 <__floatsisf+0x6a>
    3060:	77 23       	and	r23, r23
    3062:	21 f0       	breq	.+8      	; 0x306c <__floatsisf+0x54>
    3064:	9e e8       	ldi	r25, 0x8E	; 142
    3066:	87 2f       	mov	r24, r23
    3068:	76 2f       	mov	r23, r22
    306a:	05 c0       	rjmp	.+10     	; 0x3076 <__floatsisf+0x5e>
    306c:	66 23       	and	r22, r22
    306e:	71 f0       	breq	.+28     	; 0x308c <__floatsisf+0x74>
    3070:	96 e8       	ldi	r25, 0x86	; 134
    3072:	86 2f       	mov	r24, r22
    3074:	70 e0       	ldi	r23, 0x00	; 0
    3076:	60 e0       	ldi	r22, 0x00	; 0
    3078:	2a f0       	brmi	.+10     	; 0x3084 <__floatsisf+0x6c>
    307a:	9a 95       	dec	r25
    307c:	66 0f       	add	r22, r22
    307e:	77 1f       	adc	r23, r23
    3080:	88 1f       	adc	r24, r24
    3082:	da f7       	brpl	.-10     	; 0x307a <__floatsisf+0x62>
    3084:	88 0f       	add	r24, r24
    3086:	96 95       	lsr	r25
    3088:	87 95       	ror	r24
    308a:	97 f9       	bld	r25, 7
    308c:	08 95       	ret

0000308e <__fp_cmp>:
    308e:	99 0f       	add	r25, r25
    3090:	00 08       	sbc	r0, r0
    3092:	55 0f       	add	r21, r21
    3094:	aa 0b       	sbc	r26, r26
    3096:	e0 e8       	ldi	r30, 0x80	; 128
    3098:	fe ef       	ldi	r31, 0xFE	; 254
    309a:	16 16       	cp	r1, r22
    309c:	17 06       	cpc	r1, r23
    309e:	e8 07       	cpc	r30, r24
    30a0:	f9 07       	cpc	r31, r25
    30a2:	c0 f0       	brcs	.+48     	; 0x30d4 <__fp_cmp+0x46>
    30a4:	12 16       	cp	r1, r18
    30a6:	13 06       	cpc	r1, r19
    30a8:	e4 07       	cpc	r30, r20
    30aa:	f5 07       	cpc	r31, r21
    30ac:	98 f0       	brcs	.+38     	; 0x30d4 <__fp_cmp+0x46>
    30ae:	62 1b       	sub	r22, r18
    30b0:	73 0b       	sbc	r23, r19
    30b2:	84 0b       	sbc	r24, r20
    30b4:	95 0b       	sbc	r25, r21
    30b6:	39 f4       	brne	.+14     	; 0x30c6 <__fp_cmp+0x38>
    30b8:	0a 26       	eor	r0, r26
    30ba:	61 f0       	breq	.+24     	; 0x30d4 <__fp_cmp+0x46>
    30bc:	23 2b       	or	r18, r19
    30be:	24 2b       	or	r18, r20
    30c0:	25 2b       	or	r18, r21
    30c2:	21 f4       	brne	.+8      	; 0x30cc <__fp_cmp+0x3e>
    30c4:	08 95       	ret
    30c6:	0a 26       	eor	r0, r26
    30c8:	09 f4       	brne	.+2      	; 0x30cc <__fp_cmp+0x3e>
    30ca:	a1 40       	sbci	r26, 0x01	; 1
    30cc:	a6 95       	lsr	r26
    30ce:	8f ef       	ldi	r24, 0xFF	; 255
    30d0:	81 1d       	adc	r24, r1
    30d2:	81 1d       	adc	r24, r1
    30d4:	08 95       	ret

000030d6 <__fp_inf>:
    30d6:	97 f9       	bld	r25, 7
    30d8:	9f 67       	ori	r25, 0x7F	; 127
    30da:	80 e8       	ldi	r24, 0x80	; 128
    30dc:	70 e0       	ldi	r23, 0x00	; 0
    30de:	60 e0       	ldi	r22, 0x00	; 0
    30e0:	08 95       	ret

000030e2 <__fp_nan>:
    30e2:	9f ef       	ldi	r25, 0xFF	; 255
    30e4:	80 ec       	ldi	r24, 0xC0	; 192
    30e6:	08 95       	ret

000030e8 <__fp_pscA>:
    30e8:	00 24       	eor	r0, r0
    30ea:	0a 94       	dec	r0
    30ec:	16 16       	cp	r1, r22
    30ee:	17 06       	cpc	r1, r23
    30f0:	18 06       	cpc	r1, r24
    30f2:	09 06       	cpc	r0, r25
    30f4:	08 95       	ret

000030f6 <__fp_pscB>:
    30f6:	00 24       	eor	r0, r0
    30f8:	0a 94       	dec	r0
    30fa:	12 16       	cp	r1, r18
    30fc:	13 06       	cpc	r1, r19
    30fe:	14 06       	cpc	r1, r20
    3100:	05 06       	cpc	r0, r21
    3102:	08 95       	ret

00003104 <__fp_round>:
    3104:	09 2e       	mov	r0, r25
    3106:	03 94       	inc	r0
    3108:	00 0c       	add	r0, r0
    310a:	11 f4       	brne	.+4      	; 0x3110 <__fp_round+0xc>
    310c:	88 23       	and	r24, r24
    310e:	52 f0       	brmi	.+20     	; 0x3124 <__fp_round+0x20>
    3110:	bb 0f       	add	r27, r27
    3112:	40 f4       	brcc	.+16     	; 0x3124 <__fp_round+0x20>
    3114:	bf 2b       	or	r27, r31
    3116:	11 f4       	brne	.+4      	; 0x311c <__fp_round+0x18>
    3118:	60 ff       	sbrs	r22, 0
    311a:	04 c0       	rjmp	.+8      	; 0x3124 <__fp_round+0x20>
    311c:	6f 5f       	subi	r22, 0xFF	; 255
    311e:	7f 4f       	sbci	r23, 0xFF	; 255
    3120:	8f 4f       	sbci	r24, 0xFF	; 255
    3122:	9f 4f       	sbci	r25, 0xFF	; 255
    3124:	08 95       	ret

00003126 <__fp_split3>:
    3126:	57 fd       	sbrc	r21, 7
    3128:	90 58       	subi	r25, 0x80	; 128
    312a:	44 0f       	add	r20, r20
    312c:	55 1f       	adc	r21, r21
    312e:	59 f0       	breq	.+22     	; 0x3146 <__fp_splitA+0x10>
    3130:	5f 3f       	cpi	r21, 0xFF	; 255
    3132:	71 f0       	breq	.+28     	; 0x3150 <__fp_splitA+0x1a>
    3134:	47 95       	ror	r20

00003136 <__fp_splitA>:
    3136:	88 0f       	add	r24, r24
    3138:	97 fb       	bst	r25, 7
    313a:	99 1f       	adc	r25, r25
    313c:	61 f0       	breq	.+24     	; 0x3156 <__fp_splitA+0x20>
    313e:	9f 3f       	cpi	r25, 0xFF	; 255
    3140:	79 f0       	breq	.+30     	; 0x3160 <__fp_splitA+0x2a>
    3142:	87 95       	ror	r24
    3144:	08 95       	ret
    3146:	12 16       	cp	r1, r18
    3148:	13 06       	cpc	r1, r19
    314a:	14 06       	cpc	r1, r20
    314c:	55 1f       	adc	r21, r21
    314e:	f2 cf       	rjmp	.-28     	; 0x3134 <__fp_split3+0xe>
    3150:	46 95       	lsr	r20
    3152:	f1 df       	rcall	.-30     	; 0x3136 <__fp_splitA>
    3154:	08 c0       	rjmp	.+16     	; 0x3166 <__fp_splitA+0x30>
    3156:	16 16       	cp	r1, r22
    3158:	17 06       	cpc	r1, r23
    315a:	18 06       	cpc	r1, r24
    315c:	99 1f       	adc	r25, r25
    315e:	f1 cf       	rjmp	.-30     	; 0x3142 <__fp_splitA+0xc>
    3160:	86 95       	lsr	r24
    3162:	71 05       	cpc	r23, r1
    3164:	61 05       	cpc	r22, r1
    3166:	08 94       	sec
    3168:	08 95       	ret

0000316a <__fp_zero>:
    316a:	e8 94       	clt

0000316c <__fp_szero>:
    316c:	bb 27       	eor	r27, r27
    316e:	66 27       	eor	r22, r22
    3170:	77 27       	eor	r23, r23
    3172:	cb 01       	movw	r24, r22
    3174:	97 f9       	bld	r25, 7
    3176:	08 95       	ret

00003178 <__gesf2>:
    3178:	8a df       	rcall	.-236    	; 0x308e <__fp_cmp>
    317a:	08 f4       	brcc	.+2      	; 0x317e <__gesf2+0x6>
    317c:	8f ef       	ldi	r24, 0xFF	; 255
    317e:	08 95       	ret
    3180:	0e f0       	brts	.+2      	; 0x3184 <__gesf2+0xc>
    3182:	a6 c0       	rjmp	.+332    	; 0x32d0 <__fp_mpack>
    3184:	ae cf       	rjmp	.-164    	; 0x30e2 <__fp_nan>
    3186:	68 94       	set
    3188:	a6 cf       	rjmp	.-180    	; 0x30d6 <__fp_inf>

0000318a <log>:
    318a:	d5 df       	rcall	.-86     	; 0x3136 <__fp_splitA>
    318c:	c8 f3       	brcs	.-14     	; 0x3180 <__gesf2+0x8>
    318e:	99 23       	and	r25, r25
    3190:	d1 f3       	breq	.-12     	; 0x3186 <__gesf2+0xe>
    3192:	c6 f3       	brts	.-16     	; 0x3184 <__gesf2+0xc>
    3194:	df 93       	push	r29
    3196:	cf 93       	push	r28
    3198:	1f 93       	push	r17
    319a:	0f 93       	push	r16
    319c:	ff 92       	push	r15
    319e:	c9 2f       	mov	r28, r25
    31a0:	dd 27       	eor	r29, r29
    31a2:	88 23       	and	r24, r24
    31a4:	2a f0       	brmi	.+10     	; 0x31b0 <log+0x26>
    31a6:	21 97       	sbiw	r28, 0x01	; 1
    31a8:	66 0f       	add	r22, r22
    31aa:	77 1f       	adc	r23, r23
    31ac:	88 1f       	adc	r24, r24
    31ae:	da f7       	brpl	.-10     	; 0x31a6 <log+0x1c>
    31b0:	20 e0       	ldi	r18, 0x00	; 0
    31b2:	30 e0       	ldi	r19, 0x00	; 0
    31b4:	40 e8       	ldi	r20, 0x80	; 128
    31b6:	5f eb       	ldi	r21, 0xBF	; 191
    31b8:	9f e3       	ldi	r25, 0x3F	; 63
    31ba:	88 39       	cpi	r24, 0x98	; 152
    31bc:	20 f0       	brcs	.+8      	; 0x31c6 <log+0x3c>
    31be:	80 3e       	cpi	r24, 0xE0	; 224
    31c0:	30 f0       	brcs	.+12     	; 0x31ce <log+0x44>
    31c2:	21 96       	adiw	r28, 0x01	; 1
    31c4:	8f 77       	andi	r24, 0x7F	; 127
    31c6:	25 de       	rcall	.-950    	; 0x2e12 <__addsf3>
    31c8:	ec ea       	ldi	r30, 0xAC	; 172
    31ca:	f0 e0       	ldi	r31, 0x00	; 0
    31cc:	03 c0       	rjmp	.+6      	; 0x31d4 <log+0x4a>
    31ce:	21 de       	rcall	.-958    	; 0x2e12 <__addsf3>
    31d0:	e9 ed       	ldi	r30, 0xD9	; 217
    31d2:	f0 e0       	ldi	r31, 0x00	; 0
    31d4:	8b d0       	rcall	.+278    	; 0x32ec <__fp_powser>
    31d6:	8b 01       	movw	r16, r22
    31d8:	be 01       	movw	r22, r28
    31da:	ec 01       	movw	r28, r24
    31dc:	fb 2e       	mov	r15, r27
    31de:	6f 57       	subi	r22, 0x7F	; 127
    31e0:	71 09       	sbc	r23, r1
    31e2:	75 95       	asr	r23
    31e4:	77 1f       	adc	r23, r23
    31e6:	88 0b       	sbc	r24, r24
    31e8:	99 0b       	sbc	r25, r25
    31ea:	16 df       	rcall	.-468    	; 0x3018 <__floatsisf>
    31ec:	28 e1       	ldi	r18, 0x18	; 24
    31ee:	32 e7       	ldi	r19, 0x72	; 114
    31f0:	41 e3       	ldi	r20, 0x31	; 49
    31f2:	5f e3       	ldi	r21, 0x3F	; 63
    31f4:	16 d0       	rcall	.+44     	; 0x3222 <__mulsf3x>
    31f6:	af 2d       	mov	r26, r15
    31f8:	98 01       	movw	r18, r16
    31fa:	ae 01       	movw	r20, r28
    31fc:	ff 90       	pop	r15
    31fe:	0f 91       	pop	r16
    3200:	1f 91       	pop	r17
    3202:	cf 91       	pop	r28
    3204:	df 91       	pop	r29
    3206:	16 de       	rcall	.-980    	; 0x2e34 <__addsf3x>
    3208:	7d cf       	rjmp	.-262    	; 0x3104 <__fp_round>

0000320a <__mulsf3>:
    320a:	0b d0       	rcall	.+22     	; 0x3222 <__mulsf3x>
    320c:	7b cf       	rjmp	.-266    	; 0x3104 <__fp_round>
    320e:	6c df       	rcall	.-296    	; 0x30e8 <__fp_pscA>
    3210:	28 f0       	brcs	.+10     	; 0x321c <__mulsf3+0x12>
    3212:	71 df       	rcall	.-286    	; 0x30f6 <__fp_pscB>
    3214:	18 f0       	brcs	.+6      	; 0x321c <__mulsf3+0x12>
    3216:	95 23       	and	r25, r21
    3218:	09 f0       	breq	.+2      	; 0x321c <__mulsf3+0x12>
    321a:	5d cf       	rjmp	.-326    	; 0x30d6 <__fp_inf>
    321c:	62 cf       	rjmp	.-316    	; 0x30e2 <__fp_nan>
    321e:	11 24       	eor	r1, r1
    3220:	a5 cf       	rjmp	.-182    	; 0x316c <__fp_szero>

00003222 <__mulsf3x>:
    3222:	81 df       	rcall	.-254    	; 0x3126 <__fp_split3>
    3224:	a0 f3       	brcs	.-24     	; 0x320e <__mulsf3+0x4>

00003226 <__mulsf3_pse>:
    3226:	95 9f       	mul	r25, r21
    3228:	d1 f3       	breq	.-12     	; 0x321e <__mulsf3+0x14>
    322a:	95 0f       	add	r25, r21
    322c:	50 e0       	ldi	r21, 0x00	; 0
    322e:	55 1f       	adc	r21, r21
    3230:	62 9f       	mul	r22, r18
    3232:	f0 01       	movw	r30, r0
    3234:	72 9f       	mul	r23, r18
    3236:	bb 27       	eor	r27, r27
    3238:	f0 0d       	add	r31, r0
    323a:	b1 1d       	adc	r27, r1
    323c:	63 9f       	mul	r22, r19
    323e:	aa 27       	eor	r26, r26
    3240:	f0 0d       	add	r31, r0
    3242:	b1 1d       	adc	r27, r1
    3244:	aa 1f       	adc	r26, r26
    3246:	64 9f       	mul	r22, r20
    3248:	66 27       	eor	r22, r22
    324a:	b0 0d       	add	r27, r0
    324c:	a1 1d       	adc	r26, r1
    324e:	66 1f       	adc	r22, r22
    3250:	82 9f       	mul	r24, r18
    3252:	22 27       	eor	r18, r18
    3254:	b0 0d       	add	r27, r0
    3256:	a1 1d       	adc	r26, r1
    3258:	62 1f       	adc	r22, r18
    325a:	73 9f       	mul	r23, r19
    325c:	b0 0d       	add	r27, r0
    325e:	a1 1d       	adc	r26, r1
    3260:	62 1f       	adc	r22, r18
    3262:	83 9f       	mul	r24, r19
    3264:	a0 0d       	add	r26, r0
    3266:	61 1d       	adc	r22, r1
    3268:	22 1f       	adc	r18, r18
    326a:	74 9f       	mul	r23, r20
    326c:	33 27       	eor	r19, r19
    326e:	a0 0d       	add	r26, r0
    3270:	61 1d       	adc	r22, r1
    3272:	23 1f       	adc	r18, r19
    3274:	84 9f       	mul	r24, r20
    3276:	60 0d       	add	r22, r0
    3278:	21 1d       	adc	r18, r1
    327a:	82 2f       	mov	r24, r18
    327c:	76 2f       	mov	r23, r22
    327e:	6a 2f       	mov	r22, r26
    3280:	11 24       	eor	r1, r1
    3282:	9f 57       	subi	r25, 0x7F	; 127
    3284:	50 40       	sbci	r21, 0x00	; 0
    3286:	8a f0       	brmi	.+34     	; 0x32aa <__mulsf3_pse+0x84>
    3288:	e1 f0       	breq	.+56     	; 0x32c2 <__mulsf3_pse+0x9c>
    328a:	88 23       	and	r24, r24
    328c:	4a f0       	brmi	.+18     	; 0x32a0 <__mulsf3_pse+0x7a>
    328e:	ee 0f       	add	r30, r30
    3290:	ff 1f       	adc	r31, r31
    3292:	bb 1f       	adc	r27, r27
    3294:	66 1f       	adc	r22, r22
    3296:	77 1f       	adc	r23, r23
    3298:	88 1f       	adc	r24, r24
    329a:	91 50       	subi	r25, 0x01	; 1
    329c:	50 40       	sbci	r21, 0x00	; 0
    329e:	a9 f7       	brne	.-22     	; 0x328a <__mulsf3_pse+0x64>
    32a0:	9e 3f       	cpi	r25, 0xFE	; 254
    32a2:	51 05       	cpc	r21, r1
    32a4:	70 f0       	brcs	.+28     	; 0x32c2 <__mulsf3_pse+0x9c>
    32a6:	17 cf       	rjmp	.-466    	; 0x30d6 <__fp_inf>
    32a8:	61 cf       	rjmp	.-318    	; 0x316c <__fp_szero>
    32aa:	5f 3f       	cpi	r21, 0xFF	; 255
    32ac:	ec f3       	brlt	.-6      	; 0x32a8 <__mulsf3_pse+0x82>
    32ae:	98 3e       	cpi	r25, 0xE8	; 232
    32b0:	dc f3       	brlt	.-10     	; 0x32a8 <__mulsf3_pse+0x82>
    32b2:	86 95       	lsr	r24
    32b4:	77 95       	ror	r23
    32b6:	67 95       	ror	r22
    32b8:	b7 95       	ror	r27
    32ba:	f7 95       	ror	r31
    32bc:	e7 95       	ror	r30
    32be:	9f 5f       	subi	r25, 0xFF	; 255
    32c0:	c1 f7       	brne	.-16     	; 0x32b2 <__mulsf3_pse+0x8c>
    32c2:	fe 2b       	or	r31, r30
    32c4:	88 0f       	add	r24, r24
    32c6:	91 1d       	adc	r25, r1
    32c8:	96 95       	lsr	r25
    32ca:	87 95       	ror	r24
    32cc:	97 f9       	bld	r25, 7
    32ce:	08 95       	ret

000032d0 <__fp_mpack>:
    32d0:	9f 3f       	cpi	r25, 0xFF	; 255
    32d2:	31 f0       	breq	.+12     	; 0x32e0 <__fp_mpack_finite+0xc>

000032d4 <__fp_mpack_finite>:
    32d4:	91 50       	subi	r25, 0x01	; 1
    32d6:	20 f4       	brcc	.+8      	; 0x32e0 <__fp_mpack_finite+0xc>
    32d8:	87 95       	ror	r24
    32da:	77 95       	ror	r23
    32dc:	67 95       	ror	r22
    32de:	b7 95       	ror	r27
    32e0:	88 0f       	add	r24, r24
    32e2:	91 1d       	adc	r25, r1
    32e4:	96 95       	lsr	r25
    32e6:	87 95       	ror	r24
    32e8:	97 f9       	bld	r25, 7
    32ea:	08 95       	ret

000032ec <__fp_powser>:
    32ec:	df 93       	push	r29
    32ee:	cf 93       	push	r28
    32f0:	1f 93       	push	r17
    32f2:	0f 93       	push	r16
    32f4:	ff 92       	push	r15
    32f6:	ef 92       	push	r14
    32f8:	df 92       	push	r13
    32fa:	7b 01       	movw	r14, r22
    32fc:	8c 01       	movw	r16, r24
    32fe:	68 94       	set
    3300:	05 c0       	rjmp	.+10     	; 0x330c <__fp_powser+0x20>
    3302:	da 2e       	mov	r13, r26
    3304:	ef 01       	movw	r28, r30
    3306:	8d df       	rcall	.-230    	; 0x3222 <__mulsf3x>
    3308:	fe 01       	movw	r30, r28
    330a:	e8 94       	clt
    330c:	a5 91       	lpm	r26, Z+
    330e:	25 91       	lpm	r18, Z+
    3310:	35 91       	lpm	r19, Z+
    3312:	45 91       	lpm	r20, Z+
    3314:	55 91       	lpm	r21, Z+
    3316:	ae f3       	brts	.-22     	; 0x3302 <__fp_powser+0x16>
    3318:	ef 01       	movw	r28, r30
    331a:	8c dd       	rcall	.-1256   	; 0x2e34 <__addsf3x>
    331c:	fe 01       	movw	r30, r28
    331e:	97 01       	movw	r18, r14
    3320:	a8 01       	movw	r20, r16
    3322:	da 94       	dec	r13
    3324:	79 f7       	brne	.-34     	; 0x3304 <__fp_powser+0x18>
    3326:	df 90       	pop	r13
    3328:	ef 90       	pop	r14
    332a:	ff 90       	pop	r15
    332c:	0f 91       	pop	r16
    332e:	1f 91       	pop	r17
    3330:	cf 91       	pop	r28
    3332:	df 91       	pop	r29
    3334:	08 95       	ret

00003336 <vfprintf>:
    3336:	a0 e1       	ldi	r26, 0x10	; 16
    3338:	b0 e0       	ldi	r27, 0x00	; 0
    333a:	e0 ea       	ldi	r30, 0xA0	; 160
    333c:	f9 e1       	ldi	r31, 0x19	; 25
    333e:	37 c7       	rjmp	.+3694   	; 0x41ae <__prologue_saves__>
    3340:	7c 01       	movw	r14, r24
    3342:	1b 01       	movw	r2, r22
    3344:	6a 01       	movw	r12, r20
    3346:	fc 01       	movw	r30, r24
    3348:	17 82       	std	Z+7, r1	; 0x07
    334a:	16 82       	std	Z+6, r1	; 0x06
    334c:	83 81       	ldd	r24, Z+3	; 0x03
    334e:	81 ff       	sbrs	r24, 1
    3350:	2b c3       	rjmp	.+1622   	; 0x39a8 <vfprintf+0x672>
    3352:	9e 01       	movw	r18, r28
    3354:	2f 5f       	subi	r18, 0xFF	; 255
    3356:	3f 4f       	sbci	r19, 0xFF	; 255
    3358:	39 01       	movw	r6, r18
    335a:	f7 01       	movw	r30, r14
    335c:	93 81       	ldd	r25, Z+3	; 0x03
    335e:	f1 01       	movw	r30, r2
    3360:	93 fd       	sbrc	r25, 3
    3362:	85 91       	lpm	r24, Z+
    3364:	93 ff       	sbrs	r25, 3
    3366:	81 91       	ld	r24, Z+
    3368:	1f 01       	movw	r2, r30
    336a:	88 23       	and	r24, r24
    336c:	09 f4       	brne	.+2      	; 0x3370 <vfprintf+0x3a>
    336e:	18 c3       	rjmp	.+1584   	; 0x39a0 <vfprintf+0x66a>
    3370:	85 32       	cpi	r24, 0x25	; 37
    3372:	39 f4       	brne	.+14     	; 0x3382 <vfprintf+0x4c>
    3374:	93 fd       	sbrc	r25, 3
    3376:	85 91       	lpm	r24, Z+
    3378:	93 ff       	sbrs	r25, 3
    337a:	81 91       	ld	r24, Z+
    337c:	1f 01       	movw	r2, r30
    337e:	85 32       	cpi	r24, 0x25	; 37
    3380:	39 f4       	brne	.+14     	; 0x3390 <vfprintf+0x5a>
    3382:	b7 01       	movw	r22, r14
    3384:	90 e0       	ldi	r25, 0x00	; 0
    3386:	0e 94 63 22 	call	0x44c6	; 0x44c6 <fputc>
    338a:	56 01       	movw	r10, r12
    338c:	65 01       	movw	r12, r10
    338e:	e5 cf       	rjmp	.-54     	; 0x335a <vfprintf+0x24>
    3390:	10 e0       	ldi	r17, 0x00	; 0
    3392:	51 2c       	mov	r5, r1
    3394:	91 2c       	mov	r9, r1
    3396:	ff e1       	ldi	r31, 0x1F	; 31
    3398:	f9 15       	cp	r31, r9
    339a:	d8 f0       	brcs	.+54     	; 0x33d2 <vfprintf+0x9c>
    339c:	8b 32       	cpi	r24, 0x2B	; 43
    339e:	79 f0       	breq	.+30     	; 0x33be <vfprintf+0x88>
    33a0:	38 f4       	brcc	.+14     	; 0x33b0 <vfprintf+0x7a>
    33a2:	80 32       	cpi	r24, 0x20	; 32
    33a4:	79 f0       	breq	.+30     	; 0x33c4 <vfprintf+0x8e>
    33a6:	83 32       	cpi	r24, 0x23	; 35
    33a8:	a1 f4       	brne	.+40     	; 0x33d2 <vfprintf+0x9c>
    33aa:	f9 2d       	mov	r31, r9
    33ac:	f0 61       	ori	r31, 0x10	; 16
    33ae:	2e c0       	rjmp	.+92     	; 0x340c <vfprintf+0xd6>
    33b0:	8d 32       	cpi	r24, 0x2D	; 45
    33b2:	61 f0       	breq	.+24     	; 0x33cc <vfprintf+0x96>
    33b4:	80 33       	cpi	r24, 0x30	; 48
    33b6:	69 f4       	brne	.+26     	; 0x33d2 <vfprintf+0x9c>
    33b8:	29 2d       	mov	r18, r9
    33ba:	21 60       	ori	r18, 0x01	; 1
    33bc:	2d c0       	rjmp	.+90     	; 0x3418 <vfprintf+0xe2>
    33be:	39 2d       	mov	r19, r9
    33c0:	32 60       	ori	r19, 0x02	; 2
    33c2:	93 2e       	mov	r9, r19
    33c4:	89 2d       	mov	r24, r9
    33c6:	84 60       	ori	r24, 0x04	; 4
    33c8:	98 2e       	mov	r9, r24
    33ca:	2a c0       	rjmp	.+84     	; 0x3420 <vfprintf+0xea>
    33cc:	e9 2d       	mov	r30, r9
    33ce:	e8 60       	ori	r30, 0x08	; 8
    33d0:	15 c0       	rjmp	.+42     	; 0x33fc <vfprintf+0xc6>
    33d2:	97 fc       	sbrc	r9, 7
    33d4:	2d c0       	rjmp	.+90     	; 0x3430 <vfprintf+0xfa>
    33d6:	20 ed       	ldi	r18, 0xD0	; 208
    33d8:	28 0f       	add	r18, r24
    33da:	2a 30       	cpi	r18, 0x0A	; 10
    33dc:	88 f4       	brcc	.+34     	; 0x3400 <vfprintf+0xca>
    33de:	96 fe       	sbrs	r9, 6
    33e0:	06 c0       	rjmp	.+12     	; 0x33ee <vfprintf+0xb8>
    33e2:	3a e0       	ldi	r19, 0x0A	; 10
    33e4:	13 9f       	mul	r17, r19
    33e6:	20 0d       	add	r18, r0
    33e8:	11 24       	eor	r1, r1
    33ea:	12 2f       	mov	r17, r18
    33ec:	19 c0       	rjmp	.+50     	; 0x3420 <vfprintf+0xea>
    33ee:	8a e0       	ldi	r24, 0x0A	; 10
    33f0:	58 9e       	mul	r5, r24
    33f2:	20 0d       	add	r18, r0
    33f4:	11 24       	eor	r1, r1
    33f6:	52 2e       	mov	r5, r18
    33f8:	e9 2d       	mov	r30, r9
    33fa:	e0 62       	ori	r30, 0x20	; 32
    33fc:	9e 2e       	mov	r9, r30
    33fe:	10 c0       	rjmp	.+32     	; 0x3420 <vfprintf+0xea>
    3400:	8e 32       	cpi	r24, 0x2E	; 46
    3402:	31 f4       	brne	.+12     	; 0x3410 <vfprintf+0xda>
    3404:	96 fc       	sbrc	r9, 6
    3406:	cc c2       	rjmp	.+1432   	; 0x39a0 <vfprintf+0x66a>
    3408:	f9 2d       	mov	r31, r9
    340a:	f0 64       	ori	r31, 0x40	; 64
    340c:	9f 2e       	mov	r9, r31
    340e:	08 c0       	rjmp	.+16     	; 0x3420 <vfprintf+0xea>
    3410:	8c 36       	cpi	r24, 0x6C	; 108
    3412:	21 f4       	brne	.+8      	; 0x341c <vfprintf+0xe6>
    3414:	29 2d       	mov	r18, r9
    3416:	20 68       	ori	r18, 0x80	; 128
    3418:	92 2e       	mov	r9, r18
    341a:	02 c0       	rjmp	.+4      	; 0x3420 <vfprintf+0xea>
    341c:	88 36       	cpi	r24, 0x68	; 104
    341e:	41 f4       	brne	.+16     	; 0x3430 <vfprintf+0xfa>
    3420:	f1 01       	movw	r30, r2
    3422:	93 fd       	sbrc	r25, 3
    3424:	85 91       	lpm	r24, Z+
    3426:	93 ff       	sbrs	r25, 3
    3428:	81 91       	ld	r24, Z+
    342a:	1f 01       	movw	r2, r30
    342c:	81 11       	cpse	r24, r1
    342e:	b3 cf       	rjmp	.-154    	; 0x3396 <vfprintf+0x60>
    3430:	9b eb       	ldi	r25, 0xBB	; 187
    3432:	98 0f       	add	r25, r24
    3434:	93 30       	cpi	r25, 0x03	; 3
    3436:	20 f4       	brcc	.+8      	; 0x3440 <vfprintf+0x10a>
    3438:	99 2d       	mov	r25, r9
    343a:	90 61       	ori	r25, 0x10	; 16
    343c:	80 5e       	subi	r24, 0xE0	; 224
    343e:	07 c0       	rjmp	.+14     	; 0x344e <vfprintf+0x118>
    3440:	9b e9       	ldi	r25, 0x9B	; 155
    3442:	98 0f       	add	r25, r24
    3444:	93 30       	cpi	r25, 0x03	; 3
    3446:	08 f0       	brcs	.+2      	; 0x344a <vfprintf+0x114>
    3448:	59 c1       	rjmp	.+690    	; 0x36fc <vfprintf+0x3c6>
    344a:	99 2d       	mov	r25, r9
    344c:	9f 7e       	andi	r25, 0xEF	; 239
    344e:	96 ff       	sbrs	r25, 6
    3450:	16 e0       	ldi	r17, 0x06	; 6
    3452:	9f 73       	andi	r25, 0x3F	; 63
    3454:	99 2e       	mov	r9, r25
    3456:	85 36       	cpi	r24, 0x65	; 101
    3458:	19 f4       	brne	.+6      	; 0x3460 <vfprintf+0x12a>
    345a:	90 64       	ori	r25, 0x40	; 64
    345c:	99 2e       	mov	r9, r25
    345e:	08 c0       	rjmp	.+16     	; 0x3470 <vfprintf+0x13a>
    3460:	86 36       	cpi	r24, 0x66	; 102
    3462:	21 f4       	brne	.+8      	; 0x346c <vfprintf+0x136>
    3464:	39 2f       	mov	r19, r25
    3466:	30 68       	ori	r19, 0x80	; 128
    3468:	93 2e       	mov	r9, r19
    346a:	02 c0       	rjmp	.+4      	; 0x3470 <vfprintf+0x13a>
    346c:	11 11       	cpse	r17, r1
    346e:	11 50       	subi	r17, 0x01	; 1
    3470:	97 fe       	sbrs	r9, 7
    3472:	07 c0       	rjmp	.+14     	; 0x3482 <vfprintf+0x14c>
    3474:	1c 33       	cpi	r17, 0x3C	; 60
    3476:	50 f4       	brcc	.+20     	; 0x348c <vfprintf+0x156>
    3478:	44 24       	eor	r4, r4
    347a:	43 94       	inc	r4
    347c:	41 0e       	add	r4, r17
    347e:	27 e0       	ldi	r18, 0x07	; 7
    3480:	0b c0       	rjmp	.+22     	; 0x3498 <vfprintf+0x162>
    3482:	18 30       	cpi	r17, 0x08	; 8
    3484:	38 f0       	brcs	.+14     	; 0x3494 <vfprintf+0x15e>
    3486:	27 e0       	ldi	r18, 0x07	; 7
    3488:	17 e0       	ldi	r17, 0x07	; 7
    348a:	05 c0       	rjmp	.+10     	; 0x3496 <vfprintf+0x160>
    348c:	27 e0       	ldi	r18, 0x07	; 7
    348e:	9c e3       	ldi	r25, 0x3C	; 60
    3490:	49 2e       	mov	r4, r25
    3492:	02 c0       	rjmp	.+4      	; 0x3498 <vfprintf+0x162>
    3494:	21 2f       	mov	r18, r17
    3496:	41 2c       	mov	r4, r1
    3498:	56 01       	movw	r10, r12
    349a:	84 e0       	ldi	r24, 0x04	; 4
    349c:	a8 0e       	add	r10, r24
    349e:	b1 1c       	adc	r11, r1
    34a0:	f6 01       	movw	r30, r12
    34a2:	60 81       	ld	r22, Z
    34a4:	71 81       	ldd	r23, Z+1	; 0x01
    34a6:	82 81       	ldd	r24, Z+2	; 0x02
    34a8:	93 81       	ldd	r25, Z+3	; 0x03
    34aa:	04 2d       	mov	r16, r4
    34ac:	a3 01       	movw	r20, r6
    34ae:	b6 d6       	rcall	.+3436   	; 0x421c <__ftoa_engine>
    34b0:	6c 01       	movw	r12, r24
    34b2:	f9 81       	ldd	r31, Y+1	; 0x01
    34b4:	fc 87       	std	Y+12, r31	; 0x0c
    34b6:	f0 ff       	sbrs	r31, 0
    34b8:	02 c0       	rjmp	.+4      	; 0x34be <vfprintf+0x188>
    34ba:	f3 ff       	sbrs	r31, 3
    34bc:	06 c0       	rjmp	.+12     	; 0x34ca <vfprintf+0x194>
    34be:	91 fc       	sbrc	r9, 1
    34c0:	06 c0       	rjmp	.+12     	; 0x34ce <vfprintf+0x198>
    34c2:	92 fe       	sbrs	r9, 2
    34c4:	06 c0       	rjmp	.+12     	; 0x34d2 <vfprintf+0x19c>
    34c6:	00 e2       	ldi	r16, 0x20	; 32
    34c8:	05 c0       	rjmp	.+10     	; 0x34d4 <vfprintf+0x19e>
    34ca:	0d e2       	ldi	r16, 0x2D	; 45
    34cc:	03 c0       	rjmp	.+6      	; 0x34d4 <vfprintf+0x19e>
    34ce:	0b e2       	ldi	r16, 0x2B	; 43
    34d0:	01 c0       	rjmp	.+2      	; 0x34d4 <vfprintf+0x19e>
    34d2:	00 e0       	ldi	r16, 0x00	; 0
    34d4:	8c 85       	ldd	r24, Y+12	; 0x0c
    34d6:	8c 70       	andi	r24, 0x0C	; 12
    34d8:	19 f0       	breq	.+6      	; 0x34e0 <vfprintf+0x1aa>
    34da:	01 11       	cpse	r16, r1
    34dc:	43 c2       	rjmp	.+1158   	; 0x3964 <vfprintf+0x62e>
    34de:	80 c2       	rjmp	.+1280   	; 0x39e0 <vfprintf+0x6aa>
    34e0:	97 fe       	sbrs	r9, 7
    34e2:	10 c0       	rjmp	.+32     	; 0x3504 <vfprintf+0x1ce>
    34e4:	4c 0c       	add	r4, r12
    34e6:	fc 85       	ldd	r31, Y+12	; 0x0c
    34e8:	f4 ff       	sbrs	r31, 4
    34ea:	04 c0       	rjmp	.+8      	; 0x34f4 <vfprintf+0x1be>
    34ec:	8a 81       	ldd	r24, Y+2	; 0x02
    34ee:	81 33       	cpi	r24, 0x31	; 49
    34f0:	09 f4       	brne	.+2      	; 0x34f4 <vfprintf+0x1be>
    34f2:	4a 94       	dec	r4
    34f4:	14 14       	cp	r1, r4
    34f6:	74 f5       	brge	.+92     	; 0x3554 <vfprintf+0x21e>
    34f8:	28 e0       	ldi	r18, 0x08	; 8
    34fa:	24 15       	cp	r18, r4
    34fc:	78 f5       	brcc	.+94     	; 0x355c <vfprintf+0x226>
    34fe:	88 e0       	ldi	r24, 0x08	; 8
    3500:	48 2e       	mov	r4, r24
    3502:	2c c0       	rjmp	.+88     	; 0x355c <vfprintf+0x226>
    3504:	96 fc       	sbrc	r9, 6
    3506:	2a c0       	rjmp	.+84     	; 0x355c <vfprintf+0x226>
    3508:	81 2f       	mov	r24, r17
    350a:	90 e0       	ldi	r25, 0x00	; 0
    350c:	8c 15       	cp	r24, r12
    350e:	9d 05       	cpc	r25, r13
    3510:	9c f0       	brlt	.+38     	; 0x3538 <vfprintf+0x202>
    3512:	3c ef       	ldi	r19, 0xFC	; 252
    3514:	c3 16       	cp	r12, r19
    3516:	3f ef       	ldi	r19, 0xFF	; 255
    3518:	d3 06       	cpc	r13, r19
    351a:	74 f0       	brlt	.+28     	; 0x3538 <vfprintf+0x202>
    351c:	89 2d       	mov	r24, r9
    351e:	80 68       	ori	r24, 0x80	; 128
    3520:	98 2e       	mov	r9, r24
    3522:	0a c0       	rjmp	.+20     	; 0x3538 <vfprintf+0x202>
    3524:	e2 e0       	ldi	r30, 0x02	; 2
    3526:	f0 e0       	ldi	r31, 0x00	; 0
    3528:	ec 0f       	add	r30, r28
    352a:	fd 1f       	adc	r31, r29
    352c:	e1 0f       	add	r30, r17
    352e:	f1 1d       	adc	r31, r1
    3530:	80 81       	ld	r24, Z
    3532:	80 33       	cpi	r24, 0x30	; 48
    3534:	19 f4       	brne	.+6      	; 0x353c <vfprintf+0x206>
    3536:	11 50       	subi	r17, 0x01	; 1
    3538:	11 11       	cpse	r17, r1
    353a:	f4 cf       	rjmp	.-24     	; 0x3524 <vfprintf+0x1ee>
    353c:	97 fe       	sbrs	r9, 7
    353e:	0e c0       	rjmp	.+28     	; 0x355c <vfprintf+0x226>
    3540:	44 24       	eor	r4, r4
    3542:	43 94       	inc	r4
    3544:	41 0e       	add	r4, r17
    3546:	81 2f       	mov	r24, r17
    3548:	90 e0       	ldi	r25, 0x00	; 0
    354a:	c8 16       	cp	r12, r24
    354c:	d9 06       	cpc	r13, r25
    354e:	2c f4       	brge	.+10     	; 0x355a <vfprintf+0x224>
    3550:	1c 19       	sub	r17, r12
    3552:	04 c0       	rjmp	.+8      	; 0x355c <vfprintf+0x226>
    3554:	44 24       	eor	r4, r4
    3556:	43 94       	inc	r4
    3558:	01 c0       	rjmp	.+2      	; 0x355c <vfprintf+0x226>
    355a:	10 e0       	ldi	r17, 0x00	; 0
    355c:	97 fe       	sbrs	r9, 7
    355e:	06 c0       	rjmp	.+12     	; 0x356c <vfprintf+0x236>
    3560:	1c 14       	cp	r1, r12
    3562:	1d 04       	cpc	r1, r13
    3564:	34 f4       	brge	.+12     	; 0x3572 <vfprintf+0x23c>
    3566:	c6 01       	movw	r24, r12
    3568:	01 96       	adiw	r24, 0x01	; 1
    356a:	05 c0       	rjmp	.+10     	; 0x3576 <vfprintf+0x240>
    356c:	85 e0       	ldi	r24, 0x05	; 5
    356e:	90 e0       	ldi	r25, 0x00	; 0
    3570:	02 c0       	rjmp	.+4      	; 0x3576 <vfprintf+0x240>
    3572:	81 e0       	ldi	r24, 0x01	; 1
    3574:	90 e0       	ldi	r25, 0x00	; 0
    3576:	01 11       	cpse	r16, r1
    3578:	01 96       	adiw	r24, 0x01	; 1
    357a:	11 23       	and	r17, r17
    357c:	31 f0       	breq	.+12     	; 0x358a <vfprintf+0x254>
    357e:	21 2f       	mov	r18, r17
    3580:	30 e0       	ldi	r19, 0x00	; 0
    3582:	2f 5f       	subi	r18, 0xFF	; 255
    3584:	3f 4f       	sbci	r19, 0xFF	; 255
    3586:	82 0f       	add	r24, r18
    3588:	93 1f       	adc	r25, r19
    358a:	25 2d       	mov	r18, r5
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	82 17       	cp	r24, r18
    3590:	93 07       	cpc	r25, r19
    3592:	14 f4       	brge	.+4      	; 0x3598 <vfprintf+0x262>
    3594:	58 1a       	sub	r5, r24
    3596:	01 c0       	rjmp	.+2      	; 0x359a <vfprintf+0x264>
    3598:	51 2c       	mov	r5, r1
    359a:	89 2d       	mov	r24, r9
    359c:	89 70       	andi	r24, 0x09	; 9
    359e:	41 f4       	brne	.+16     	; 0x35b0 <vfprintf+0x27a>
    35a0:	55 20       	and	r5, r5
    35a2:	31 f0       	breq	.+12     	; 0x35b0 <vfprintf+0x27a>
    35a4:	b7 01       	movw	r22, r14
    35a6:	80 e2       	ldi	r24, 0x20	; 32
    35a8:	90 e0       	ldi	r25, 0x00	; 0
    35aa:	8d d7       	rcall	.+3866   	; 0x44c6 <fputc>
    35ac:	5a 94       	dec	r5
    35ae:	f8 cf       	rjmp	.-16     	; 0x35a0 <vfprintf+0x26a>
    35b0:	00 23       	and	r16, r16
    35b2:	21 f0       	breq	.+8      	; 0x35bc <vfprintf+0x286>
    35b4:	b7 01       	movw	r22, r14
    35b6:	80 2f       	mov	r24, r16
    35b8:	90 e0       	ldi	r25, 0x00	; 0
    35ba:	85 d7       	rcall	.+3850   	; 0x44c6 <fputc>
    35bc:	93 fc       	sbrc	r9, 3
    35be:	08 c0       	rjmp	.+16     	; 0x35d0 <vfprintf+0x29a>
    35c0:	55 20       	and	r5, r5
    35c2:	31 f0       	breq	.+12     	; 0x35d0 <vfprintf+0x29a>
    35c4:	b7 01       	movw	r22, r14
    35c6:	80 e3       	ldi	r24, 0x30	; 48
    35c8:	90 e0       	ldi	r25, 0x00	; 0
    35ca:	7d d7       	rcall	.+3834   	; 0x44c6 <fputc>
    35cc:	5a 94       	dec	r5
    35ce:	f8 cf       	rjmp	.-16     	; 0x35c0 <vfprintf+0x28a>
    35d0:	97 fe       	sbrs	r9, 7
    35d2:	4a c0       	rjmp	.+148    	; 0x3668 <vfprintf+0x332>
    35d4:	46 01       	movw	r8, r12
    35d6:	d7 fe       	sbrs	r13, 7
    35d8:	02 c0       	rjmp	.+4      	; 0x35de <vfprintf+0x2a8>
    35da:	81 2c       	mov	r8, r1
    35dc:	91 2c       	mov	r9, r1
    35de:	c6 01       	movw	r24, r12
    35e0:	88 19       	sub	r24, r8
    35e2:	99 09       	sbc	r25, r9
    35e4:	f3 01       	movw	r30, r6
    35e6:	e8 0f       	add	r30, r24
    35e8:	f9 1f       	adc	r31, r25
    35ea:	fe 87       	std	Y+14, r31	; 0x0e
    35ec:	ed 87       	std	Y+13, r30	; 0x0d
    35ee:	96 01       	movw	r18, r12
    35f0:	24 19       	sub	r18, r4
    35f2:	31 09       	sbc	r19, r1
    35f4:	38 8b       	std	Y+16, r19	; 0x10
    35f6:	2f 87       	std	Y+15, r18	; 0x0f
    35f8:	01 2f       	mov	r16, r17
    35fa:	10 e0       	ldi	r17, 0x00	; 0
    35fc:	11 95       	neg	r17
    35fe:	01 95       	neg	r16
    3600:	11 09       	sbc	r17, r1
    3602:	3f ef       	ldi	r19, 0xFF	; 255
    3604:	83 16       	cp	r8, r19
    3606:	93 06       	cpc	r9, r19
    3608:	21 f4       	brne	.+8      	; 0x3612 <vfprintf+0x2dc>
    360a:	b7 01       	movw	r22, r14
    360c:	8e e2       	ldi	r24, 0x2E	; 46
    360e:	90 e0       	ldi	r25, 0x00	; 0
    3610:	5a d7       	rcall	.+3764   	; 0x44c6 <fputc>
    3612:	c8 14       	cp	r12, r8
    3614:	d9 04       	cpc	r13, r9
    3616:	4c f0       	brlt	.+18     	; 0x362a <vfprintf+0x2f4>
    3618:	8f 85       	ldd	r24, Y+15	; 0x0f
    361a:	98 89       	ldd	r25, Y+16	; 0x10
    361c:	88 15       	cp	r24, r8
    361e:	99 05       	cpc	r25, r9
    3620:	24 f4       	brge	.+8      	; 0x362a <vfprintf+0x2f4>
    3622:	ed 85       	ldd	r30, Y+13	; 0x0d
    3624:	fe 85       	ldd	r31, Y+14	; 0x0e
    3626:	81 81       	ldd	r24, Z+1	; 0x01
    3628:	01 c0       	rjmp	.+2      	; 0x362c <vfprintf+0x2f6>
    362a:	80 e3       	ldi	r24, 0x30	; 48
    362c:	f1 e0       	ldi	r31, 0x01	; 1
    362e:	8f 1a       	sub	r8, r31
    3630:	91 08       	sbc	r9, r1
    3632:	2d 85       	ldd	r18, Y+13	; 0x0d
    3634:	3e 85       	ldd	r19, Y+14	; 0x0e
    3636:	2f 5f       	subi	r18, 0xFF	; 255
    3638:	3f 4f       	sbci	r19, 0xFF	; 255
    363a:	3e 87       	std	Y+14, r19	; 0x0e
    363c:	2d 87       	std	Y+13, r18	; 0x0d
    363e:	80 16       	cp	r8, r16
    3640:	91 06       	cpc	r9, r17
    3642:	24 f0       	brlt	.+8      	; 0x364c <vfprintf+0x316>
    3644:	b7 01       	movw	r22, r14
    3646:	90 e0       	ldi	r25, 0x00	; 0
    3648:	3e d7       	rcall	.+3708   	; 0x44c6 <fputc>
    364a:	db cf       	rjmp	.-74     	; 0x3602 <vfprintf+0x2cc>
    364c:	c8 14       	cp	r12, r8
    364e:	d9 04       	cpc	r13, r9
    3650:	41 f4       	brne	.+16     	; 0x3662 <vfprintf+0x32c>
    3652:	9a 81       	ldd	r25, Y+2	; 0x02
    3654:	96 33       	cpi	r25, 0x36	; 54
    3656:	20 f4       	brcc	.+8      	; 0x3660 <vfprintf+0x32a>
    3658:	95 33       	cpi	r25, 0x35	; 53
    365a:	19 f4       	brne	.+6      	; 0x3662 <vfprintf+0x32c>
    365c:	3c 85       	ldd	r19, Y+12	; 0x0c
    365e:	34 ff       	sbrs	r19, 4
    3660:	81 e3       	ldi	r24, 0x31	; 49
    3662:	b7 01       	movw	r22, r14
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	48 c0       	rjmp	.+144    	; 0x36f8 <vfprintf+0x3c2>
    3668:	8a 81       	ldd	r24, Y+2	; 0x02
    366a:	81 33       	cpi	r24, 0x31	; 49
    366c:	19 f0       	breq	.+6      	; 0x3674 <vfprintf+0x33e>
    366e:	9c 85       	ldd	r25, Y+12	; 0x0c
    3670:	9f 7e       	andi	r25, 0xEF	; 239
    3672:	9c 87       	std	Y+12, r25	; 0x0c
    3674:	b7 01       	movw	r22, r14
    3676:	90 e0       	ldi	r25, 0x00	; 0
    3678:	26 d7       	rcall	.+3660   	; 0x44c6 <fputc>
    367a:	11 11       	cpse	r17, r1
    367c:	05 c0       	rjmp	.+10     	; 0x3688 <vfprintf+0x352>
    367e:	94 fc       	sbrc	r9, 4
    3680:	16 c0       	rjmp	.+44     	; 0x36ae <vfprintf+0x378>
    3682:	85 e6       	ldi	r24, 0x65	; 101
    3684:	90 e0       	ldi	r25, 0x00	; 0
    3686:	15 c0       	rjmp	.+42     	; 0x36b2 <vfprintf+0x37c>
    3688:	b7 01       	movw	r22, r14
    368a:	8e e2       	ldi	r24, 0x2E	; 46
    368c:	90 e0       	ldi	r25, 0x00	; 0
    368e:	1b d7       	rcall	.+3638   	; 0x44c6 <fputc>
    3690:	1e 5f       	subi	r17, 0xFE	; 254
    3692:	82 e0       	ldi	r24, 0x02	; 2
    3694:	01 e0       	ldi	r16, 0x01	; 1
    3696:	08 0f       	add	r16, r24
    3698:	f3 01       	movw	r30, r6
    369a:	e8 0f       	add	r30, r24
    369c:	f1 1d       	adc	r31, r1
    369e:	80 81       	ld	r24, Z
    36a0:	b7 01       	movw	r22, r14
    36a2:	90 e0       	ldi	r25, 0x00	; 0
    36a4:	10 d7       	rcall	.+3616   	; 0x44c6 <fputc>
    36a6:	80 2f       	mov	r24, r16
    36a8:	01 13       	cpse	r16, r17
    36aa:	f4 cf       	rjmp	.-24     	; 0x3694 <vfprintf+0x35e>
    36ac:	e8 cf       	rjmp	.-48     	; 0x367e <vfprintf+0x348>
    36ae:	85 e4       	ldi	r24, 0x45	; 69
    36b0:	90 e0       	ldi	r25, 0x00	; 0
    36b2:	b7 01       	movw	r22, r14
    36b4:	08 d7       	rcall	.+3600   	; 0x44c6 <fputc>
    36b6:	d7 fc       	sbrc	r13, 7
    36b8:	06 c0       	rjmp	.+12     	; 0x36c6 <vfprintf+0x390>
    36ba:	c1 14       	cp	r12, r1
    36bc:	d1 04       	cpc	r13, r1
    36be:	41 f4       	brne	.+16     	; 0x36d0 <vfprintf+0x39a>
    36c0:	ec 85       	ldd	r30, Y+12	; 0x0c
    36c2:	e4 ff       	sbrs	r30, 4
    36c4:	05 c0       	rjmp	.+10     	; 0x36d0 <vfprintf+0x39a>
    36c6:	d1 94       	neg	r13
    36c8:	c1 94       	neg	r12
    36ca:	d1 08       	sbc	r13, r1
    36cc:	8d e2       	ldi	r24, 0x2D	; 45
    36ce:	01 c0       	rjmp	.+2      	; 0x36d2 <vfprintf+0x39c>
    36d0:	8b e2       	ldi	r24, 0x2B	; 43
    36d2:	b7 01       	movw	r22, r14
    36d4:	90 e0       	ldi	r25, 0x00	; 0
    36d6:	f7 d6       	rcall	.+3566   	; 0x44c6 <fputc>
    36d8:	80 e3       	ldi	r24, 0x30	; 48
    36da:	2a e0       	ldi	r18, 0x0A	; 10
    36dc:	c2 16       	cp	r12, r18
    36de:	d1 04       	cpc	r13, r1
    36e0:	2c f0       	brlt	.+10     	; 0x36ec <vfprintf+0x3b6>
    36e2:	8f 5f       	subi	r24, 0xFF	; 255
    36e4:	fa e0       	ldi	r31, 0x0A	; 10
    36e6:	cf 1a       	sub	r12, r31
    36e8:	d1 08       	sbc	r13, r1
    36ea:	f7 cf       	rjmp	.-18     	; 0x36da <vfprintf+0x3a4>
    36ec:	b7 01       	movw	r22, r14
    36ee:	90 e0       	ldi	r25, 0x00	; 0
    36f0:	ea d6       	rcall	.+3540   	; 0x44c6 <fputc>
    36f2:	b7 01       	movw	r22, r14
    36f4:	c6 01       	movw	r24, r12
    36f6:	c0 96       	adiw	r24, 0x30	; 48
    36f8:	e6 d6       	rcall	.+3532   	; 0x44c6 <fputc>
    36fa:	49 c1       	rjmp	.+658    	; 0x398e <vfprintf+0x658>
    36fc:	83 36       	cpi	r24, 0x63	; 99
    36fe:	31 f0       	breq	.+12     	; 0x370c <vfprintf+0x3d6>
    3700:	83 37       	cpi	r24, 0x73	; 115
    3702:	79 f0       	breq	.+30     	; 0x3722 <vfprintf+0x3ec>
    3704:	83 35       	cpi	r24, 0x53	; 83
    3706:	09 f0       	breq	.+2      	; 0x370a <vfprintf+0x3d4>
    3708:	52 c0       	rjmp	.+164    	; 0x37ae <vfprintf+0x478>
    370a:	1f c0       	rjmp	.+62     	; 0x374a <vfprintf+0x414>
    370c:	56 01       	movw	r10, r12
    370e:	32 e0       	ldi	r19, 0x02	; 2
    3710:	a3 0e       	add	r10, r19
    3712:	b1 1c       	adc	r11, r1
    3714:	f6 01       	movw	r30, r12
    3716:	80 81       	ld	r24, Z
    3718:	89 83       	std	Y+1, r24	; 0x01
    371a:	01 e0       	ldi	r16, 0x01	; 1
    371c:	10 e0       	ldi	r17, 0x00	; 0
    371e:	63 01       	movw	r12, r6
    3720:	11 c0       	rjmp	.+34     	; 0x3744 <vfprintf+0x40e>
    3722:	56 01       	movw	r10, r12
    3724:	f2 e0       	ldi	r31, 0x02	; 2
    3726:	af 0e       	add	r10, r31
    3728:	b1 1c       	adc	r11, r1
    372a:	f6 01       	movw	r30, r12
    372c:	c0 80       	ld	r12, Z
    372e:	d1 80       	ldd	r13, Z+1	; 0x01
    3730:	96 fe       	sbrs	r9, 6
    3732:	03 c0       	rjmp	.+6      	; 0x373a <vfprintf+0x404>
    3734:	61 2f       	mov	r22, r17
    3736:	70 e0       	ldi	r23, 0x00	; 0
    3738:	02 c0       	rjmp	.+4      	; 0x373e <vfprintf+0x408>
    373a:	6f ef       	ldi	r22, 0xFF	; 255
    373c:	7f ef       	ldi	r23, 0xFF	; 255
    373e:	c6 01       	movw	r24, r12
    3740:	79 d6       	rcall	.+3314   	; 0x4434 <strnlen>
    3742:	8c 01       	movw	r16, r24
    3744:	f9 2d       	mov	r31, r9
    3746:	ff 77       	andi	r31, 0x7F	; 127
    3748:	13 c0       	rjmp	.+38     	; 0x3770 <vfprintf+0x43a>
    374a:	56 01       	movw	r10, r12
    374c:	22 e0       	ldi	r18, 0x02	; 2
    374e:	a2 0e       	add	r10, r18
    3750:	b1 1c       	adc	r11, r1
    3752:	f6 01       	movw	r30, r12
    3754:	c0 80       	ld	r12, Z
    3756:	d1 80       	ldd	r13, Z+1	; 0x01
    3758:	96 fe       	sbrs	r9, 6
    375a:	03 c0       	rjmp	.+6      	; 0x3762 <vfprintf+0x42c>
    375c:	61 2f       	mov	r22, r17
    375e:	70 e0       	ldi	r23, 0x00	; 0
    3760:	02 c0       	rjmp	.+4      	; 0x3766 <vfprintf+0x430>
    3762:	6f ef       	ldi	r22, 0xFF	; 255
    3764:	7f ef       	ldi	r23, 0xFF	; 255
    3766:	c6 01       	movw	r24, r12
    3768:	4c d6       	rcall	.+3224   	; 0x4402 <strnlen_P>
    376a:	8c 01       	movw	r16, r24
    376c:	f9 2d       	mov	r31, r9
    376e:	f0 68       	ori	r31, 0x80	; 128
    3770:	9f 2e       	mov	r9, r31
    3772:	f3 fd       	sbrc	r31, 3
    3774:	18 c0       	rjmp	.+48     	; 0x37a6 <vfprintf+0x470>
    3776:	85 2d       	mov	r24, r5
    3778:	90 e0       	ldi	r25, 0x00	; 0
    377a:	08 17       	cp	r16, r24
    377c:	19 07       	cpc	r17, r25
    377e:	98 f4       	brcc	.+38     	; 0x37a6 <vfprintf+0x470>
    3780:	b7 01       	movw	r22, r14
    3782:	80 e2       	ldi	r24, 0x20	; 32
    3784:	90 e0       	ldi	r25, 0x00	; 0
    3786:	9f d6       	rcall	.+3390   	; 0x44c6 <fputc>
    3788:	5a 94       	dec	r5
    378a:	f5 cf       	rjmp	.-22     	; 0x3776 <vfprintf+0x440>
    378c:	f6 01       	movw	r30, r12
    378e:	97 fc       	sbrc	r9, 7
    3790:	85 91       	lpm	r24, Z+
    3792:	97 fe       	sbrs	r9, 7
    3794:	81 91       	ld	r24, Z+
    3796:	6f 01       	movw	r12, r30
    3798:	b7 01       	movw	r22, r14
    379a:	90 e0       	ldi	r25, 0x00	; 0
    379c:	94 d6       	rcall	.+3368   	; 0x44c6 <fputc>
    379e:	51 10       	cpse	r5, r1
    37a0:	5a 94       	dec	r5
    37a2:	01 50       	subi	r16, 0x01	; 1
    37a4:	11 09       	sbc	r17, r1
    37a6:	01 15       	cp	r16, r1
    37a8:	11 05       	cpc	r17, r1
    37aa:	81 f7       	brne	.-32     	; 0x378c <vfprintf+0x456>
    37ac:	f0 c0       	rjmp	.+480    	; 0x398e <vfprintf+0x658>
    37ae:	84 36       	cpi	r24, 0x64	; 100
    37b0:	11 f0       	breq	.+4      	; 0x37b6 <vfprintf+0x480>
    37b2:	89 36       	cpi	r24, 0x69	; 105
    37b4:	59 f5       	brne	.+86     	; 0x380c <vfprintf+0x4d6>
    37b6:	56 01       	movw	r10, r12
    37b8:	97 fe       	sbrs	r9, 7
    37ba:	09 c0       	rjmp	.+18     	; 0x37ce <vfprintf+0x498>
    37bc:	24 e0       	ldi	r18, 0x04	; 4
    37be:	a2 0e       	add	r10, r18
    37c0:	b1 1c       	adc	r11, r1
    37c2:	f6 01       	movw	r30, r12
    37c4:	60 81       	ld	r22, Z
    37c6:	71 81       	ldd	r23, Z+1	; 0x01
    37c8:	82 81       	ldd	r24, Z+2	; 0x02
    37ca:	93 81       	ldd	r25, Z+3	; 0x03
    37cc:	0a c0       	rjmp	.+20     	; 0x37e2 <vfprintf+0x4ac>
    37ce:	f2 e0       	ldi	r31, 0x02	; 2
    37d0:	af 0e       	add	r10, r31
    37d2:	b1 1c       	adc	r11, r1
    37d4:	f6 01       	movw	r30, r12
    37d6:	60 81       	ld	r22, Z
    37d8:	71 81       	ldd	r23, Z+1	; 0x01
    37da:	07 2e       	mov	r0, r23
    37dc:	00 0c       	add	r0, r0
    37de:	88 0b       	sbc	r24, r24
    37e0:	99 0b       	sbc	r25, r25
    37e2:	f9 2d       	mov	r31, r9
    37e4:	ff 76       	andi	r31, 0x6F	; 111
    37e6:	9f 2e       	mov	r9, r31
    37e8:	97 ff       	sbrs	r25, 7
    37ea:	09 c0       	rjmp	.+18     	; 0x37fe <vfprintf+0x4c8>
    37ec:	90 95       	com	r25
    37ee:	80 95       	com	r24
    37f0:	70 95       	com	r23
    37f2:	61 95       	neg	r22
    37f4:	7f 4f       	sbci	r23, 0xFF	; 255
    37f6:	8f 4f       	sbci	r24, 0xFF	; 255
    37f8:	9f 4f       	sbci	r25, 0xFF	; 255
    37fa:	f0 68       	ori	r31, 0x80	; 128
    37fc:	9f 2e       	mov	r9, r31
    37fe:	2a e0       	ldi	r18, 0x0A	; 10
    3800:	30 e0       	ldi	r19, 0x00	; 0
    3802:	a3 01       	movw	r20, r6
    3804:	d5 d6       	rcall	.+3498   	; 0x45b0 <__ultoa_invert>
    3806:	c8 2e       	mov	r12, r24
    3808:	c6 18       	sub	r12, r6
    380a:	3e c0       	rjmp	.+124    	; 0x3888 <vfprintf+0x552>
    380c:	09 2d       	mov	r16, r9
    380e:	85 37       	cpi	r24, 0x75	; 117
    3810:	21 f4       	brne	.+8      	; 0x381a <vfprintf+0x4e4>
    3812:	0f 7e       	andi	r16, 0xEF	; 239
    3814:	2a e0       	ldi	r18, 0x0A	; 10
    3816:	30 e0       	ldi	r19, 0x00	; 0
    3818:	1d c0       	rjmp	.+58     	; 0x3854 <vfprintf+0x51e>
    381a:	09 7f       	andi	r16, 0xF9	; 249
    381c:	8f 36       	cpi	r24, 0x6F	; 111
    381e:	91 f0       	breq	.+36     	; 0x3844 <vfprintf+0x50e>
    3820:	18 f4       	brcc	.+6      	; 0x3828 <vfprintf+0x4f2>
    3822:	88 35       	cpi	r24, 0x58	; 88
    3824:	59 f0       	breq	.+22     	; 0x383c <vfprintf+0x506>
    3826:	bc c0       	rjmp	.+376    	; 0x39a0 <vfprintf+0x66a>
    3828:	80 37       	cpi	r24, 0x70	; 112
    382a:	19 f0       	breq	.+6      	; 0x3832 <vfprintf+0x4fc>
    382c:	88 37       	cpi	r24, 0x78	; 120
    382e:	11 f0       	breq	.+4      	; 0x3834 <vfprintf+0x4fe>
    3830:	b7 c0       	rjmp	.+366    	; 0x39a0 <vfprintf+0x66a>
    3832:	00 61       	ori	r16, 0x10	; 16
    3834:	04 ff       	sbrs	r16, 4
    3836:	09 c0       	rjmp	.+18     	; 0x384a <vfprintf+0x514>
    3838:	04 60       	ori	r16, 0x04	; 4
    383a:	07 c0       	rjmp	.+14     	; 0x384a <vfprintf+0x514>
    383c:	94 fe       	sbrs	r9, 4
    383e:	08 c0       	rjmp	.+16     	; 0x3850 <vfprintf+0x51a>
    3840:	06 60       	ori	r16, 0x06	; 6
    3842:	06 c0       	rjmp	.+12     	; 0x3850 <vfprintf+0x51a>
    3844:	28 e0       	ldi	r18, 0x08	; 8
    3846:	30 e0       	ldi	r19, 0x00	; 0
    3848:	05 c0       	rjmp	.+10     	; 0x3854 <vfprintf+0x51e>
    384a:	20 e1       	ldi	r18, 0x10	; 16
    384c:	30 e0       	ldi	r19, 0x00	; 0
    384e:	02 c0       	rjmp	.+4      	; 0x3854 <vfprintf+0x51e>
    3850:	20 e1       	ldi	r18, 0x10	; 16
    3852:	32 e0       	ldi	r19, 0x02	; 2
    3854:	56 01       	movw	r10, r12
    3856:	07 ff       	sbrs	r16, 7
    3858:	09 c0       	rjmp	.+18     	; 0x386c <vfprintf+0x536>
    385a:	84 e0       	ldi	r24, 0x04	; 4
    385c:	a8 0e       	add	r10, r24
    385e:	b1 1c       	adc	r11, r1
    3860:	f6 01       	movw	r30, r12
    3862:	60 81       	ld	r22, Z
    3864:	71 81       	ldd	r23, Z+1	; 0x01
    3866:	82 81       	ldd	r24, Z+2	; 0x02
    3868:	93 81       	ldd	r25, Z+3	; 0x03
    386a:	08 c0       	rjmp	.+16     	; 0x387c <vfprintf+0x546>
    386c:	f2 e0       	ldi	r31, 0x02	; 2
    386e:	af 0e       	add	r10, r31
    3870:	b1 1c       	adc	r11, r1
    3872:	f6 01       	movw	r30, r12
    3874:	60 81       	ld	r22, Z
    3876:	71 81       	ldd	r23, Z+1	; 0x01
    3878:	80 e0       	ldi	r24, 0x00	; 0
    387a:	90 e0       	ldi	r25, 0x00	; 0
    387c:	a3 01       	movw	r20, r6
    387e:	98 d6       	rcall	.+3376   	; 0x45b0 <__ultoa_invert>
    3880:	c8 2e       	mov	r12, r24
    3882:	c6 18       	sub	r12, r6
    3884:	0f 77       	andi	r16, 0x7F	; 127
    3886:	90 2e       	mov	r9, r16
    3888:	96 fe       	sbrs	r9, 6
    388a:	0b c0       	rjmp	.+22     	; 0x38a2 <vfprintf+0x56c>
    388c:	09 2d       	mov	r16, r9
    388e:	0e 7f       	andi	r16, 0xFE	; 254
    3890:	c1 16       	cp	r12, r17
    3892:	50 f4       	brcc	.+20     	; 0x38a8 <vfprintf+0x572>
    3894:	94 fe       	sbrs	r9, 4
    3896:	0a c0       	rjmp	.+20     	; 0x38ac <vfprintf+0x576>
    3898:	92 fc       	sbrc	r9, 2
    389a:	08 c0       	rjmp	.+16     	; 0x38ac <vfprintf+0x576>
    389c:	09 2d       	mov	r16, r9
    389e:	0e 7e       	andi	r16, 0xEE	; 238
    38a0:	05 c0       	rjmp	.+10     	; 0x38ac <vfprintf+0x576>
    38a2:	dc 2c       	mov	r13, r12
    38a4:	09 2d       	mov	r16, r9
    38a6:	03 c0       	rjmp	.+6      	; 0x38ae <vfprintf+0x578>
    38a8:	dc 2c       	mov	r13, r12
    38aa:	01 c0       	rjmp	.+2      	; 0x38ae <vfprintf+0x578>
    38ac:	d1 2e       	mov	r13, r17
    38ae:	04 ff       	sbrs	r16, 4
    38b0:	0d c0       	rjmp	.+26     	; 0x38cc <vfprintf+0x596>
    38b2:	fe 01       	movw	r30, r28
    38b4:	ec 0d       	add	r30, r12
    38b6:	f1 1d       	adc	r31, r1
    38b8:	80 81       	ld	r24, Z
    38ba:	80 33       	cpi	r24, 0x30	; 48
    38bc:	11 f4       	brne	.+4      	; 0x38c2 <vfprintf+0x58c>
    38be:	09 7e       	andi	r16, 0xE9	; 233
    38c0:	09 c0       	rjmp	.+18     	; 0x38d4 <vfprintf+0x59e>
    38c2:	02 ff       	sbrs	r16, 2
    38c4:	06 c0       	rjmp	.+12     	; 0x38d2 <vfprintf+0x59c>
    38c6:	d3 94       	inc	r13
    38c8:	d3 94       	inc	r13
    38ca:	04 c0       	rjmp	.+8      	; 0x38d4 <vfprintf+0x59e>
    38cc:	80 2f       	mov	r24, r16
    38ce:	86 78       	andi	r24, 0x86	; 134
    38d0:	09 f0       	breq	.+2      	; 0x38d4 <vfprintf+0x59e>
    38d2:	d3 94       	inc	r13
    38d4:	03 fd       	sbrc	r16, 3
    38d6:	10 c0       	rjmp	.+32     	; 0x38f8 <vfprintf+0x5c2>
    38d8:	00 ff       	sbrs	r16, 0
    38da:	06 c0       	rjmp	.+12     	; 0x38e8 <vfprintf+0x5b2>
    38dc:	1c 2d       	mov	r17, r12
    38de:	d5 14       	cp	r13, r5
    38e0:	78 f4       	brcc	.+30     	; 0x3900 <vfprintf+0x5ca>
    38e2:	15 0d       	add	r17, r5
    38e4:	1d 19       	sub	r17, r13
    38e6:	0c c0       	rjmp	.+24     	; 0x3900 <vfprintf+0x5ca>
    38e8:	d5 14       	cp	r13, r5
    38ea:	50 f4       	brcc	.+20     	; 0x3900 <vfprintf+0x5ca>
    38ec:	b7 01       	movw	r22, r14
    38ee:	80 e2       	ldi	r24, 0x20	; 32
    38f0:	90 e0       	ldi	r25, 0x00	; 0
    38f2:	e9 d5       	rcall	.+3026   	; 0x44c6 <fputc>
    38f4:	d3 94       	inc	r13
    38f6:	f8 cf       	rjmp	.-16     	; 0x38e8 <vfprintf+0x5b2>
    38f8:	d5 14       	cp	r13, r5
    38fa:	10 f4       	brcc	.+4      	; 0x3900 <vfprintf+0x5ca>
    38fc:	5d 18       	sub	r5, r13
    38fe:	01 c0       	rjmp	.+2      	; 0x3902 <vfprintf+0x5cc>
    3900:	51 2c       	mov	r5, r1
    3902:	04 ff       	sbrs	r16, 4
    3904:	0f c0       	rjmp	.+30     	; 0x3924 <vfprintf+0x5ee>
    3906:	b7 01       	movw	r22, r14
    3908:	80 e3       	ldi	r24, 0x30	; 48
    390a:	90 e0       	ldi	r25, 0x00	; 0
    390c:	dc d5       	rcall	.+3000   	; 0x44c6 <fputc>
    390e:	02 ff       	sbrs	r16, 2
    3910:	16 c0       	rjmp	.+44     	; 0x393e <vfprintf+0x608>
    3912:	01 fd       	sbrc	r16, 1
    3914:	03 c0       	rjmp	.+6      	; 0x391c <vfprintf+0x5e6>
    3916:	88 e7       	ldi	r24, 0x78	; 120
    3918:	90 e0       	ldi	r25, 0x00	; 0
    391a:	02 c0       	rjmp	.+4      	; 0x3920 <vfprintf+0x5ea>
    391c:	88 e5       	ldi	r24, 0x58	; 88
    391e:	90 e0       	ldi	r25, 0x00	; 0
    3920:	b7 01       	movw	r22, r14
    3922:	0c c0       	rjmp	.+24     	; 0x393c <vfprintf+0x606>
    3924:	80 2f       	mov	r24, r16
    3926:	86 78       	andi	r24, 0x86	; 134
    3928:	51 f0       	breq	.+20     	; 0x393e <vfprintf+0x608>
    392a:	01 ff       	sbrs	r16, 1
    392c:	02 c0       	rjmp	.+4      	; 0x3932 <vfprintf+0x5fc>
    392e:	8b e2       	ldi	r24, 0x2B	; 43
    3930:	01 c0       	rjmp	.+2      	; 0x3934 <vfprintf+0x5fe>
    3932:	80 e2       	ldi	r24, 0x20	; 32
    3934:	07 fd       	sbrc	r16, 7
    3936:	8d e2       	ldi	r24, 0x2D	; 45
    3938:	b7 01       	movw	r22, r14
    393a:	90 e0       	ldi	r25, 0x00	; 0
    393c:	c4 d5       	rcall	.+2952   	; 0x44c6 <fputc>
    393e:	c1 16       	cp	r12, r17
    3940:	30 f4       	brcc	.+12     	; 0x394e <vfprintf+0x618>
    3942:	b7 01       	movw	r22, r14
    3944:	80 e3       	ldi	r24, 0x30	; 48
    3946:	90 e0       	ldi	r25, 0x00	; 0
    3948:	be d5       	rcall	.+2940   	; 0x44c6 <fputc>
    394a:	11 50       	subi	r17, 0x01	; 1
    394c:	f8 cf       	rjmp	.-16     	; 0x393e <vfprintf+0x608>
    394e:	ca 94       	dec	r12
    3950:	f3 01       	movw	r30, r6
    3952:	ec 0d       	add	r30, r12
    3954:	f1 1d       	adc	r31, r1
    3956:	80 81       	ld	r24, Z
    3958:	b7 01       	movw	r22, r14
    395a:	90 e0       	ldi	r25, 0x00	; 0
    395c:	b4 d5       	rcall	.+2920   	; 0x44c6 <fputc>
    395e:	c1 10       	cpse	r12, r1
    3960:	f6 cf       	rjmp	.-20     	; 0x394e <vfprintf+0x618>
    3962:	15 c0       	rjmp	.+42     	; 0x398e <vfprintf+0x658>
    3964:	f4 e0       	ldi	r31, 0x04	; 4
    3966:	f5 15       	cp	r31, r5
    3968:	50 f5       	brcc	.+84     	; 0x39be <vfprintf+0x688>
    396a:	84 e0       	ldi	r24, 0x04	; 4
    396c:	58 1a       	sub	r5, r24
    396e:	93 fe       	sbrs	r9, 3
    3970:	1e c0       	rjmp	.+60     	; 0x39ae <vfprintf+0x678>
    3972:	01 11       	cpse	r16, r1
    3974:	25 c0       	rjmp	.+74     	; 0x39c0 <vfprintf+0x68a>
    3976:	2c 85       	ldd	r18, Y+12	; 0x0c
    3978:	23 ff       	sbrs	r18, 3
    397a:	27 c0       	rjmp	.+78     	; 0x39ca <vfprintf+0x694>
    397c:	06 e0       	ldi	r16, 0x06	; 6
    397e:	11 e0       	ldi	r17, 0x01	; 1
    3980:	39 2d       	mov	r19, r9
    3982:	30 71       	andi	r19, 0x10	; 16
    3984:	93 2e       	mov	r9, r19
    3986:	f8 01       	movw	r30, r16
    3988:	84 91       	lpm	r24, Z
    398a:	81 11       	cpse	r24, r1
    398c:	21 c0       	rjmp	.+66     	; 0x39d0 <vfprintf+0x69a>
    398e:	55 20       	and	r5, r5
    3990:	09 f4       	brne	.+2      	; 0x3994 <vfprintf+0x65e>
    3992:	fc cc       	rjmp	.-1544   	; 0x338c <vfprintf+0x56>
    3994:	b7 01       	movw	r22, r14
    3996:	80 e2       	ldi	r24, 0x20	; 32
    3998:	90 e0       	ldi	r25, 0x00	; 0
    399a:	95 d5       	rcall	.+2858   	; 0x44c6 <fputc>
    399c:	5a 94       	dec	r5
    399e:	f7 cf       	rjmp	.-18     	; 0x398e <vfprintf+0x658>
    39a0:	f7 01       	movw	r30, r14
    39a2:	86 81       	ldd	r24, Z+6	; 0x06
    39a4:	97 81       	ldd	r25, Z+7	; 0x07
    39a6:	23 c0       	rjmp	.+70     	; 0x39ee <vfprintf+0x6b8>
    39a8:	8f ef       	ldi	r24, 0xFF	; 255
    39aa:	9f ef       	ldi	r25, 0xFF	; 255
    39ac:	20 c0       	rjmp	.+64     	; 0x39ee <vfprintf+0x6b8>
    39ae:	b7 01       	movw	r22, r14
    39b0:	80 e2       	ldi	r24, 0x20	; 32
    39b2:	90 e0       	ldi	r25, 0x00	; 0
    39b4:	88 d5       	rcall	.+2832   	; 0x44c6 <fputc>
    39b6:	5a 94       	dec	r5
    39b8:	51 10       	cpse	r5, r1
    39ba:	f9 cf       	rjmp	.-14     	; 0x39ae <vfprintf+0x678>
    39bc:	da cf       	rjmp	.-76     	; 0x3972 <vfprintf+0x63c>
    39be:	51 2c       	mov	r5, r1
    39c0:	b7 01       	movw	r22, r14
    39c2:	80 2f       	mov	r24, r16
    39c4:	90 e0       	ldi	r25, 0x00	; 0
    39c6:	7f d5       	rcall	.+2814   	; 0x44c6 <fputc>
    39c8:	d6 cf       	rjmp	.-84     	; 0x3976 <vfprintf+0x640>
    39ca:	0a e0       	ldi	r16, 0x0A	; 10
    39cc:	11 e0       	ldi	r17, 0x01	; 1
    39ce:	d8 cf       	rjmp	.-80     	; 0x3980 <vfprintf+0x64a>
    39d0:	91 10       	cpse	r9, r1
    39d2:	80 52       	subi	r24, 0x20	; 32
    39d4:	b7 01       	movw	r22, r14
    39d6:	90 e0       	ldi	r25, 0x00	; 0
    39d8:	76 d5       	rcall	.+2796   	; 0x44c6 <fputc>
    39da:	0f 5f       	subi	r16, 0xFF	; 255
    39dc:	1f 4f       	sbci	r17, 0xFF	; 255
    39de:	d3 cf       	rjmp	.-90     	; 0x3986 <vfprintf+0x650>
    39e0:	23 e0       	ldi	r18, 0x03	; 3
    39e2:	25 15       	cp	r18, r5
    39e4:	10 f4       	brcc	.+4      	; 0x39ea <vfprintf+0x6b4>
    39e6:	83 e0       	ldi	r24, 0x03	; 3
    39e8:	c1 cf       	rjmp	.-126    	; 0x396c <vfprintf+0x636>
    39ea:	51 2c       	mov	r5, r1
    39ec:	c4 cf       	rjmp	.-120    	; 0x3976 <vfprintf+0x640>
    39ee:	60 96       	adiw	r28, 0x10	; 16
    39f0:	e2 e1       	ldi	r30, 0x12	; 18
    39f2:	f9 c3       	rjmp	.+2034   	; 0x41e6 <__epilogue_restores__>

000039f4 <putval>:
    39f4:	20 fd       	sbrc	r18, 0
    39f6:	09 c0       	rjmp	.+18     	; 0x3a0a <putval+0x16>
    39f8:	fc 01       	movw	r30, r24
    39fa:	23 fd       	sbrc	r18, 3
    39fc:	05 c0       	rjmp	.+10     	; 0x3a08 <putval+0x14>
    39fe:	22 ff       	sbrs	r18, 2
    3a00:	02 c0       	rjmp	.+4      	; 0x3a06 <putval+0x12>
    3a02:	73 83       	std	Z+3, r23	; 0x03
    3a04:	62 83       	std	Z+2, r22	; 0x02
    3a06:	51 83       	std	Z+1, r21	; 0x01
    3a08:	40 83       	st	Z, r20
    3a0a:	08 95       	ret

00003a0c <mulacc>:
    3a0c:	44 fd       	sbrc	r20, 4
    3a0e:	17 c0       	rjmp	.+46     	; 0x3a3e <mulacc+0x32>
    3a10:	46 fd       	sbrc	r20, 6
    3a12:	17 c0       	rjmp	.+46     	; 0x3a42 <mulacc+0x36>
    3a14:	ab 01       	movw	r20, r22
    3a16:	bc 01       	movw	r22, r24
    3a18:	da 01       	movw	r26, r20
    3a1a:	fb 01       	movw	r30, r22
    3a1c:	aa 0f       	add	r26, r26
    3a1e:	bb 1f       	adc	r27, r27
    3a20:	ee 1f       	adc	r30, r30
    3a22:	ff 1f       	adc	r31, r31
    3a24:	10 94       	com	r1
    3a26:	d1 f7       	brne	.-12     	; 0x3a1c <mulacc+0x10>
    3a28:	4a 0f       	add	r20, r26
    3a2a:	5b 1f       	adc	r21, r27
    3a2c:	6e 1f       	adc	r22, r30
    3a2e:	7f 1f       	adc	r23, r31
    3a30:	cb 01       	movw	r24, r22
    3a32:	ba 01       	movw	r22, r20
    3a34:	66 0f       	add	r22, r22
    3a36:	77 1f       	adc	r23, r23
    3a38:	88 1f       	adc	r24, r24
    3a3a:	99 1f       	adc	r25, r25
    3a3c:	09 c0       	rjmp	.+18     	; 0x3a50 <mulacc+0x44>
    3a3e:	33 e0       	ldi	r19, 0x03	; 3
    3a40:	01 c0       	rjmp	.+2      	; 0x3a44 <mulacc+0x38>
    3a42:	34 e0       	ldi	r19, 0x04	; 4
    3a44:	66 0f       	add	r22, r22
    3a46:	77 1f       	adc	r23, r23
    3a48:	88 1f       	adc	r24, r24
    3a4a:	99 1f       	adc	r25, r25
    3a4c:	31 50       	subi	r19, 0x01	; 1
    3a4e:	d1 f7       	brne	.-12     	; 0x3a44 <mulacc+0x38>
    3a50:	62 0f       	add	r22, r18
    3a52:	71 1d       	adc	r23, r1
    3a54:	81 1d       	adc	r24, r1
    3a56:	91 1d       	adc	r25, r1
    3a58:	08 95       	ret

00003a5a <skip_spaces>:
    3a5a:	0f 93       	push	r16
    3a5c:	1f 93       	push	r17
    3a5e:	cf 93       	push	r28
    3a60:	df 93       	push	r29
    3a62:	8c 01       	movw	r16, r24
    3a64:	c8 01       	movw	r24, r16
    3a66:	f1 d4       	rcall	.+2530   	; 0x444a <fgetc>
    3a68:	ec 01       	movw	r28, r24
    3a6a:	97 fd       	sbrc	r25, 7
    3a6c:	06 c0       	rjmp	.+12     	; 0x3a7a <skip_spaces+0x20>
    3a6e:	ae d4       	rcall	.+2396   	; 0x43cc <isspace>
    3a70:	89 2b       	or	r24, r25
    3a72:	c1 f7       	brne	.-16     	; 0x3a64 <skip_spaces+0xa>
    3a74:	b8 01       	movw	r22, r16
    3a76:	ce 01       	movw	r24, r28
    3a78:	82 d5       	rcall	.+2820   	; 0x457e <ungetc>
    3a7a:	ce 01       	movw	r24, r28
    3a7c:	df 91       	pop	r29
    3a7e:	cf 91       	pop	r28
    3a80:	1f 91       	pop	r17
    3a82:	0f 91       	pop	r16
    3a84:	08 95       	ret

00003a86 <conv_int>:
    3a86:	a0 e0       	ldi	r26, 0x00	; 0
    3a88:	b0 e0       	ldi	r27, 0x00	; 0
    3a8a:	e8 e4       	ldi	r30, 0x48	; 72
    3a8c:	fd e1       	ldi	r31, 0x1D	; 29
    3a8e:	95 c3       	rjmp	.+1834   	; 0x41ba <__prologue_saves__+0xc>
    3a90:	7c 01       	movw	r14, r24
    3a92:	8b 01       	movw	r16, r22
    3a94:	6a 01       	movw	r12, r20
    3a96:	d2 2f       	mov	r29, r18
    3a98:	d8 d4       	rcall	.+2480   	; 0x444a <fgetc>
    3a9a:	9c 01       	movw	r18, r24
    3a9c:	33 27       	eor	r19, r19
    3a9e:	2b 32       	cpi	r18, 0x2B	; 43
    3aa0:	31 05       	cpc	r19, r1
    3aa2:	21 f0       	breq	.+8      	; 0x3aac <conv_int+0x26>
    3aa4:	2d 32       	cpi	r18, 0x2D	; 45
    3aa6:	31 05       	cpc	r19, r1
    3aa8:	51 f4       	brne	.+20     	; 0x3abe <conv_int+0x38>
    3aaa:	d0 68       	ori	r29, 0x80	; 128
    3aac:	01 50       	subi	r16, 0x01	; 1
    3aae:	11 09       	sbc	r17, r1
    3ab0:	11 f4       	brne	.+4      	; 0x3ab6 <conv_int+0x30>
    3ab2:	80 e0       	ldi	r24, 0x00	; 0
    3ab4:	64 c0       	rjmp	.+200    	; 0x3b7e <conv_int+0xf8>
    3ab6:	c7 01       	movw	r24, r14
    3ab8:	c8 d4       	rcall	.+2448   	; 0x444a <fgetc>
    3aba:	97 fd       	sbrc	r25, 7
    3abc:	fa cf       	rjmp	.-12     	; 0x3ab2 <conv_int+0x2c>
    3abe:	cd 2f       	mov	r28, r29
    3ac0:	cd 7f       	andi	r28, 0xFD	; 253
    3ac2:	2d 2f       	mov	r18, r29
    3ac4:	20 73       	andi	r18, 0x30	; 48
    3ac6:	09 f5       	brne	.+66     	; 0x3b0a <conv_int+0x84>
    3ac8:	80 33       	cpi	r24, 0x30	; 48
    3aca:	f9 f4       	brne	.+62     	; 0x3b0a <conv_int+0x84>
    3acc:	58 01       	movw	r10, r16
    3ace:	81 e0       	ldi	r24, 0x01	; 1
    3ad0:	a8 1a       	sub	r10, r24
    3ad2:	b1 08       	sbc	r11, r1
    3ad4:	09 f4       	brne	.+2      	; 0x3ad8 <conv_int+0x52>
    3ad6:	40 c0       	rjmp	.+128    	; 0x3b58 <conv_int+0xd2>
    3ad8:	c7 01       	movw	r24, r14
    3ada:	b7 d4       	rcall	.+2414   	; 0x444a <fgetc>
    3adc:	97 fd       	sbrc	r25, 7
    3ade:	3c c0       	rjmp	.+120    	; 0x3b58 <conv_int+0xd2>
    3ae0:	9c 01       	movw	r18, r24
    3ae2:	2f 7d       	andi	r18, 0xDF	; 223
    3ae4:	33 27       	eor	r19, r19
    3ae6:	28 35       	cpi	r18, 0x58	; 88
    3ae8:	31 05       	cpc	r19, r1
    3aea:	49 f4       	brne	.+18     	; 0x3afe <conv_int+0x78>
    3aec:	c2 64       	ori	r28, 0x42	; 66
    3aee:	02 50       	subi	r16, 0x02	; 2
    3af0:	11 09       	sbc	r17, r1
    3af2:	91 f1       	breq	.+100    	; 0x3b58 <conv_int+0xd2>
    3af4:	c7 01       	movw	r24, r14
    3af6:	a9 d4       	rcall	.+2386   	; 0x444a <fgetc>
    3af8:	97 ff       	sbrs	r25, 7
    3afa:	07 c0       	rjmp	.+14     	; 0x3b0a <conv_int+0x84>
    3afc:	2d c0       	rjmp	.+90     	; 0x3b58 <conv_int+0xd2>
    3afe:	d6 ff       	sbrs	r29, 6
    3b00:	02 c0       	rjmp	.+4      	; 0x3b06 <conv_int+0x80>
    3b02:	c2 60       	ori	r28, 0x02	; 2
    3b04:	01 c0       	rjmp	.+2      	; 0x3b08 <conv_int+0x82>
    3b06:	c2 61       	ori	r28, 0x12	; 18
    3b08:	85 01       	movw	r16, r10
    3b0a:	81 2c       	mov	r8, r1
    3b0c:	91 2c       	mov	r9, r1
    3b0e:	54 01       	movw	r10, r8
    3b10:	20 ed       	ldi	r18, 0xD0	; 208
    3b12:	28 0f       	add	r18, r24
    3b14:	28 30       	cpi	r18, 0x08	; 8
    3b16:	78 f0       	brcs	.+30     	; 0x3b36 <conv_int+0xb0>
    3b18:	c4 ff       	sbrs	r28, 4
    3b1a:	03 c0       	rjmp	.+6      	; 0x3b22 <conv_int+0x9c>
    3b1c:	b7 01       	movw	r22, r14
    3b1e:	2f d5       	rcall	.+2654   	; 0x457e <ungetc>
    3b20:	18 c0       	rjmp	.+48     	; 0x3b52 <conv_int+0xcc>
    3b22:	2a 30       	cpi	r18, 0x0A	; 10
    3b24:	40 f0       	brcs	.+16     	; 0x3b36 <conv_int+0xb0>
    3b26:	c6 ff       	sbrs	r28, 6
    3b28:	f9 cf       	rjmp	.-14     	; 0x3b1c <conv_int+0x96>
    3b2a:	2f 7d       	andi	r18, 0xDF	; 223
    3b2c:	3f ee       	ldi	r19, 0xEF	; 239
    3b2e:	32 0f       	add	r19, r18
    3b30:	36 30       	cpi	r19, 0x06	; 6
    3b32:	a0 f7       	brcc	.-24     	; 0x3b1c <conv_int+0x96>
    3b34:	27 50       	subi	r18, 0x07	; 7
    3b36:	4c 2f       	mov	r20, r28
    3b38:	c5 01       	movw	r24, r10
    3b3a:	b4 01       	movw	r22, r8
    3b3c:	67 df       	rcall	.-306    	; 0x3a0c <mulacc>
    3b3e:	4b 01       	movw	r8, r22
    3b40:	5c 01       	movw	r10, r24
    3b42:	c2 60       	ori	r28, 0x02	; 2
    3b44:	01 50       	subi	r16, 0x01	; 1
    3b46:	11 09       	sbc	r17, r1
    3b48:	51 f0       	breq	.+20     	; 0x3b5e <conv_int+0xd8>
    3b4a:	c7 01       	movw	r24, r14
    3b4c:	7e d4       	rcall	.+2300   	; 0x444a <fgetc>
    3b4e:	97 ff       	sbrs	r25, 7
    3b50:	df cf       	rjmp	.-66     	; 0x3b10 <conv_int+0x8a>
    3b52:	c1 fd       	sbrc	r28, 1
    3b54:	04 c0       	rjmp	.+8      	; 0x3b5e <conv_int+0xd8>
    3b56:	ad cf       	rjmp	.-166    	; 0x3ab2 <conv_int+0x2c>
    3b58:	81 2c       	mov	r8, r1
    3b5a:	91 2c       	mov	r9, r1
    3b5c:	54 01       	movw	r10, r8
    3b5e:	c7 ff       	sbrs	r28, 7
    3b60:	08 c0       	rjmp	.+16     	; 0x3b72 <conv_int+0xec>
    3b62:	b0 94       	com	r11
    3b64:	a0 94       	com	r10
    3b66:	90 94       	com	r9
    3b68:	80 94       	com	r8
    3b6a:	81 1c       	adc	r8, r1
    3b6c:	91 1c       	adc	r9, r1
    3b6e:	a1 1c       	adc	r10, r1
    3b70:	b1 1c       	adc	r11, r1
    3b72:	2c 2f       	mov	r18, r28
    3b74:	b5 01       	movw	r22, r10
    3b76:	a4 01       	movw	r20, r8
    3b78:	c6 01       	movw	r24, r12
    3b7a:	3c df       	rcall	.-392    	; 0x39f4 <putval>
    3b7c:	81 e0       	ldi	r24, 0x01	; 1
    3b7e:	cd b7       	in	r28, 0x3d	; 61
    3b80:	de b7       	in	r29, 0x3e	; 62
    3b82:	ec e0       	ldi	r30, 0x0C	; 12
    3b84:	36 c3       	rjmp	.+1644   	; 0x41f2 <__epilogue_restores__+0xc>

00003b86 <conv_brk>:
    3b86:	a0 e2       	ldi	r26, 0x20	; 32
    3b88:	b0 e0       	ldi	r27, 0x00	; 0
    3b8a:	e8 ec       	ldi	r30, 0xC8	; 200
    3b8c:	fd e1       	ldi	r31, 0x1D	; 29
    3b8e:	11 c3       	rjmp	.+1570   	; 0x41b2 <__prologue_saves__+0x4>
    3b90:	5c 01       	movw	r10, r24
    3b92:	4b 01       	movw	r8, r22
    3b94:	7a 01       	movw	r14, r20
    3b96:	8e 01       	movw	r16, r28
    3b98:	0f 5f       	subi	r16, 0xFF	; 255
    3b9a:	1f 4f       	sbci	r17, 0xFF	; 255
    3b9c:	68 01       	movw	r12, r16
    3b9e:	80 e2       	ldi	r24, 0x20	; 32
    3ba0:	f8 01       	movw	r30, r16
    3ba2:	11 92       	st	Z+, r1
    3ba4:	8a 95       	dec	r24
    3ba6:	e9 f7       	brne	.-6      	; 0x3ba2 <conv_brk+0x1c>
    3ba8:	f5 01       	movw	r30, r10
    3baa:	53 80       	ldd	r5, Z+3	; 0x03
    3bac:	40 e0       	ldi	r20, 0x00	; 0
    3bae:	50 e0       	ldi	r21, 0x00	; 0
    3bb0:	61 2c       	mov	r6, r1
    3bb2:	90 e0       	ldi	r25, 0x00	; 0
    3bb4:	71 2c       	mov	r7, r1
    3bb6:	a1 e0       	ldi	r26, 0x01	; 1
    3bb8:	b0 e0       	ldi	r27, 0x00	; 0
    3bba:	f9 01       	movw	r30, r18
    3bbc:	53 fc       	sbrc	r5, 3
    3bbe:	85 91       	lpm	r24, Z+
    3bc0:	53 fe       	sbrs	r5, 3
    3bc2:	81 91       	ld	r24, Z+
    3bc4:	8f 01       	movw	r16, r30
    3bc6:	48 2e       	mov	r4, r24
    3bc8:	9f 01       	movw	r18, r30
    3bca:	81 11       	cpse	r24, r1
    3bcc:	03 c0       	rjmp	.+6      	; 0x3bd4 <conv_brk+0x4e>
    3bce:	80 e0       	ldi	r24, 0x00	; 0
    3bd0:	90 e0       	ldi	r25, 0x00	; 0
    3bd2:	94 c0       	rjmp	.+296    	; 0x3cfc <conv_brk+0x176>
    3bd4:	8e 35       	cpi	r24, 0x5E	; 94
    3bd6:	19 f4       	brne	.+6      	; 0x3bde <conv_brk+0x58>
    3bd8:	41 15       	cp	r20, r1
    3bda:	51 05       	cpc	r21, r1
    3bdc:	51 f1       	breq	.+84     	; 0x3c32 <conv_brk+0xac>
    3bde:	67 2d       	mov	r22, r7
    3be0:	70 e0       	ldi	r23, 0x00	; 0
    3be2:	64 17       	cp	r22, r20
    3be4:	75 07       	cpc	r23, r21
    3be6:	3c f4       	brge	.+14     	; 0x3bf6 <conv_brk+0x70>
    3be8:	8d 35       	cpi	r24, 0x5D	; 93
    3bea:	61 f1       	breq	.+88     	; 0x3c44 <conv_brk+0xbe>
    3bec:	8d 32       	cpi	r24, 0x2D	; 45
    3bee:	19 f4       	brne	.+6      	; 0x3bf6 <conv_brk+0x70>
    3bf0:	99 23       	and	r25, r25
    3bf2:	11 f1       	breq	.+68     	; 0x3c38 <conv_brk+0xb2>
    3bf4:	03 c0       	rjmp	.+6      	; 0x3bfc <conv_brk+0x76>
    3bf6:	99 23       	and	r25, r25
    3bf8:	09 f4       	brne	.+2      	; 0x3bfc <conv_brk+0x76>
    3bfa:	6b c0       	rjmp	.+214    	; 0x3cd2 <conv_brk+0x14c>
    3bfc:	84 2d       	mov	r24, r4
    3bfe:	86 95       	lsr	r24
    3c00:	86 95       	lsr	r24
    3c02:	86 95       	lsr	r24
    3c04:	f6 01       	movw	r30, r12
    3c06:	e8 0f       	add	r30, r24
    3c08:	f1 1d       	adc	r31, r1
    3c0a:	84 2d       	mov	r24, r4
    3c0c:	87 70       	andi	r24, 0x07	; 7
    3c0e:	8d 01       	movw	r16, r26
    3c10:	02 c0       	rjmp	.+4      	; 0x3c16 <conv_brk+0x90>
    3c12:	00 0f       	add	r16, r16
    3c14:	11 1f       	adc	r17, r17
    3c16:	8a 95       	dec	r24
    3c18:	e2 f7       	brpl	.-8      	; 0x3c12 <conv_brk+0x8c>
    3c1a:	c8 01       	movw	r24, r16
    3c1c:	90 81       	ld	r25, Z
    3c1e:	89 2b       	or	r24, r25
    3c20:	80 83       	st	Z, r24
    3c22:	64 14       	cp	r6, r4
    3c24:	59 f0       	breq	.+22     	; 0x3c3c <conv_brk+0xb6>
    3c26:	46 14       	cp	r4, r6
    3c28:	10 f4       	brcc	.+4      	; 0x3c2e <conv_brk+0xa8>
    3c2a:	43 94       	inc	r4
    3c2c:	e7 cf       	rjmp	.-50     	; 0x3bfc <conv_brk+0x76>
    3c2e:	4a 94       	dec	r4
    3c30:	e5 cf       	rjmp	.-54     	; 0x3bfc <conv_brk+0x76>
    3c32:	77 24       	eor	r7, r7
    3c34:	73 94       	inc	r7
    3c36:	03 c0       	rjmp	.+6      	; 0x3c3e <conv_brk+0xb8>
    3c38:	91 e0       	ldi	r25, 0x01	; 1
    3c3a:	01 c0       	rjmp	.+2      	; 0x3c3e <conv_brk+0xb8>
    3c3c:	90 e0       	ldi	r25, 0x00	; 0
    3c3e:	4f 5f       	subi	r20, 0xFF	; 255
    3c40:	5f 4f       	sbci	r21, 0xFF	; 255
    3c42:	bb cf       	rjmp	.-138    	; 0x3bba <conv_brk+0x34>
    3c44:	99 23       	and	r25, r25
    3c46:	19 f0       	breq	.+6      	; 0x3c4e <conv_brk+0xc8>
    3c48:	8e 81       	ldd	r24, Y+6	; 0x06
    3c4a:	80 62       	ori	r24, 0x20	; 32
    3c4c:	8e 83       	std	Y+6, r24	; 0x06
    3c4e:	71 10       	cpse	r7, r1
    3c50:	03 c0       	rjmp	.+6      	; 0x3c58 <conv_brk+0xd2>
    3c52:	77 24       	eor	r7, r7
    3c54:	73 94       	inc	r7
    3c56:	19 c0       	rjmp	.+50     	; 0x3c8a <conv_brk+0x104>
    3c58:	f6 01       	movw	r30, r12
    3c5a:	9e 01       	movw	r18, r28
    3c5c:	2f 5d       	subi	r18, 0xDF	; 223
    3c5e:	3f 4f       	sbci	r19, 0xFF	; 255
    3c60:	80 81       	ld	r24, Z
    3c62:	80 95       	com	r24
    3c64:	81 93       	st	Z+, r24
    3c66:	2e 17       	cp	r18, r30
    3c68:	3f 07       	cpc	r19, r31
    3c6a:	d1 f7       	brne	.-12     	; 0x3c60 <conv_brk+0xda>
    3c6c:	f2 cf       	rjmp	.-28     	; 0x3c52 <conv_brk+0xcc>
    3c6e:	e1 14       	cp	r14, r1
    3c70:	f1 04       	cpc	r15, r1
    3c72:	31 f0       	breq	.+12     	; 0x3c80 <conv_brk+0xfa>
    3c74:	f7 01       	movw	r30, r14
    3c76:	80 83       	st	Z, r24
    3c78:	b7 01       	movw	r22, r14
    3c7a:	6f 5f       	subi	r22, 0xFF	; 255
    3c7c:	7f 4f       	sbci	r23, 0xFF	; 255
    3c7e:	7b 01       	movw	r14, r22
    3c80:	71 e0       	ldi	r23, 0x01	; 1
    3c82:	87 1a       	sub	r8, r23
    3c84:	91 08       	sbc	r9, r1
    3c86:	71 2c       	mov	r7, r1
    3c88:	e9 f0       	breq	.+58     	; 0x3cc4 <conv_brk+0x13e>
    3c8a:	c5 01       	movw	r24, r10
    3c8c:	de d3       	rcall	.+1980   	; 0x444a <fgetc>
    3c8e:	97 fd       	sbrc	r25, 7
    3c90:	17 c0       	rjmp	.+46     	; 0x3cc0 <conv_brk+0x13a>
    3c92:	fc 01       	movw	r30, r24
    3c94:	ff 27       	eor	r31, r31
    3c96:	23 e0       	ldi	r18, 0x03	; 3
    3c98:	f5 95       	asr	r31
    3c9a:	e7 95       	ror	r30
    3c9c:	2a 95       	dec	r18
    3c9e:	e1 f7       	brne	.-8      	; 0x3c98 <conv_brk+0x112>
    3ca0:	ec 0d       	add	r30, r12
    3ca2:	fd 1d       	adc	r31, r13
    3ca4:	20 81       	ld	r18, Z
    3ca6:	30 e0       	ldi	r19, 0x00	; 0
    3ca8:	ac 01       	movw	r20, r24
    3caa:	47 70       	andi	r20, 0x07	; 7
    3cac:	55 27       	eor	r21, r21
    3cae:	02 c0       	rjmp	.+4      	; 0x3cb4 <conv_brk+0x12e>
    3cb0:	35 95       	asr	r19
    3cb2:	27 95       	ror	r18
    3cb4:	4a 95       	dec	r20
    3cb6:	e2 f7       	brpl	.-8      	; 0x3cb0 <conv_brk+0x12a>
    3cb8:	20 fd       	sbrc	r18, 0
    3cba:	d9 cf       	rjmp	.-78     	; 0x3c6e <conv_brk+0xe8>
    3cbc:	b5 01       	movw	r22, r10
    3cbe:	5f d4       	rcall	.+2238   	; 0x457e <ungetc>
    3cc0:	71 10       	cpse	r7, r1
    3cc2:	85 cf       	rjmp	.-246    	; 0x3bce <conv_brk+0x48>
    3cc4:	e1 14       	cp	r14, r1
    3cc6:	f1 04       	cpc	r15, r1
    3cc8:	11 f0       	breq	.+4      	; 0x3cce <conv_brk+0x148>
    3cca:	f7 01       	movw	r30, r14
    3ccc:	10 82       	st	Z, r1
    3cce:	c8 01       	movw	r24, r16
    3cd0:	15 c0       	rjmp	.+42     	; 0x3cfc <conv_brk+0x176>
    3cd2:	68 2f       	mov	r22, r24
    3cd4:	66 95       	lsr	r22
    3cd6:	66 95       	lsr	r22
    3cd8:	66 95       	lsr	r22
    3cda:	f6 01       	movw	r30, r12
    3cdc:	e6 0f       	add	r30, r22
    3cde:	f1 1d       	adc	r31, r1
    3ce0:	68 2f       	mov	r22, r24
    3ce2:	67 70       	andi	r22, 0x07	; 7
    3ce4:	8d 01       	movw	r16, r26
    3ce6:	02 c0       	rjmp	.+4      	; 0x3cec <conv_brk+0x166>
    3ce8:	00 0f       	add	r16, r16
    3cea:	11 1f       	adc	r17, r17
    3cec:	6a 95       	dec	r22
    3cee:	e2 f7       	brpl	.-8      	; 0x3ce8 <conv_brk+0x162>
    3cf0:	b8 01       	movw	r22, r16
    3cf2:	70 81       	ld	r23, Z
    3cf4:	67 2b       	or	r22, r23
    3cf6:	60 83       	st	Z, r22
    3cf8:	68 2e       	mov	r6, r24
    3cfa:	a1 cf       	rjmp	.-190    	; 0x3c3e <conv_brk+0xb8>
    3cfc:	a0 96       	adiw	r28, 0x20	; 32
    3cfe:	e0 e1       	ldi	r30, 0x10	; 16
    3d00:	74 c2       	rjmp	.+1256   	; 0x41ea <__epilogue_restores__+0x4>

00003d02 <conv_flt>:
    3d02:	2f 92       	push	r2
    3d04:	3f 92       	push	r3
    3d06:	4f 92       	push	r4
    3d08:	5f 92       	push	r5
    3d0a:	6f 92       	push	r6
    3d0c:	7f 92       	push	r7
    3d0e:	9f 92       	push	r9
    3d10:	af 92       	push	r10
    3d12:	bf 92       	push	r11
    3d14:	cf 92       	push	r12
    3d16:	df 92       	push	r13
    3d18:	ef 92       	push	r14
    3d1a:	ff 92       	push	r15
    3d1c:	0f 93       	push	r16
    3d1e:	1f 93       	push	r17
    3d20:	cf 93       	push	r28
    3d22:	df 93       	push	r29
    3d24:	6c 01       	movw	r12, r24
    3d26:	8b 01       	movw	r16, r22
    3d28:	1a 01       	movw	r2, r20
    3d2a:	8f d3       	rcall	.+1822   	; 0x444a <fgetc>
    3d2c:	ec 01       	movw	r28, r24
    3d2e:	99 27       	eor	r25, r25
    3d30:	8b 32       	cpi	r24, 0x2B	; 43
    3d32:	91 05       	cpc	r25, r1
    3d34:	29 f0       	breq	.+10     	; 0x3d40 <conv_flt+0x3e>
    3d36:	8d 97       	sbiw	r24, 0x2d	; 45
    3d38:	79 f4       	brne	.+30     	; 0x3d58 <conv_flt+0x56>
    3d3a:	30 e8       	ldi	r19, 0x80	; 128
    3d3c:	93 2e       	mov	r9, r19
    3d3e:	01 c0       	rjmp	.+2      	; 0x3d42 <conv_flt+0x40>
    3d40:	91 2c       	mov	r9, r1
    3d42:	01 50       	subi	r16, 0x01	; 1
    3d44:	11 09       	sbc	r17, r1
    3d46:	11 f4       	brne	.+4      	; 0x3d4c <conv_flt+0x4a>
    3d48:	80 e0       	ldi	r24, 0x00	; 0
    3d4a:	fe c0       	rjmp	.+508    	; 0x3f48 <conv_flt+0x246>
    3d4c:	c6 01       	movw	r24, r12
    3d4e:	7d d3       	rcall	.+1786   	; 0x444a <fgetc>
    3d50:	ec 01       	movw	r28, r24
    3d52:	97 ff       	sbrs	r25, 7
    3d54:	02 c0       	rjmp	.+4      	; 0x3d5a <conv_flt+0x58>
    3d56:	f8 cf       	rjmp	.-16     	; 0x3d48 <conv_flt+0x46>
    3d58:	91 2c       	mov	r9, r1
    3d5a:	ce 01       	movw	r24, r28
    3d5c:	3f d3       	rcall	.+1662   	; 0x43dc <tolower>
    3d5e:	89 36       	cpi	r24, 0x69	; 105
    3d60:	91 05       	cpc	r25, r1
    3d62:	31 f0       	breq	.+12     	; 0x3d70 <conv_flt+0x6e>
    3d64:	8e 36       	cpi	r24, 0x6E	; 110
    3d66:	91 05       	cpc	r25, r1
    3d68:	81 f5       	brne	.+96     	; 0x3dca <conv_flt+0xc8>
    3d6a:	c2 e9       	ldi	r28, 0x92	; 146
    3d6c:	df e0       	ldi	r29, 0x0F	; 15
    3d6e:	02 c0       	rjmp	.+4      	; 0x3d74 <conv_flt+0x72>
    3d70:	c5 e9       	ldi	r28, 0x95	; 149
    3d72:	df e0       	ldi	r29, 0x0F	; 15
    3d74:	21 96       	adiw	r28, 0x01	; 1
    3d76:	fe 01       	movw	r30, r28
    3d78:	31 97       	sbiw	r30, 0x01	; 1
    3d7a:	b4 90       	lpm	r11, Z
    3d7c:	bb 20       	and	r11, r11
    3d7e:	b1 f0       	breq	.+44     	; 0x3dac <conv_flt+0xaa>
    3d80:	01 50       	subi	r16, 0x01	; 1
    3d82:	11 09       	sbc	r17, r1
    3d84:	79 f0       	breq	.+30     	; 0x3da4 <conv_flt+0xa2>
    3d86:	c6 01       	movw	r24, r12
    3d88:	60 d3       	rcall	.+1728   	; 0x444a <fgetc>
    3d8a:	7c 01       	movw	r14, r24
    3d8c:	97 fd       	sbrc	r25, 7
    3d8e:	0a c0       	rjmp	.+20     	; 0x3da4 <conv_flt+0xa2>
    3d90:	25 d3       	rcall	.+1610   	; 0x43dc <tolower>
    3d92:	99 27       	eor	r25, r25
    3d94:	eb 2d       	mov	r30, r11
    3d96:	f0 e0       	ldi	r31, 0x00	; 0
    3d98:	8e 17       	cp	r24, r30
    3d9a:	9f 07       	cpc	r25, r31
    3d9c:	59 f3       	breq	.-42     	; 0x3d74 <conv_flt+0x72>
    3d9e:	b6 01       	movw	r22, r12
    3da0:	c7 01       	movw	r24, r14
    3da2:	ed d3       	rcall	.+2010   	; 0x457e <ungetc>
    3da4:	c8 59       	subi	r28, 0x98	; 152
    3da6:	df 40       	sbci	r29, 0x0F	; 15
    3da8:	79 f6       	brne	.-98     	; 0x3d48 <conv_flt+0x46>
    3daa:	03 c0       	rjmp	.+6      	; 0x3db2 <conv_flt+0xb0>
    3dac:	c5 59       	subi	r28, 0x95	; 149
    3dae:	df 40       	sbci	r29, 0x0F	; 15
    3db0:	29 f0       	breq	.+10     	; 0x3dbc <conv_flt+0xba>
    3db2:	80 e0       	ldi	r24, 0x00	; 0
    3db4:	90 e0       	ldi	r25, 0x00	; 0
    3db6:	a0 e8       	ldi	r26, 0x80	; 128
    3db8:	bf e7       	ldi	r27, 0x7F	; 127
    3dba:	04 c0       	rjmp	.+8      	; 0x3dc4 <conv_flt+0xc2>
    3dbc:	80 e0       	ldi	r24, 0x00	; 0
    3dbe:	90 e0       	ldi	r25, 0x00	; 0
    3dc0:	a0 ec       	ldi	r26, 0xC0	; 192
    3dc2:	bf e7       	ldi	r27, 0x7F	; 127
    3dc4:	bc 01       	movw	r22, r24
    3dc6:	cd 01       	movw	r24, r26
    3dc8:	af c0       	rjmp	.+350    	; 0x3f28 <conv_flt+0x226>
    3dca:	41 2c       	mov	r4, r1
    3dcc:	51 2c       	mov	r5, r1
    3dce:	32 01       	movw	r6, r4
    3dd0:	e1 2c       	mov	r14, r1
    3dd2:	f1 2c       	mov	r15, r1
    3dd4:	2c 2f       	mov	r18, r28
    3dd6:	20 53       	subi	r18, 0x30	; 48
    3dd8:	2a 30       	cpi	r18, 0x0A	; 10
    3dda:	08 f5       	brcc	.+66     	; 0x3e1e <conv_flt+0x11c>
    3ddc:	e9 2d       	mov	r30, r9
    3dde:	e2 60       	ori	r30, 0x02	; 2
    3de0:	be 2e       	mov	r11, r30
    3de2:	89 2d       	mov	r24, r9
    3de4:	88 70       	andi	r24, 0x08	; 8
    3de6:	92 fe       	sbrs	r9, 2
    3de8:	06 c0       	rjmp	.+12     	; 0x3df6 <conv_flt+0xf4>
    3dea:	81 11       	cpse	r24, r1
    3dec:	1f c0       	rjmp	.+62     	; 0x3e2c <conv_flt+0x12a>
    3dee:	ff ef       	ldi	r31, 0xFF	; 255
    3df0:	ef 1a       	sub	r14, r31
    3df2:	ff 0a       	sbc	r15, r31
    3df4:	1b c0       	rjmp	.+54     	; 0x3e2c <conv_flt+0x12a>
    3df6:	88 23       	and	r24, r24
    3df8:	19 f0       	breq	.+6      	; 0x3e00 <conv_flt+0xfe>
    3dfa:	81 e0       	ldi	r24, 0x01	; 1
    3dfc:	e8 1a       	sub	r14, r24
    3dfe:	f1 08       	sbc	r15, r1
    3e00:	40 e2       	ldi	r20, 0x20	; 32
    3e02:	c3 01       	movw	r24, r6
    3e04:	b2 01       	movw	r22, r4
    3e06:	02 de       	rcall	.-1020   	; 0x3a0c <mulacc>
    3e08:	2b 01       	movw	r4, r22
    3e0a:	3c 01       	movw	r6, r24
    3e0c:	68 39       	cpi	r22, 0x98	; 152
    3e0e:	79 49       	sbci	r23, 0x99	; 153
    3e10:	89 49       	sbci	r24, 0x99	; 153
    3e12:	99 41       	sbci	r25, 0x19	; 25
    3e14:	58 f0       	brcs	.+22     	; 0x3e2c <conv_flt+0x12a>
    3e16:	f9 2d       	mov	r31, r9
    3e18:	f6 60       	ori	r31, 0x06	; 6
    3e1a:	bf 2e       	mov	r11, r31
    3e1c:	07 c0       	rjmp	.+14     	; 0x3e2c <conv_flt+0x12a>
    3e1e:	2e 3f       	cpi	r18, 0xFE	; 254
    3e20:	81 f4       	brne	.+32     	; 0x3e42 <conv_flt+0x140>
    3e22:	93 fc       	sbrc	r9, 3
    3e24:	0e c0       	rjmp	.+28     	; 0x3e42 <conv_flt+0x140>
    3e26:	29 2d       	mov	r18, r9
    3e28:	28 60       	ori	r18, 0x08	; 8
    3e2a:	b2 2e       	mov	r11, r18
    3e2c:	01 50       	subi	r16, 0x01	; 1
    3e2e:	11 09       	sbc	r17, r1
    3e30:	39 f0       	breq	.+14     	; 0x3e40 <conv_flt+0x13e>
    3e32:	c6 01       	movw	r24, r12
    3e34:	0a d3       	rcall	.+1556   	; 0x444a <fgetc>
    3e36:	ec 01       	movw	r28, r24
    3e38:	9b 2c       	mov	r9, r11
    3e3a:	97 ff       	sbrs	r25, 7
    3e3c:	cb cf       	rjmp	.-106    	; 0x3dd4 <conv_flt+0xd2>
    3e3e:	01 c0       	rjmp	.+2      	; 0x3e42 <conv_flt+0x140>
    3e40:	9b 2c       	mov	r9, r11
    3e42:	91 fe       	sbrs	r9, 1
    3e44:	81 cf       	rjmp	.-254    	; 0x3d48 <conv_flt+0x46>
    3e46:	ce 01       	movw	r24, r28
    3e48:	8f 7d       	andi	r24, 0xDF	; 223
    3e4a:	99 27       	eor	r25, r25
    3e4c:	85 34       	cpi	r24, 0x45	; 69
    3e4e:	91 05       	cpc	r25, r1
    3e50:	09 f0       	breq	.+2      	; 0x3e54 <conv_flt+0x152>
    3e52:	3e c0       	rjmp	.+124    	; 0x3ed0 <conv_flt+0x1ce>
    3e54:	58 01       	movw	r10, r16
    3e56:	81 e0       	ldi	r24, 0x01	; 1
    3e58:	a8 1a       	sub	r10, r24
    3e5a:	b1 08       	sbc	r11, r1
    3e5c:	09 f4       	brne	.+2      	; 0x3e60 <conv_flt+0x15e>
    3e5e:	74 cf       	rjmp	.-280    	; 0x3d48 <conv_flt+0x46>
    3e60:	c6 01       	movw	r24, r12
    3e62:	f3 d2       	rcall	.+1510   	; 0x444a <fgetc>
    3e64:	ec 01       	movw	r28, r24
    3e66:	97 fd       	sbrc	r25, 7
    3e68:	6f cf       	rjmp	.-290    	; 0x3d48 <conv_flt+0x46>
    3e6a:	99 27       	eor	r25, r25
    3e6c:	8b 32       	cpi	r24, 0x2B	; 43
    3e6e:	91 05       	cpc	r25, r1
    3e70:	29 f0       	breq	.+10     	; 0x3e7c <conv_flt+0x17a>
    3e72:	8d 97       	sbiw	r24, 0x2d	; 45
    3e74:	61 f4       	brne	.+24     	; 0x3e8e <conv_flt+0x18c>
    3e76:	e9 2d       	mov	r30, r9
    3e78:	e0 61       	ori	r30, 0x10	; 16
    3e7a:	9e 2e       	mov	r9, r30
    3e7c:	58 01       	movw	r10, r16
    3e7e:	f2 e0       	ldi	r31, 0x02	; 2
    3e80:	af 1a       	sub	r10, r31
    3e82:	b1 08       	sbc	r11, r1
    3e84:	09 f4       	brne	.+2      	; 0x3e88 <conv_flt+0x186>
    3e86:	60 cf       	rjmp	.-320    	; 0x3d48 <conv_flt+0x46>
    3e88:	c6 01       	movw	r24, r12
    3e8a:	df d2       	rcall	.+1470   	; 0x444a <fgetc>
    3e8c:	ec 01       	movw	r28, r24
    3e8e:	ce 01       	movw	r24, r28
    3e90:	c0 97       	sbiw	r24, 0x30	; 48
    3e92:	0a 97       	sbiw	r24, 0x0a	; 10
    3e94:	08 f0       	brcs	.+2      	; 0x3e98 <conv_flt+0x196>
    3e96:	58 cf       	rjmp	.-336    	; 0x3d48 <conv_flt+0x46>
    3e98:	85 01       	movw	r16, r10
    3e9a:	a1 2c       	mov	r10, r1
    3e9c:	b1 2c       	mov	r11, r1
    3e9e:	b5 01       	movw	r22, r10
    3ea0:	bb 0c       	add	r11, r11
    3ea2:	88 0b       	sbc	r24, r24
    3ea4:	99 0b       	sbc	r25, r25
    3ea6:	2c 2f       	mov	r18, r28
    3ea8:	20 53       	subi	r18, 0x30	; 48
    3eaa:	40 e2       	ldi	r20, 0x20	; 32
    3eac:	af dd       	rcall	.-1186   	; 0x3a0c <mulacc>
    3eae:	5b 01       	movw	r10, r22
    3eb0:	01 50       	subi	r16, 0x01	; 1
    3eb2:	11 09       	sbc	r17, r1
    3eb4:	31 f0       	breq	.+12     	; 0x3ec2 <conv_flt+0x1c0>
    3eb6:	c6 01       	movw	r24, r12
    3eb8:	c8 d2       	rcall	.+1424   	; 0x444a <fgetc>
    3eba:	ec 01       	movw	r28, r24
    3ebc:	c0 97       	sbiw	r24, 0x30	; 48
    3ebe:	0a 97       	sbiw	r24, 0x0a	; 10
    3ec0:	70 f3       	brcs	.-36     	; 0x3e9e <conv_flt+0x19c>
    3ec2:	94 fe       	sbrs	r9, 4
    3ec4:	03 c0       	rjmp	.+6      	; 0x3ecc <conv_flt+0x1ca>
    3ec6:	b1 94       	neg	r11
    3ec8:	a1 94       	neg	r10
    3eca:	b1 08       	sbc	r11, r1
    3ecc:	ea 0c       	add	r14, r10
    3ece:	fb 1c       	adc	r15, r11
    3ed0:	01 2b       	or	r16, r17
    3ed2:	29 f0       	breq	.+10     	; 0x3ede <conv_flt+0x1dc>
    3ed4:	d7 fd       	sbrc	r29, 7
    3ed6:	03 c0       	rjmp	.+6      	; 0x3ede <conv_flt+0x1dc>
    3ed8:	b6 01       	movw	r22, r12
    3eda:	ce 01       	movw	r24, r28
    3edc:	50 d3       	rcall	.+1696   	; 0x457e <ungetc>
    3ede:	c3 01       	movw	r24, r6
    3ee0:	b2 01       	movw	r22, r4
    3ee2:	98 d8       	rcall	.-3792   	; 0x3014 <__floatunsisf>
    3ee4:	f7 fe       	sbrs	r15, 7
    3ee6:	06 c0       	rjmp	.+12     	; 0x3ef4 <conv_flt+0x1f2>
    3ee8:	f1 94       	neg	r15
    3eea:	e1 94       	neg	r14
    3eec:	f1 08       	sbc	r15, r1
    3eee:	c1 eb       	ldi	r28, 0xB1	; 177
    3ef0:	df e0       	ldi	r29, 0x0F	; 15
    3ef2:	02 c0       	rjmp	.+4      	; 0x3ef8 <conv_flt+0x1f6>
    3ef4:	c9 ec       	ldi	r28, 0xC9	; 201
    3ef6:	df e0       	ldi	r29, 0x0F	; 15
    3ef8:	6e 01       	movw	r12, r28
    3efa:	28 e1       	ldi	r18, 0x18	; 24
    3efc:	c2 1a       	sub	r12, r18
    3efe:	d1 08       	sbc	r13, r1
    3f00:	00 e2       	ldi	r16, 0x20	; 32
    3f02:	10 e0       	ldi	r17, 0x00	; 0
    3f04:	e0 16       	cp	r14, r16
    3f06:	f1 06       	cpc	r15, r17
    3f08:	48 f0       	brcs	.+18     	; 0x3f1c <conv_flt+0x21a>
    3f0a:	fe 01       	movw	r30, r28
    3f0c:	25 91       	lpm	r18, Z+
    3f0e:	35 91       	lpm	r19, Z+
    3f10:	45 91       	lpm	r20, Z+
    3f12:	54 91       	lpm	r21, Z
    3f14:	7a d9       	rcall	.-3340   	; 0x320a <__mulsf3>
    3f16:	e0 1a       	sub	r14, r16
    3f18:	f1 0a       	sbc	r15, r17
    3f1a:	f4 cf       	rjmp	.-24     	; 0x3f04 <conv_flt+0x202>
    3f1c:	24 97       	sbiw	r28, 0x04	; 4
    3f1e:	16 95       	lsr	r17
    3f20:	07 95       	ror	r16
    3f22:	cc 16       	cp	r12, r28
    3f24:	dd 06       	cpc	r13, r29
    3f26:	71 f7       	brne	.-36     	; 0x3f04 <conv_flt+0x202>
    3f28:	97 fe       	sbrs	r9, 7
    3f2a:	05 c0       	rjmp	.+10     	; 0x3f36 <conv_flt+0x234>
    3f2c:	dc 01       	movw	r26, r24
    3f2e:	cb 01       	movw	r24, r22
    3f30:	b0 58       	subi	r27, 0x80	; 128
    3f32:	bc 01       	movw	r22, r24
    3f34:	cd 01       	movw	r24, r26
    3f36:	21 14       	cp	r2, r1
    3f38:	31 04       	cpc	r3, r1
    3f3a:	29 f0       	breq	.+10     	; 0x3f46 <conv_flt+0x244>
    3f3c:	f1 01       	movw	r30, r2
    3f3e:	60 83       	st	Z, r22
    3f40:	71 83       	std	Z+1, r23	; 0x01
    3f42:	82 83       	std	Z+2, r24	; 0x02
    3f44:	93 83       	std	Z+3, r25	; 0x03
    3f46:	81 e0       	ldi	r24, 0x01	; 1
    3f48:	df 91       	pop	r29
    3f4a:	cf 91       	pop	r28
    3f4c:	1f 91       	pop	r17
    3f4e:	0f 91       	pop	r16
    3f50:	ff 90       	pop	r15
    3f52:	ef 90       	pop	r14
    3f54:	df 90       	pop	r13
    3f56:	cf 90       	pop	r12
    3f58:	bf 90       	pop	r11
    3f5a:	af 90       	pop	r10
    3f5c:	9f 90       	pop	r9
    3f5e:	7f 90       	pop	r7
    3f60:	6f 90       	pop	r6
    3f62:	5f 90       	pop	r5
    3f64:	4f 90       	pop	r4
    3f66:	3f 90       	pop	r3
    3f68:	2f 90       	pop	r2
    3f6a:	08 95       	ret

00003f6c <vfscanf>:
    3f6c:	a0 e0       	ldi	r26, 0x00	; 0
    3f6e:	b0 e0       	ldi	r27, 0x00	; 0
    3f70:	eb eb       	ldi	r30, 0xBB	; 187
    3f72:	ff e1       	ldi	r31, 0x1F	; 31
    3f74:	20 c1       	rjmp	.+576    	; 0x41b6 <__prologue_saves__+0x8>
    3f76:	5c 01       	movw	r10, r24
    3f78:	eb 01       	movw	r28, r22
    3f7a:	4a 01       	movw	r8, r20
    3f7c:	fc 01       	movw	r30, r24
    3f7e:	17 82       	std	Z+7, r1	; 0x07
    3f80:	16 82       	std	Z+6, r1	; 0x06
    3f82:	61 2c       	mov	r6, r1
    3f84:	f5 01       	movw	r30, r10
    3f86:	03 81       	ldd	r16, Z+3	; 0x03
    3f88:	fe 01       	movw	r30, r28
    3f8a:	03 fd       	sbrc	r16, 3
    3f8c:	85 91       	lpm	r24, Z+
    3f8e:	03 ff       	sbrs	r16, 3
    3f90:	81 91       	ld	r24, Z+
    3f92:	18 2f       	mov	r17, r24
    3f94:	ef 01       	movw	r28, r30
    3f96:	88 23       	and	r24, r24
    3f98:	09 f4       	brne	.+2      	; 0x3f9c <vfscanf+0x30>
    3f9a:	00 c1       	rjmp	.+512    	; 0x419c <vfscanf+0x230>
    3f9c:	90 e0       	ldi	r25, 0x00	; 0
    3f9e:	16 d2       	rcall	.+1068   	; 0x43cc <isspace>
    3fa0:	89 2b       	or	r24, r25
    3fa2:	19 f0       	breq	.+6      	; 0x3faa <vfscanf+0x3e>
    3fa4:	c5 01       	movw	r24, r10
    3fa6:	59 dd       	rcall	.-1358   	; 0x3a5a <skip_spaces>
    3fa8:	ed cf       	rjmp	.-38     	; 0x3f84 <vfscanf+0x18>
    3faa:	15 32       	cpi	r17, 0x25	; 37
    3fac:	41 f4       	brne	.+16     	; 0x3fbe <vfscanf+0x52>
    3fae:	fe 01       	movw	r30, r28
    3fb0:	03 fd       	sbrc	r16, 3
    3fb2:	15 91       	lpm	r17, Z+
    3fb4:	03 ff       	sbrs	r16, 3
    3fb6:	11 91       	ld	r17, Z+
    3fb8:	ef 01       	movw	r28, r30
    3fba:	15 32       	cpi	r17, 0x25	; 37
    3fbc:	71 f4       	brne	.+28     	; 0x3fda <vfscanf+0x6e>
    3fbe:	c5 01       	movw	r24, r10
    3fc0:	44 d2       	rcall	.+1160   	; 0x444a <fgetc>
    3fc2:	97 fd       	sbrc	r25, 7
    3fc4:	e9 c0       	rjmp	.+466    	; 0x4198 <vfscanf+0x22c>
    3fc6:	41 2f       	mov	r20, r17
    3fc8:	50 e0       	ldi	r21, 0x00	; 0
    3fca:	9c 01       	movw	r18, r24
    3fcc:	33 27       	eor	r19, r19
    3fce:	24 17       	cp	r18, r20
    3fd0:	35 07       	cpc	r19, r21
    3fd2:	c1 f2       	breq	.-80     	; 0x3f84 <vfscanf+0x18>
    3fd4:	b5 01       	movw	r22, r10
    3fd6:	d3 d2       	rcall	.+1446   	; 0x457e <ungetc>
    3fd8:	e1 c0       	rjmp	.+450    	; 0x419c <vfscanf+0x230>
    3fda:	1a 32       	cpi	r17, 0x2A	; 42
    3fdc:	41 f4       	brne	.+16     	; 0x3fee <vfscanf+0x82>
    3fde:	03 fd       	sbrc	r16, 3
    3fe0:	15 91       	lpm	r17, Z+
    3fe2:	03 ff       	sbrs	r16, 3
    3fe4:	11 91       	ld	r17, Z+
    3fe6:	ef 01       	movw	r28, r30
    3fe8:	77 24       	eor	r7, r7
    3fea:	73 94       	inc	r7
    3fec:	01 c0       	rjmp	.+2      	; 0x3ff0 <vfscanf+0x84>
    3fee:	71 2c       	mov	r7, r1
    3ff0:	e1 2c       	mov	r14, r1
    3ff2:	f1 2c       	mov	r15, r1
    3ff4:	20 ed       	ldi	r18, 0xD0	; 208
    3ff6:	21 0f       	add	r18, r17
    3ff8:	2a 30       	cpi	r18, 0x0A	; 10
    3ffa:	80 f4       	brcc	.+32     	; 0x401c <vfscanf+0xb0>
    3ffc:	f7 2d       	mov	r31, r7
    3ffe:	f2 60       	ori	r31, 0x02	; 2
    4000:	7f 2e       	mov	r7, r31
    4002:	b7 01       	movw	r22, r14
    4004:	80 e0       	ldi	r24, 0x00	; 0
    4006:	90 e0       	ldi	r25, 0x00	; 0
    4008:	40 e2       	ldi	r20, 0x20	; 32
    400a:	00 dd       	rcall	.-1536   	; 0x3a0c <mulacc>
    400c:	7b 01       	movw	r14, r22
    400e:	fe 01       	movw	r30, r28
    4010:	03 fd       	sbrc	r16, 3
    4012:	15 91       	lpm	r17, Z+
    4014:	03 ff       	sbrs	r16, 3
    4016:	11 91       	ld	r17, Z+
    4018:	ef 01       	movw	r28, r30
    401a:	ec cf       	rjmp	.-40     	; 0x3ff4 <vfscanf+0x88>
    401c:	71 fe       	sbrs	r7, 1
    401e:	04 c0       	rjmp	.+8      	; 0x4028 <vfscanf+0xbc>
    4020:	e1 14       	cp	r14, r1
    4022:	f1 04       	cpc	r15, r1
    4024:	21 f4       	brne	.+8      	; 0x402e <vfscanf+0xc2>
    4026:	ba c0       	rjmp	.+372    	; 0x419c <vfscanf+0x230>
    4028:	ee 24       	eor	r14, r14
    402a:	ea 94       	dec	r14
    402c:	fe 2c       	mov	r15, r14
    402e:	18 36       	cpi	r17, 0x68	; 104
    4030:	19 f0       	breq	.+6      	; 0x4038 <vfscanf+0xcc>
    4032:	1c 36       	cpi	r17, 0x6C	; 108
    4034:	61 f0       	breq	.+24     	; 0x404e <vfscanf+0xe2>
    4036:	14 c0       	rjmp	.+40     	; 0x4060 <vfscanf+0xf4>
    4038:	fe 01       	movw	r30, r28
    403a:	03 fd       	sbrc	r16, 3
    403c:	15 91       	lpm	r17, Z+
    403e:	03 ff       	sbrs	r16, 3
    4040:	11 91       	ld	r17, Z+
    4042:	ef 01       	movw	r28, r30
    4044:	18 36       	cpi	r17, 0x68	; 104
    4046:	61 f4       	brne	.+24     	; 0x4060 <vfscanf+0xf4>
    4048:	87 2d       	mov	r24, r7
    404a:	88 60       	ori	r24, 0x08	; 8
    404c:	78 2e       	mov	r7, r24
    404e:	97 2d       	mov	r25, r7
    4050:	94 60       	ori	r25, 0x04	; 4
    4052:	79 2e       	mov	r7, r25
    4054:	fe 01       	movw	r30, r28
    4056:	03 fd       	sbrc	r16, 3
    4058:	15 91       	lpm	r17, Z+
    405a:	03 ff       	sbrs	r16, 3
    405c:	11 91       	ld	r17, Z+
    405e:	ef 01       	movw	r28, r30
    4060:	11 23       	and	r17, r17
    4062:	09 f4       	brne	.+2      	; 0x4066 <vfscanf+0xfa>
    4064:	9b c0       	rjmp	.+310    	; 0x419c <vfscanf+0x230>
    4066:	61 2f       	mov	r22, r17
    4068:	70 e0       	ldi	r23, 0x00	; 0
    406a:	80 e8       	ldi	r24, 0x80	; 128
    406c:	9f e0       	ldi	r25, 0x0F	; 15
    406e:	be d1       	rcall	.+892    	; 0x43ec <strchr_P>
    4070:	89 2b       	or	r24, r25
    4072:	09 f4       	brne	.+2      	; 0x4076 <vfscanf+0x10a>
    4074:	93 c0       	rjmp	.+294    	; 0x419c <vfscanf+0x230>
    4076:	70 fc       	sbrc	r7, 0
    4078:	07 c0       	rjmp	.+14     	; 0x4088 <vfscanf+0x11c>
    407a:	f4 01       	movw	r30, r8
    407c:	c0 80       	ld	r12, Z
    407e:	d1 80       	ldd	r13, Z+1	; 0x01
    4080:	c4 01       	movw	r24, r8
    4082:	02 96       	adiw	r24, 0x02	; 2
    4084:	4c 01       	movw	r8, r24
    4086:	02 c0       	rjmp	.+4      	; 0x408c <vfscanf+0x120>
    4088:	c1 2c       	mov	r12, r1
    408a:	d1 2c       	mov	r13, r1
    408c:	1e 36       	cpi	r17, 0x6E	; 110
    408e:	49 f4       	brne	.+18     	; 0x40a2 <vfscanf+0x136>
    4090:	f5 01       	movw	r30, r10
    4092:	46 81       	ldd	r20, Z+6	; 0x06
    4094:	57 81       	ldd	r21, Z+7	; 0x07
    4096:	60 e0       	ldi	r22, 0x00	; 0
    4098:	70 e0       	ldi	r23, 0x00	; 0
    409a:	27 2d       	mov	r18, r7
    409c:	c6 01       	movw	r24, r12
    409e:	aa dc       	rcall	.-1708   	; 0x39f4 <putval>
    40a0:	71 cf       	rjmp	.-286    	; 0x3f84 <vfscanf+0x18>
    40a2:	13 36       	cpi	r17, 0x63	; 99
    40a4:	b1 f4       	brne	.+44     	; 0x40d2 <vfscanf+0x166>
    40a6:	71 fc       	sbrc	r7, 1
    40a8:	03 c0       	rjmp	.+6      	; 0x40b0 <vfscanf+0x144>
    40aa:	ee 24       	eor	r14, r14
    40ac:	e3 94       	inc	r14
    40ae:	f1 2c       	mov	r15, r1
    40b0:	c5 01       	movw	r24, r10
    40b2:	cb d1       	rcall	.+918    	; 0x444a <fgetc>
    40b4:	97 fd       	sbrc	r25, 7
    40b6:	70 c0       	rjmp	.+224    	; 0x4198 <vfscanf+0x22c>
    40b8:	c1 14       	cp	r12, r1
    40ba:	d1 04       	cpc	r13, r1
    40bc:	29 f0       	breq	.+10     	; 0x40c8 <vfscanf+0x15c>
    40be:	f6 01       	movw	r30, r12
    40c0:	80 83       	st	Z, r24
    40c2:	c6 01       	movw	r24, r12
    40c4:	01 96       	adiw	r24, 0x01	; 1
    40c6:	6c 01       	movw	r12, r24
    40c8:	91 e0       	ldi	r25, 0x01	; 1
    40ca:	e9 1a       	sub	r14, r25
    40cc:	f1 08       	sbc	r15, r1
    40ce:	81 f7       	brne	.-32     	; 0x40b0 <vfscanf+0x144>
    40d0:	5f c0       	rjmp	.+190    	; 0x4190 <vfscanf+0x224>
    40d2:	1b 35       	cpi	r17, 0x5B	; 91
    40d4:	51 f4       	brne	.+20     	; 0x40ea <vfscanf+0x17e>
    40d6:	9e 01       	movw	r18, r28
    40d8:	a6 01       	movw	r20, r12
    40da:	b7 01       	movw	r22, r14
    40dc:	c5 01       	movw	r24, r10
    40de:	53 dd       	rcall	.-1370   	; 0x3b86 <conv_brk>
    40e0:	ec 01       	movw	r28, r24
    40e2:	89 2b       	or	r24, r25
    40e4:	09 f0       	breq	.+2      	; 0x40e8 <vfscanf+0x17c>
    40e6:	54 c0       	rjmp	.+168    	; 0x4190 <vfscanf+0x224>
    40e8:	4e c0       	rjmp	.+156    	; 0x4186 <vfscanf+0x21a>
    40ea:	c5 01       	movw	r24, r10
    40ec:	b6 dc       	rcall	.-1684   	; 0x3a5a <skip_spaces>
    40ee:	97 fd       	sbrc	r25, 7
    40f0:	53 c0       	rjmp	.+166    	; 0x4198 <vfscanf+0x22c>
    40f2:	1f 36       	cpi	r17, 0x6F	; 111
    40f4:	c9 f1       	breq	.+114    	; 0x4168 <vfscanf+0x1fc>
    40f6:	40 f4       	brcc	.+16     	; 0x4108 <vfscanf+0x19c>
    40f8:	14 36       	cpi	r17, 0x64	; 100
    40fa:	91 f1       	breq	.+100    	; 0x4160 <vfscanf+0x1f4>
    40fc:	19 36       	cpi	r17, 0x69	; 105
    40fe:	b9 f1       	breq	.+110    	; 0x416e <vfscanf+0x202>
    4100:	18 35       	cpi	r17, 0x58	; 88
    4102:	09 f0       	breq	.+2      	; 0x4106 <vfscanf+0x19a>
    4104:	3a c0       	rjmp	.+116    	; 0x417a <vfscanf+0x20e>
    4106:	28 c0       	rjmp	.+80     	; 0x4158 <vfscanf+0x1ec>
    4108:	13 37       	cpi	r17, 0x73	; 115
    410a:	a9 f0       	breq	.+42     	; 0x4136 <vfscanf+0x1ca>
    410c:	18 f4       	brcc	.+6      	; 0x4114 <vfscanf+0x1a8>
    410e:	10 37       	cpi	r17, 0x70	; 112
    4110:	19 f1       	breq	.+70     	; 0x4158 <vfscanf+0x1ec>
    4112:	33 c0       	rjmp	.+102    	; 0x417a <vfscanf+0x20e>
    4114:	15 37       	cpi	r17, 0x75	; 117
    4116:	21 f1       	breq	.+72     	; 0x4160 <vfscanf+0x1f4>
    4118:	18 37       	cpi	r17, 0x78	; 120
    411a:	f1 f0       	breq	.+60     	; 0x4158 <vfscanf+0x1ec>
    411c:	2e c0       	rjmp	.+92     	; 0x417a <vfscanf+0x20e>
    411e:	c1 14       	cp	r12, r1
    4120:	d1 04       	cpc	r13, r1
    4122:	29 f0       	breq	.+10     	; 0x412e <vfscanf+0x1c2>
    4124:	f6 01       	movw	r30, r12
    4126:	00 83       	st	Z, r16
    4128:	c6 01       	movw	r24, r12
    412a:	01 96       	adiw	r24, 0x01	; 1
    412c:	6c 01       	movw	r12, r24
    412e:	91 e0       	ldi	r25, 0x01	; 1
    4130:	e9 1a       	sub	r14, r25
    4132:	f1 08       	sbc	r15, r1
    4134:	59 f0       	breq	.+22     	; 0x414c <vfscanf+0x1e0>
    4136:	c5 01       	movw	r24, r10
    4138:	88 d1       	rcall	.+784    	; 0x444a <fgetc>
    413a:	8c 01       	movw	r16, r24
    413c:	97 fd       	sbrc	r25, 7
    413e:	06 c0       	rjmp	.+12     	; 0x414c <vfscanf+0x1e0>
    4140:	45 d1       	rcall	.+650    	; 0x43cc <isspace>
    4142:	89 2b       	or	r24, r25
    4144:	61 f3       	breq	.-40     	; 0x411e <vfscanf+0x1b2>
    4146:	b5 01       	movw	r22, r10
    4148:	c8 01       	movw	r24, r16
    414a:	19 d2       	rcall	.+1074   	; 0x457e <ungetc>
    414c:	c1 14       	cp	r12, r1
    414e:	d1 04       	cpc	r13, r1
    4150:	f9 f0       	breq	.+62     	; 0x4190 <vfscanf+0x224>
    4152:	f6 01       	movw	r30, r12
    4154:	10 82       	st	Z, r1
    4156:	1c c0       	rjmp	.+56     	; 0x4190 <vfscanf+0x224>
    4158:	f7 2d       	mov	r31, r7
    415a:	f0 64       	ori	r31, 0x40	; 64
    415c:	7f 2e       	mov	r7, r31
    415e:	07 c0       	rjmp	.+14     	; 0x416e <vfscanf+0x202>
    4160:	87 2d       	mov	r24, r7
    4162:	80 62       	ori	r24, 0x20	; 32
    4164:	78 2e       	mov	r7, r24
    4166:	03 c0       	rjmp	.+6      	; 0x416e <vfscanf+0x202>
    4168:	97 2d       	mov	r25, r7
    416a:	90 61       	ori	r25, 0x10	; 16
    416c:	79 2e       	mov	r7, r25
    416e:	27 2d       	mov	r18, r7
    4170:	a6 01       	movw	r20, r12
    4172:	b7 01       	movw	r22, r14
    4174:	c5 01       	movw	r24, r10
    4176:	87 dc       	rcall	.-1778   	; 0x3a86 <conv_int>
    4178:	04 c0       	rjmp	.+8      	; 0x4182 <vfscanf+0x216>
    417a:	a6 01       	movw	r20, r12
    417c:	b7 01       	movw	r22, r14
    417e:	c5 01       	movw	r24, r10
    4180:	c0 dd       	rcall	.-1152   	; 0x3d02 <conv_flt>
    4182:	81 11       	cpse	r24, r1
    4184:	05 c0       	rjmp	.+10     	; 0x4190 <vfscanf+0x224>
    4186:	f5 01       	movw	r30, r10
    4188:	83 81       	ldd	r24, Z+3	; 0x03
    418a:	80 73       	andi	r24, 0x30	; 48
    418c:	29 f4       	brne	.+10     	; 0x4198 <vfscanf+0x22c>
    418e:	06 c0       	rjmp	.+12     	; 0x419c <vfscanf+0x230>
    4190:	70 fc       	sbrc	r7, 0
    4192:	f8 ce       	rjmp	.-528    	; 0x3f84 <vfscanf+0x18>
    4194:	63 94       	inc	r6
    4196:	f6 ce       	rjmp	.-532    	; 0x3f84 <vfscanf+0x18>
    4198:	66 20       	and	r6, r6
    419a:	19 f0       	breq	.+6      	; 0x41a2 <vfscanf+0x236>
    419c:	86 2d       	mov	r24, r6
    419e:	90 e0       	ldi	r25, 0x00	; 0
    41a0:	02 c0       	rjmp	.+4      	; 0x41a6 <vfscanf+0x23a>
    41a2:	8f ef       	ldi	r24, 0xFF	; 255
    41a4:	9f ef       	ldi	r25, 0xFF	; 255
    41a6:	cd b7       	in	r28, 0x3d	; 61
    41a8:	de b7       	in	r29, 0x3e	; 62
    41aa:	ee e0       	ldi	r30, 0x0E	; 14
    41ac:	20 c0       	rjmp	.+64     	; 0x41ee <__epilogue_restores__+0x8>

000041ae <__prologue_saves__>:
    41ae:	2f 92       	push	r2
    41b0:	3f 92       	push	r3
    41b2:	4f 92       	push	r4
    41b4:	5f 92       	push	r5
    41b6:	6f 92       	push	r6
    41b8:	7f 92       	push	r7
    41ba:	8f 92       	push	r8
    41bc:	9f 92       	push	r9
    41be:	af 92       	push	r10
    41c0:	bf 92       	push	r11
    41c2:	cf 92       	push	r12
    41c4:	df 92       	push	r13
    41c6:	ef 92       	push	r14
    41c8:	ff 92       	push	r15
    41ca:	0f 93       	push	r16
    41cc:	1f 93       	push	r17
    41ce:	cf 93       	push	r28
    41d0:	df 93       	push	r29
    41d2:	cd b7       	in	r28, 0x3d	; 61
    41d4:	de b7       	in	r29, 0x3e	; 62
    41d6:	ca 1b       	sub	r28, r26
    41d8:	db 0b       	sbc	r29, r27
    41da:	0f b6       	in	r0, 0x3f	; 63
    41dc:	f8 94       	cli
    41de:	de bf       	out	0x3e, r29	; 62
    41e0:	0f be       	out	0x3f, r0	; 63
    41e2:	cd bf       	out	0x3d, r28	; 61
    41e4:	09 94       	ijmp

000041e6 <__epilogue_restores__>:
    41e6:	2a 88       	ldd	r2, Y+18	; 0x12
    41e8:	39 88       	ldd	r3, Y+17	; 0x11
    41ea:	48 88       	ldd	r4, Y+16	; 0x10
    41ec:	5f 84       	ldd	r5, Y+15	; 0x0f
    41ee:	6e 84       	ldd	r6, Y+14	; 0x0e
    41f0:	7d 84       	ldd	r7, Y+13	; 0x0d
    41f2:	8c 84       	ldd	r8, Y+12	; 0x0c
    41f4:	9b 84       	ldd	r9, Y+11	; 0x0b
    41f6:	aa 84       	ldd	r10, Y+10	; 0x0a
    41f8:	b9 84       	ldd	r11, Y+9	; 0x09
    41fa:	c8 84       	ldd	r12, Y+8	; 0x08
    41fc:	df 80       	ldd	r13, Y+7	; 0x07
    41fe:	ee 80       	ldd	r14, Y+6	; 0x06
    4200:	fd 80       	ldd	r15, Y+5	; 0x05
    4202:	0c 81       	ldd	r16, Y+4	; 0x04
    4204:	1b 81       	ldd	r17, Y+3	; 0x03
    4206:	aa 81       	ldd	r26, Y+2	; 0x02
    4208:	b9 81       	ldd	r27, Y+1	; 0x01
    420a:	ce 0f       	add	r28, r30
    420c:	d1 1d       	adc	r29, r1
    420e:	0f b6       	in	r0, 0x3f	; 63
    4210:	f8 94       	cli
    4212:	de bf       	out	0x3e, r29	; 62
    4214:	0f be       	out	0x3f, r0	; 63
    4216:	cd bf       	out	0x3d, r28	; 61
    4218:	ed 01       	movw	r28, r26
    421a:	08 95       	ret

0000421c <__ftoa_engine>:
    421c:	28 30       	cpi	r18, 0x08	; 8
    421e:	08 f0       	brcs	.+2      	; 0x4222 <__ftoa_engine+0x6>
    4220:	27 e0       	ldi	r18, 0x07	; 7
    4222:	33 27       	eor	r19, r19
    4224:	da 01       	movw	r26, r20
    4226:	99 0f       	add	r25, r25
    4228:	31 1d       	adc	r19, r1
    422a:	87 fd       	sbrc	r24, 7
    422c:	91 60       	ori	r25, 0x01	; 1
    422e:	00 96       	adiw	r24, 0x00	; 0
    4230:	61 05       	cpc	r22, r1
    4232:	71 05       	cpc	r23, r1
    4234:	39 f4       	brne	.+14     	; 0x4244 <__ftoa_engine+0x28>
    4236:	32 60       	ori	r19, 0x02	; 2
    4238:	2e 5f       	subi	r18, 0xFE	; 254
    423a:	3d 93       	st	X+, r19
    423c:	30 e3       	ldi	r19, 0x30	; 48
    423e:	2a 95       	dec	r18
    4240:	e1 f7       	brne	.-8      	; 0x423a <__ftoa_engine+0x1e>
    4242:	08 95       	ret
    4244:	9f 3f       	cpi	r25, 0xFF	; 255
    4246:	30 f0       	brcs	.+12     	; 0x4254 <__ftoa_engine+0x38>
    4248:	80 38       	cpi	r24, 0x80	; 128
    424a:	71 05       	cpc	r23, r1
    424c:	61 05       	cpc	r22, r1
    424e:	09 f0       	breq	.+2      	; 0x4252 <__ftoa_engine+0x36>
    4250:	3c 5f       	subi	r19, 0xFC	; 252
    4252:	3c 5f       	subi	r19, 0xFC	; 252
    4254:	3d 93       	st	X+, r19
    4256:	91 30       	cpi	r25, 0x01	; 1
    4258:	08 f0       	brcs	.+2      	; 0x425c <__ftoa_engine+0x40>
    425a:	80 68       	ori	r24, 0x80	; 128
    425c:	91 1d       	adc	r25, r1
    425e:	df 93       	push	r29
    4260:	cf 93       	push	r28
    4262:	1f 93       	push	r17
    4264:	0f 93       	push	r16
    4266:	ff 92       	push	r15
    4268:	ef 92       	push	r14
    426a:	19 2f       	mov	r17, r25
    426c:	98 7f       	andi	r25, 0xF8	; 248
    426e:	96 95       	lsr	r25
    4270:	e9 2f       	mov	r30, r25
    4272:	96 95       	lsr	r25
    4274:	96 95       	lsr	r25
    4276:	e9 0f       	add	r30, r25
    4278:	ff 27       	eor	r31, r31
    427a:	e8 59       	subi	r30, 0x98	; 152
    427c:	fe 4f       	sbci	r31, 0xFE	; 254
    427e:	99 27       	eor	r25, r25
    4280:	33 27       	eor	r19, r19
    4282:	ee 24       	eor	r14, r14
    4284:	ff 24       	eor	r15, r15
    4286:	a7 01       	movw	r20, r14
    4288:	e7 01       	movw	r28, r14
    428a:	05 90       	lpm	r0, Z+
    428c:	08 94       	sec
    428e:	07 94       	ror	r0
    4290:	28 f4       	brcc	.+10     	; 0x429c <__ftoa_engine+0x80>
    4292:	36 0f       	add	r19, r22
    4294:	e7 1e       	adc	r14, r23
    4296:	f8 1e       	adc	r15, r24
    4298:	49 1f       	adc	r20, r25
    429a:	51 1d       	adc	r21, r1
    429c:	66 0f       	add	r22, r22
    429e:	77 1f       	adc	r23, r23
    42a0:	88 1f       	adc	r24, r24
    42a2:	99 1f       	adc	r25, r25
    42a4:	06 94       	lsr	r0
    42a6:	a1 f7       	brne	.-24     	; 0x4290 <__ftoa_engine+0x74>
    42a8:	05 90       	lpm	r0, Z+
    42aa:	07 94       	ror	r0
    42ac:	28 f4       	brcc	.+10     	; 0x42b8 <__ftoa_engine+0x9c>
    42ae:	e7 0e       	add	r14, r23
    42b0:	f8 1e       	adc	r15, r24
    42b2:	49 1f       	adc	r20, r25
    42b4:	56 1f       	adc	r21, r22
    42b6:	c1 1d       	adc	r28, r1
    42b8:	77 0f       	add	r23, r23
    42ba:	88 1f       	adc	r24, r24
    42bc:	99 1f       	adc	r25, r25
    42be:	66 1f       	adc	r22, r22
    42c0:	06 94       	lsr	r0
    42c2:	a1 f7       	brne	.-24     	; 0x42ac <__ftoa_engine+0x90>
    42c4:	05 90       	lpm	r0, Z+
    42c6:	07 94       	ror	r0
    42c8:	28 f4       	brcc	.+10     	; 0x42d4 <__ftoa_engine+0xb8>
    42ca:	f8 0e       	add	r15, r24
    42cc:	49 1f       	adc	r20, r25
    42ce:	56 1f       	adc	r21, r22
    42d0:	c7 1f       	adc	r28, r23
    42d2:	d1 1d       	adc	r29, r1
    42d4:	88 0f       	add	r24, r24
    42d6:	99 1f       	adc	r25, r25
    42d8:	66 1f       	adc	r22, r22
    42da:	77 1f       	adc	r23, r23
    42dc:	06 94       	lsr	r0
    42de:	a1 f7       	brne	.-24     	; 0x42c8 <__ftoa_engine+0xac>
    42e0:	05 90       	lpm	r0, Z+
    42e2:	07 94       	ror	r0
    42e4:	20 f4       	brcc	.+8      	; 0x42ee <__ftoa_engine+0xd2>
    42e6:	49 0f       	add	r20, r25
    42e8:	56 1f       	adc	r21, r22
    42ea:	c7 1f       	adc	r28, r23
    42ec:	d8 1f       	adc	r29, r24
    42ee:	99 0f       	add	r25, r25
    42f0:	66 1f       	adc	r22, r22
    42f2:	77 1f       	adc	r23, r23
    42f4:	88 1f       	adc	r24, r24
    42f6:	06 94       	lsr	r0
    42f8:	a9 f7       	brne	.-22     	; 0x42e4 <__ftoa_engine+0xc8>
    42fa:	84 91       	lpm	r24, Z
    42fc:	10 95       	com	r17
    42fe:	17 70       	andi	r17, 0x07	; 7
    4300:	41 f0       	breq	.+16     	; 0x4312 <__ftoa_engine+0xf6>
    4302:	d6 95       	lsr	r29
    4304:	c7 95       	ror	r28
    4306:	57 95       	ror	r21
    4308:	47 95       	ror	r20
    430a:	f7 94       	ror	r15
    430c:	e7 94       	ror	r14
    430e:	1a 95       	dec	r17
    4310:	c1 f7       	brne	.-16     	; 0x4302 <__ftoa_engine+0xe6>
    4312:	ee e0       	ldi	r30, 0x0E	; 14
    4314:	f1 e0       	ldi	r31, 0x01	; 1
    4316:	68 94       	set
    4318:	15 90       	lpm	r1, Z+
    431a:	15 91       	lpm	r17, Z+
    431c:	35 91       	lpm	r19, Z+
    431e:	65 91       	lpm	r22, Z+
    4320:	95 91       	lpm	r25, Z+
    4322:	05 90       	lpm	r0, Z+
    4324:	7f e2       	ldi	r23, 0x2F	; 47
    4326:	73 95       	inc	r23
    4328:	e1 18       	sub	r14, r1
    432a:	f1 0a       	sbc	r15, r17
    432c:	43 0b       	sbc	r20, r19
    432e:	56 0b       	sbc	r21, r22
    4330:	c9 0b       	sbc	r28, r25
    4332:	d0 09       	sbc	r29, r0
    4334:	c0 f7       	brcc	.-16     	; 0x4326 <__ftoa_engine+0x10a>
    4336:	e1 0c       	add	r14, r1
    4338:	f1 1e       	adc	r15, r17
    433a:	43 1f       	adc	r20, r19
    433c:	56 1f       	adc	r21, r22
    433e:	c9 1f       	adc	r28, r25
    4340:	d0 1d       	adc	r29, r0
    4342:	7e f4       	brtc	.+30     	; 0x4362 <__ftoa_engine+0x146>
    4344:	70 33       	cpi	r23, 0x30	; 48
    4346:	11 f4       	brne	.+4      	; 0x434c <__ftoa_engine+0x130>
    4348:	8a 95       	dec	r24
    434a:	e6 cf       	rjmp	.-52     	; 0x4318 <__ftoa_engine+0xfc>
    434c:	e8 94       	clt
    434e:	01 50       	subi	r16, 0x01	; 1
    4350:	30 f0       	brcs	.+12     	; 0x435e <__ftoa_engine+0x142>
    4352:	08 0f       	add	r16, r24
    4354:	0a f4       	brpl	.+2      	; 0x4358 <__ftoa_engine+0x13c>
    4356:	00 27       	eor	r16, r16
    4358:	02 17       	cp	r16, r18
    435a:	08 f4       	brcc	.+2      	; 0x435e <__ftoa_engine+0x142>
    435c:	20 2f       	mov	r18, r16
    435e:	23 95       	inc	r18
    4360:	02 2f       	mov	r16, r18
    4362:	7a 33       	cpi	r23, 0x3A	; 58
    4364:	28 f0       	brcs	.+10     	; 0x4370 <__ftoa_engine+0x154>
    4366:	79 e3       	ldi	r23, 0x39	; 57
    4368:	7d 93       	st	X+, r23
    436a:	2a 95       	dec	r18
    436c:	e9 f7       	brne	.-6      	; 0x4368 <__ftoa_engine+0x14c>
    436e:	10 c0       	rjmp	.+32     	; 0x4390 <__ftoa_engine+0x174>
    4370:	7d 93       	st	X+, r23
    4372:	2a 95       	dec	r18
    4374:	89 f6       	brne	.-94     	; 0x4318 <__ftoa_engine+0xfc>
    4376:	06 94       	lsr	r0
    4378:	97 95       	ror	r25
    437a:	67 95       	ror	r22
    437c:	37 95       	ror	r19
    437e:	17 95       	ror	r17
    4380:	17 94       	ror	r1
    4382:	e1 18       	sub	r14, r1
    4384:	f1 0a       	sbc	r15, r17
    4386:	43 0b       	sbc	r20, r19
    4388:	56 0b       	sbc	r21, r22
    438a:	c9 0b       	sbc	r28, r25
    438c:	d0 09       	sbc	r29, r0
    438e:	98 f0       	brcs	.+38     	; 0x43b6 <__ftoa_engine+0x19a>
    4390:	23 95       	inc	r18
    4392:	7e 91       	ld	r23, -X
    4394:	73 95       	inc	r23
    4396:	7a 33       	cpi	r23, 0x3A	; 58
    4398:	08 f0       	brcs	.+2      	; 0x439c <__ftoa_engine+0x180>
    439a:	70 e3       	ldi	r23, 0x30	; 48
    439c:	7c 93       	st	X, r23
    439e:	20 13       	cpse	r18, r16
    43a0:	b8 f7       	brcc	.-18     	; 0x4390 <__ftoa_engine+0x174>
    43a2:	7e 91       	ld	r23, -X
    43a4:	70 61       	ori	r23, 0x10	; 16
    43a6:	7d 93       	st	X+, r23
    43a8:	30 f0       	brcs	.+12     	; 0x43b6 <__ftoa_engine+0x19a>
    43aa:	83 95       	inc	r24
    43ac:	71 e3       	ldi	r23, 0x31	; 49
    43ae:	7d 93       	st	X+, r23
    43b0:	70 e3       	ldi	r23, 0x30	; 48
    43b2:	2a 95       	dec	r18
    43b4:	e1 f7       	brne	.-8      	; 0x43ae <__ftoa_engine+0x192>
    43b6:	11 24       	eor	r1, r1
    43b8:	ef 90       	pop	r14
    43ba:	ff 90       	pop	r15
    43bc:	0f 91       	pop	r16
    43be:	1f 91       	pop	r17
    43c0:	cf 91       	pop	r28
    43c2:	df 91       	pop	r29
    43c4:	99 27       	eor	r25, r25
    43c6:	87 fd       	sbrc	r24, 7
    43c8:	90 95       	com	r25
    43ca:	08 95       	ret

000043cc <isspace>:
    43cc:	91 11       	cpse	r25, r1
    43ce:	4e c1       	rjmp	.+668    	; 0x466c <__ctype_isfalse>
    43d0:	80 32       	cpi	r24, 0x20	; 32
    43d2:	19 f0       	breq	.+6      	; 0x43da <isspace+0xe>
    43d4:	89 50       	subi	r24, 0x09	; 9
    43d6:	85 50       	subi	r24, 0x05	; 5
    43d8:	d0 f7       	brcc	.-12     	; 0x43ce <isspace+0x2>
    43da:	08 95       	ret

000043dc <tolower>:
    43dc:	91 11       	cpse	r25, r1
    43de:	08 95       	ret
    43e0:	81 54       	subi	r24, 0x41	; 65
    43e2:	8a 51       	subi	r24, 0x1A	; 26
    43e4:	08 f4       	brcc	.+2      	; 0x43e8 <tolower+0xc>
    43e6:	80 5e       	subi	r24, 0xE0	; 224
    43e8:	85 5a       	subi	r24, 0xA5	; 165
    43ea:	08 95       	ret

000043ec <strchr_P>:
    43ec:	fc 01       	movw	r30, r24
    43ee:	05 90       	lpm	r0, Z+
    43f0:	06 16       	cp	r0, r22
    43f2:	21 f0       	breq	.+8      	; 0x43fc <strchr_P+0x10>
    43f4:	00 20       	and	r0, r0
    43f6:	d9 f7       	brne	.-10     	; 0x43ee <strchr_P+0x2>
    43f8:	c0 01       	movw	r24, r0
    43fa:	08 95       	ret
    43fc:	31 97       	sbiw	r30, 0x01	; 1
    43fe:	cf 01       	movw	r24, r30
    4400:	08 95       	ret

00004402 <strnlen_P>:
    4402:	fc 01       	movw	r30, r24
    4404:	05 90       	lpm	r0, Z+
    4406:	61 50       	subi	r22, 0x01	; 1
    4408:	70 40       	sbci	r23, 0x00	; 0
    440a:	01 10       	cpse	r0, r1
    440c:	d8 f7       	brcc	.-10     	; 0x4404 <strnlen_P+0x2>
    440e:	80 95       	com	r24
    4410:	90 95       	com	r25
    4412:	8e 0f       	add	r24, r30
    4414:	9f 1f       	adc	r25, r31
    4416:	08 95       	ret

00004418 <strncmp>:
    4418:	fb 01       	movw	r30, r22
    441a:	dc 01       	movw	r26, r24
    441c:	41 50       	subi	r20, 0x01	; 1
    441e:	50 40       	sbci	r21, 0x00	; 0
    4420:	30 f0       	brcs	.+12     	; 0x442e <strncmp+0x16>
    4422:	8d 91       	ld	r24, X+
    4424:	01 90       	ld	r0, Z+
    4426:	80 19       	sub	r24, r0
    4428:	19 f4       	brne	.+6      	; 0x4430 <strncmp+0x18>
    442a:	00 20       	and	r0, r0
    442c:	b9 f7       	brne	.-18     	; 0x441c <strncmp+0x4>
    442e:	88 1b       	sub	r24, r24
    4430:	99 0b       	sbc	r25, r25
    4432:	08 95       	ret

00004434 <strnlen>:
    4434:	fc 01       	movw	r30, r24
    4436:	61 50       	subi	r22, 0x01	; 1
    4438:	70 40       	sbci	r23, 0x00	; 0
    443a:	01 90       	ld	r0, Z+
    443c:	01 10       	cpse	r0, r1
    443e:	d8 f7       	brcc	.-10     	; 0x4436 <strnlen+0x2>
    4440:	80 95       	com	r24
    4442:	90 95       	com	r25
    4444:	8e 0f       	add	r24, r30
    4446:	9f 1f       	adc	r25, r31
    4448:	08 95       	ret

0000444a <fgetc>:
    444a:	cf 93       	push	r28
    444c:	df 93       	push	r29
    444e:	ec 01       	movw	r28, r24
    4450:	2b 81       	ldd	r18, Y+3	; 0x03
    4452:	20 ff       	sbrs	r18, 0
    4454:	33 c0       	rjmp	.+102    	; 0x44bc <fgetc+0x72>
    4456:	26 ff       	sbrs	r18, 6
    4458:	0a c0       	rjmp	.+20     	; 0x446e <fgetc+0x24>
    445a:	2f 7b       	andi	r18, 0xBF	; 191
    445c:	2b 83       	std	Y+3, r18	; 0x03
    445e:	8e 81       	ldd	r24, Y+6	; 0x06
    4460:	9f 81       	ldd	r25, Y+7	; 0x07
    4462:	01 96       	adiw	r24, 0x01	; 1
    4464:	9f 83       	std	Y+7, r25	; 0x07
    4466:	8e 83       	std	Y+6, r24	; 0x06
    4468:	8a 81       	ldd	r24, Y+2	; 0x02
    446a:	90 e0       	ldi	r25, 0x00	; 0
    446c:	29 c0       	rjmp	.+82     	; 0x44c0 <fgetc+0x76>
    446e:	22 ff       	sbrs	r18, 2
    4470:	0f c0       	rjmp	.+30     	; 0x4490 <fgetc+0x46>
    4472:	e8 81       	ld	r30, Y
    4474:	f9 81       	ldd	r31, Y+1	; 0x01
    4476:	80 81       	ld	r24, Z
    4478:	08 2e       	mov	r0, r24
    447a:	00 0c       	add	r0, r0
    447c:	99 0b       	sbc	r25, r25
    447e:	00 97       	sbiw	r24, 0x00	; 0
    4480:	19 f4       	brne	.+6      	; 0x4488 <fgetc+0x3e>
    4482:	20 62       	ori	r18, 0x20	; 32
    4484:	2b 83       	std	Y+3, r18	; 0x03
    4486:	1a c0       	rjmp	.+52     	; 0x44bc <fgetc+0x72>
    4488:	31 96       	adiw	r30, 0x01	; 1
    448a:	f9 83       	std	Y+1, r31	; 0x01
    448c:	e8 83       	st	Y, r30
    448e:	0e c0       	rjmp	.+28     	; 0x44ac <fgetc+0x62>
    4490:	ea 85       	ldd	r30, Y+10	; 0x0a
    4492:	fb 85       	ldd	r31, Y+11	; 0x0b
    4494:	09 95       	icall
    4496:	97 ff       	sbrs	r25, 7
    4498:	09 c0       	rjmp	.+18     	; 0x44ac <fgetc+0x62>
    449a:	2b 81       	ldd	r18, Y+3	; 0x03
    449c:	01 96       	adiw	r24, 0x01	; 1
    449e:	11 f0       	breq	.+4      	; 0x44a4 <fgetc+0x5a>
    44a0:	80 e2       	ldi	r24, 0x20	; 32
    44a2:	01 c0       	rjmp	.+2      	; 0x44a6 <fgetc+0x5c>
    44a4:	80 e1       	ldi	r24, 0x10	; 16
    44a6:	82 2b       	or	r24, r18
    44a8:	8b 83       	std	Y+3, r24	; 0x03
    44aa:	08 c0       	rjmp	.+16     	; 0x44bc <fgetc+0x72>
    44ac:	2e 81       	ldd	r18, Y+6	; 0x06
    44ae:	3f 81       	ldd	r19, Y+7	; 0x07
    44b0:	2f 5f       	subi	r18, 0xFF	; 255
    44b2:	3f 4f       	sbci	r19, 0xFF	; 255
    44b4:	3f 83       	std	Y+7, r19	; 0x07
    44b6:	2e 83       	std	Y+6, r18	; 0x06
    44b8:	99 27       	eor	r25, r25
    44ba:	02 c0       	rjmp	.+4      	; 0x44c0 <fgetc+0x76>
    44bc:	8f ef       	ldi	r24, 0xFF	; 255
    44be:	9f ef       	ldi	r25, 0xFF	; 255
    44c0:	df 91       	pop	r29
    44c2:	cf 91       	pop	r28
    44c4:	08 95       	ret

000044c6 <fputc>:
    44c6:	0f 93       	push	r16
    44c8:	1f 93       	push	r17
    44ca:	cf 93       	push	r28
    44cc:	df 93       	push	r29
    44ce:	fb 01       	movw	r30, r22
    44d0:	23 81       	ldd	r18, Z+3	; 0x03
    44d2:	21 fd       	sbrc	r18, 1
    44d4:	03 c0       	rjmp	.+6      	; 0x44dc <fputc+0x16>
    44d6:	8f ef       	ldi	r24, 0xFF	; 255
    44d8:	9f ef       	ldi	r25, 0xFF	; 255
    44da:	2c c0       	rjmp	.+88     	; 0x4534 <fputc+0x6e>
    44dc:	22 ff       	sbrs	r18, 2
    44de:	16 c0       	rjmp	.+44     	; 0x450c <fputc+0x46>
    44e0:	46 81       	ldd	r20, Z+6	; 0x06
    44e2:	57 81       	ldd	r21, Z+7	; 0x07
    44e4:	24 81       	ldd	r18, Z+4	; 0x04
    44e6:	35 81       	ldd	r19, Z+5	; 0x05
    44e8:	42 17       	cp	r20, r18
    44ea:	53 07       	cpc	r21, r19
    44ec:	44 f4       	brge	.+16     	; 0x44fe <fputc+0x38>
    44ee:	a0 81       	ld	r26, Z
    44f0:	b1 81       	ldd	r27, Z+1	; 0x01
    44f2:	9d 01       	movw	r18, r26
    44f4:	2f 5f       	subi	r18, 0xFF	; 255
    44f6:	3f 4f       	sbci	r19, 0xFF	; 255
    44f8:	31 83       	std	Z+1, r19	; 0x01
    44fa:	20 83       	st	Z, r18
    44fc:	8c 93       	st	X, r24
    44fe:	26 81       	ldd	r18, Z+6	; 0x06
    4500:	37 81       	ldd	r19, Z+7	; 0x07
    4502:	2f 5f       	subi	r18, 0xFF	; 255
    4504:	3f 4f       	sbci	r19, 0xFF	; 255
    4506:	37 83       	std	Z+7, r19	; 0x07
    4508:	26 83       	std	Z+6, r18	; 0x06
    450a:	14 c0       	rjmp	.+40     	; 0x4534 <fputc+0x6e>
    450c:	8b 01       	movw	r16, r22
    450e:	ec 01       	movw	r28, r24
    4510:	fb 01       	movw	r30, r22
    4512:	00 84       	ldd	r0, Z+8	; 0x08
    4514:	f1 85       	ldd	r31, Z+9	; 0x09
    4516:	e0 2d       	mov	r30, r0
    4518:	09 95       	icall
    451a:	89 2b       	or	r24, r25
    451c:	e1 f6       	brne	.-72     	; 0x44d6 <fputc+0x10>
    451e:	d8 01       	movw	r26, r16
    4520:	16 96       	adiw	r26, 0x06	; 6
    4522:	8d 91       	ld	r24, X+
    4524:	9c 91       	ld	r25, X
    4526:	17 97       	sbiw	r26, 0x07	; 7
    4528:	01 96       	adiw	r24, 0x01	; 1
    452a:	17 96       	adiw	r26, 0x07	; 7
    452c:	9c 93       	st	X, r25
    452e:	8e 93       	st	-X, r24
    4530:	16 97       	sbiw	r26, 0x06	; 6
    4532:	ce 01       	movw	r24, r28
    4534:	df 91       	pop	r29
    4536:	cf 91       	pop	r28
    4538:	1f 91       	pop	r17
    453a:	0f 91       	pop	r16
    453c:	08 95       	ret

0000453e <sprintf>:
    453e:	ae e0       	ldi	r26, 0x0E	; 14
    4540:	b0 e0       	ldi	r27, 0x00	; 0
    4542:	e4 ea       	ldi	r30, 0xA4	; 164
    4544:	f2 e2       	ldi	r31, 0x22	; 34
    4546:	41 ce       	rjmp	.-894    	; 0x41ca <__prologue_saves__+0x1c>
    4548:	0d 89       	ldd	r16, Y+21	; 0x15
    454a:	1e 89       	ldd	r17, Y+22	; 0x16
    454c:	86 e0       	ldi	r24, 0x06	; 6
    454e:	8c 83       	std	Y+4, r24	; 0x04
    4550:	1a 83       	std	Y+2, r17	; 0x02
    4552:	09 83       	std	Y+1, r16	; 0x01
    4554:	8f ef       	ldi	r24, 0xFF	; 255
    4556:	9f e7       	ldi	r25, 0x7F	; 127
    4558:	9e 83       	std	Y+6, r25	; 0x06
    455a:	8d 83       	std	Y+5, r24	; 0x05
    455c:	ae 01       	movw	r20, r28
    455e:	47 5e       	subi	r20, 0xE7	; 231
    4560:	5f 4f       	sbci	r21, 0xFF	; 255
    4562:	6f 89       	ldd	r22, Y+23	; 0x17
    4564:	78 8d       	ldd	r23, Y+24	; 0x18
    4566:	ce 01       	movw	r24, r28
    4568:	01 96       	adiw	r24, 0x01	; 1
    456a:	0e 94 9b 19 	call	0x3336	; 0x3336 <vfprintf>
    456e:	ef 81       	ldd	r30, Y+7	; 0x07
    4570:	f8 85       	ldd	r31, Y+8	; 0x08
    4572:	e0 0f       	add	r30, r16
    4574:	f1 1f       	adc	r31, r17
    4576:	10 82       	st	Z, r1
    4578:	2e 96       	adiw	r28, 0x0e	; 14
    457a:	e4 e0       	ldi	r30, 0x04	; 4
    457c:	42 ce       	rjmp	.-892    	; 0x4202 <__epilogue_restores__+0x1c>

0000457e <ungetc>:
    457e:	fb 01       	movw	r30, r22
    4580:	23 81       	ldd	r18, Z+3	; 0x03
    4582:	20 ff       	sbrs	r18, 0
    4584:	12 c0       	rjmp	.+36     	; 0x45aa <ungetc+0x2c>
    4586:	26 fd       	sbrc	r18, 6
    4588:	10 c0       	rjmp	.+32     	; 0x45aa <ungetc+0x2c>
    458a:	8f 3f       	cpi	r24, 0xFF	; 255
    458c:	3f ef       	ldi	r19, 0xFF	; 255
    458e:	93 07       	cpc	r25, r19
    4590:	61 f0       	breq	.+24     	; 0x45aa <ungetc+0x2c>
    4592:	82 83       	std	Z+2, r24	; 0x02
    4594:	2f 7d       	andi	r18, 0xDF	; 223
    4596:	20 64       	ori	r18, 0x40	; 64
    4598:	23 83       	std	Z+3, r18	; 0x03
    459a:	26 81       	ldd	r18, Z+6	; 0x06
    459c:	37 81       	ldd	r19, Z+7	; 0x07
    459e:	21 50       	subi	r18, 0x01	; 1
    45a0:	31 09       	sbc	r19, r1
    45a2:	37 83       	std	Z+7, r19	; 0x07
    45a4:	26 83       	std	Z+6, r18	; 0x06
    45a6:	99 27       	eor	r25, r25
    45a8:	08 95       	ret
    45aa:	8f ef       	ldi	r24, 0xFF	; 255
    45ac:	9f ef       	ldi	r25, 0xFF	; 255
    45ae:	08 95       	ret

000045b0 <__ultoa_invert>:
    45b0:	fa 01       	movw	r30, r20
    45b2:	aa 27       	eor	r26, r26
    45b4:	28 30       	cpi	r18, 0x08	; 8
    45b6:	51 f1       	breq	.+84     	; 0x460c <__ultoa_invert+0x5c>
    45b8:	20 31       	cpi	r18, 0x10	; 16
    45ba:	81 f1       	breq	.+96     	; 0x461c <__ultoa_invert+0x6c>
    45bc:	e8 94       	clt
    45be:	6f 93       	push	r22
    45c0:	6e 7f       	andi	r22, 0xFE	; 254
    45c2:	6e 5f       	subi	r22, 0xFE	; 254
    45c4:	7f 4f       	sbci	r23, 0xFF	; 255
    45c6:	8f 4f       	sbci	r24, 0xFF	; 255
    45c8:	9f 4f       	sbci	r25, 0xFF	; 255
    45ca:	af 4f       	sbci	r26, 0xFF	; 255
    45cc:	b1 e0       	ldi	r27, 0x01	; 1
    45ce:	3e d0       	rcall	.+124    	; 0x464c <__ultoa_invert+0x9c>
    45d0:	b4 e0       	ldi	r27, 0x04	; 4
    45d2:	3c d0       	rcall	.+120    	; 0x464c <__ultoa_invert+0x9c>
    45d4:	67 0f       	add	r22, r23
    45d6:	78 1f       	adc	r23, r24
    45d8:	89 1f       	adc	r24, r25
    45da:	9a 1f       	adc	r25, r26
    45dc:	a1 1d       	adc	r26, r1
    45de:	68 0f       	add	r22, r24
    45e0:	79 1f       	adc	r23, r25
    45e2:	8a 1f       	adc	r24, r26
    45e4:	91 1d       	adc	r25, r1
    45e6:	a1 1d       	adc	r26, r1
    45e8:	6a 0f       	add	r22, r26
    45ea:	71 1d       	adc	r23, r1
    45ec:	81 1d       	adc	r24, r1
    45ee:	91 1d       	adc	r25, r1
    45f0:	a1 1d       	adc	r26, r1
    45f2:	20 d0       	rcall	.+64     	; 0x4634 <__ultoa_invert+0x84>
    45f4:	09 f4       	brne	.+2      	; 0x45f8 <__ultoa_invert+0x48>
    45f6:	68 94       	set
    45f8:	3f 91       	pop	r19
    45fa:	2a e0       	ldi	r18, 0x0A	; 10
    45fc:	26 9f       	mul	r18, r22
    45fe:	11 24       	eor	r1, r1
    4600:	30 19       	sub	r19, r0
    4602:	30 5d       	subi	r19, 0xD0	; 208
    4604:	31 93       	st	Z+, r19
    4606:	de f6       	brtc	.-74     	; 0x45be <__ultoa_invert+0xe>
    4608:	cf 01       	movw	r24, r30
    460a:	08 95       	ret
    460c:	46 2f       	mov	r20, r22
    460e:	47 70       	andi	r20, 0x07	; 7
    4610:	40 5d       	subi	r20, 0xD0	; 208
    4612:	41 93       	st	Z+, r20
    4614:	b3 e0       	ldi	r27, 0x03	; 3
    4616:	0f d0       	rcall	.+30     	; 0x4636 <__ultoa_invert+0x86>
    4618:	c9 f7       	brne	.-14     	; 0x460c <__ultoa_invert+0x5c>
    461a:	f6 cf       	rjmp	.-20     	; 0x4608 <__ultoa_invert+0x58>
    461c:	46 2f       	mov	r20, r22
    461e:	4f 70       	andi	r20, 0x0F	; 15
    4620:	40 5d       	subi	r20, 0xD0	; 208
    4622:	4a 33       	cpi	r20, 0x3A	; 58
    4624:	18 f0       	brcs	.+6      	; 0x462c <__ultoa_invert+0x7c>
    4626:	49 5d       	subi	r20, 0xD9	; 217
    4628:	31 fd       	sbrc	r19, 1
    462a:	40 52       	subi	r20, 0x20	; 32
    462c:	41 93       	st	Z+, r20
    462e:	02 d0       	rcall	.+4      	; 0x4634 <__ultoa_invert+0x84>
    4630:	a9 f7       	brne	.-22     	; 0x461c <__ultoa_invert+0x6c>
    4632:	ea cf       	rjmp	.-44     	; 0x4608 <__ultoa_invert+0x58>
    4634:	b4 e0       	ldi	r27, 0x04	; 4
    4636:	a6 95       	lsr	r26
    4638:	97 95       	ror	r25
    463a:	87 95       	ror	r24
    463c:	77 95       	ror	r23
    463e:	67 95       	ror	r22
    4640:	ba 95       	dec	r27
    4642:	c9 f7       	brne	.-14     	; 0x4636 <__ultoa_invert+0x86>
    4644:	00 97       	sbiw	r24, 0x00	; 0
    4646:	61 05       	cpc	r22, r1
    4648:	71 05       	cpc	r23, r1
    464a:	08 95       	ret
    464c:	9b 01       	movw	r18, r22
    464e:	ac 01       	movw	r20, r24
    4650:	0a 2e       	mov	r0, r26
    4652:	06 94       	lsr	r0
    4654:	57 95       	ror	r21
    4656:	47 95       	ror	r20
    4658:	37 95       	ror	r19
    465a:	27 95       	ror	r18
    465c:	ba 95       	dec	r27
    465e:	c9 f7       	brne	.-14     	; 0x4652 <__ultoa_invert+0xa2>
    4660:	62 0f       	add	r22, r18
    4662:	73 1f       	adc	r23, r19
    4664:	84 1f       	adc	r24, r20
    4666:	95 1f       	adc	r25, r21
    4668:	a0 1d       	adc	r26, r0
    466a:	08 95       	ret

0000466c <__ctype_isfalse>:
    466c:	99 27       	eor	r25, r25
    466e:	88 27       	eor	r24, r24

00004670 <__ctype_istrue>:
    4670:	08 95       	ret

00004672 <_exit>:
    4672:	f8 94       	cli

00004674 <__stop_program>:
    4674:	ff cf       	rjmp	.-2      	; 0x4674 <__stop_program>

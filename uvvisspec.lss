
uvvisspec.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000f0  00800100  00003ab8  00003b4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00003ab8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000708  008001f0  008001f0  00003c3c  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00003c3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003c50  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000380  00000000  00000000  00003c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000739f  00000000  00000000  00004010  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002028  00000000  00000000  0000b3af  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000039e8  00000000  00000000  0000d3d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bc8  00000000  00000000  00010dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00002930  00000000  00000000  00011988  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004869  00000000  00000000  000142b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004a0  00000000  00000000  00018b21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5e c2       	rjmp	.+1212   	; 0x4be <__ctors_end>
       2:	00 00       	nop
       4:	78 c2       	rjmp	.+1264   	; 0x4f6 <__bad_interrupt>
       6:	00 00       	nop
       8:	76 c2       	rjmp	.+1260   	; 0x4f6 <__bad_interrupt>
       a:	00 00       	nop
       c:	74 c2       	rjmp	.+1256   	; 0x4f6 <__bad_interrupt>
       e:	00 00       	nop
      10:	72 c2       	rjmp	.+1252   	; 0x4f6 <__bad_interrupt>
      12:	00 00       	nop
      14:	70 c2       	rjmp	.+1248   	; 0x4f6 <__bad_interrupt>
      16:	00 00       	nop
      18:	6e c2       	rjmp	.+1244   	; 0x4f6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6c c2       	rjmp	.+1240   	; 0x4f6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6a c2       	rjmp	.+1236   	; 0x4f6 <__bad_interrupt>
      22:	00 00       	nop
      24:	68 c2       	rjmp	.+1232   	; 0x4f6 <__bad_interrupt>
      26:	00 00       	nop
      28:	0c 94 d4 0c 	jmp	0x19a8	; 0x19a8 <__vector_10>
      2c:	0c 94 a1 0d 	jmp	0x1b42	; 0x1b42 <__vector_11>
      30:	62 c2       	rjmp	.+1220   	; 0x4f6 <__bad_interrupt>
      32:	00 00       	nop
      34:	60 c2       	rjmp	.+1216   	; 0x4f6 <__bad_interrupt>
      36:	00 00       	nop
      38:	5e c2       	rjmp	.+1212   	; 0x4f6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5c c2       	rjmp	.+1208   	; 0x4f6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5a c2       	rjmp	.+1204   	; 0x4f6 <__bad_interrupt>
      42:	00 00       	nop
      44:	58 c2       	rjmp	.+1200   	; 0x4f6 <__bad_interrupt>
      46:	00 00       	nop
      48:	56 c2       	rjmp	.+1196   	; 0x4f6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	54 c2       	rjmp	.+1192   	; 0x4f6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	52 c2       	rjmp	.+1188   	; 0x4f6 <__bad_interrupt>
      52:	00 00       	nop
      54:	50 c2       	rjmp	.+1184   	; 0x4f6 <__bad_interrupt>
      56:	00 00       	nop
      58:	4e c2       	rjmp	.+1180   	; 0x4f6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4c c2       	rjmp	.+1176   	; 0x4f6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4a c2       	rjmp	.+1172   	; 0x4f6 <__bad_interrupt>
      62:	00 00       	nop
      64:	48 c2       	rjmp	.+1168   	; 0x4f6 <__bad_interrupt>
      66:	00 00       	nop
      68:	46 c2       	rjmp	.+1164   	; 0x4f6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	44 c2       	rjmp	.+1160   	; 0x4f6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	42 c2       	rjmp	.+1156   	; 0x4f6 <__bad_interrupt>
      72:	00 00       	nop
      74:	40 c2       	rjmp	.+1152   	; 0x4f6 <__bad_interrupt>
      76:	00 00       	nop
      78:	3e c2       	rjmp	.+1148   	; 0x4f6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3c c2       	rjmp	.+1144   	; 0x4f6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	3a c2       	rjmp	.+1140   	; 0x4f6 <__bad_interrupt>
      82:	00 00       	nop
      84:	38 c2       	rjmp	.+1136   	; 0x4f6 <__bad_interrupt>
      86:	00 00       	nop
      88:	36 c2       	rjmp	.+1132   	; 0x4f6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	34 c2       	rjmp	.+1128   	; 0x4f6 <__bad_interrupt>
      8e:	00 00       	nop
      90:	32 c2       	rjmp	.+1124   	; 0x4f6 <__bad_interrupt>
      92:	00 00       	nop
      94:	30 c2       	rjmp	.+1120   	; 0x4f6 <__bad_interrupt>
      96:	00 00       	nop
      98:	2e c2       	rjmp	.+1116   	; 0x4f6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	2c c2       	rjmp	.+1112   	; 0x4f6 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	2a c2       	rjmp	.+1108   	; 0x4f6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	28 c2       	rjmp	.+1104   	; 0x4f6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	26 c2       	rjmp	.+1100   	; 0x4f6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	08 00       	.word	0x0008	; ????
      ae:	00 00       	nop
      b0:	be 92       	st	-X, r11
      b2:	24 49       	sbci	r18, 0x94	; 148
      b4:	12 3e       	cpi	r17, 0xE2	; 226
      b6:	ab aa       	std	Y+51, r10	; 0x33
      b8:	aa 2a       	or	r10, r26
      ba:	be cd       	rjmp	.-1156   	; 0xfffffc38 <__eeprom_end+0xff7efc38>
      bc:	cc cc       	rjmp	.-1640   	; 0xfffffa56 <__eeprom_end+0xff7efa56>
      be:	4c 3e       	cpi	r20, 0xEC	; 236
      c0:	00 00       	nop
      c2:	00 80       	ld	r0, Z
      c4:	be ab       	std	Y+54, r27	; 0x36
      c6:	aa aa       	std	Y+50, r10	; 0x32
      c8:	aa 3e       	cpi	r26, 0xEA	; 234
      ca:	00 00       	nop
      cc:	00 00       	nop
      ce:	bf 00       	.word	0x00bf	; ????
      d0:	00 00       	nop
      d2:	80 3f       	cpi	r24, 0xF0	; 240
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	00 08       	sbc	r0, r0
      da:	41 78       	andi	r20, 0x81	; 129
      dc:	d3 bb       	out	0x13, r29	; 19
      de:	43 87       	std	Z+11, r20	; 0x0b
      e0:	d1 13       	cpse	r29, r17
      e2:	3d 19       	sub	r19, r13
      e4:	0e 3c       	cpi	r16, 0xCE	; 206
      e6:	c3 bd       	out	0x23, r28	; 35
      e8:	42 82       	std	Z+2, r4	; 0x02
      ea:	ad 2b       	or	r26, r29
      ec:	3e 68       	ori	r19, 0x8E	; 142
      ee:	ec 82       	std	Y+4, r14	; 0x04
      f0:	76 be       	out	0x36, r7	; 54
      f2:	d9 8f       	std	Y+25, r29	; 0x19
      f4:	e1 a9       	ldd	r30, Z+49	; 0x31
      f6:	3e 4c       	sbci	r19, 0xCE	; 206
      f8:	80 ef       	ldi	r24, 0xF0	; 240
      fa:	ff be       	out	0x3f, r15	; 63
      fc:	01 c4       	rjmp	.+2050   	; 0x900 <c12880ma_read+0xaa>
      fe:	ff 7f       	andi	r31, 0xFF	; 255
     100:	3f 00       	.word	0x003f	; ????
     102:	00 00       	nop
     104:	00 00       	nop

00000106 <__trampolines_end>:
     106:	6e 61       	ori	r22, 0x1E	; 30
     108:	6e 00       	.word	0x006e	; ????

0000010a <__c.2332>:
     10a:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     11a:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     12a:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     13a:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     14a:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     15a:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     16a:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     17a:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     18a:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     19a:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1aa:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1ba:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1ca:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1da:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1ea:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1fa:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000208 <wl_lut_10nm>:
     208:	07 00 0b 00 0f 00 12 00 16 00 1a 00 1e 00 22 00     ..............".
     218:	26 00 29 00 2d 00 31 00 35 00 39 00 3d 00 41 00     &.).-.1.5.9.=.A.
     228:	45 00 49 00 4d 00 52 00 56 00 5a 00 5e 00 63 00     E.I.M.R.V.Z.^.c.
     238:	67 00 6c 00 70 00 75 00 79 00 7e 00 83 00 87 00     g.l.p.u.y.~.....
     248:	8c 00 91 00 96 00 9b 00 a1 00 a6 00 ab 00 b1 00     ................
     258:	b6 00 bc 00 c2 00 c8 00 ce 00 d4 00 db 00 e1 00     ................

00000268 <spectralsensitivitycoeff>:
     268:	50 cb 0f 4d 50 cb 0f 4d 50 cb 0f 4d 61 5e 21 4d     P..MP..MP..Ma^!M
     278:	4b 01 20 4d 0c 47 1b 4d c2 99 2a 4d 33 dc 4a 4d     K. M.G.M..*M3.JM
     288:	61 cc 5f 4d 51 a7 60 4d bc dc 52 4d f6 50 48 4d     a._MQ.`M..RM.PHM
     298:	52 c0 50 4d c4 22 56 4d 38 fe 66 4d ba 38 75 4d     R.PM."VM8.fM.8uM
     2a8:	98 54 82 4d f2 f4 74 4d 6e a5 62 4d a9 6e 58 4d     .T.M..tMn.bM.nXM
     2b8:	1c e9 5b 4d 22 99 5f 4d 62 bc 5b 4d 54 76 54 4d     ..[M"._Mb.[MTvTM
     2c8:	1a 50 4f 4d 7d 1c 4b 4d 91 7c 48 4d 34 4a 48 4d     .POM}.KM.|HM4JHM
     2d8:	e0 3c 46 4d d2 50 41 4d 14 9b 3d 4d 0f 05 37 4d     .<FM.PAM..=M..7M
     2e8:	bd b0 2f 4d 29 42 28 4d b2 41 26 4d 0c 6b 1a 4d     ../M)B(M.A&M.k.M
     2f8:	dd 52 12 4d 1f bd 0b 4d 32 9e 0a 4d 3f 84 02 4d     .R.M...M2..M?..M
     308:	0d 88 f9 4c 1c 3c f1 4c 19 ed f0 4c c7 d1 e4 4c     ...L.<.L...L...L
     318:	b6 cf d7 4c 0c fa c3 4c 0c fa c3 4c 0c fa c3 4c     ...L...L...L...L

00000328 <wccoeff>:
     328:	00 00 9c 43 cd cc 2c 40 1e 1b 81 ba 98 0a 1e b7     ...C..,@........
     338:	fb df 8c 32 13 33 b5 ac                             ...2.3..

00000340 <name>:
     340:	55 56 56 49 53 53 50 45 43 00                       UVVISSPEC.

0000034a <model>:
     34a:	43 50 31 35 30 00                                   CP150.

00000350 <serialnumber>:
     350:	43 50 31 35 30 32 31 41 30 32 37 38 36 00           CP15021A02786.

0000035e <wl_10nm>:
     35e:	4a 01 54 01 5e 01 68 01 72 01 7c 01 86 01 90 01     J.T.^.h.r.|.....
     36e:	9a 01 a4 01 ae 01 b8 01 c2 01 cc 01 d6 01 e0 01     ................
     37e:	ea 01 f4 01 fe 01 08 02 12 02 1c 02 26 02 30 02     ............&.0.
     38e:	3a 02 44 02 4e 02 58 02 62 02 6c 02 76 02 80 02     :.D.N.X.b.l.v...
     39e:	8a 02 94 02 9e 02 a8 02 b2 02 bc 02 c6 02 d0 02     ................
     3ae:	da 02 e4 02 ee 02 f8 02 02 03 0c 03 16 03 20 03     .............. .

000003be <unitcoeff>:
     3be:	17 b7 d1 38 17 b7 51 39 6f 12 03 3a 6f 12 83 3a     ...8..Q9o..:o..:
     3ce:	6f 12 03 3b 0a d7 a3 3b 0a d7 23 3c 0a d7 a3 3c     o..;...;..#<...<
     3de:	cd cc 4c 3d cd cc cc 3d                             ..L=...=

000003e6 <ProductString>:
     3e6:	24 03 4d 00 69 00 6e 00 69 00 20 00 53 00 70 00     $.M.i.n.i. .S.p.
     3f6:	65 00 63 00 74 00 72 00 6f 00 6d 00 65 00 74 00     e.c.t.r.o.m.e.t.
     406:	65 00 72 00 00 00                                   e.r...

0000040c <ManufacturerString>:
     40c:	0e 03 4f 00 50 00 54 00 43 00 4f 00 4d 00 00 00     ..O.P.T.C.O.M...

0000041c <LanguageString>:
     41c:	04 03 09 04                                         ....

00000420 <ConfigurationDescriptor>:
     420:	09 02 3e 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..>.....2.......
     430:	01 00 05 24 00 10 01 04 24 02 06 05 24 06 00 01     ...$....$...$...
     440:	07 05 82 03 08 00 ff 09 04 01 00 02 0a 00 00 00     ................
     450:	07 05 04 02 10 00 05 07 05 83 02 10 00 05           ..............

0000045e <DeviceDescriptor>:
     45e:	12 01 10 01 02 00 00 08 a3 21 01 20 01 00 01 02     .........!. ....
     46e:	dc 01                                               ..

00000470 <__c.2529>:
     470:	63 64 69 6e 6f 70 73 75 78 58 5b 65 66 67 45 46     cdinopsuxX[efgEF
     480:	47 00                                               G.

00000482 <pstr_an>:
     482:	61 6e 00                                            an.

00000485 <pstr_nfinity>:
     485:	6e 66 69 6e 69 74 79 00                             nfinity.

0000048d <pwr_m10>:
     48d:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     49d:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000004a5 <pwr_p10>:
     4a5:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     4b5:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000004be <__ctors_end>:
     4be:	11 24       	eor	r1, r1
     4c0:	1f be       	out	0x3f, r1	; 63
     4c2:	cf ef       	ldi	r28, 0xFF	; 255
     4c4:	da e0       	ldi	r29, 0x0A	; 10
     4c6:	de bf       	out	0x3e, r29	; 62
     4c8:	cd bf       	out	0x3d, r28	; 61

000004ca <__do_copy_data>:
     4ca:	11 e0       	ldi	r17, 0x01	; 1
     4cc:	a0 e0       	ldi	r26, 0x00	; 0
     4ce:	b1 e0       	ldi	r27, 0x01	; 1
     4d0:	e8 eb       	ldi	r30, 0xB8	; 184
     4d2:	fa e3       	ldi	r31, 0x3A	; 58
     4d4:	02 c0       	rjmp	.+4      	; 0x4da <__do_copy_data+0x10>
     4d6:	05 90       	lpm	r0, Z+
     4d8:	0d 92       	st	X+, r0
     4da:	a0 3f       	cpi	r26, 0xF0	; 240
     4dc:	b1 07       	cpc	r27, r17
     4de:	d9 f7       	brne	.-10     	; 0x4d6 <__do_copy_data+0xc>

000004e0 <__do_clear_bss>:
     4e0:	28 e0       	ldi	r18, 0x08	; 8
     4e2:	a0 ef       	ldi	r26, 0xF0	; 240
     4e4:	b1 e0       	ldi	r27, 0x01	; 1
     4e6:	01 c0       	rjmp	.+2      	; 0x4ea <.do_clear_bss_start>

000004e8 <.do_clear_bss_loop>:
     4e8:	1d 92       	st	X+, r1

000004ea <.do_clear_bss_start>:
     4ea:	a8 3f       	cpi	r26, 0xF8	; 248
     4ec:	b2 07       	cpc	r27, r18
     4ee:	e1 f7       	brne	.-8      	; 0x4e8 <.do_clear_bss_loop>
     4f0:	d4 d7       	rcall	.+4008   	; 0x149a <main>
     4f2:	0c 94 5a 1d 	jmp	0x3ab4	; 0x3ab4 <_exit>

000004f6 <__bad_interrupt>:
     4f6:	84 cd       	rjmp	.-1272   	; 0x0 <__vectors>

000004f8 <conv_wl>:
    case EXPOSURE_TIME_SEL_100ms:
        return EXPOSURE_TIME_100ms;
    default:
        return EXPOSURE_TIME_100us;
    }
}
     4f8:	4f 92       	push	r4
     4fa:	5f 92       	push	r5
     4fc:	6f 92       	push	r6
     4fe:	7f 92       	push	r7
     500:	8f 92       	push	r8
     502:	9f 92       	push	r9
     504:	af 92       	push	r10
     506:	bf 92       	push	r11
     508:	cf 92       	push	r12
     50a:	df 92       	push	r13
     50c:	ef 92       	push	r14
     50e:	ff 92       	push	r15
     510:	cf 93       	push	r28
     512:	df 93       	push	r29
     514:	cd b7       	in	r28, 0x3d	; 61
     516:	de b7       	in	r29, 0x3e	; 62
     518:	60 97       	sbiw	r28, 0x10	; 16
     51a:	0f b6       	in	r0, 0x3f	; 63
     51c:	f8 94       	cli
     51e:	de bf       	out	0x3e, r29	; 62
     520:	0f be       	out	0x3f, r0	; 63
     522:	cd bf       	out	0x3d, r28	; 61
     524:	e8 e2       	ldi	r30, 0x28	; 40
     526:	f3 e0       	ldi	r31, 0x03	; 3
     528:	85 90       	lpm	r8, Z+
     52a:	95 90       	lpm	r9, Z+
     52c:	a5 90       	lpm	r10, Z+
     52e:	b4 90       	lpm	r11, Z
     530:	ec e2       	ldi	r30, 0x2C	; 44
     532:	f3 e0       	ldi	r31, 0x03	; 3
     534:	45 90       	lpm	r4, Z+
     536:	55 90       	lpm	r5, Z+
     538:	65 90       	lpm	r6, Z+
     53a:	74 90       	lpm	r7, Z
     53c:	e0 e3       	ldi	r30, 0x30	; 48
     53e:	f3 e0       	ldi	r31, 0x03	; 3
     540:	25 91       	lpm	r18, Z+
     542:	35 91       	lpm	r19, Z+
     544:	45 91       	lpm	r20, Z+
     546:	54 91       	lpm	r21, Z
     548:	29 83       	std	Y+1, r18	; 0x01
     54a:	3a 83       	std	Y+2, r19	; 0x02
     54c:	4b 83       	std	Y+3, r20	; 0x03
     54e:	5c 83       	std	Y+4, r21	; 0x04
     550:	e4 e3       	ldi	r30, 0x34	; 52
     552:	f3 e0       	ldi	r31, 0x03	; 3
     554:	25 91       	lpm	r18, Z+
     556:	35 91       	lpm	r19, Z+
     558:	45 91       	lpm	r20, Z+
     55a:	54 91       	lpm	r21, Z
     55c:	2d 83       	std	Y+5, r18	; 0x05
     55e:	3e 83       	std	Y+6, r19	; 0x06
     560:	4f 83       	std	Y+7, r20	; 0x07
     562:	58 87       	std	Y+8, r21	; 0x08
     564:	e8 e3       	ldi	r30, 0x38	; 56
     566:	f3 e0       	ldi	r31, 0x03	; 3
     568:	25 91       	lpm	r18, Z+
     56a:	35 91       	lpm	r19, Z+
     56c:	45 91       	lpm	r20, Z+
     56e:	54 91       	lpm	r21, Z
     570:	29 87       	std	Y+9, r18	; 0x09
     572:	3a 87       	std	Y+10, r19	; 0x0a
     574:	4b 87       	std	Y+11, r20	; 0x0b
     576:	5c 87       	std	Y+12, r21	; 0x0c
     578:	ec e3       	ldi	r30, 0x3C	; 60
     57a:	f3 e0       	ldi	r31, 0x03	; 3
     57c:	25 91       	lpm	r18, Z+
     57e:	35 91       	lpm	r19, Z+
     580:	45 91       	lpm	r20, Z+
     582:	54 91       	lpm	r21, Z
     584:	2d 87       	std	Y+13, r18	; 0x0d
     586:	3e 87       	std	Y+14, r19	; 0x0e
     588:	4f 87       	std	Y+15, r20	; 0x0f
     58a:	58 8b       	std	Y+16, r21	; 0x10
     58c:	bc 01       	movw	r22, r24
     58e:	99 0f       	add	r25, r25
     590:	88 0b       	sbc	r24, r24
     592:	99 0b       	sbc	r25, r25
     594:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     598:	6b 01       	movw	r12, r22
     59a:	7c 01       	movw	r14, r24
     59c:	9b 01       	movw	r18, r22
     59e:	ac 01       	movw	r20, r24
     5a0:	c3 01       	movw	r24, r6
     5a2:	b2 01       	movw	r22, r4
     5a4:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     5a8:	a5 01       	movw	r20, r10
     5aa:	94 01       	movw	r18, r8
     5ac:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     5b0:	4b 01       	movw	r8, r22
     5b2:	5c 01       	movw	r10, r24
     5b4:	a7 01       	movw	r20, r14
     5b6:	96 01       	movw	r18, r12
     5b8:	69 81       	ldd	r22, Y+1	; 0x01
     5ba:	7a 81       	ldd	r23, Y+2	; 0x02
     5bc:	8b 81       	ldd	r24, Y+3	; 0x03
     5be:	9c 81       	ldd	r25, Y+4	; 0x04
     5c0:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     5c4:	a7 01       	movw	r20, r14
     5c6:	96 01       	movw	r18, r12
     5c8:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     5cc:	9b 01       	movw	r18, r22
     5ce:	ac 01       	movw	r20, r24
     5d0:	c5 01       	movw	r24, r10
     5d2:	b4 01       	movw	r22, r8
     5d4:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     5d8:	4b 01       	movw	r8, r22
     5da:	5c 01       	movw	r10, r24
     5dc:	a7 01       	movw	r20, r14
     5de:	96 01       	movw	r18, r12
     5e0:	6d 81       	ldd	r22, Y+5	; 0x05
     5e2:	7e 81       	ldd	r23, Y+6	; 0x06
     5e4:	8f 81       	ldd	r24, Y+7	; 0x07
     5e6:	98 85       	ldd	r25, Y+8	; 0x08
     5e8:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     5ec:	a7 01       	movw	r20, r14
     5ee:	96 01       	movw	r18, r12
     5f0:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     5f4:	a7 01       	movw	r20, r14
     5f6:	96 01       	movw	r18, r12
     5f8:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     5fc:	9b 01       	movw	r18, r22
     5fe:	ac 01       	movw	r20, r24
     600:	c5 01       	movw	r24, r10
     602:	b4 01       	movw	r22, r8
     604:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     608:	4b 01       	movw	r8, r22
     60a:	5c 01       	movw	r10, r24
     60c:	a7 01       	movw	r20, r14
     60e:	96 01       	movw	r18, r12
     610:	69 85       	ldd	r22, Y+9	; 0x09
     612:	7a 85       	ldd	r23, Y+10	; 0x0a
     614:	8b 85       	ldd	r24, Y+11	; 0x0b
     616:	9c 85       	ldd	r25, Y+12	; 0x0c
     618:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     61c:	a7 01       	movw	r20, r14
     61e:	96 01       	movw	r18, r12
     620:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     624:	a7 01       	movw	r20, r14
     626:	96 01       	movw	r18, r12
     628:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     62c:	a7 01       	movw	r20, r14
     62e:	96 01       	movw	r18, r12
     630:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     634:	9b 01       	movw	r18, r22
     636:	ac 01       	movw	r20, r24
     638:	c5 01       	movw	r24, r10
     63a:	b4 01       	movw	r22, r8
     63c:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     640:	4b 01       	movw	r8, r22
     642:	5c 01       	movw	r10, r24
     644:	a7 01       	movw	r20, r14
     646:	96 01       	movw	r18, r12
     648:	6d 85       	ldd	r22, Y+13	; 0x0d
     64a:	7e 85       	ldd	r23, Y+14	; 0x0e
     64c:	8f 85       	ldd	r24, Y+15	; 0x0f
     64e:	98 89       	ldd	r25, Y+16	; 0x10
     650:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     654:	a7 01       	movw	r20, r14
     656:	96 01       	movw	r18, r12
     658:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     65c:	a7 01       	movw	r20, r14
     65e:	96 01       	movw	r18, r12
     660:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     664:	a7 01       	movw	r20, r14
     666:	96 01       	movw	r18, r12
     668:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     66c:	a7 01       	movw	r20, r14
     66e:	96 01       	movw	r18, r12
     670:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     674:	9b 01       	movw	r18, r22
     676:	ac 01       	movw	r20, r24
     678:	c5 01       	movw	r24, r10
     67a:	b4 01       	movw	r22, r8
     67c:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     680:	60 96       	adiw	r28, 0x10	; 16
     682:	0f b6       	in	r0, 0x3f	; 63
     684:	f8 94       	cli
     686:	de bf       	out	0x3e, r29	; 62
     688:	0f be       	out	0x3f, r0	; 63
     68a:	cd bf       	out	0x3d, r28	; 61
     68c:	df 91       	pop	r29
     68e:	cf 91       	pop	r28
     690:	ff 90       	pop	r15
     692:	ef 90       	pop	r14
     694:	df 90       	pop	r13
     696:	cf 90       	pop	r12
     698:	bf 90       	pop	r11
     69a:	af 90       	pop	r10
     69c:	9f 90       	pop	r9
     69e:	8f 90       	pop	r8
     6a0:	7f 90       	pop	r7
     6a2:	6f 90       	pop	r6
     6a4:	5f 90       	pop	r5
     6a6:	4f 90       	pop	r4
     6a8:	08 95       	ret

000006aa <EVENT_USB_Device_Connect>:
     6aa:	08 95       	ret

000006ac <EVENT_USB_Device_Disconnect>:
     6ac:	08 95       	ret

000006ae <EVENT_USB_Device_ConfigurationChanged>:
     6ae:	80 e0       	ldi	r24, 0x00	; 0
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	0c 94 62 0f 	jmp	0x1ec4	; 0x1ec4 <CDC_Device_ConfigureEndpoints>

000006b6 <EVENT_USB_Device_ControlRequest>:
     6b6:	80 e0       	ldi	r24, 0x00	; 0
     6b8:	91 e0       	ldi	r25, 0x01	; 1
     6ba:	0c 94 78 10 	jmp	0x20f0	; 0x20f0 <CDC_Device_ProcessControlRequest>

000006be <EVENT_CDC_Device_ControLineStateChanged>:
     6be:	08 95       	ret

000006c0 <delay>:
     6c0:	00 00       	nop
     6c2:	00 00       	nop
     6c4:	00 00       	nop
     6c6:	00 00       	nop
     6c8:	00 00       	nop
     6ca:	08 95       	ret

000006cc <adc_temp_read>:
     6cc:	8f 92       	push	r8
     6ce:	9f 92       	push	r9
     6d0:	af 92       	push	r10
     6d2:	bf 92       	push	r11
     6d4:	cf 92       	push	r12
     6d6:	df 92       	push	r13
     6d8:	ef 92       	push	r14
     6da:	ff 92       	push	r15
     6dc:	80 e4       	ldi	r24, 0x40	; 64
     6de:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     6e2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     6e6:	87 60       	ori	r24, 0x07	; 7
     6e8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     6ec:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
     6f0:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
     6f4:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
     6f8:	87 ec       	ldi	r24, 0xC7	; 199
     6fa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     6fe:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     702:	86 fd       	sbrc	r24, 6
     704:	fc cf       	rjmp	.-8      	; 0x6fe <adc_temp_read+0x32>
     706:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     70a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     70e:	70 e0       	ldi	r23, 0x00	; 0
     710:	78 2b       	or	r23, r24
     712:	73 70       	andi	r23, 0x03	; 3
     714:	07 2e       	mov	r0, r23
     716:	00 0c       	add	r0, r0
     718:	88 0b       	sbc	r24, r24
     71a:	99 0b       	sbc	r25, r25
     71c:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 ec       	ldi	r19, 0xC0	; 192
     724:	4f e7       	ldi	r20, 0x7F	; 127
     726:	54 e4       	ldi	r21, 0x44	; 68
     728:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     72c:	20 e0       	ldi	r18, 0x00	; 0
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	40 ea       	ldi	r20, 0xA0	; 160
     732:	50 e4       	ldi	r21, 0x40	; 64
     734:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     738:	4b 01       	movw	r8, r22
     73a:	5c 01       	movw	r10, r24
     73c:	9b 01       	movw	r18, r22
     73e:	ac 01       	movw	r20, r24
     740:	60 e0       	ldi	r22, 0x00	; 0
     742:	70 e0       	ldi	r23, 0x00	; 0
     744:	80 ea       	ldi	r24, 0xA0	; 160
     746:	90 e4       	ldi	r25, 0x40	; 64
     748:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     74c:	6b 01       	movw	r12, r22
     74e:	7c 01       	movw	r14, r24
     750:	20 e0       	ldi	r18, 0x00	; 0
     752:	30 e0       	ldi	r19, 0x00	; 0
     754:	a9 01       	movw	r20, r18
     756:	0e 94 8e 11 	call	0x231c	; 0x231c <__cmpsf2>
     75a:	88 23       	and	r24, r24
     75c:	69 f0       	breq	.+26     	; 0x778 <adc_temp_read+0xac>
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e4       	ldi	r19, 0x40	; 64
     762:	4c e1       	ldi	r20, 0x1C	; 28
     764:	56 e4       	ldi	r21, 0x46	; 70
     766:	c5 01       	movw	r24, r10
     768:	b4 01       	movw	r22, r8
     76a:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     76e:	a7 01       	movw	r20, r14
     770:	96 01       	movw	r18, r12
     772:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     776:	03 c0       	rjmp	.+6      	; 0x77e <adc_temp_read+0xb2>
     778:	60 e0       	ldi	r22, 0x00	; 0
     77a:	70 e0       	ldi	r23, 0x00	; 0
     77c:	cb 01       	movw	r24, r22
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e4       	ldi	r19, 0x40	; 64
     782:	4c e1       	ldi	r20, 0x1C	; 28
     784:	56 e4       	ldi	r21, 0x46	; 70
     786:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     78a:	0e 94 e6 12 	call	0x25cc	; 0x25cc <log>
     78e:	20 e0       	ldi	r18, 0x00	; 0
     790:	30 eb       	ldi	r19, 0xB0	; 176
     792:	46 e5       	ldi	r20, 0x56	; 86
     794:	55 e4       	ldi	r21, 0x45	; 69
     796:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     79a:	2f e0       	ldi	r18, 0x0F	; 15
     79c:	3f ec       	ldi	r19, 0xCF	; 207
     79e:	4b e5       	ldi	r20, 0x5B	; 91
     7a0:	5b e3       	ldi	r21, 0x3B	; 59
     7a2:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     7a6:	9b 01       	movw	r18, r22
     7a8:	ac 01       	movw	r20, r24
     7aa:	60 e0       	ldi	r22, 0x00	; 0
     7ac:	70 e0       	ldi	r23, 0x00	; 0
     7ae:	80 e8       	ldi	r24, 0x80	; 128
     7b0:	9f e3       	ldi	r25, 0x3F	; 63
     7b2:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     7b6:	23 e3       	ldi	r18, 0x33	; 51
     7b8:	33 e9       	ldi	r19, 0x93	; 147
     7ba:	48 e8       	ldi	r20, 0x88	; 136
     7bc:	53 e4       	ldi	r21, 0x43	; 67
     7be:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     7c2:	ff 90       	pop	r15
     7c4:	ef 90       	pop	r14
     7c6:	df 90       	pop	r13
     7c8:	cf 90       	pop	r12
     7ca:	bf 90       	pop	r11
     7cc:	af 90       	pop	r10
     7ce:	9f 90       	pop	r9
     7d0:	8f 90       	pop	r8
     7d2:	08 95       	ret

000007d4 <mcp3201_init>:
     7d4:	80 d6       	rcall	.+3328   	; 0x14d6 <spi_init>
     7d6:	20 9a       	sbi	0x04, 0	; 4
     7d8:	28 9a       	sbi	0x05, 0	; 5
     7da:	08 95       	ret

000007dc <mcp3201_read>:
     7dc:	cf 93       	push	r28
     7de:	28 98       	cbi	0x05, 0	; 5
     7e0:	00 00       	nop
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	81 d6       	rcall	.+3330   	; 0x14e8 <spi_transfer>
     7e6:	c8 2f       	mov	r28, r24
     7e8:	80 e0       	ldi	r24, 0x00	; 0
     7ea:	7e d6       	rcall	.+3324   	; 0x14e8 <spi_transfer>
     7ec:	28 9a       	sbi	0x05, 0	; 5
     7ee:	cf 71       	andi	r28, 0x1F	; 31
     7f0:	40 e8       	ldi	r20, 0x80	; 128
     7f2:	c4 9f       	mul	r28, r20
     7f4:	90 01       	movw	r18, r0
     7f6:	11 24       	eor	r1, r1
     7f8:	86 95       	lsr	r24
     7fa:	a9 01       	movw	r20, r18
     7fc:	48 2b       	or	r20, r24
     7fe:	ca 01       	movw	r24, r20
     800:	cf 91       	pop	r28
     802:	08 95       	ret

00000804 <c12880ma_init>:
     804:	81 9a       	sbi	0x10, 1	; 16
     806:	89 98       	cbi	0x11, 1	; 17
     808:	85 9a       	sbi	0x10, 5	; 16
     80a:	8d 98       	cbi	0x11, 5	; 17
     80c:	e8 e8       	ldi	r30, 0x88	; 136
     80e:	f6 e0       	ldi	r31, 0x06	; 6
     810:	88 ec       	ldi	r24, 0xC8	; 200
     812:	98 e0       	ldi	r25, 0x08	; 8
     814:	11 92       	st	Z+, r1
     816:	11 92       	st	Z+, r1
     818:	8e 17       	cp	r24, r30
     81a:	9f 07       	cpc	r25, r31
     81c:	d9 f7       	brne	.-10     	; 0x814 <c12880ma_init+0x10>
     81e:	e8 ec       	ldi	r30, 0xC8	; 200
     820:	f5 e0       	ldi	r31, 0x05	; 5
     822:	28 e0       	ldi	r18, 0x08	; 8
     824:	32 e0       	ldi	r19, 0x02	; 2
     826:	11 92       	st	Z+, r1
     828:	11 92       	st	Z+, r1
     82a:	11 92       	st	Z+, r1
     82c:	11 92       	st	Z+, r1
     82e:	80 e0       	ldi	r24, 0x00	; 0
     830:	90 e0       	ldi	r25, 0x00	; 0
     832:	d9 01       	movw	r26, r18
     834:	a8 0f       	add	r26, r24
     836:	b9 1f       	adc	r27, r25
     838:	1d 92       	st	X+, r1
     83a:	1c 92       	st	X, r1
     83c:	80 5a       	subi	r24, 0xA0	; 160
     83e:	9f 4f       	sbci	r25, 0xFF	; 255
     840:	80 3c       	cpi	r24, 0xC0	; 192
     842:	43 e0       	ldi	r20, 0x03	; 3
     844:	94 07       	cpc	r25, r20
     846:	a9 f7       	brne	.-22     	; 0x832 <c12880ma_init+0x2e>
     848:	2e 5f       	subi	r18, 0xFE	; 254
     84a:	3f 4f       	sbci	r19, 0xFF	; 255
     84c:	86 e0       	ldi	r24, 0x06	; 6
     84e:	e8 38       	cpi	r30, 0x88	; 136
     850:	f8 07       	cpc	r31, r24
     852:	49 f7       	brne	.-46     	; 0x826 <c12880ma_init+0x22>
     854:	08 95       	ret

00000856 <c12880ma_read>:
     856:	2f 92       	push	r2
     858:	3f 92       	push	r3
     85a:	4f 92       	push	r4
     85c:	5f 92       	push	r5
     85e:	6f 92       	push	r6
     860:	7f 92       	push	r7
     862:	8f 92       	push	r8
     864:	9f 92       	push	r9
     866:	af 92       	push	r10
     868:	bf 92       	push	r11
     86a:	cf 92       	push	r12
     86c:	df 92       	push	r13
     86e:	ef 92       	push	r14
     870:	ff 92       	push	r15
     872:	0f 93       	push	r16
     874:	1f 93       	push	r17
     876:	cf 93       	push	r28
     878:	df 93       	push	r29
     87a:	cd b7       	in	r28, 0x3d	; 61
     87c:	de b7       	in	r29, 0x3e	; 62
     87e:	2a 97       	sbiw	r28, 0x0a	; 10
     880:	0f b6       	in	r0, 0x3f	; 63
     882:	f8 94       	cli
     884:	de bf       	out	0x3e, r29	; 62
     886:	0f be       	out	0x3f, r0	; 63
     888:	cd bf       	out	0x3d, r28	; 61
     88a:	28 e8       	ldi	r18, 0x88	; 136
     88c:	36 e0       	ldi	r19, 0x06	; 6
     88e:	3a 83       	std	Y+2, r19	; 0x02
     890:	29 83       	std	Y+1, r18	; 0x01
     892:	58 ec       	ldi	r21, 0xC8	; 200
     894:	a5 2e       	mov	r10, r21
     896:	58 e0       	ldi	r21, 0x08	; 8
     898:	b5 2e       	mov	r11, r21
     89a:	f9 01       	movw	r30, r18
     89c:	11 92       	st	Z+, r1
     89e:	11 92       	st	Z+, r1
     8a0:	38 e0       	ldi	r19, 0x08	; 8
     8a2:	e8 3c       	cpi	r30, 0xC8	; 200
     8a4:	f3 07       	cpc	r31, r19
     8a6:	d1 f7       	brne	.-12     	; 0x89c <c12880ma_read+0x46>
     8a8:	89 98       	cbi	0x11, 1	; 17
     8aa:	0a df       	rcall	.-492    	; 0x6c0 <delay>
     8ac:	89 9a       	sbi	0x11, 1	; 17
     8ae:	08 df       	rcall	.-496    	; 0x6c0 <delay>
     8b0:	89 98       	cbi	0x11, 1	; 17
     8b2:	8d 9a       	sbi	0x11, 5	; 17
     8b4:	05 df       	rcall	.-502    	; 0x6c0 <delay>
     8b6:	03 e0       	ldi	r16, 0x03	; 3
     8b8:	10 e0       	ldi	r17, 0x00	; 0
     8ba:	89 9a       	sbi	0x11, 1	; 17
     8bc:	01 df       	rcall	.-510    	; 0x6c0 <delay>
     8be:	89 98       	cbi	0x11, 1	; 17
     8c0:	ff de       	rcall	.-514    	; 0x6c0 <delay>
     8c2:	01 50       	subi	r16, 0x01	; 1
     8c4:	11 09       	sbc	r17, r1
     8c6:	c9 f7       	brne	.-14     	; 0x8ba <c12880ma_read+0x64>
     8c8:	c1 2c       	mov	r12, r1
     8ca:	d1 2c       	mov	r13, r1
     8cc:	76 01       	movw	r14, r12
     8ce:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <exposure_time>
     8d2:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <exposure_time+0x1>
     8d6:	a0 91 21 01 	lds	r26, 0x0121	; 0x800121 <exposure_time+0x2>
     8da:	b0 91 22 01 	lds	r27, 0x0122	; 0x800122 <exposure_time+0x3>
     8de:	c8 16       	cp	r12, r24
     8e0:	d9 06       	cpc	r13, r25
     8e2:	ea 06       	cpc	r14, r26
     8e4:	fb 06       	cpc	r15, r27
     8e6:	54 f4       	brge	.+20     	; 0x8fc <c12880ma_read+0xa6>
     8e8:	89 9a       	sbi	0x11, 1	; 17
     8ea:	ea de       	rcall	.-556    	; 0x6c0 <delay>
     8ec:	89 98       	cbi	0x11, 1	; 17
     8ee:	e8 de       	rcall	.-560    	; 0x6c0 <delay>
     8f0:	8f ef       	ldi	r24, 0xFF	; 255
     8f2:	c8 1a       	sub	r12, r24
     8f4:	d8 0a       	sbc	r13, r24
     8f6:	e8 0a       	sbc	r14, r24
     8f8:	f8 0a       	sbc	r15, r24
     8fa:	e9 cf       	rjmp	.-46     	; 0x8ce <c12880ma_read+0x78>
     8fc:	8d 98       	cbi	0x11, 5	; 17
     8fe:	08 e5       	ldi	r16, 0x58	; 88
     900:	10 e0       	ldi	r17, 0x00	; 0
     902:	89 9a       	sbi	0x11, 1	; 17
     904:	dd de       	rcall	.-582    	; 0x6c0 <delay>
     906:	89 98       	cbi	0x11, 1	; 17
     908:	db de       	rcall	.-586    	; 0x6c0 <delay>
     90a:	01 50       	subi	r16, 0x01	; 1
     90c:	11 09       	sbc	r17, r1
     90e:	c9 f7       	brne	.-14     	; 0x902 <c12880ma_read+0xac>
     910:	65 df       	rcall	.-310    	; 0x7dc <mcp3201_read>
     912:	e9 81       	ldd	r30, Y+1	; 0x01
     914:	fa 81       	ldd	r31, Y+2	; 0x02
     916:	81 93       	st	Z+, r24
     918:	91 93       	st	Z+, r25
     91a:	fa 83       	std	Y+2, r31	; 0x02
     91c:	e9 83       	std	Y+1, r30	; 0x01
     91e:	89 9a       	sbi	0x11, 1	; 17
     920:	cf de       	rcall	.-610    	; 0x6c0 <delay>
     922:	89 98       	cbi	0x11, 1	; 17
     924:	cd de       	rcall	.-614    	; 0x6c0 <delay>
     926:	29 81       	ldd	r18, Y+1	; 0x01
     928:	3a 81       	ldd	r19, Y+2	; 0x02
     92a:	a2 16       	cp	r10, r18
     92c:	b3 06       	cpc	r11, r19
     92e:	81 f7       	brne	.-32     	; 0x910 <c12880ma_read+0xba>
     930:	0e e5       	ldi	r16, 0x5E	; 94
     932:	13 e0       	ldi	r17, 0x03	; 3
     934:	48 e0       	ldi	r20, 0x08	; 8
     936:	24 2e       	mov	r2, r20
     938:	42 e0       	ldi	r20, 0x02	; 2
     93a:	34 2e       	mov	r3, r20
     93c:	88 ec       	ldi	r24, 0xC8	; 200
     93e:	95 e0       	ldi	r25, 0x05	; 5
     940:	9a 83       	std	Y+2, r25	; 0x02
     942:	89 83       	std	Y+1, r24	; 0x01
     944:	f8 01       	movw	r30, r16
     946:	25 91       	lpm	r18, Z+
     948:	34 91       	lpm	r19, Z
     94a:	38 87       	std	Y+8, r19	; 0x08
     94c:	2f 83       	std	Y+7, r18	; 0x07
     94e:	f1 01       	movw	r30, r2
     950:	a5 90       	lpm	r10, Z+
     952:	b4 90       	lpm	r11, Z
     954:	75 01       	movw	r14, r10
     956:	31 e0       	ldi	r19, 0x01	; 1
     958:	e3 1a       	sub	r14, r19
     95a:	f1 08       	sbc	r15, r1
     95c:	c7 01       	movw	r24, r14
     95e:	cc dd       	rcall	.-1128   	; 0x4f8 <conv_wl>
     960:	2b 01       	movw	r4, r22
     962:	3c 01       	movw	r6, r24
     964:	c5 01       	movw	r24, r10
     966:	c8 dd       	rcall	.-1136   	; 0x4f8 <conv_wl>
     968:	6b 83       	std	Y+3, r22	; 0x03
     96a:	7c 83       	std	Y+4, r23	; 0x04
     96c:	8d 83       	std	Y+5, r24	; 0x05
     96e:	9e 83       	std	Y+6, r25	; 0x06
     970:	f7 01       	movw	r30, r14
     972:	ee 0f       	add	r30, r30
     974:	ff 1f       	adc	r31, r31
     976:	e8 57       	subi	r30, 0x78	; 120
     978:	f9 4f       	sbci	r31, 0xF9	; 249
     97a:	80 80       	ld	r8, Z
     97c:	91 80       	ldd	r9, Z+1	; 0x01
     97e:	f5 01       	movw	r30, r10
     980:	ee 0f       	add	r30, r30
     982:	ff 1f       	adc	r31, r31
     984:	e8 57       	subi	r30, 0x78	; 120
     986:	f9 4f       	sbci	r31, 0xF9	; 249
     988:	80 81       	ld	r24, Z
     98a:	91 81       	ldd	r25, Z+1	; 0x01
     98c:	9a 87       	std	Y+10, r25	; 0x0a
     98e:	89 87       	std	Y+9, r24	; 0x09
     990:	f5 01       	movw	r30, r10
     992:	ee 0f       	add	r30, r30
     994:	ff 1f       	adc	r31, r31
     996:	ec 57       	subi	r30, 0x7C	; 124
     998:	f9 4f       	sbci	r31, 0xF9	; 249
     99a:	60 81       	ld	r22, Z
     99c:	71 81       	ldd	r23, Z+1	; 0x01
     99e:	68 0d       	add	r22, r8
     9a0:	79 1d       	adc	r23, r9
     9a2:	68 0f       	add	r22, r24
     9a4:	79 1f       	adc	r23, r25
     9a6:	07 2e       	mov	r0, r23
     9a8:	00 0c       	add	r0, r0
     9aa:	88 0b       	sbc	r24, r24
     9ac:	99 0b       	sbc	r25, r25
     9ae:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     9b2:	20 e0       	ldi	r18, 0x00	; 0
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	40 e4       	ldi	r20, 0x40	; 64
     9b8:	50 e4       	ldi	r21, 0x40	; 64
     9ba:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     9be:	6b 01       	movw	r12, r22
     9c0:	7c 01       	movw	r14, r24
     9c2:	f5 01       	movw	r30, r10
     9c4:	ee 0f       	add	r30, r30
     9c6:	ff 1f       	adc	r31, r31
     9c8:	e6 57       	subi	r30, 0x76	; 118
     9ca:	f9 4f       	sbci	r31, 0xF9	; 249
     9cc:	29 85       	ldd	r18, Y+9	; 0x09
     9ce:	3a 85       	ldd	r19, Y+10	; 0x0a
     9d0:	82 0e       	add	r8, r18
     9d2:	93 1e       	adc	r9, r19
     9d4:	60 81       	ld	r22, Z
     9d6:	71 81       	ldd	r23, Z+1	; 0x01
     9d8:	68 0d       	add	r22, r8
     9da:	79 1d       	adc	r23, r9
     9dc:	07 2e       	mov	r0, r23
     9de:	00 0c       	add	r0, r0
     9e0:	88 0b       	sbc	r24, r24
     9e2:	99 0b       	sbc	r25, r25
     9e4:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     9e8:	20 e0       	ldi	r18, 0x00	; 0
     9ea:	30 e0       	ldi	r19, 0x00	; 0
     9ec:	40 e4       	ldi	r20, 0x40	; 64
     9ee:	50 e4       	ldi	r21, 0x40	; 64
     9f0:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     9f4:	a7 01       	movw	r20, r14
     9f6:	96 01       	movw	r18, r12
     9f8:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     9fc:	4b 01       	movw	r8, r22
     9fe:	5c 01       	movw	r10, r24
     a00:	ef 81       	ldd	r30, Y+7	; 0x07
     a02:	f8 85       	ldd	r31, Y+8	; 0x08
     a04:	bf 01       	movw	r22, r30
     a06:	ff 0f       	add	r31, r31
     a08:	88 0b       	sbc	r24, r24
     a0a:	99 0b       	sbc	r25, r25
     a0c:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     a10:	a3 01       	movw	r20, r6
     a12:	92 01       	movw	r18, r4
     a14:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     a18:	9b 01       	movw	r18, r22
     a1a:	ac 01       	movw	r20, r24
     a1c:	c5 01       	movw	r24, r10
     a1e:	b4 01       	movw	r22, r8
     a20:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     a24:	4b 01       	movw	r8, r22
     a26:	5c 01       	movw	r10, r24
     a28:	a3 01       	movw	r20, r6
     a2a:	92 01       	movw	r18, r4
     a2c:	6b 81       	ldd	r22, Y+3	; 0x03
     a2e:	7c 81       	ldd	r23, Y+4	; 0x04
     a30:	8d 81       	ldd	r24, Y+5	; 0x05
     a32:	9e 81       	ldd	r25, Y+6	; 0x06
     a34:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     a38:	9b 01       	movw	r18, r22
     a3a:	ac 01       	movw	r20, r24
     a3c:	c5 01       	movw	r24, r10
     a3e:	b4 01       	movw	r22, r8
     a40:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     a44:	a7 01       	movw	r20, r14
     a46:	96 01       	movw	r18, r12
     a48:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     a4c:	6b 01       	movw	r12, r22
     a4e:	7c 01       	movw	r14, r24
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	a9 01       	movw	r20, r18
     a56:	0e 94 8e 11 	call	0x231c	; 0x231c <__cmpsf2>
     a5a:	87 ff       	sbrs	r24, 7
     a5c:	03 c0       	rjmp	.+6      	; 0xa64 <c12880ma_read+0x20e>
     a5e:	c1 2c       	mov	r12, r1
     a60:	d1 2c       	mov	r13, r1
     a62:	76 01       	movw	r14, r12
     a64:	e9 81       	ldd	r30, Y+1	; 0x01
     a66:	fa 81       	ldd	r31, Y+2	; 0x02
     a68:	c1 92       	st	Z+, r12
     a6a:	d1 92       	st	Z+, r13
     a6c:	e1 92       	st	Z+, r14
     a6e:	f1 92       	st	Z+, r15
     a70:	fa 83       	std	Y+2, r31	; 0x02
     a72:	e9 83       	std	Y+1, r30	; 0x01
     a74:	0e 5f       	subi	r16, 0xFE	; 254
     a76:	1f 4f       	sbci	r17, 0xFF	; 255
     a78:	f2 e0       	ldi	r31, 0x02	; 2
     a7a:	2f 0e       	add	r2, r31
     a7c:	31 1c       	adc	r3, r1
     a7e:	2e eb       	ldi	r18, 0xBE	; 190
     a80:	33 e0       	ldi	r19, 0x03	; 3
     a82:	20 17       	cp	r18, r16
     a84:	31 07       	cpc	r19, r17
     a86:	09 f0       	breq	.+2      	; 0xa8a <c12880ma_read+0x234>
     a88:	5d cf       	rjmp	.-326    	; 0x944 <c12880ma_read+0xee>
     a8a:	2a 96       	adiw	r28, 0x0a	; 10
     a8c:	0f b6       	in	r0, 0x3f	; 63
     a8e:	f8 94       	cli
     a90:	de bf       	out	0x3e, r29	; 62
     a92:	0f be       	out	0x3f, r0	; 63
     a94:	cd bf       	out	0x3d, r28	; 61
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	ff 90       	pop	r15
     aa0:	ef 90       	pop	r14
     aa2:	df 90       	pop	r13
     aa4:	cf 90       	pop	r12
     aa6:	bf 90       	pop	r11
     aa8:	af 90       	pop	r10
     aaa:	9f 90       	pop	r9
     aac:	8f 90       	pop	r8
     aae:	7f 90       	pop	r7
     ab0:	6f 90       	pop	r6
     ab2:	5f 90       	pop	r5
     ab4:	4f 90       	pop	r4
     ab6:	3f 90       	pop	r3
     ab8:	2f 90       	pop	r2
     aba:	08 95       	ret

00000abc <check_status>:
     abc:	cf 92       	push	r12
     abe:	df 92       	push	r13
     ac0:	ef 92       	push	r14
     ac2:	ff 92       	push	r15
     ac4:	cf 93       	push	r28
     ac6:	df 93       	push	r29
     ac8:	c0 90 1b 01 	lds	r12, 0x011B	; 0x80011b <temperature>
     acc:	d0 90 1c 01 	lds	r13, 0x011C	; 0x80011c <temperature+0x1>
     ad0:	e0 90 1d 01 	lds	r14, 0x011D	; 0x80011d <temperature+0x2>
     ad4:	f0 90 1e 01 	lds	r15, 0x011E	; 0x80011e <temperature+0x3>
     ad8:	20 e0       	ldi	r18, 0x00	; 0
     ada:	30 e0       	ldi	r19, 0x00	; 0
     adc:	40 e2       	ldi	r20, 0x20	; 32
     ade:	52 e4       	ldi	r21, 0x42	; 66
     ae0:	c7 01       	movw	r24, r14
     ae2:	b6 01       	movw	r22, r12
     ae4:	0e 94 dd 12 	call	0x25ba	; 0x25ba <__gesf2>
     ae8:	18 16       	cp	r1, r24
     aea:	d4 f0       	brlt	.+52     	; 0xb20 <__stack+0x21>
     aec:	a7 01       	movw	r20, r14
     aee:	96 01       	movw	r18, r12
     af0:	60 91 fe 01 	lds	r22, 0x01FE	; 0x8001fe <temperature_dark>
     af4:	70 91 ff 01 	lds	r23, 0x01FF	; 0x8001ff <temperature_dark+0x1>
     af8:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <temperature_dark+0x2>
     afc:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <temperature_dark+0x3>
     b00:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     b04:	9f 77       	andi	r25, 0x7F	; 127
     b06:	d1 e0       	ldi	r29, 0x01	; 1
     b08:	c0 e0       	ldi	r28, 0x00	; 0
     b0a:	20 e0       	ldi	r18, 0x00	; 0
     b0c:	30 e0       	ldi	r19, 0x00	; 0
     b0e:	40 e0       	ldi	r20, 0x00	; 0
     b10:	50 e4       	ldi	r21, 0x40	; 64
     b12:	0e 94 dd 12 	call	0x25ba	; 0x25ba <__gesf2>
     b16:	87 fd       	sbrc	r24, 7
     b18:	d0 e0       	ldi	r29, 0x00	; 0
     b1a:	8d 2f       	mov	r24, r29
     b1c:	9c 2f       	mov	r25, r28
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <__stack+0x25>
     b20:	82 e0       	ldi	r24, 0x02	; 2
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	df 91       	pop	r29
     b26:	cf 91       	pop	r28
     b28:	ff 90       	pop	r15
     b2a:	ef 90       	pop	r14
     b2c:	df 90       	pop	r13
     b2e:	cf 90       	pop	r12
     b30:	08 95       	ret

00000b32 <SetupHardware>:
     b32:	68 de       	rcall	.-816    	; 0x804 <c12880ma_init>
     b34:	4f de       	rcall	.-866    	; 0x7d4 <mcp3201_init>
     b36:	84 b7       	in	r24, 0x34	; 52
     b38:	87 7f       	andi	r24, 0xF7	; 247
     b3a:	84 bf       	out	0x34, r24	; 52
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	a8 95       	wdr
     b42:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     b46:	88 61       	ori	r24, 0x18	; 24
     b48:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     b4c:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__TEXT_REGION_LENGTH__+0x7e0060>
     b50:	0f be       	out	0x3f, r0	; 63
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	80 e8       	ldi	r24, 0x80	; 128
     b56:	0f b6       	in	r0, 0x3f	; 63
     b58:	f8 94       	cli
     b5a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     b5e:	90 93 61 00 	sts	0x0061, r25	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
     b62:	0f be       	out	0x3f, r0	; 63
     b64:	04 c7       	rjmp	.+3592   	; 0x196e <USB_Init>

00000b66 <correct>:
     b66:	2f 92       	push	r2
     b68:	3f 92       	push	r3
     b6a:	4f 92       	push	r4
     b6c:	5f 92       	push	r5
     b6e:	6f 92       	push	r6
     b70:	7f 92       	push	r7
     b72:	8f 92       	push	r8
     b74:	9f 92       	push	r9
     b76:	af 92       	push	r10
     b78:	bf 92       	push	r11
     b7a:	cf 92       	push	r12
     b7c:	df 92       	push	r13
     b7e:	ef 92       	push	r14
     b80:	ff 92       	push	r15
     b82:	0f 93       	push	r16
     b84:	1f 93       	push	r17
     b86:	cf 93       	push	r28
     b88:	df 93       	push	r29
     b8a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <exposure_time_sel>
     b8e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <exposure_time_sel+0x1>
     b92:	9c 01       	movw	r18, r24
     b94:	22 0f       	add	r18, r18
     b96:	33 1f       	adc	r19, r19
     b98:	22 0f       	add	r18, r18
     b9a:	33 1f       	adc	r19, r19
     b9c:	a9 01       	movw	r20, r18
     b9e:	42 54       	subi	r20, 0x42	; 66
     ba0:	5c 4f       	sbci	r21, 0xFC	; 252
     ba2:	1a 01       	movw	r2, r20
     ba4:	c8 ec       	ldi	r28, 0xC8	; 200
     ba6:	d5 e0       	ldi	r29, 0x05	; 5
     ba8:	58 e6       	ldi	r21, 0x68	; 104
     baa:	e5 2e       	mov	r14, r21
     bac:	52 e0       	ldi	r21, 0x02	; 2
     bae:	f5 2e       	mov	r15, r21
     bb0:	20 e6       	ldi	r18, 0x60	; 96
     bb2:	28 9f       	mul	r18, r24
     bb4:	60 01       	movw	r12, r0
     bb6:	29 9f       	mul	r18, r25
     bb8:	d0 0c       	add	r13, r0
     bba:	11 24       	eor	r1, r1
     bbc:	00 e0       	ldi	r16, 0x00	; 0
     bbe:	10 e0       	ldi	r17, 0x00	; 0
     bc0:	f8 01       	movw	r30, r16
     bc2:	ec 0d       	add	r30, r12
     bc4:	fd 1d       	adc	r31, r13
     bc6:	e8 5f       	subi	r30, 0xF8	; 248
     bc8:	fd 4f       	sbci	r31, 0xFD	; 253
     bca:	60 81       	ld	r22, Z
     bcc:	71 81       	ldd	r23, Z+1	; 0x01
     bce:	07 2e       	mov	r0, r23
     bd0:	00 0c       	add	r0, r0
     bd2:	88 0b       	sbc	r24, r24
     bd4:	99 0b       	sbc	r25, r25
     bd6:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     bda:	9b 01       	movw	r18, r22
     bdc:	ac 01       	movw	r20, r24
     bde:	68 81       	ld	r22, Y
     be0:	79 81       	ldd	r23, Y+1	; 0x01
     be2:	8a 81       	ldd	r24, Y+2	; 0x02
     be4:	9b 81       	ldd	r25, Y+3	; 0x03
     be6:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     bea:	4b 01       	movw	r8, r22
     bec:	5c 01       	movw	r10, r24
     bee:	20 e0       	ldi	r18, 0x00	; 0
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	a9 01       	movw	r20, r18
     bf4:	0e 94 8e 11 	call	0x231c	; 0x231c <__cmpsf2>
     bf8:	87 ff       	sbrs	r24, 7
     bfa:	03 c0       	rjmp	.+6      	; 0xc02 <correct+0x9c>
     bfc:	81 2c       	mov	r8, r1
     bfe:	91 2c       	mov	r9, r1
     c00:	54 01       	movw	r10, r8
     c02:	f7 01       	movw	r30, r14
     c04:	25 91       	lpm	r18, Z+
     c06:	35 91       	lpm	r19, Z+
     c08:	45 91       	lpm	r20, Z+
     c0a:	54 91       	lpm	r21, Z
     c0c:	f1 01       	movw	r30, r2
     c0e:	45 90       	lpm	r4, Z+
     c10:	55 90       	lpm	r5, Z+
     c12:	65 90       	lpm	r6, Z+
     c14:	74 90       	lpm	r7, Z
     c16:	c5 01       	movw	r24, r10
     c18:	b4 01       	movw	r22, r8
     c1a:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     c1e:	a3 01       	movw	r20, r6
     c20:	92 01       	movw	r18, r4
     c22:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     c26:	4b 01       	movw	r8, r22
     c28:	5c 01       	movw	r10, r24
     c2a:	2f e5       	ldi	r18, 0x5F	; 95
     c2c:	30 e7       	ldi	r19, 0x70	; 112
     c2e:	49 e8       	ldi	r20, 0x89	; 137
     c30:	50 e3       	ldi	r21, 0x30	; 48
     c32:	0e 94 8e 11 	call	0x231c	; 0x231c <__cmpsf2>
     c36:	87 fd       	sbrc	r24, 7
     c38:	05 c0       	rjmp	.+10     	; 0xc44 <correct+0xde>
     c3a:	88 82       	st	Y, r8
     c3c:	99 82       	std	Y+1, r9	; 0x01
     c3e:	aa 82       	std	Y+2, r10	; 0x02
     c40:	bb 82       	std	Y+3, r11	; 0x03
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <correct+0xe6>
     c44:	18 82       	st	Y, r1
     c46:	19 82       	std	Y+1, r1	; 0x01
     c48:	1a 82       	std	Y+2, r1	; 0x02
     c4a:	1b 82       	std	Y+3, r1	; 0x03
     c4c:	24 96       	adiw	r28, 0x04	; 4
     c4e:	0e 5f       	subi	r16, 0xFE	; 254
     c50:	1f 4f       	sbci	r17, 0xFF	; 255
     c52:	54 e0       	ldi	r21, 0x04	; 4
     c54:	e5 0e       	add	r14, r21
     c56:	f1 1c       	adc	r15, r1
     c58:	00 36       	cpi	r16, 0x60	; 96
     c5a:	11 05       	cpc	r17, r1
     c5c:	09 f0       	breq	.+2      	; 0xc60 <correct+0xfa>
     c5e:	b0 cf       	rjmp	.-160    	; 0xbc0 <correct+0x5a>
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	1f 91       	pop	r17
     c66:	0f 91       	pop	r16
     c68:	ff 90       	pop	r15
     c6a:	ef 90       	pop	r14
     c6c:	df 90       	pop	r13
     c6e:	cf 90       	pop	r12
     c70:	bf 90       	pop	r11
     c72:	af 90       	pop	r10
     c74:	9f 90       	pop	r9
     c76:	8f 90       	pop	r8
     c78:	7f 90       	pop	r7
     c7a:	6f 90       	pop	r6
     c7c:	5f 90       	pop	r5
     c7e:	4f 90       	pop	r4
     c80:	3f 90       	pop	r3
     c82:	2f 90       	pop	r2
     c84:	08 95       	ret

00000c86 <measure>:
void measure()
{
     c86:	6f 92       	push	r6
     c88:	7f 92       	push	r7
     c8a:	8f 92       	push	r8
     c8c:	9f 92       	push	r9
     c8e:	af 92       	push	r10
     c90:	bf 92       	push	r11
     c92:	cf 92       	push	r12
     c94:	df 92       	push	r13
     c96:	ef 92       	push	r14
     c98:	ff 92       	push	r15
     c9a:	0f 93       	push	r16
     c9c:	1f 93       	push	r17
     c9e:	cf 93       	push	r28
     ca0:	df 93       	push	r29
    if(auto_exposure)
     ca2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <auto_exposure>
     ca6:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <auto_exposure+0x1>
     caa:	89 2b       	or	r24, r25
     cac:	09 f4       	brne	.+2      	; 0xcb0 <measure+0x2a>
     cae:	47 c0       	rjmp	.+142    	; 0xd3e <measure+0xb8>
     cb0:	01 e2       	ldi	r16, 0x21	; 33
     cb2:	11 e0       	ldi	r17, 0x01	; 1
     cb4:	cf ef       	ldi	r28, 0xFF	; 255
     cb6:	df ef       	ldi	r29, 0xFF	; 255
    {
        for(int i=0;i<EXPOSURE_TIME_SEL_N;i++)
     cb8:	82 e0       	ldi	r24, 0x02	; 2
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	a0 e0       	ldi	r26, 0x00	; 0
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
        {
            exposure_time = select_exposure_time(i);
     cc0:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
     cc4:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
     cc8:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
     ccc:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>

            c12880ma_read();
     cd0:	c2 dd       	rcall	.-1148   	; 0x856 <c12880ma_read>
     cd2:	38 ec       	ldi	r19, 0xC8	; 200
     cd4:	83 2e       	mov	r8, r19
     cd6:	35 e0       	ldi	r19, 0x05	; 5

            float max = 0;
     cd8:	93 2e       	mov	r9, r19
     cda:	61 2c       	mov	r6, r1
     cdc:	71 2c       	mov	r7, r1
     cde:	a1 2c       	mov	r10, r1
            for(int i=0;i<C12880MA_CHANELS;i++)
            {
                max = MAX(max, opticalPower[i]);
     ce0:	b1 2c       	mov	r11, r1
     ce2:	f4 01       	movw	r30, r8
     ce4:	c1 90       	ld	r12, Z+
     ce6:	d1 90       	ld	r13, Z+
     ce8:	e1 90       	ld	r14, Z+
     cea:	f1 90       	ld	r15, Z+
     cec:	4f 01       	movw	r8, r30
     cee:	93 01       	movw	r18, r6
     cf0:	a5 01       	movw	r20, r10
     cf2:	c7 01       	movw	r24, r14
     cf4:	b6 01       	movw	r22, r12
     cf6:	0e 94 8e 11 	call	0x231c	; 0x231c <__cmpsf2>
     cfa:	87 fd       	sbrc	r24, 7
     cfc:	02 c0       	rjmp	.+4      	; 0xd02 <measure+0x7c>
     cfe:	36 01       	movw	r6, r12
            exposure_time = select_exposure_time(i);

            c12880ma_read();

            float max = 0;
            for(int i=0;i<C12880MA_CHANELS;i++)
     d00:	57 01       	movw	r10, r14
     d02:	f8 e4       	ldi	r31, 0x48	; 72
     d04:	8f 16       	cp	r8, r31
     d06:	fa e0       	ldi	r31, 0x0A	; 10
     d08:	9f 06       	cpc	r9, r31
            {
                max = MAX(max, opticalPower[i]);
            }
            if(max >= 1000)
     d0a:	59 f7       	brne	.-42     	; 0xce2 <measure+0x5c>
     d0c:	20 e0       	ldi	r18, 0x00	; 0
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	4a e7       	ldi	r20, 0x7A	; 122
     d12:	54 e4       	ldi	r21, 0x44	; 68
     d14:	b3 01       	movw	r22, r6
     d16:	c5 01       	movw	r24, r10
     d18:	0e 94 dd 12 	call	0x25ba	; 0x25ba <__gesf2>
     d1c:	87 ff       	sbrs	r24, 7
     d1e:	3c c0       	rjmp	.+120    	; 0xd98 <measure+0x112>
     d20:	21 96       	adiw	r28, 0x01	; 1
     d22:	0e 5f       	subi	r16, 0xFE	; 254
}
void measure()
{
    if(auto_exposure)
    {
        for(int i=0;i<EXPOSURE_TIME_SEL_N;i++)
     d24:	1f 4f       	sbci	r17, 0xFF	; 255
     d26:	c9 30       	cpi	r28, 0x09	; 9
     d28:	d1 05       	cpc	r29, r1
     d2a:	b1 f1       	breq	.+108    	; 0xd98 <measure+0x112>
     d2c:	c9 30       	cpi	r28, 0x09	; 9
     d2e:	d1 05       	cpc	r29, r1
     d30:	18 f6       	brcc	.-122    	; 0xcb8 <measure+0x32>
     d32:	f8 01       	movw	r30, r16
     d34:	80 81       	ld	r24, Z
     d36:	91 81       	ldd	r25, Z+1	; 0x01
     d38:	a0 e0       	ldi	r26, 0x00	; 0
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	c1 cf       	rjmp	.-126    	; 0xcc0 <measure+0x3a>
     d3e:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <exposure_time_sel>
     d42:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <exposure_time_sel+0x1>
     d46:	01 97       	sbiw	r24, 0x01	; 1
     d48:	89 30       	cpi	r24, 0x09	; 9
     d4a:	91 05       	cpc	r25, r1
     d4c:	50 f4       	brcc	.+20     	; 0xd62 <measure+0xdc>
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	fc 01       	movw	r30, r24
     d54:	ed 5d       	subi	r30, 0xDD	; 221
     d56:	fe 4f       	sbci	r31, 0xFE	; 254
     d58:	80 81       	ld	r24, Z
     d5a:	91 81       	ldd	r25, Z+1	; 0x01
     d5c:	a0 e0       	ldi	r26, 0x00	; 0
     d5e:	b0 e0       	ldi	r27, 0x00	; 0
    }
}

long select_exposure_time(int sel)
{
    switch (sel)
     d60:	04 c0       	rjmp	.+8      	; 0xd6a <measure+0xe4>
     d62:	82 e0       	ldi	r24, 0x02	; 2
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	a0 e0       	ldi	r26, 0x00	; 0
                break;
        }
    }
    else
    {
        exposure_time = select_exposure_time(exposure_time_sel);
     d68:	b0 e0       	ldi	r27, 0x00	; 0
     d6a:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
     d6e:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
     d72:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
     d76:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
        c12880ma_read();
    }
}
     d7a:	df 91       	pop	r29
     d7c:	cf 91       	pop	r28
     d7e:	1f 91       	pop	r17
     d80:	0f 91       	pop	r16
     d82:	ff 90       	pop	r15
     d84:	ef 90       	pop	r14
     d86:	df 90       	pop	r13
     d88:	cf 90       	pop	r12
     d8a:	bf 90       	pop	r11
     d8c:	af 90       	pop	r10
     d8e:	9f 90       	pop	r9
     d90:	8f 90       	pop	r8
        }
    }
    else
    {
        exposure_time = select_exposure_time(exposure_time_sel);
        c12880ma_read();
     d92:	7f 90       	pop	r7
     d94:	6f 90       	pop	r6
    }
}
     d96:	5f cd       	rjmp	.-1346   	; 0x856 <c12880ma_read>
     d98:	df 91       	pop	r29
     d9a:	cf 91       	pop	r28
     d9c:	1f 91       	pop	r17
     d9e:	0f 91       	pop	r16
     da0:	ff 90       	pop	r15
     da2:	ef 90       	pop	r14
     da4:	df 90       	pop	r13
     da6:	cf 90       	pop	r12
     da8:	bf 90       	pop	r11
     daa:	af 90       	pop	r10
     dac:	9f 90       	pop	r9
     dae:	8f 90       	pop	r8
     db0:	7f 90       	pop	r7
     db2:	6f 90       	pop	r6

    return t;
}

void mcp3201_init()
{
     db4:	08 95       	ret

00000db6 <dark>:
     db6:	2f 92       	push	r2
     db8:	3f 92       	push	r3
     dba:	4f 92       	push	r4
     dbc:	5f 92       	push	r5
     dbe:	6f 92       	push	r6
     dc0:	7f 92       	push	r7
     dc2:	8f 92       	push	r8
     dc4:	9f 92       	push	r9
     dc6:	af 92       	push	r10
     dc8:	bf 92       	push	r11
     dca:	cf 92       	push	r12
     dcc:	df 92       	push	r13
     dce:	ef 92       	push	r14
     dd0:	ff 92       	push	r15
     dd2:	0f 93       	push	r16
     dd4:	1f 93       	push	r17
     dd6:	cf 93       	push	r28
     dd8:	df 93       	push	r29
     dda:	cd b7       	in	r28, 0x3d	; 61
     ddc:	de b7       	in	r29, 0x3e	; 62
     dde:	62 97       	sbiw	r28, 0x12	; 18
     de0:	0f b6       	in	r0, 0x3f	; 63
     de2:	f8 94       	cli
     de4:	de bf       	out	0x3e, r29	; 62
     de6:	0f be       	out	0x3f, r0	; 63
     de8:	cd bf       	out	0x3d, r28	; 61
     dea:	28 e0       	ldi	r18, 0x08	; 8
     dec:	32 e0       	ldi	r19, 0x02	; 2
     dee:	3c 83       	std	Y+4, r19	; 0x04
     df0:	2b 83       	std	Y+3, r18	; 0x03
     df2:	8e e5       	ldi	r24, 0x5E	; 94
     df4:	93 e0       	ldi	r25, 0x03	; 3
     df6:	98 87       	std	Y+8, r25	; 0x08
     df8:	8f 83       	std	Y+7, r24	; 0x07
     dfa:	e8 e0       	ldi	r30, 0x08	; 8
     dfc:	f2 e0       	ldi	r31, 0x02	; 2
     dfe:	fa 87       	std	Y+10, r31	; 0x0a
     e00:	e9 87       	std	Y+9, r30	; 0x09
     e02:	21 e2       	ldi	r18, 0x21	; 33
     e04:	31 e0       	ldi	r19, 0x01	; 1
     e06:	3e 83       	std	Y+6, r19	; 0x06
     e08:	2d 83       	std	Y+5, r18	; 0x05
     e0a:	22 24       	eor	r2, r2
     e0c:	2a 94       	dec	r2
     e0e:	32 2c       	mov	r3, r2
     e10:	82 e0       	ldi	r24, 0x02	; 2
     e12:	90 e0       	ldi	r25, 0x00	; 0
     e14:	a0 e0       	ldi	r26, 0x00	; 0
     e16:	b0 e0       	ldi	r27, 0x00	; 0
     e18:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <exposure_time>
     e1c:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <exposure_time+0x1>
     e20:	a0 93 21 01 	sts	0x0121, r26	; 0x800121 <exposure_time+0x2>
     e24:	b0 93 22 01 	sts	0x0122, r27	; 0x800122 <exposure_time+0x3>
     e28:	16 dd       	rcall	.-1492   	; 0x856 <c12880ma_read>
     e2a:	1a 82       	std	Y+2, r1	; 0x02
     e2c:	19 82       	std	Y+1, r1	; 0x01
     e2e:	ef 81       	ldd	r30, Y+7	; 0x07
     e30:	f8 85       	ldd	r31, Y+8	; 0x08
     e32:	25 91       	lpm	r18, Z+
     e34:	34 91       	lpm	r19, Z
     e36:	38 8b       	std	Y+16, r19	; 0x10
     e38:	2f 87       	std	Y+15, r18	; 0x0f
     e3a:	e9 85       	ldd	r30, Y+9	; 0x09
     e3c:	fa 85       	ldd	r31, Y+10	; 0x0a
     e3e:	85 91       	lpm	r24, Z+
     e40:	94 91       	lpm	r25, Z
     e42:	9a 8b       	std	Y+18, r25	; 0x12
     e44:	89 8b       	std	Y+17, r24	; 0x11
     e46:	8c 01       	movw	r16, r24
     e48:	01 50       	subi	r16, 0x01	; 1
     e4a:	11 09       	sbc	r17, r1
     e4c:	c8 01       	movw	r24, r16
     e4e:	54 db       	rcall	.-2392   	; 0x4f8 <conv_wl>
     e50:	6b 01       	movw	r12, r22
     e52:	7c 01       	movw	r14, r24
     e54:	89 89       	ldd	r24, Y+17	; 0x11
     e56:	9a 89       	ldd	r25, Y+18	; 0x12
     e58:	4f db       	rcall	.-2402   	; 0x4f8 <conv_wl>
     e5a:	6b 87       	std	Y+11, r22	; 0x0b
     e5c:	7c 87       	std	Y+12, r23	; 0x0c
     e5e:	8d 87       	std	Y+13, r24	; 0x0d
     e60:	9e 87       	std	Y+14, r25	; 0x0e
     e62:	00 0f       	add	r16, r16
     e64:	11 1f       	adc	r17, r17
     e66:	f8 01       	movw	r30, r16
     e68:	e8 57       	subi	r30, 0x78	; 120
     e6a:	f9 4f       	sbci	r31, 0xF9	; 249
     e6c:	60 81       	ld	r22, Z
     e6e:	71 81       	ldd	r23, Z+1	; 0x01
     e70:	07 2e       	mov	r0, r23
     e72:	00 0c       	add	r0, r0
     e74:	88 0b       	sbc	r24, r24
     e76:	99 0b       	sbc	r25, r25
     e78:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     e7c:	4b 01       	movw	r8, r22
     e7e:	5c 01       	movw	r10, r24
     e80:	e9 89       	ldd	r30, Y+17	; 0x11
     e82:	fa 89       	ldd	r31, Y+18	; 0x12
     e84:	ee 0f       	add	r30, r30
     e86:	ff 1f       	adc	r31, r31
     e88:	e8 57       	subi	r30, 0x78	; 120
     e8a:	f9 4f       	sbci	r31, 0xF9	; 249
     e8c:	60 81       	ld	r22, Z
     e8e:	71 81       	ldd	r23, Z+1	; 0x01
     e90:	07 2e       	mov	r0, r23
     e92:	00 0c       	add	r0, r0
     e94:	88 0b       	sbc	r24, r24
     e96:	99 0b       	sbc	r25, r25
     e98:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     e9c:	a5 01       	movw	r20, r10
     e9e:	94 01       	movw	r18, r8
     ea0:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     ea4:	2b 01       	movw	r4, r22
     ea6:	3c 01       	movw	r6, r24
     ea8:	2f 85       	ldd	r18, Y+15	; 0x0f
     eaa:	38 89       	ldd	r19, Y+16	; 0x10
     eac:	b9 01       	movw	r22, r18
     eae:	33 0f       	add	r19, r19
     eb0:	88 0b       	sbc	r24, r24
     eb2:	99 0b       	sbc	r25, r25
     eb4:	0e 94 2d 12 	call	0x245a	; 0x245a <__floatsisf>
     eb8:	a7 01       	movw	r20, r14
     eba:	96 01       	movw	r18, r12
     ebc:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     ec0:	9b 01       	movw	r18, r22
     ec2:	ac 01       	movw	r20, r24
     ec4:	c3 01       	movw	r24, r6
     ec6:	b2 01       	movw	r22, r4
     ec8:	0e 94 26 13 	call	0x264c	; 0x264c <__mulsf3>
     ecc:	2b 01       	movw	r4, r22
     ece:	3c 01       	movw	r6, r24
     ed0:	a7 01       	movw	r20, r14
     ed2:	96 01       	movw	r18, r12
     ed4:	6b 85       	ldd	r22, Y+11	; 0x0b
     ed6:	7c 85       	ldd	r23, Y+12	; 0x0c
     ed8:	8d 85       	ldd	r24, Y+13	; 0x0d
     eda:	9e 85       	ldd	r25, Y+14	; 0x0e
     edc:	0e 94 29 11 	call	0x2252	; 0x2252 <__subsf3>
     ee0:	9b 01       	movw	r18, r22
     ee2:	ac 01       	movw	r20, r24
     ee4:	c3 01       	movw	r24, r6
     ee6:	b2 01       	movw	r22, r4
     ee8:	0e 94 92 11 	call	0x2324	; 0x2324 <__divsf3>
     eec:	a5 01       	movw	r20, r10
     eee:	94 01       	movw	r18, r8
     ef0:	0e 94 2a 11 	call	0x2254	; 0x2254 <__addsf3>
     ef4:	6b 01       	movw	r12, r22
     ef6:	7c 01       	movw	r14, r24
     ef8:	20 e0       	ldi	r18, 0x00	; 0
     efa:	30 e0       	ldi	r19, 0x00	; 0
     efc:	a9 01       	movw	r20, r18
     efe:	0e 94 8e 11 	call	0x231c	; 0x231c <__cmpsf2>
     f02:	87 ff       	sbrs	r24, 7
     f04:	03 c0       	rjmp	.+6      	; 0xf0c <dark+0x156>
     f06:	c1 2c       	mov	r12, r1
     f08:	d1 2c       	mov	r13, r1
     f0a:	76 01       	movw	r14, r12
     f0c:	8b 81       	ldd	r24, Y+3	; 0x03
     f0e:	9c 81       	ldd	r25, Y+4	; 0x04
     f10:	e9 81       	ldd	r30, Y+1	; 0x01
     f12:	fa 81       	ldd	r31, Y+2	; 0x02
     f14:	8e 0f       	add	r24, r30
     f16:	9f 1f       	adc	r25, r31
     f18:	9c 87       	std	Y+12, r25	; 0x0c
     f1a:	8b 87       	std	Y+11, r24	; 0x0b
     f1c:	c7 01       	movw	r24, r14
     f1e:	b6 01       	movw	r22, r12
     f20:	0e 94 fa 11 	call	0x23f4	; 0x23f4 <__fixsfsi>
     f24:	eb 85       	ldd	r30, Y+11	; 0x0b
     f26:	fc 85       	ldd	r31, Y+12	; 0x0c
     f28:	71 83       	std	Z+1, r23	; 0x01
     f2a:	60 83       	st	Z, r22
     f2c:	29 81       	ldd	r18, Y+1	; 0x01
     f2e:	3a 81       	ldd	r19, Y+2	; 0x02
     f30:	2e 5f       	subi	r18, 0xFE	; 254
     f32:	3f 4f       	sbci	r19, 0xFF	; 255
     f34:	3a 83       	std	Y+2, r19	; 0x02
     f36:	29 83       	std	Y+1, r18	; 0x01
     f38:	20 36       	cpi	r18, 0x60	; 96
     f3a:	31 05       	cpc	r19, r1
     f3c:	09 f0       	breq	.+2      	; 0xf40 <dark+0x18a>
     f3e:	77 cf       	rjmp	.-274    	; 0xe2e <dark+0x78>
     f40:	3f ef       	ldi	r19, 0xFF	; 255
     f42:	23 1a       	sub	r2, r19
     f44:	33 0a       	sbc	r3, r19
     f46:	8b 81       	ldd	r24, Y+3	; 0x03
     f48:	9c 81       	ldd	r25, Y+4	; 0x04
     f4a:	80 5a       	subi	r24, 0xA0	; 160
     f4c:	9f 4f       	sbci	r25, 0xFF	; 255
     f4e:	9c 83       	std	Y+4, r25	; 0x04
     f50:	8b 83       	std	Y+3, r24	; 0x03
     f52:	ef 81       	ldd	r30, Y+7	; 0x07
     f54:	f8 85       	ldd	r31, Y+8	; 0x08
     f56:	32 96       	adiw	r30, 0x02	; 2
     f58:	f8 87       	std	Y+8, r31	; 0x08
     f5a:	ef 83       	std	Y+7, r30	; 0x07
     f5c:	29 85       	ldd	r18, Y+9	; 0x09
     f5e:	3a 85       	ldd	r19, Y+10	; 0x0a
     f60:	2e 5f       	subi	r18, 0xFE	; 254
     f62:	3f 4f       	sbci	r19, 0xFF	; 255
     f64:	3a 87       	std	Y+10, r19	; 0x0a
     f66:	29 87       	std	Y+9, r18	; 0x09
     f68:	8d 81       	ldd	r24, Y+5	; 0x05
     f6a:	9e 81       	ldd	r25, Y+6	; 0x06
     f6c:	02 96       	adiw	r24, 0x02	; 2
     f6e:	9e 83       	std	Y+6, r25	; 0x06
     f70:	8d 83       	std	Y+5, r24	; 0x05
     f72:	99 e0       	ldi	r25, 0x09	; 9
     f74:	29 16       	cp	r2, r25
     f76:	31 04       	cpc	r3, r1
     f78:	61 f0       	breq	.+24     	; 0xf92 <dark+0x1dc>
     f7a:	39 e0       	ldi	r19, 0x09	; 9
     f7c:	23 16       	cp	r2, r19
     f7e:	31 04       	cpc	r3, r1
     f80:	08 f0       	brcs	.+2      	; 0xf84 <dark+0x1ce>
     f82:	46 cf       	rjmp	.-372    	; 0xe10 <dark+0x5a>
     f84:	ed 81       	ldd	r30, Y+5	; 0x05
     f86:	fe 81       	ldd	r31, Y+6	; 0x06
     f88:	80 81       	ld	r24, Z
     f8a:	91 81       	ldd	r25, Z+1	; 0x01
     f8c:	a0 e0       	ldi	r26, 0x00	; 0
     f8e:	b0 e0       	ldi	r27, 0x00	; 0
     f90:	43 cf       	rjmp	.-378    	; 0xe18 <dark+0x62>
     f92:	9c db       	rcall	.-2248   	; 0x6cc <adc_temp_read>
     f94:	60 93 fe 01 	sts	0x01FE, r22	; 0x8001fe <temperature_dark>
     f98:	70 93 ff 01 	sts	0x01FF, r23	; 0x8001ff <temperature_dark+0x1>
     f9c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <temperature_dark+0x2>
     fa0:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <temperature_dark+0x3>
     fa4:	62 96       	adiw	r28, 0x12	; 18
     fa6:	0f b6       	in	r0, 0x3f	; 63
     fa8:	f8 94       	cli
     faa:	de bf       	out	0x3e, r29	; 62
     fac:	0f be       	out	0x3f, r0	; 63
     fae:	cd bf       	out	0x3d, r28	; 61
     fb0:	df 91       	pop	r29
     fb2:	cf 91       	pop	r28
     fb4:	1f 91       	pop	r17
     fb6:	0f 91       	pop	r16
     fb8:	ff 90       	pop	r15
     fba:	ef 90       	pop	r14
     fbc:	df 90       	pop	r13
     fbe:	cf 90       	pop	r12
     fc0:	bf 90       	pop	r11
     fc2:	af 90       	pop	r10
     fc4:	9f 90       	pop	r9
     fc6:	8f 90       	pop	r8
     fc8:	7f 90       	pop	r7
     fca:	6f 90       	pop	r6
     fcc:	5f 90       	pop	r5
     fce:	4f 90       	pop	r4
     fd0:	3f 90       	pop	r3
     fd2:	2f 90       	pop	r2
     fd4:	08 95       	ret

00000fd6 <CDC_Recive_Event>:
     fd6:	80 e0       	ldi	r24, 0x00	; 0
     fd8:	91 e0       	ldi	r25, 0x01	; 1
     fda:	0e 94 26 10 	call	0x204c	; 0x204c <CDC_Device_ReceiveByte>
     fde:	18 16       	cp	r1, r24
     fe0:	19 06       	cpc	r1, r25
     fe2:	9c f4       	brge	.+38     	; 0x100a <CDC_Recive_Event+0x34>
     fe4:	20 91 c8 08 	lds	r18, 0x08C8	; 0x8008c8 <cdc_recive_index>
     fe8:	30 91 c9 08 	lds	r19, 0x08C9	; 0x8008c9 <cdc_recive_index+0x1>
     fec:	f9 01       	movw	r30, r18
     fee:	e6 53       	subi	r30, 0x36	; 54
     ff0:	f7 4f       	sbci	r31, 0xF7	; 247
     ff2:	80 83       	st	Z, r24
     ff4:	2f 5f       	subi	r18, 0xFF	; 255
     ff6:	3f 4f       	sbci	r19, 0xFF	; 255
     ff8:	30 93 c9 08 	sts	0x08C9, r19	; 0x8008c9 <cdc_recive_index+0x1>
     ffc:	20 93 c8 08 	sts	0x08C8, r18	; 0x8008c8 <cdc_recive_index>
    1000:	0a 97       	sbiw	r24, 0x0a	; 10
    1002:	19 f4       	brne	.+6      	; 0x100a <CDC_Recive_Event+0x34>
    1004:	81 e0       	ldi	r24, 0x01	; 1
    1006:	80 93 ea 08 	sts	0x08EA, r24	; 0x8008ea <cdc_recived>
    100a:	08 95       	ret

0000100c <CDC_Recive_Event_Process>:
    100c:	2f 92       	push	r2
    100e:	3f 92       	push	r3
    1010:	4f 92       	push	r4
    1012:	5f 92       	push	r5
    1014:	6f 92       	push	r6
    1016:	7f 92       	push	r7
    1018:	8f 92       	push	r8
    101a:	9f 92       	push	r9
    101c:	af 92       	push	r10
    101e:	bf 92       	push	r11
    1020:	cf 92       	push	r12
    1022:	df 92       	push	r13
    1024:	ef 92       	push	r14
    1026:	ff 92       	push	r15
    1028:	0f 93       	push	r16
    102a:	1f 93       	push	r17
    102c:	cf 93       	push	r28
    102e:	df 93       	push	r29
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	c4 56       	subi	r28, 0x64	; 100
    1036:	d1 09       	sbc	r29, r1
    1038:	0f b6       	in	r0, 0x3f	; 63
    103a:	f8 94       	cli
    103c:	de bf       	out	0x3e, r29	; 62
    103e:	0f be       	out	0x3f, r0	; 63
    1040:	cd bf       	out	0x3d, r28	; 61
    1042:	80 91 ea 08 	lds	r24, 0x08EA	; 0x8008ea <cdc_recived>
    1046:	88 23       	and	r24, r24
    1048:	09 f4       	brne	.+2      	; 0x104c <CDC_Recive_Event_Process+0x40>
    104a:	0d c2       	rjmp	.+1050   	; 0x1466 <CDC_Recive_Event_Process+0x45a>
    104c:	10 92 ea 08 	sts	0x08EA, r1	; 0x8008ea <cdc_recived>
    1050:	45 e0       	ldi	r20, 0x05	; 5
    1052:	50 e0       	ldi	r21, 0x00	; 0
    1054:	65 e3       	ldi	r22, 0x35	; 53
    1056:	71 e0       	ldi	r23, 0x01	; 1
    1058:	8a ec       	ldi	r24, 0xCA	; 202
    105a:	98 e0       	ldi	r25, 0x08	; 8
    105c:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    1060:	89 2b       	or	r24, r25
    1062:	09 f0       	breq	.+2      	; 0x1066 <CDC_Recive_Event_Process+0x5a>
    1064:	46 c0       	rjmp	.+140    	; 0x10f2 <CDC_Recive_Event_Process+0xe6>
    1066:	0f de       	rcall	.-994    	; 0xc86 <measure>
    1068:	7e dd       	rcall	.-1284   	; 0xb66 <correct>
    106a:	2e e5       	ldi	r18, 0x5E	; 94
    106c:	e2 2e       	mov	r14, r18
    106e:	23 e0       	ldi	r18, 0x03	; 3
    1070:	f2 2e       	mov	r15, r18
    1072:	08 ec       	ldi	r16, 0xC8	; 200
    1074:	15 e0       	ldi	r17, 0x05	; 5
    1076:	30 e2       	ldi	r19, 0x20	; 32
    1078:	93 2e       	mov	r9, r19
    107a:	ce 01       	movw	r24, r28
    107c:	01 96       	adiw	r24, 0x01	; 1
    107e:	6c 01       	movw	r12, r24
    1080:	4b e3       	ldi	r20, 0x3B	; 59
    1082:	a4 2e       	mov	r10, r20
    1084:	41 e0       	ldi	r20, 0x01	; 1
    1086:	b4 2e       	mov	r11, r20
    1088:	f7 01       	movw	r30, r14
    108a:	85 91       	lpm	r24, Z+
    108c:	94 91       	lpm	r25, Z
    108e:	d6 01       	movw	r26, r12
    1090:	e9 2d       	mov	r30, r9
    1092:	1d 92       	st	X+, r1
    1094:	ea 95       	dec	r30
    1096:	e9 f7       	brne	.-6      	; 0x1092 <CDC_Recive_Event_Process+0x86>
    1098:	d8 01       	movw	r26, r16
    109a:	2c 91       	ld	r18, X
    109c:	11 96       	adiw	r26, 0x01	; 1
    109e:	3c 91       	ld	r19, X
    10a0:	11 97       	sbiw	r26, 0x01	; 1
    10a2:	12 96       	adiw	r26, 0x02	; 2
    10a4:	4c 91       	ld	r20, X
    10a6:	12 97       	sbiw	r26, 0x02	; 2
    10a8:	13 96       	adiw	r26, 0x03	; 3
    10aa:	5c 91       	ld	r21, X
    10ac:	0c 5f       	subi	r16, 0xFC	; 252
    10ae:	1f 4f       	sbci	r17, 0xFF	; 255
    10b0:	5f 93       	push	r21
    10b2:	4f 93       	push	r20
    10b4:	3f 93       	push	r19
    10b6:	2f 93       	push	r18
    10b8:	9f 93       	push	r25
    10ba:	8f 93       	push	r24
    10bc:	bf 92       	push	r11
    10be:	af 92       	push	r10
    10c0:	df 92       	push	r13
    10c2:	cf 92       	push	r12
    10c4:	0e 94 c0 1c 	call	0x3980	; 0x3980 <sprintf>
    10c8:	b6 01       	movw	r22, r12
    10ca:	80 e0       	ldi	r24, 0x00	; 0
    10cc:	91 e0       	ldi	r25, 0x01	; 1
    10ce:	1f d7       	rcall	.+3646   	; 0x1f0e <CDC_Device_SendString>
    10d0:	b2 e0       	ldi	r27, 0x02	; 2
    10d2:	eb 0e       	add	r14, r27
    10d4:	f1 1c       	adc	r15, r1
    10d6:	0f b6       	in	r0, 0x3f	; 63
    10d8:	f8 94       	cli
    10da:	de bf       	out	0x3e, r29	; 62
    10dc:	0f be       	out	0x3f, r0	; 63
    10de:	cd bf       	out	0x3d, r28	; 61
    10e0:	f6 e0       	ldi	r31, 0x06	; 6
    10e2:	08 38       	cpi	r16, 0x88	; 136
    10e4:	1f 07       	cpc	r17, r31
    10e6:	81 f6       	brne	.-96     	; 0x1088 <CDC_Recive_Event_Process+0x7c>
    10e8:	6a e0       	ldi	r22, 0x0A	; 10
    10ea:	80 e0       	ldi	r24, 0x00	; 0
    10ec:	91 e0       	ldi	r25, 0x01	; 1
    10ee:	2f d7       	rcall	.+3678   	; 0x1f4e <CDC_Device_SendByte>
    10f0:	af c1       	rjmp	.+862    	; 0x1450 <CDC_Recive_Event_Process+0x444>
    10f2:	43 e0       	ldi	r20, 0x03	; 3
    10f4:	50 e0       	ldi	r21, 0x00	; 0
    10f6:	62 e4       	ldi	r22, 0x42	; 66
    10f8:	71 e0       	ldi	r23, 0x01	; 1
    10fa:	8a ec       	ldi	r24, 0xCA	; 202
    10fc:	98 e0       	ldi	r25, 0x08	; 8
    10fe:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    1102:	89 2b       	or	r24, r25
    1104:	71 f5       	brne	.+92     	; 0x1162 <CDC_Recive_Event_Process+0x156>
    1106:	bf dd       	rcall	.-1154   	; 0xc86 <measure>
    1108:	08 e8       	ldi	r16, 0x88	; 136
    110a:	16 e0       	ldi	r17, 0x06	; 6
    110c:	80 e1       	ldi	r24, 0x10	; 16
    110e:	b8 2e       	mov	r11, r24
    1110:	ce 01       	movw	r24, r28
    1112:	01 96       	adiw	r24, 0x01	; 1
    1114:	7c 01       	movw	r14, r24
    1116:	96 e4       	ldi	r25, 0x46	; 70
    1118:	c9 2e       	mov	r12, r25
    111a:	91 e0       	ldi	r25, 0x01	; 1
    111c:	d9 2e       	mov	r13, r25
    111e:	d7 01       	movw	r26, r14
    1120:	eb 2d       	mov	r30, r11
    1122:	1d 92       	st	X+, r1
    1124:	ea 95       	dec	r30
    1126:	e9 f7       	brne	.-6      	; 0x1122 <CDC_Recive_Event_Process+0x116>
    1128:	d8 01       	movw	r26, r16
    112a:	8c 91       	ld	r24, X
    112c:	11 96       	adiw	r26, 0x01	; 1
    112e:	9c 91       	ld	r25, X
    1130:	0e 5f       	subi	r16, 0xFE	; 254
    1132:	1f 4f       	sbci	r17, 0xFF	; 255
    1134:	9f 93       	push	r25
    1136:	8f 93       	push	r24
    1138:	df 92       	push	r13
    113a:	cf 92       	push	r12
    113c:	ff 92       	push	r15
    113e:	ef 92       	push	r14
    1140:	0e 94 c0 1c 	call	0x3980	; 0x3980 <sprintf>
    1144:	b7 01       	movw	r22, r14
    1146:	80 e0       	ldi	r24, 0x00	; 0
    1148:	91 e0       	ldi	r25, 0x01	; 1
    114a:	e1 d6       	rcall	.+3522   	; 0x1f0e <CDC_Device_SendString>
    114c:	0f 90       	pop	r0
    114e:	0f 90       	pop	r0
    1150:	0f 90       	pop	r0
    1152:	0f 90       	pop	r0
    1154:	0f 90       	pop	r0
    1156:	0f 90       	pop	r0
    1158:	b8 e0       	ldi	r27, 0x08	; 8
    115a:	08 3c       	cpi	r16, 0xC8	; 200
    115c:	1b 07       	cpc	r17, r27
    115e:	f9 f6       	brne	.-66     	; 0x111e <CDC_Recive_Event_Process+0x112>
    1160:	c3 cf       	rjmp	.-122    	; 0x10e8 <CDC_Recive_Event_Process+0xdc>
    1162:	44 e0       	ldi	r20, 0x04	; 4
    1164:	50 e0       	ldi	r21, 0x00	; 0
    1166:	6a e4       	ldi	r22, 0x4A	; 74
    1168:	71 e0       	ldi	r23, 0x01	; 1
    116a:	8a ec       	ldi	r24, 0xCA	; 202
    116c:	98 e0       	ldi	r25, 0x08	; 8
    116e:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    1172:	89 2b       	or	r24, r25
    1174:	11 f4       	brne	.+4      	; 0x117a <CDC_Recive_Event_Process+0x16e>
    1176:	1f de       	rcall	.-962    	; 0xdb6 <dark>
    1178:	63 c1       	rjmp	.+710    	; 0x1440 <CDC_Recive_Event_Process+0x434>
    117a:	43 e0       	ldi	r20, 0x03	; 3
    117c:	50 e0       	ldi	r21, 0x00	; 0
    117e:	64 e5       	ldi	r22, 0x54	; 84
    1180:	71 e0       	ldi	r23, 0x01	; 1
    1182:	8a ec       	ldi	r24, 0xCA	; 202
    1184:	98 e0       	ldi	r25, 0x08	; 8
    1186:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    118a:	89 2b       	or	r24, r25
    118c:	09 f0       	breq	.+2      	; 0x1190 <CDC_Recive_Event_Process+0x184>
    118e:	4e c0       	rjmp	.+156    	; 0x122c <CDC_Recive_Event_Process+0x220>
    1190:	fe 01       	movw	r30, r28
    1192:	31 96       	adiw	r30, 0x01	; 1
    1194:	1f 01       	movw	r2, r30
    1196:	84 e6       	ldi	r24, 0x64	; 100
    1198:	df 01       	movw	r26, r30
    119a:	1d 92       	st	X+, r1
    119c:	8a 95       	dec	r24
    119e:	e9 f7       	brne	.-6      	; 0x119a <CDC_Recive_Event_Process+0x18e>
    11a0:	ec e3       	ldi	r30, 0x3C	; 60
    11a2:	f3 e0       	ldi	r31, 0x03	; 3
    11a4:	05 91       	lpm	r16, Z+
    11a6:	15 91       	lpm	r17, Z+
    11a8:	25 91       	lpm	r18, Z+
    11aa:	34 91       	lpm	r19, Z
    11ac:	e8 e3       	ldi	r30, 0x38	; 56
    11ae:	f3 e0       	ldi	r31, 0x03	; 3
    11b0:	45 90       	lpm	r4, Z+
    11b2:	55 90       	lpm	r5, Z+
    11b4:	65 90       	lpm	r6, Z+
    11b6:	74 90       	lpm	r7, Z
    11b8:	e4 e3       	ldi	r30, 0x34	; 52
    11ba:	f3 e0       	ldi	r31, 0x03	; 3
    11bc:	85 90       	lpm	r8, Z+
    11be:	95 90       	lpm	r9, Z+
    11c0:	a5 90       	lpm	r10, Z+
    11c2:	b4 90       	lpm	r11, Z
    11c4:	e0 e3       	ldi	r30, 0x30	; 48
    11c6:	f3 e0       	ldi	r31, 0x03	; 3
    11c8:	c5 90       	lpm	r12, Z+
    11ca:	d5 90       	lpm	r13, Z+
    11cc:	e5 90       	lpm	r14, Z+
    11ce:	f4 90       	lpm	r15, Z
    11d0:	ec e2       	ldi	r30, 0x2C	; 44
    11d2:	f3 e0       	ldi	r31, 0x03	; 3
    11d4:	45 91       	lpm	r20, Z+
    11d6:	55 91       	lpm	r21, Z+
    11d8:	65 91       	lpm	r22, Z+
    11da:	74 91       	lpm	r23, Z
    11dc:	e8 e2       	ldi	r30, 0x28	; 40
    11de:	f3 e0       	ldi	r31, 0x03	; 3
    11e0:	85 91       	lpm	r24, Z+
    11e2:	95 91       	lpm	r25, Z+
    11e4:	a5 91       	lpm	r26, Z+
    11e6:	b4 91       	lpm	r27, Z
    11e8:	3f 93       	push	r19
    11ea:	2f 93       	push	r18
    11ec:	1f 93       	push	r17
    11ee:	0f 93       	push	r16
    11f0:	7f 92       	push	r7
    11f2:	6f 92       	push	r6
    11f4:	5f 92       	push	r5
    11f6:	4f 92       	push	r4
    11f8:	bf 92       	push	r11
    11fa:	af 92       	push	r10
    11fc:	9f 92       	push	r9
    11fe:	8f 92       	push	r8
    1200:	ff 92       	push	r15
    1202:	ef 92       	push	r14
    1204:	df 92       	push	r13
    1206:	cf 92       	push	r12
    1208:	7f 93       	push	r23
    120a:	6f 93       	push	r22
    120c:	5f 93       	push	r21
    120e:	4f 93       	push	r20
    1210:	bf 93       	push	r27
    1212:	af 93       	push	r26
    1214:	9f 93       	push	r25
    1216:	8f 93       	push	r24
    1218:	89 e5       	ldi	r24, 0x59	; 89
    121a:	91 e0       	ldi	r25, 0x01	; 1
    121c:	9f 93       	push	r25
    121e:	8f 93       	push	r24
    1220:	3f 92       	push	r3
    1222:	2f 92       	push	r2
    1224:	0e 94 c0 1c 	call	0x3980	; 0x3980 <sprintf>
    1228:	b1 01       	movw	r22, r2
    122a:	36 c0       	rjmp	.+108    	; 0x1298 <CDC_Recive_Event_Process+0x28c>
    122c:	43 e0       	ldi	r20, 0x03	; 3
    122e:	50 e0       	ldi	r21, 0x00	; 0
    1230:	61 e7       	ldi	r22, 0x71	; 113
    1232:	71 e0       	ldi	r23, 0x01	; 1
    1234:	8a ec       	ldi	r24, 0xCA	; 202
    1236:	98 e0       	ldi	r25, 0x08	; 8
    1238:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    123c:	89 2b       	or	r24, r25
    123e:	a9 f5       	brne	.+106    	; 0x12aa <CDC_Recive_Event_Process+0x29e>
    1240:	8e 01       	movw	r16, r28
    1242:	0f 5f       	subi	r16, 0xFF	; 255
    1244:	1f 4f       	sbci	r17, 0xFF	; 255
    1246:	80 e4       	ldi	r24, 0x40	; 64
    1248:	d8 01       	movw	r26, r16
    124a:	1d 92       	st	X+, r1
    124c:	8a 95       	dec	r24
    124e:	e9 f7       	brne	.-6      	; 0x124a <CDC_Recive_Event_Process+0x23e>
    1250:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <status>
    1254:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <status+0x1>
    1258:	00 97       	sbiw	r24, 0x00	; 0
    125a:	21 f0       	breq	.+8      	; 0x1264 <CDC_Recive_Event_Process+0x258>
    125c:	01 97       	sbiw	r24, 0x01	; 1
    125e:	21 f0       	breq	.+8      	; 0x1268 <CDC_Recive_Event_Process+0x25c>
    1260:	85 e4       	ldi	r24, 0x45	; 69
    1262:	03 c0       	rjmp	.+6      	; 0x126a <CDC_Recive_Event_Process+0x25e>
    1264:	82 e5       	ldi	r24, 0x52	; 82
    1266:	01 c0       	rjmp	.+2      	; 0x126a <CDC_Recive_Event_Process+0x25e>
    1268:	87 e5       	ldi	r24, 0x57	; 87
    126a:	90 91 1e 01 	lds	r25, 0x011E	; 0x80011e <temperature+0x3>
    126e:	9f 93       	push	r25
    1270:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <temperature+0x2>
    1274:	9f 93       	push	r25
    1276:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <temperature+0x1>
    127a:	9f 93       	push	r25
    127c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <temperature>
    1280:	9f 93       	push	r25
    1282:	1f 92       	push	r1
    1284:	8f 93       	push	r24
    1286:	85 e7       	ldi	r24, 0x75	; 117
    1288:	91 e0       	ldi	r25, 0x01	; 1
    128a:	9f 93       	push	r25
    128c:	8f 93       	push	r24
    128e:	1f 93       	push	r17
    1290:	0f 93       	push	r16
    1292:	0e 94 c0 1c 	call	0x3980	; 0x3980 <sprintf>
    1296:	b8 01       	movw	r22, r16
    1298:	80 e0       	ldi	r24, 0x00	; 0
    129a:	91 e0       	ldi	r25, 0x01	; 1
    129c:	38 d6       	rcall	.+3184   	; 0x1f0e <CDC_Device_SendString>
    129e:	0f b6       	in	r0, 0x3f	; 63
    12a0:	f8 94       	cli
    12a2:	de bf       	out	0x3e, r29	; 62
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	cd bf       	out	0x3d, r28	; 61
    12a8:	d3 c0       	rjmp	.+422    	; 0x1450 <CDC_Recive_Event_Process+0x444>
    12aa:	44 e0       	ldi	r20, 0x04	; 4
    12ac:	50 e0       	ldi	r21, 0x00	; 0
    12ae:	61 e8       	ldi	r22, 0x81	; 129
    12b0:	71 e0       	ldi	r23, 0x01	; 1
    12b2:	8a ec       	ldi	r24, 0xCA	; 202
    12b4:	98 e0       	ldi	r25, 0x08	; 8
    12b6:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    12ba:	89 2b       	or	r24, r25
    12bc:	09 f0       	breq	.+2      	; 0x12c0 <CDC_Recive_Event_Process+0x2b4>
    12be:	c3 c0       	rjmp	.+390    	; 0x1446 <CDC_Recive_Event_Process+0x43a>
    12c0:	48 e0       	ldi	r20, 0x08	; 8
    12c2:	50 e0       	ldi	r21, 0x00	; 0
    12c4:	66 e8       	ldi	r22, 0x86	; 134
    12c6:	71 e0       	ldi	r23, 0x01	; 1
    12c8:	8a ec       	ldi	r24, 0xCA	; 202
    12ca:	98 e0       	ldi	r25, 0x08	; 8
    12cc:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    12d0:	89 2b       	or	r24, r25
    12d2:	39 f4       	brne	.+14     	; 0x12e2 <CDC_Recive_Event_Process+0x2d6>
    12d4:	81 e0       	ldi	r24, 0x01	; 1
    12d6:	90 e0       	ldi	r25, 0x00	; 0
    12d8:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <auto_exposure+0x1>
    12dc:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <auto_exposure>
    12e0:	af c0       	rjmp	.+350    	; 0x1440 <CDC_Recive_Event_Process+0x434>
    12e2:	49 e0       	ldi	r20, 0x09	; 9
    12e4:	50 e0       	ldi	r21, 0x00	; 0
    12e6:	6f e8       	ldi	r22, 0x8F	; 143
    12e8:	71 e0       	ldi	r23, 0x01	; 1
    12ea:	8a ec       	ldi	r24, 0xCA	; 202
    12ec:	98 e0       	ldi	r25, 0x08	; 8
    12ee:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    12f2:	89 2b       	or	r24, r25
    12f4:	49 f4       	brne	.+18     	; 0x1308 <CDC_Recive_Event_Process+0x2fc>
    12f6:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    12fa:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    12fe:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <exposure_time_sel+0x1>
    1302:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <exposure_time_sel>
    1306:	9c c0       	rjmp	.+312    	; 0x1440 <CDC_Recive_Event_Process+0x434>
    1308:	49 e0       	ldi	r20, 0x09	; 9
    130a:	50 e0       	ldi	r21, 0x00	; 0
    130c:	69 e9       	ldi	r22, 0x99	; 153
    130e:	71 e0       	ldi	r23, 0x01	; 1
    1310:	8a ec       	ldi	r24, 0xCA	; 202
    1312:	98 e0       	ldi	r25, 0x08	; 8
    1314:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    1318:	89 2b       	or	r24, r25
    131a:	39 f4       	brne	.+14     	; 0x132a <CDC_Recive_Event_Process+0x31e>
    131c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    1320:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    1324:	81 e0       	ldi	r24, 0x01	; 1
    1326:	90 e0       	ldi	r25, 0x00	; 0
    1328:	87 c0       	rjmp	.+270    	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    132a:	49 e0       	ldi	r20, 0x09	; 9
    132c:	50 e0       	ldi	r21, 0x00	; 0
    132e:	63 ea       	ldi	r22, 0xA3	; 163
    1330:	71 e0       	ldi	r23, 0x01	; 1
    1332:	8a ec       	ldi	r24, 0xCA	; 202
    1334:	98 e0       	ldi	r25, 0x08	; 8
    1336:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    133a:	89 2b       	or	r24, r25
    133c:	39 f4       	brne	.+14     	; 0x134c <CDC_Recive_Event_Process+0x340>
    133e:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    1342:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    1346:	82 e0       	ldi	r24, 0x02	; 2
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	76 c0       	rjmp	.+236    	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    134c:	47 e0       	ldi	r20, 0x07	; 7
    134e:	50 e0       	ldi	r21, 0x00	; 0
    1350:	6d ea       	ldi	r22, 0xAD	; 173
    1352:	71 e0       	ldi	r23, 0x01	; 1
    1354:	8a ec       	ldi	r24, 0xCA	; 202
    1356:	98 e0       	ldi	r25, 0x08	; 8
    1358:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    135c:	89 2b       	or	r24, r25
    135e:	39 f4       	brne	.+14     	; 0x136e <CDC_Recive_Event_Process+0x362>
    1360:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    1364:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    1368:	83 e0       	ldi	r24, 0x03	; 3
    136a:	90 e0       	ldi	r25, 0x00	; 0
    136c:	65 c0       	rjmp	.+202    	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    136e:	47 e0       	ldi	r20, 0x07	; 7
    1370:	50 e0       	ldi	r21, 0x00	; 0
    1372:	65 eb       	ldi	r22, 0xB5	; 181
    1374:	71 e0       	ldi	r23, 0x01	; 1
    1376:	8a ec       	ldi	r24, 0xCA	; 202
    1378:	98 e0       	ldi	r25, 0x08	; 8
    137a:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    137e:	89 2b       	or	r24, r25
    1380:	39 f4       	brne	.+14     	; 0x1390 <CDC_Recive_Event_Process+0x384>
    1382:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    1386:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    138a:	84 e0       	ldi	r24, 0x04	; 4
    138c:	90 e0       	ldi	r25, 0x00	; 0
    138e:	54 c0       	rjmp	.+168    	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    1390:	47 e0       	ldi	r20, 0x07	; 7
    1392:	50 e0       	ldi	r21, 0x00	; 0
    1394:	6d eb       	ldi	r22, 0xBD	; 189
    1396:	71 e0       	ldi	r23, 0x01	; 1
    1398:	8a ec       	ldi	r24, 0xCA	; 202
    139a:	98 e0       	ldi	r25, 0x08	; 8
    139c:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    13a0:	89 2b       	or	r24, r25
    13a2:	39 f4       	brne	.+14     	; 0x13b2 <CDC_Recive_Event_Process+0x3a6>
    13a4:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    13a8:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    13ac:	85 e0       	ldi	r24, 0x05	; 5
    13ae:	90 e0       	ldi	r25, 0x00	; 0
    13b0:	43 c0       	rjmp	.+134    	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    13b2:	48 e0       	ldi	r20, 0x08	; 8
    13b4:	50 e0       	ldi	r21, 0x00	; 0
    13b6:	65 ec       	ldi	r22, 0xC5	; 197
    13b8:	71 e0       	ldi	r23, 0x01	; 1
    13ba:	8a ec       	ldi	r24, 0xCA	; 202
    13bc:	98 e0       	ldi	r25, 0x08	; 8
    13be:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    13c2:	89 2b       	or	r24, r25
    13c4:	39 f4       	brne	.+14     	; 0x13d4 <CDC_Recive_Event_Process+0x3c8>
    13c6:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    13ca:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    13ce:	86 e0       	ldi	r24, 0x06	; 6
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	32 c0       	rjmp	.+100    	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    13d4:	48 e0       	ldi	r20, 0x08	; 8
    13d6:	50 e0       	ldi	r21, 0x00	; 0
    13d8:	6e ec       	ldi	r22, 0xCE	; 206
    13da:	71 e0       	ldi	r23, 0x01	; 1
    13dc:	8a ec       	ldi	r24, 0xCA	; 202
    13de:	98 e0       	ldi	r25, 0x08	; 8
    13e0:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    13e4:	89 2b       	or	r24, r25
    13e6:	39 f4       	brne	.+14     	; 0x13f6 <CDC_Recive_Event_Process+0x3ea>
    13e8:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    13ec:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    13f0:	87 e0       	ldi	r24, 0x07	; 7
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	21 c0       	rjmp	.+66     	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    13f6:	48 e0       	ldi	r20, 0x08	; 8
    13f8:	50 e0       	ldi	r21, 0x00	; 0
    13fa:	67 ed       	ldi	r22, 0xD7	; 215
    13fc:	71 e0       	ldi	r23, 0x01	; 1
    13fe:	8a ec       	ldi	r24, 0xCA	; 202
    1400:	98 e0       	ldi	r25, 0x08	; 8
    1402:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    1406:	89 2b       	or	r24, r25
    1408:	39 f4       	brne	.+14     	; 0x1418 <CDC_Recive_Event_Process+0x40c>
    140a:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    140e:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    1412:	88 e0       	ldi	r24, 0x08	; 8
    1414:	90 e0       	ldi	r25, 0x00	; 0
    1416:	10 c0       	rjmp	.+32     	; 0x1438 <CDC_Recive_Event_Process+0x42c>
    1418:	49 e0       	ldi	r20, 0x09	; 9
    141a:	50 e0       	ldi	r21, 0x00	; 0
    141c:	60 ee       	ldi	r22, 0xE0	; 224
    141e:	71 e0       	ldi	r23, 0x01	; 1
    1420:	8a ec       	ldi	r24, 0xCA	; 202
    1422:	98 e0       	ldi	r25, 0x08	; 8
    1424:	0e 94 2d 1c 	call	0x385a	; 0x385a <strncmp>
    1428:	89 2b       	or	r24, r25
    142a:	51 f4       	brne	.+20     	; 0x1440 <CDC_Recive_Event_Process+0x434>
    142c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <auto_exposure+0x1>
    1430:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <auto_exposure>
    1434:	89 e0       	ldi	r24, 0x09	; 9
    1436:	90 e0       	ldi	r25, 0x00	; 0
    1438:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <exposure_time_sel+0x1>
    143c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <exposure_time_sel>
    1440:	6f e4       	ldi	r22, 0x4F	; 79
    1442:	71 e0       	ldi	r23, 0x01	; 1
    1444:	02 c0       	rjmp	.+4      	; 0x144a <CDC_Recive_Event_Process+0x43e>
    1446:	6a ee       	ldi	r22, 0xEA	; 234
    1448:	71 e0       	ldi	r23, 0x01	; 1
    144a:	80 e0       	ldi	r24, 0x00	; 0
    144c:	91 e0       	ldi	r25, 0x01	; 1
    144e:	5f d5       	rcall	.+2750   	; 0x1f0e <CDC_Device_SendString>
    1450:	80 e2       	ldi	r24, 0x20	; 32
    1452:	ea ec       	ldi	r30, 0xCA	; 202
    1454:	f8 e0       	ldi	r31, 0x08	; 8
    1456:	df 01       	movw	r26, r30
    1458:	1d 92       	st	X+, r1
    145a:	8a 95       	dec	r24
    145c:	e9 f7       	brne	.-6      	; 0x1458 <CDC_Recive_Event_Process+0x44c>
    145e:	10 92 c9 08 	sts	0x08C9, r1	; 0x8008c9 <cdc_recive_index+0x1>
    1462:	10 92 c8 08 	sts	0x08C8, r1	; 0x8008c8 <cdc_recive_index>
    1466:	cc 59       	subi	r28, 0x9C	; 156
    1468:	df 4f       	sbci	r29, 0xFF	; 255
    146a:	0f b6       	in	r0, 0x3f	; 63
    146c:	f8 94       	cli
    146e:	de bf       	out	0x3e, r29	; 62
    1470:	0f be       	out	0x3f, r0	; 63
    1472:	cd bf       	out	0x3d, r28	; 61
    1474:	df 91       	pop	r29
    1476:	cf 91       	pop	r28
    1478:	1f 91       	pop	r17
    147a:	0f 91       	pop	r16
    147c:	ff 90       	pop	r15
    147e:	ef 90       	pop	r14
    1480:	df 90       	pop	r13
    1482:	cf 90       	pop	r12
    1484:	bf 90       	pop	r11
    1486:	af 90       	pop	r10
    1488:	9f 90       	pop	r9
    148a:	8f 90       	pop	r8
    148c:	7f 90       	pop	r7
    148e:	6f 90       	pop	r6
    1490:	5f 90       	pop	r5
    1492:	4f 90       	pop	r4
    1494:	3f 90       	pop	r3
    1496:	2f 90       	pop	r2
    1498:	08 95       	ret

0000149a <main>:
    149a:	4b db       	rcall	.-2410   	; 0xb32 <SetupHardware>
    149c:	60 ef       	ldi	r22, 0xF0	; 240
    149e:	71 e0       	ldi	r23, 0x01	; 1
    14a0:	80 e0       	ldi	r24, 0x00	; 0
    14a2:	91 e0       	ldi	r25, 0x01	; 1
    14a4:	11 d6       	rcall	.+3106   	; 0x20c8 <CDC_Device_CreateStream>
    14a6:	78 94       	sei
    14a8:	d6 d9       	rcall	.-3156   	; 0x856 <c12880ma_read>
    14aa:	10 d9       	rcall	.-3552   	; 0x6cc <adc_temp_read>
    14ac:	0f d9       	rcall	.-3554   	; 0x6cc <adc_temp_read>
    14ae:	60 93 1b 01 	sts	0x011B, r22	; 0x80011b <temperature>
    14b2:	70 93 1c 01 	sts	0x011C, r23	; 0x80011c <temperature+0x1>
    14b6:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <temperature+0x2>
    14ba:	90 93 1e 01 	sts	0x011E, r25	; 0x80011e <temperature+0x3>
    14be:	fe da       	rcall	.-2564   	; 0xabc <check_status>
    14c0:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <status+0x1>
    14c4:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <status>
    14c8:	a1 dd       	rcall	.-1214   	; 0x100c <CDC_Recive_Event_Process>
    14ca:	85 dd       	rcall	.-1270   	; 0xfd6 <CDC_Recive_Event>
    14cc:	80 e0       	ldi	r24, 0x00	; 0
    14ce:	91 e0       	ldi	r25, 0x01	; 1
    14d0:	a7 d5       	rcall	.+2894   	; 0x2020 <CDC_Device_USBTask>
    14d2:	de d4       	rcall	.+2492   	; 0x1e90 <USB_USBTask>
    14d4:	eb cf       	rjmp	.-42     	; 0x14ac <main+0x12>

000014d6 <spi_init>:
#define DD_MOSI DDB2
#define DD_SCK DDB1

void spi_init()
{
    DDR_SPI |= (1 << DD_MOSI) | (1 << DD_SCK);
    14d6:	84 b1       	in	r24, 0x04	; 4
    14d8:	86 60       	ori	r24, 0x06	; 6
    14da:	84 b9       	out	0x04, r24	; 4
    SPCR = (1 << SPE) | (1 << MSTR);// | (1 << SPR0);// | (1 << CPOL) | (1 << CPHA);
    14dc:	80 e5       	ldi	r24, 0x50	; 80
    14de:	8c bd       	out	0x2c, r24	; 44
    SPSR |= (1 << SPI2X);
    14e0:	8d b5       	in	r24, 0x2d	; 45
    14e2:	81 60       	ori	r24, 0x01	; 1
    14e4:	8d bd       	out	0x2d, r24	; 45
    14e6:	08 95       	ret

000014e8 <spi_transfer>:
}

uint8_t spi_transfer(uint8_t value)
{
    SPDR = value;
    14e8:	8e bd       	out	0x2e, r24	; 46
    asm volatile("nop");
    14ea:	00 00       	nop
    while (!(SPSR & (1 << SPIF)));
    14ec:	0d b4       	in	r0, 0x2d	; 45
    14ee:	07 fe       	sbrs	r0, 7
    14f0:	fd cf       	rjmp	.-6      	; 0x14ec <spi_transfer+0x4>

    return SPDR;
    14f2:	8e b5       	in	r24, 0x2e	; 46
    14f4:	08 95       	ret

000014f6 <CALLBACK_USB_GetDescriptor>:
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
	uint16_t    Size    = NO_DESCRIPTOR;

	switch (DescriptorType)
    14f6:	29 2f       	mov	r18, r25
    14f8:	33 27       	eor	r19, r19
    14fa:	22 30       	cpi	r18, 0x02	; 2
    14fc:	31 05       	cpc	r19, r1
    14fe:	59 f0       	breq	.+22     	; 0x1516 <CALLBACK_USB_GetDescriptor+0x20>
    1500:	23 30       	cpi	r18, 0x03	; 3
    1502:	31 05       	cpc	r19, r1
    1504:	69 f0       	breq	.+26     	; 0x1520 <CALLBACK_USB_GetDescriptor+0x2a>
    1506:	21 30       	cpi	r18, 0x01	; 1
    1508:	31 05       	cpc	r19, r1
    150a:	e9 f4       	brne	.+58     	; 0x1546 <CALLBACK_USB_GetDescriptor+0x50>
	{
		case DTYPE_Device:
			Address = &DeviceDescriptor;
			Size    = sizeof(USB_Descriptor_Device_t);
    150c:	82 e1       	ldi	r24, 0x12	; 18
    150e:	90 e0       	ldi	r25, 0x00	; 0
	uint16_t    Size    = NO_DESCRIPTOR;

	switch (DescriptorType)
	{
		case DTYPE_Device:
			Address = &DeviceDescriptor;
    1510:	2e e5       	ldi	r18, 0x5E	; 94
    1512:	34 e0       	ldi	r19, 0x04	; 4
    1514:	1c c0       	rjmp	.+56     	; 0x154e <CALLBACK_USB_GetDescriptor+0x58>
			Size    = sizeof(USB_Descriptor_Device_t);
			break;
		case DTYPE_Configuration:
			Address = &ConfigurationDescriptor;
			Size    = sizeof(USB_Descriptor_Configuration_t);
    1516:	8e e3       	ldi	r24, 0x3E	; 62
    1518:	90 e0       	ldi	r25, 0x00	; 0
		case DTYPE_Device:
			Address = &DeviceDescriptor;
			Size    = sizeof(USB_Descriptor_Device_t);
			break;
		case DTYPE_Configuration:
			Address = &ConfigurationDescriptor;
    151a:	20 e2       	ldi	r18, 0x20	; 32
    151c:	34 e0       	ldi	r19, 0x04	; 4
			Size    = sizeof(USB_Descriptor_Configuration_t);
			break;
    151e:	17 c0       	rjmp	.+46     	; 0x154e <CALLBACK_USB_GetDescriptor+0x58>
		case DTYPE_String:
			switch (DescriptorNumber)
    1520:	99 27       	eor	r25, r25
    1522:	81 30       	cpi	r24, 0x01	; 1
    1524:	91 05       	cpc	r25, r1
    1526:	49 f0       	breq	.+18     	; 0x153a <CALLBACK_USB_GetDescriptor+0x44>
    1528:	28 f0       	brcs	.+10     	; 0x1534 <CALLBACK_USB_GetDescriptor+0x3e>
    152a:	02 97       	sbiw	r24, 0x02	; 2
    152c:	61 f4       	brne	.+24     	; 0x1546 <CALLBACK_USB_GetDescriptor+0x50>
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
					break;
				case STRING_ID_Product:
					Address = &ProductString;
					Size    = pgm_read_byte(&ProductString.Header.Size);
    152e:	e6 ee       	ldi	r30, 0xE6	; 230
    1530:	f3 e0       	ldi	r31, 0x03	; 3
    1532:	05 c0       	rjmp	.+10     	; 0x153e <CALLBACK_USB_GetDescriptor+0x48>
		case DTYPE_String:
			switch (DescriptorNumber)
			{
				case STRING_ID_Language:
					Address = &LanguageString;
					Size    = pgm_read_byte(&LanguageString.Header.Size);
    1534:	ec e1       	ldi	r30, 0x1C	; 28
    1536:	f4 e0       	ldi	r31, 0x04	; 4
    1538:	02 c0       	rjmp	.+4      	; 0x153e <CALLBACK_USB_GetDescriptor+0x48>
					break;
				case STRING_ID_Manufacturer:
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
    153a:	ec e0       	ldi	r30, 0x0C	; 12
    153c:	f4 e0       	ldi	r31, 0x04	; 4
					break;
				case STRING_ID_Product:
					Address = &ProductString;
					Size    = pgm_read_byte(&ProductString.Header.Size);
    153e:	84 91       	lpm	r24, Z
    1540:	90 e0       	ldi	r25, 0x00	; 0
				case STRING_ID_Manufacturer:
					Address = &ManufacturerString;
					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
					break;
				case STRING_ID_Product:
					Address = &ProductString;
    1542:	9f 01       	movw	r18, r30
					Size    = pgm_read_byte(&ProductString.Header.Size);
					break;
    1544:	04 c0       	rjmp	.+8      	; 0x154e <CALLBACK_USB_GetDescriptor+0x58>
{
	const uint8_t  DescriptorType   = (wValue >> 8);
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
	uint16_t    Size    = NO_DESCRIPTOR;
    1546:	80 e0       	ldi	r24, 0x00	; 0
    1548:	90 e0       	ldi	r25, 0x00	; 0
                                    const void** const DescriptorAddress)
{
	const uint8_t  DescriptorType   = (wValue >> 8);
	const uint8_t  DescriptorNumber = (wValue & 0xFF);

	const void* Address = NULL;
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	30 e0       	ldi	r19, 0x00	; 0
			}

			break;
	}

	*DescriptorAddress = Address;
    154e:	fa 01       	movw	r30, r20
    1550:	31 83       	std	Z+1, r19	; 0x01
    1552:	20 83       	st	Z, r18
	return Size;
}
    1554:	08 95       	ret

00001556 <Endpoint_Write_Stream_LE>:
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_RWCSTREAM_BusSuspended;
	}

	return ENDPOINT_RWCSTREAM_NoError;
}
    1556:	cf 92       	push	r12
    1558:	df 92       	push	r13
    155a:	ef 92       	push	r14
    155c:	ff 92       	push	r15
    155e:	0f 93       	push	r16
    1560:	1f 93       	push	r17
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	ec 01       	movw	r28, r24
    1568:	8b 01       	movw	r16, r22
    156a:	7a 01       	movw	r14, r20
    156c:	8d d1       	rcall	.+794    	; 0x1888 <Endpoint_WaitUntilReady>
    156e:	81 11       	cpse	r24, r1
    1570:	32 c0       	rjmp	.+100    	; 0x15d6 <Endpoint_Write_Stream_LE+0x80>
    1572:	e1 14       	cp	r14, r1
    1574:	f1 04       	cpc	r15, r1
    1576:	39 f0       	breq	.+14     	; 0x1586 <Endpoint_Write_Stream_LE+0x30>
    1578:	f7 01       	movw	r30, r14
    157a:	80 81       	ld	r24, Z
    157c:	91 81       	ldd	r25, Z+1	; 0x01
    157e:	08 1b       	sub	r16, r24
    1580:	19 0b       	sbc	r17, r25
    1582:	c8 0f       	add	r28, r24
    1584:	d9 1f       	adc	r29, r25
    1586:	c1 2c       	mov	r12, r1
    1588:	d1 2c       	mov	r13, r1
    158a:	01 15       	cp	r16, r1
    158c:	11 05       	cpc	r17, r1
    158e:	11 f1       	breq	.+68     	; 0x15d4 <Endpoint_Write_Stream_LE+0x7e>
    1590:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1594:	85 fd       	sbrc	r24, 5
    1596:	15 c0       	rjmp	.+42     	; 0x15c2 <Endpoint_Write_Stream_LE+0x6c>
    1598:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    159c:	8e 77       	andi	r24, 0x7E	; 126
    159e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    15a2:	e1 14       	cp	r14, r1
    15a4:	f1 04       	cpc	r15, r1
    15a6:	49 f0       	breq	.+18     	; 0x15ba <Endpoint_Write_Stream_LE+0x64>
    15a8:	f7 01       	movw	r30, r14
    15aa:	80 81       	ld	r24, Z
    15ac:	91 81       	ldd	r25, Z+1	; 0x01
    15ae:	c8 0e       	add	r12, r24
    15b0:	d9 1e       	adc	r13, r25
    15b2:	d1 82       	std	Z+1, r13	; 0x01
    15b4:	c0 82       	st	Z, r12
    15b6:	85 e0       	ldi	r24, 0x05	; 5
    15b8:	0e c0       	rjmp	.+28     	; 0x15d6 <Endpoint_Write_Stream_LE+0x80>
    15ba:	66 d1       	rcall	.+716    	; 0x1888 <Endpoint_WaitUntilReady>
    15bc:	88 23       	and	r24, r24
    15be:	29 f3       	breq	.-54     	; 0x158a <Endpoint_Write_Stream_LE+0x34>
    15c0:	0a c0       	rjmp	.+20     	; 0x15d6 <Endpoint_Write_Stream_LE+0x80>
    15c2:	89 91       	ld	r24, Y+
    15c4:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    15c8:	01 50       	subi	r16, 0x01	; 1
    15ca:	11 09       	sbc	r17, r1
    15cc:	ff ef       	ldi	r31, 0xFF	; 255
    15ce:	cf 1a       	sub	r12, r31
    15d0:	df 0a       	sbc	r13, r31
    15d2:	db cf       	rjmp	.-74     	; 0x158a <Endpoint_Write_Stream_LE+0x34>
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	df 91       	pop	r29
    15d8:	cf 91       	pop	r28
    15da:	1f 91       	pop	r17
    15dc:	0f 91       	pop	r16
    15de:	ff 90       	pop	r15
    15e0:	ef 90       	pop	r14
    15e2:	df 90       	pop	r13
    15e4:	cf 90       	pop	r12
    15e6:	08 95       	ret

000015e8 <Endpoint_Write_Control_Stream_LE>:
    15e8:	20 91 f6 08 	lds	r18, 0x08F6	; 0x8008f6 <USB_ControlRequest+0x6>
    15ec:	30 91 f7 08 	lds	r19, 0x08F7	; 0x8008f7 <USB_ControlRequest+0x7>
    15f0:	26 17       	cp	r18, r22
    15f2:	37 07       	cpc	r19, r23
    15f4:	48 f0       	brcs	.+18     	; 0x1608 <Endpoint_Write_Control_Stream_LE+0x20>
    15f6:	61 15       	cp	r22, r1
    15f8:	71 05       	cpc	r23, r1
    15fa:	39 f4       	brne	.+14     	; 0x160a <Endpoint_Write_Control_Stream_LE+0x22>
    15fc:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1600:	2e 77       	andi	r18, 0x7E	; 126
    1602:	20 93 e8 00 	sts	0x00E8, r18	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1606:	01 c0       	rjmp	.+2      	; 0x160a <Endpoint_Write_Control_Stream_LE+0x22>
    1608:	b9 01       	movw	r22, r18
    160a:	fc 01       	movw	r30, r24
    160c:	20 e0       	ldi	r18, 0x00	; 0
    160e:	61 15       	cp	r22, r1
    1610:	71 05       	cpc	r23, r1
    1612:	79 f1       	breq	.+94     	; 0x1672 <Endpoint_Write_Control_Stream_LE+0x8a>
    1614:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>
    1618:	88 23       	and	r24, r24
    161a:	f1 f1       	breq	.+124    	; 0x1698 <Endpoint_Write_Control_Stream_LE+0xb0>
    161c:	85 30       	cpi	r24, 0x05	; 5
    161e:	f1 f1       	breq	.+124    	; 0x169c <Endpoint_Write_Control_Stream_LE+0xb4>
    1620:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1624:	83 fd       	sbrc	r24, 3
    1626:	3c c0       	rjmp	.+120    	; 0x16a0 <Endpoint_Write_Control_Stream_LE+0xb8>
    1628:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    162c:	82 fd       	sbrc	r24, 2
    162e:	2e c0       	rjmp	.+92     	; 0x168c <Endpoint_Write_Control_Stream_LE+0xa4>
    1630:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1634:	80 ff       	sbrs	r24, 0
    1636:	eb cf       	rjmp	.-42     	; 0x160e <Endpoint_Write_Control_Stream_LE+0x26>
    1638:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    163c:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	92 2b       	or	r25, r18
    1644:	61 15       	cp	r22, r1
    1646:	71 05       	cpc	r23, r1
    1648:	51 f0       	breq	.+20     	; 0x165e <Endpoint_Write_Control_Stream_LE+0x76>
    164a:	88 30       	cpi	r24, 0x08	; 8
    164c:	91 05       	cpc	r25, r1
    164e:	38 f4       	brcc	.+14     	; 0x165e <Endpoint_Write_Control_Stream_LE+0x76>
    1650:	21 91       	ld	r18, Z+
    1652:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    1656:	61 50       	subi	r22, 0x01	; 1
    1658:	71 09       	sbc	r23, r1
    165a:	01 96       	adiw	r24, 0x01	; 1
    165c:	f3 cf       	rjmp	.-26     	; 0x1644 <Endpoint_Write_Control_Stream_LE+0x5c>
    165e:	21 e0       	ldi	r18, 0x01	; 1
    1660:	08 97       	sbiw	r24, 0x08	; 8
    1662:	09 f0       	breq	.+2      	; 0x1666 <Endpoint_Write_Control_Stream_LE+0x7e>
    1664:	20 e0       	ldi	r18, 0x00	; 0
    1666:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    166a:	8e 77       	andi	r24, 0x7E	; 126
    166c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1670:	ce cf       	rjmp	.-100    	; 0x160e <Endpoint_Write_Control_Stream_LE+0x26>
    1672:	21 11       	cpse	r18, r1
    1674:	cf cf       	rjmp	.-98     	; 0x1614 <Endpoint_Write_Control_Stream_LE+0x2c>
    1676:	0a c0       	rjmp	.+20     	; 0x168c <Endpoint_Write_Control_Stream_LE+0xa4>
    1678:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>
    167c:	88 23       	and	r24, r24
    167e:	61 f0       	breq	.+24     	; 0x1698 <Endpoint_Write_Control_Stream_LE+0xb0>
    1680:	85 30       	cpi	r24, 0x05	; 5
    1682:	61 f0       	breq	.+24     	; 0x169c <Endpoint_Write_Control_Stream_LE+0xb4>
    1684:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1688:	83 fd       	sbrc	r24, 3
    168a:	0a c0       	rjmp	.+20     	; 0x16a0 <Endpoint_Write_Control_Stream_LE+0xb8>
    168c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1690:	82 ff       	sbrs	r24, 2
    1692:	f2 cf       	rjmp	.-28     	; 0x1678 <Endpoint_Write_Control_Stream_LE+0x90>
    1694:	80 e0       	ldi	r24, 0x00	; 0
    1696:	08 95       	ret
    1698:	82 e0       	ldi	r24, 0x02	; 2
    169a:	08 95       	ret
    169c:	83 e0       	ldi	r24, 0x03	; 3
    169e:	08 95       	ret
    16a0:	81 e0       	ldi	r24, 0x01	; 1
    16a2:	08 95       	ret

000016a4 <Endpoint_Write_Control_PStream_LE>:
                            uint16_t Length)
{
	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
	bool     LastPacketFull = false;

	if (Length > USB_ControlRequest.wLength)
    16a4:	20 91 f6 08 	lds	r18, 0x08F6	; 0x8008f6 <USB_ControlRequest+0x6>
    16a8:	30 91 f7 08 	lds	r19, 0x08F7	; 0x8008f7 <USB_ControlRequest+0x7>
    16ac:	26 17       	cp	r18, r22
    16ae:	37 07       	cpc	r19, r23
    16b0:	48 f0       	brcs	.+18     	; 0x16c4 <Endpoint_Write_Control_PStream_LE+0x20>
	  Length = USB_ControlRequest.wLength;
	else if (!(Length))
    16b2:	61 15       	cp	r22, r1
    16b4:	71 05       	cpc	r23, r1
    16b6:	39 f4       	brne	.+14     	; 0x16c6 <Endpoint_Write_Control_PStream_LE+0x22>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    16b8:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    16bc:	2e 77       	andi	r18, 0x7E	; 126
    16be:	20 93 e8 00 	sts	0x00E8, r18	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    16c2:	01 c0       	rjmp	.+2      	; 0x16c6 <Endpoint_Write_Control_PStream_LE+0x22>
    16c4:	b9 01       	movw	r22, r18
    16c6:	fc 01       	movw	r30, r24
    16c8:	20 e0       	ldi	r18, 0x00	; 0
	  Endpoint_ClearIN();

	while (Length || LastPacketFull)
    16ca:	61 15       	cp	r22, r1
    16cc:	71 05       	cpc	r23, r1
    16ce:	91 f1       	breq	.+100    	; 0x1734 <Endpoint_Write_Control_PStream_LE+0x90>
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    16d0:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    16d4:	88 23       	and	r24, r24
    16d6:	09 f4       	brne	.+2      	; 0x16da <Endpoint_Write_Control_PStream_LE+0x36>
    16d8:	40 c0       	rjmp	.+128    	; 0x175a <Endpoint_Write_Control_PStream_LE+0xb6>
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    16da:	85 30       	cpi	r24, 0x05	; 5
    16dc:	09 f4       	brne	.+2      	; 0x16e0 <Endpoint_Write_Control_PStream_LE+0x3c>
    16de:	3f c0       	rjmp	.+126    	; 0x175e <Endpoint_Write_Control_PStream_LE+0xba>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    16e0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
    16e4:	83 fd       	sbrc	r24, 3
    16e6:	3d c0       	rjmp	.+122    	; 0x1762 <Endpoint_Write_Control_PStream_LE+0xbe>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    16e8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_HostAborted;
		else if (Endpoint_IsOUTReceived())
    16ec:	82 fd       	sbrc	r24, 2
    16ee:	2f c0       	rjmp	.+94     	; 0x174e <Endpoint_Write_Control_PStream_LE+0xaa>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    16f0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  break;

		if (Endpoint_IsINReady())
    16f4:	80 ff       	sbrs	r24, 0
    16f6:	e9 cf       	rjmp	.-46     	; 0x16ca <Endpoint_Write_Control_PStream_LE+0x26>
			static inline uint16_t Endpoint_BytesInEndpoint(void)
			{
				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					return UEBCX;
				#elif defined(USB_SERIES_4_AVR)
					return (((uint16_t)UEBCHX << 8) | UEBCLX);
    16f8:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    16fc:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1700:	90 e0       	ldi	r25, 0x00	; 0
    1702:	92 2b       	or	r25, r18
		{
			uint16_t BytesInEndpoint = Endpoint_BytesInEndpoint();

			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
    1704:	61 15       	cp	r22, r1
    1706:	71 05       	cpc	r23, r1
    1708:	59 f0       	breq	.+22     	; 0x1720 <Endpoint_Write_Control_PStream_LE+0x7c>
    170a:	88 30       	cpi	r24, 0x08	; 8
    170c:	91 05       	cpc	r25, r1
    170e:	40 f4       	brcc	.+16     	; 0x1720 <Endpoint_Write_Control_PStream_LE+0x7c>
			{
				TEMPLATE_TRANSFER_BYTE(DataStream);
    1710:	24 91       	lpm	r18, Z
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    1712:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				TEMPLATE_BUFFER_MOVE(DataStream, 1);
    1716:	31 96       	adiw	r30, 0x01	; 1
				Length--;
    1718:	61 50       	subi	r22, 0x01	; 1
    171a:	71 09       	sbc	r23, r1
				BytesInEndpoint++;
    171c:	01 96       	adiw	r24, 0x01	; 1
    171e:	f2 cf       	rjmp	.-28     	; 0x1704 <Endpoint_Write_Control_PStream_LE+0x60>
			}

			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
    1720:	21 e0       	ldi	r18, 0x01	; 1
    1722:	08 97       	sbiw	r24, 0x08	; 8
    1724:	09 f0       	breq	.+2      	; 0x1728 <Endpoint_Write_Control_PStream_LE+0x84>
    1726:	20 e0       	ldi	r18, 0x00	; 0
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    1728:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    172c:	8e 77       	andi	r24, 0x7E	; 126
    172e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1732:	cb cf       	rjmp	.-106    	; 0x16ca <Endpoint_Write_Control_PStream_LE+0x26>
	if (Length > USB_ControlRequest.wLength)
	  Length = USB_ControlRequest.wLength;
	else if (!(Length))
	  Endpoint_ClearIN();

	while (Length || LastPacketFull)
    1734:	21 11       	cpse	r18, r1
    1736:	cc cf       	rjmp	.-104    	; 0x16d0 <Endpoint_Write_Control_PStream_LE+0x2c>
    1738:	0a c0       	rjmp	.+20     	; 0x174e <Endpoint_Write_Control_PStream_LE+0xaa>
		}
	}

	while (!(Endpoint_IsOUTReceived()))
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    173a:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    173e:	88 23       	and	r24, r24
    1740:	61 f0       	breq	.+24     	; 0x175a <Endpoint_Write_Control_PStream_LE+0xb6>
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    1742:	85 30       	cpi	r24, 0x05	; 5
    1744:	61 f0       	breq	.+24     	; 0x175e <Endpoint_Write_Control_PStream_LE+0xba>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    1746:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
    174a:	83 fd       	sbrc	r24, 3
    174c:	0a c0       	rjmp	.+20     	; 0x1762 <Endpoint_Write_Control_PStream_LE+0xbe>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    174e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
			Endpoint_ClearIN();
		}
	}

	while (!(Endpoint_IsOUTReceived()))
    1752:	82 ff       	sbrs	r24, 2
    1754:	f2 cf       	rjmp	.-28     	; 0x173a <Endpoint_Write_Control_PStream_LE+0x96>
		  return ENDPOINT_RWCSTREAM_BusSuspended;
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
	}

	return ENDPOINT_RWCSTREAM_NoError;
    1756:	80 e0       	ldi	r24, 0x00	; 0
    1758:	08 95       	ret
	while (Length || LastPacketFull)
	{
		uint8_t USB_DeviceState_LCL = USB_DeviceState;

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
    175a:	82 e0       	ldi	r24, 0x02	; 2
    175c:	08 95       	ret
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_RWCSTREAM_BusSuspended;
    175e:	83 e0       	ldi	r24, 0x03	; 3
    1760:	08 95       	ret
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
    1762:	81 e0       	ldi	r24, 0x01	; 1
		else if (Endpoint_IsSETUPReceived())
		  return ENDPOINT_RWCSTREAM_HostAborted;
	}

	return ENDPOINT_RWCSTREAM_NoError;
}
    1764:	08 95       	ret

00001766 <Endpoint_ConfigureEndpoint_Prv>:
		UEIENX  = 0;
		UEINTX  = 0;
		UECFG1X = 0;
		Endpoint_DisableEndpoint();
	}
}
    1766:	98 2f       	mov	r25, r24
    1768:	97 30       	cpi	r25, 0x07	; 7
    176a:	68 f5       	brcc	.+90     	; 0x17c6 <Endpoint_ConfigureEndpoint_Prv+0x60>
    176c:	90 93 e9 00 	sts	0x00E9, r25	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1770:	98 17       	cp	r25, r24
    1772:	39 f0       	breq	.+14     	; 0x1782 <Endpoint_ConfigureEndpoint_Prv+0x1c>
    1774:	70 91 ec 00 	lds	r23, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1778:	20 91 ed 00 	lds	r18, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    177c:	50 91 f0 00 	lds	r21, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1780:	03 c0       	rjmp	.+6      	; 0x1788 <Endpoint_ConfigureEndpoint_Prv+0x22>
    1782:	24 2f       	mov	r18, r20
    1784:	76 2f       	mov	r23, r22
    1786:	50 e0       	ldi	r21, 0x00	; 0
    1788:	21 fd       	sbrc	r18, 1
    178a:	02 c0       	rjmp	.+4      	; 0x1790 <Endpoint_ConfigureEndpoint_Prv+0x2a>
    178c:	9f 5f       	subi	r25, 0xFF	; 255
    178e:	ec cf       	rjmp	.-40     	; 0x1768 <Endpoint_ConfigureEndpoint_Prv+0x2>
    1790:	30 91 eb 00 	lds	r19, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    1794:	3e 7f       	andi	r19, 0xFE	; 254
    1796:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    179a:	30 91 ed 00 	lds	r19, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    179e:	3d 7f       	andi	r19, 0xFD	; 253
    17a0:	30 93 ed 00 	sts	0x00ED, r19	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    17a4:	30 91 eb 00 	lds	r19, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    17a8:	31 60       	ori	r19, 0x01	; 1
    17aa:	30 93 eb 00 	sts	0x00EB, r19	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    17ae:	70 93 ec 00 	sts	0x00EC, r23	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    17b2:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
    17b6:	50 93 f0 00 	sts	0x00F0, r21	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    17ba:	20 91 ee 00 	lds	r18, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7e00ee>
    17be:	27 fd       	sbrc	r18, 7
    17c0:	e5 cf       	rjmp	.-54     	; 0x178c <Endpoint_ConfigureEndpoint_Prv+0x26>
    17c2:	80 e0       	ldi	r24, 0x00	; 0
    17c4:	08 95       	ret
    17c6:	8f 70       	andi	r24, 0x0F	; 15
    17c8:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	08 95       	ret

000017d0 <Endpoint_ConfigureEndpointTable>:
    17d0:	0f 93       	push	r16
    17d2:	1f 93       	push	r17
    17d4:	cf 93       	push	r28
    17d6:	df 93       	push	r29
    17d8:	06 2f       	mov	r16, r22
    17da:	ec 01       	movw	r28, r24
    17dc:	10 e0       	ldi	r17, 0x00	; 0
    17de:	10 17       	cp	r17, r16
    17e0:	71 f1       	breq	.+92     	; 0x183e <Endpoint_ConfigureEndpointTable+0x6e>
    17e2:	68 81       	ld	r22, Y
    17e4:	61 11       	cpse	r22, r1
    17e6:	03 c0       	rjmp	.+6      	; 0x17ee <Endpoint_ConfigureEndpointTable+0x1e>
    17e8:	1f 5f       	subi	r17, 0xFF	; 255
    17ea:	25 96       	adiw	r28, 0x05	; 5
    17ec:	f8 cf       	rjmp	.-16     	; 0x17de <Endpoint_ConfigureEndpointTable+0xe>
    17ee:	2c 81       	ldd	r18, Y+4	; 0x04
    17f0:	a9 81       	ldd	r26, Y+1	; 0x01
    17f2:	ba 81       	ldd	r27, Y+2	; 0x02
    17f4:	9b 81       	ldd	r25, Y+3	; 0x03
    17f6:	86 2f       	mov	r24, r22
    17f8:	8f 70       	andi	r24, 0x0F	; 15
    17fa:	87 30       	cpi	r24, 0x07	; 7
    17fc:	10 f0       	brcs	.+4      	; 0x1802 <Endpoint_ConfigureEndpointTable+0x32>
    17fe:	80 e0       	ldi	r24, 0x00	; 0
    1800:	1f c0       	rjmp	.+62     	; 0x1840 <Endpoint_ConfigureEndpointTable+0x70>
    1802:	22 30       	cpi	r18, 0x02	; 2
    1804:	10 f4       	brcc	.+4      	; 0x180a <Endpoint_ConfigureEndpointTable+0x3a>
    1806:	42 e0       	ldi	r20, 0x02	; 2
    1808:	01 c0       	rjmp	.+2      	; 0x180c <Endpoint_ConfigureEndpointTable+0x3c>
    180a:	46 e0       	ldi	r20, 0x06	; 6
    180c:	e8 e0       	ldi	r30, 0x08	; 8
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	20 e0       	ldi	r18, 0x00	; 0
    1812:	ea 17       	cp	r30, r26
    1814:	fb 07       	cpc	r31, r27
    1816:	20 f4       	brcc	.+8      	; 0x1820 <Endpoint_ConfigureEndpointTable+0x50>
    1818:	2f 5f       	subi	r18, 0xFF	; 255
    181a:	ee 0f       	add	r30, r30
    181c:	ff 1f       	adc	r31, r31
    181e:	f9 cf       	rjmp	.-14     	; 0x1812 <Endpoint_ConfigureEndpointTable+0x42>
    1820:	22 95       	swap	r18
    1822:	20 7f       	andi	r18, 0xF0	; 240
    1824:	42 2b       	or	r20, r18
    1826:	50 e4       	ldi	r21, 0x40	; 64
    1828:	95 9f       	mul	r25, r21
    182a:	90 01       	movw	r18, r0
    182c:	11 24       	eor	r1, r1
    182e:	66 1f       	adc	r22, r22
    1830:	66 27       	eor	r22, r22
    1832:	66 1f       	adc	r22, r22
    1834:	62 2b       	or	r22, r18
    1836:	97 df       	rcall	.-210    	; 0x1766 <Endpoint_ConfigureEndpoint_Prv>
    1838:	81 11       	cpse	r24, r1
    183a:	d6 cf       	rjmp	.-84     	; 0x17e8 <Endpoint_ConfigureEndpointTable+0x18>
    183c:	e0 cf       	rjmp	.-64     	; 0x17fe <Endpoint_ConfigureEndpointTable+0x2e>
    183e:	81 e0       	ldi	r24, 0x01	; 1
    1840:	df 91       	pop	r29
    1842:	cf 91       	pop	r28
    1844:	1f 91       	pop	r17
    1846:	0f 91       	pop	r16
    1848:	08 95       	ret

0000184a <Endpoint_ClearStatusStage>:

void Endpoint_ClearStatusStage(void)
{
	if (USB_ControlRequest.bmRequestType & REQDIR_DEVICETOHOST)
    184a:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <USB_ControlRequest>
    184e:	87 ff       	sbrs	r24, 7
    1850:	11 c0       	rjmp	.+34     	; 0x1874 <Endpoint_ClearStatusStage+0x2a>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    1852:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	{
		while (!(Endpoint_IsOUTReceived()))
    1856:	82 fd       	sbrc	r24, 2
    1858:	05 c0       	rjmp	.+10     	; 0x1864 <Endpoint_ClearStatusStage+0x1a>
		{
			if (USB_DeviceState == DEVICE_STATE_Unattached)
    185a:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>
    185e:	81 11       	cpse	r24, r1
    1860:	f8 cf       	rjmp	.-16     	; 0x1852 <Endpoint_ClearStatusStage+0x8>
    1862:	11 c0       	rjmp	.+34     	; 0x1886 <Endpoint_ClearStatusStage+0x3c>
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    1864:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1868:	8b 77       	andi	r24, 0x7B	; 123
    186a:	0b c0       	rjmp	.+22     	; 0x1882 <Endpoint_ClearStatusStage+0x38>
	}
	else
	{
		while (!(Endpoint_IsINReady()))
		{
			if (USB_DeviceState == DEVICE_STATE_Unattached)
    186c:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>
    1870:	88 23       	and	r24, r24
    1872:	49 f0       	breq	.+18     	; 0x1886 <Endpoint_ClearStatusStage+0x3c>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    1874:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

		Endpoint_ClearOUT();
	}
	else
	{
		while (!(Endpoint_IsINReady()))
    1878:	80 ff       	sbrs	r24, 0
    187a:	f8 cf       	rjmp	.-16     	; 0x186c <Endpoint_ClearStatusStage+0x22>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    187c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1880:	8e 77       	andi	r24, 0x7E	; 126
    1882:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1886:	08 95       	ret

00001888 <Endpoint_WaitUntilReady>:
			 *  \return Current USB frame number from the USB controller.
			 */
			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline uint16_t USB_Device_GetFrameNumber(void)
			{
				return UDFNUM;
    1888:	20 91 e4 00 	lds	r18, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    188c:	30 91 e5 00 	lds	r19, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
    1890:	95 e6       	ldi	r25, 0x65	; 101
			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
			 */
			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetEndpointDirection(void)
			{
				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
    1892:	40 91 ec 00 	lds	r20, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1896:	84 2f       	mov	r24, r20
    1898:	81 70       	andi	r24, 0x01	; 1
    189a:	40 ff       	sbrs	r20, 0
    189c:	23 c0       	rjmp	.+70     	; 0x18e4 <Endpoint_WaitUntilReady+0x5c>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    189e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	for (;;)
	{
		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
		{
			if (Endpoint_IsINReady())
    18a2:	80 fd       	sbrc	r24, 0
    18a4:	1d c0       	rjmp	.+58     	; 0x18e0 <Endpoint_WaitUntilReady+0x58>
		{
			if (Endpoint_IsOUTReceived())
			  return ENDPOINT_READYWAIT_NoError;
		}

		uint8_t USB_DeviceState_LCL = USB_DeviceState;
    18a6:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
    18aa:	88 23       	and	r24, r24
    18ac:	99 f0       	breq	.+38     	; 0x18d4 <Endpoint_WaitUntilReady+0x4c>
		  return ENDPOINT_READYWAIT_DeviceDisconnected;
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
    18ae:	85 30       	cpi	r24, 0x05	; 5
    18b0:	99 f0       	breq	.+38     	; 0x18d8 <Endpoint_WaitUntilReady+0x50>
			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
			 */
			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsStalled(void)
			{
				return ((UECONX & (1 << STALLRQ)) ? true : false);
    18b2:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
		  return ENDPOINT_READYWAIT_BusSuspended;
		else if (Endpoint_IsStalled())
    18b6:	85 fd       	sbrc	r24, 5
    18b8:	11 c0       	rjmp	.+34     	; 0x18dc <Endpoint_WaitUntilReady+0x54>
    18ba:	40 91 e4 00 	lds	r20, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
    18be:	50 91 e5 00 	lds	r21, 0x00E5	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7e00e5>
		  return ENDPOINT_READYWAIT_EndpointStalled;

		uint16_t CurrentFrameNumber = USB_Device_GetFrameNumber();

		if (CurrentFrameNumber != PreviousFrameNumber)
    18c2:	24 17       	cp	r18, r20
    18c4:	35 07       	cpc	r19, r21
    18c6:	29 f3       	breq	.-54     	; 0x1892 <Endpoint_WaitUntilReady+0xa>
    18c8:	91 50       	subi	r25, 0x01	; 1
		{
			PreviousFrameNumber = CurrentFrameNumber;

			if (!(TimeoutMSRem--))
    18ca:	11 f0       	breq	.+4      	; 0x18d0 <Endpoint_WaitUntilReady+0x48>
    18cc:	9a 01       	movw	r18, r20
    18ce:	e1 cf       	rjmp	.-62     	; 0x1892 <Endpoint_WaitUntilReady+0xa>
			  return ENDPOINT_READYWAIT_Timeout;
    18d0:	84 e0       	ldi	r24, 0x04	; 4
    18d2:	08 95       	ret
		}

		uint8_t USB_DeviceState_LCL = USB_DeviceState;

		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
		  return ENDPOINT_READYWAIT_DeviceDisconnected;
    18d4:	82 e0       	ldi	r24, 0x02	; 2
    18d6:	08 95       	ret
		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
		  return ENDPOINT_READYWAIT_BusSuspended;
    18d8:	83 e0       	ldi	r24, 0x03	; 3
    18da:	08 95       	ret
		else if (Endpoint_IsStalled())
		  return ENDPOINT_READYWAIT_EndpointStalled;
    18dc:	81 e0       	ldi	r24, 0x01	; 1
    18de:	08 95       	ret
	for (;;)
	{
		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
		{
			if (Endpoint_IsINReady())
			  return ENDPOINT_READYWAIT_NoError;
    18e0:	80 e0       	ldi	r24, 0x00	; 0
    18e2:	08 95       	ret
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    18e4:	40 91 e8 00 	lds	r20, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
		}
		else
		{
			if (Endpoint_IsOUTReceived())
    18e8:	42 ff       	sbrs	r20, 2
    18ea:	dd cf       	rjmp	.-70     	; 0x18a6 <Endpoint_WaitUntilReady+0x1e>

			if (!(TimeoutMSRem--))
			  return ENDPOINT_READYWAIT_Timeout;
		}
	}
}
    18ec:	08 95       	ret

000018ee <USB_ResetInterface>:

	USB_IsInitialized = false;
}

void USB_ResetInterface(void)
{
    18ee:	0f 93       	push	r16
    18f0:	1f 93       	push	r17
    18f2:	cf 93       	push	r28
	#if defined(USB_CAN_BE_BOTH)
	bool UIDModeSelectEnabled = ((UHWCON & (1 << UIDE)) != 0);
	#endif

	USB_INT_DisableAllInterrupts();
	USB_INT_ClearAllInterrupts();
    18f4:	df 93       	push	r29
    18f6:	4b d0       	rcall	.+150    	; 0x198e <USB_INT_DisableAllInterrupts>
			}

			static inline void USB_Controller_Reset(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Controller_Reset(void)
			{
				USBCON &= ~(1 << USBE);
    18f8:	52 d0       	rcall	.+164    	; 0x199e <USB_INT_ClearAllInterrupts>
    18fa:	c8 ed       	ldi	r28, 0xD8	; 216
    18fc:	d0 e0       	ldi	r29, 0x00	; 0
    18fe:	88 81       	ld	r24, Y
    1900:	8f 77       	andi	r24, 0x7F	; 127
				USBCON |=  (1 << USBE);
    1902:	88 83       	st	Y, r24
    1904:	88 81       	ld	r24, Y
    1906:	80 68       	ori	r24, 0x80	; 128
			}

			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Unfreeze(void)
			{
				USBCON &= ~(1 << FRZCLK);
    1908:	88 83       	st	Y, r24
    190a:	88 81       	ld	r24, Y
    190c:	8f 7d       	andi	r24, 0xDF	; 223
			}

			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_Off(void)
			{
				PLLCSR = 0;
    190e:	88 83       	st	Y, r24
}

#if defined(USB_CAN_BE_DEVICE)
static void USB_Init_Device(void)
{
	USB_DeviceState                 = DEVICE_STATE_Unattached;
    1910:	19 bc       	out	0x29, r1	; 41
    1912:	10 92 ef 08 	sts	0x08EF, r1	; 0x8008ef <USB_DeviceState>
	USB_Device_ConfigurationNumber  = 0;
    1916:	10 92 eb 08 	sts	0x08EB, r1	; 0x8008eb <USB_Device_ConfigurationNumber>

	#if !defined(NO_DEVICE_REMOTE_WAKEUP)
	USB_Device_RemoteWakeupEnabled  = false;
    191a:	10 92 ed 08 	sts	0x08ED, r1	; 0x8008ed <USB_Device_RemoteWakeupEnabled>
	#endif

	#if !defined(NO_DEVICE_SELF_POWER)
	USB_Device_CurrentlySelfPowered = false;
    191e:	10 92 ec 08 	sts	0x08EC, r1	; 0x8008ec <USB_Device_CurrentlySelfPowered>
			}

			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_SetFullSpeed(void)
			{
				UDCON &= ~(1 << LSM);
    1922:	00 ee       	ldi	r16, 0xE0	; 224
    1924:	10 e0       	ldi	r17, 0x00	; 0
    1926:	f8 01       	movw	r30, r16
    1928:	80 81       	ld	r24, Z
    192a:	8b 7f       	andi	r24, 0xFB	; 251
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						USBCON |= (1 << VBUSTE);
    192c:	80 83       	st	Z, r24
    192e:	88 81       	ld	r24, Y
    1930:	81 60       	ori	r24, 0x01	; 1
				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);

				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
				  return false;

				return Endpoint_ConfigureEndpoint_Prv(Number,
    1932:	88 83       	st	Y, r24
    1934:	42 e0       	ldi	r20, 0x02	; 2
    1936:	60 e0       	ldi	r22, 0x00	; 0
    1938:	80 e0       	ldi	r24, 0x00	; 0
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
    193a:	15 df       	rcall	.-470    	; 0x1766 <Endpoint_ConfigureEndpoint_Prv>
    193c:	e1 ee       	ldi	r30, 0xE1	; 225
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	80 81       	ld	r24, Z
    1942:	8e 7f       	andi	r24, 0xFE	; 254
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  |= (1 << SUSPE);
    1944:	80 83       	st	Z, r24
    1946:	e2 ee       	ldi	r30, 0xE2	; 226
    1948:	f0 e0       	ldi	r31, 0x00	; 0
    194a:	80 81       	ld	r24, Z
    194c:	81 60       	ori	r24, 0x01	; 1
						break;
					case USB_INT_EORSTI:
						UDIEN  |= (1 << EORSTE);
    194e:	80 83       	st	Z, r24
    1950:	80 81       	ld	r24, Z
    1952:	88 60       	ori	r24, 0x08	; 8
			 *  register and despite the datasheet making no mention of its requirement in host mode.
			 */
			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
			static inline void USB_Attach(void)
			{
				UDCON  &= ~(1 << DETACH);
    1954:	80 83       	st	Z, r24
    1956:	f8 01       	movw	r30, r16
    1958:	80 81       	ld	r24, Z
    195a:	8e 7f       	andi	r24, 0xFE	; 254

			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_OTGPAD_On(void)
			{
				USBCON |=  (1 << OTGPADE);
    195c:	80 83       	st	Z, r24
    195e:	88 81       	ld	r24, Y
    1960:	80 61       	ori	r24, 0x10	; 16
	}

	#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
	USB_OTGPAD_On();
	#endif
}
    1962:	88 83       	st	Y, r24
    1964:	df 91       	pop	r29
    1966:	cf 91       	pop	r28
    1968:	1f 91       	pop	r17
    196a:	0f 91       	pop	r16
    196c:	08 95       	ret

0000196e <USB_Init>:
			}

			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_OTGPAD_Off(void)
			{
				USBCON &= ~(1 << OTGPADE);
    196e:	e8 ed       	ldi	r30, 0xD8	; 216
    1970:	f0 e0       	ldi	r31, 0x00	; 0
    1972:	80 81       	ld	r24, Z
    1974:	8f 7e       	andi	r24, 0xEF	; 239
    1976:	80 83       	st	Z, r24

			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_REG_On(void)
			{
			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
				UHWCON |=  (1 << UVREGE);
    1978:	e7 ed       	ldi	r30, 0xD7	; 215
    197a:	f0 e0       	ldi	r31, 0x00	; 0
    197c:	80 81       	ld	r24, Z
    197e:	81 60       	ori	r24, 0x01	; 1
    1980:	80 83       	st	Z, r24
	  USB_REG_Off();

	if (!(USB_Options & USB_OPT_MANUAL_PLL))
	{
		#if defined(USB_SERIES_4_AVR)
		PLLFRQ = (1 << PDIV2);
    1982:	84 e0       	ldi	r24, 0x04	; 4
    1984:	82 bf       	out	0x32, r24	; 50
		UHWCON &= ~(1 << UIDE);
		USB_CurrentMode = Mode;
	}
	#endif

	USB_IsInitialized = true;
    1986:	81 e0       	ldi	r24, 0x01	; 1
    1988:	80 93 ee 08 	sts	0x08EE, r24	; 0x8008ee <USB_IsInitialized>
    198c:	b0 cf       	rjmp	.-160    	; 0x18ee <USB_ResetInterface>

0000198e <USB_INT_DisableAllInterrupts>:
void USB_INT_DisableAllInterrupts(void)
{
	#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	USBCON &= ~((1 << VBUSTE) | (1 << IDTE));
	#elif defined(USB_SERIES_4_AVR)
	USBCON &= ~(1 << VBUSTE);
    198e:	e8 ed       	ldi	r30, 0xD8	; 216
    1990:	f0 e0       	ldi	r31, 0x00	; 0
    1992:	80 81       	ld	r24, Z
    1994:	8e 7f       	andi	r24, 0xFE	; 254
    1996:	80 83       	st	Z, r24
	#if defined(USB_CAN_BE_HOST)
	UHIEN   = 0;
	#endif

	#if defined(USB_CAN_BE_DEVICE)
	UDIEN   = 0;
    1998:	10 92 e2 00 	sts	0x00E2, r1	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    199c:	08 95       	ret

0000199e <USB_INT_ClearAllInterrupts>:
}

void USB_INT_ClearAllInterrupts(void)
{
	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	USBINT = 0;
    199e:	10 92 da 00 	sts	0x00DA, r1	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
	#if defined(USB_CAN_BE_HOST)
	UHINT  = 0;
	#endif

	#if defined(USB_CAN_BE_DEVICE)
	UDINT  = 0;
    19a2:	10 92 e1 00 	sts	0x00E1, r1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    19a6:	08 95       	ret

000019a8 <__vector_10>:
	#endif
}

ISR(USB_GEN_vect, ISR_BLOCK)
{
    19a8:	1f 92       	push	r1
    19aa:	0f 92       	push	r0
    19ac:	0f b6       	in	r0, 0x3f	; 63
    19ae:	0f 92       	push	r0
    19b0:	11 24       	eor	r1, r1
    19b2:	2f 93       	push	r18
    19b4:	3f 93       	push	r19
    19b6:	4f 93       	push	r20
    19b8:	5f 93       	push	r21
    19ba:	6f 93       	push	r22
    19bc:	7f 93       	push	r23
    19be:	8f 93       	push	r24
    19c0:	9f 93       	push	r25
    19c2:	af 93       	push	r26
    19c4:	bf 93       	push	r27
    19c6:	ef 93       	push	r30
    19c8:	ff 93       	push	r31
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
					case USB_INT_EORSTI:
						return (UDINT  & (1 << EORSTI));
					case USB_INT_SOFI:
						return (UDINT  & (1 << SOFI));
    19ca:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
	#if defined(USB_CAN_BE_DEVICE)
	#if !defined(NO_SOF_EVENTS)
	if (USB_INT_HasOccurred(USB_INT_SOFI) && USB_INT_IsEnabled(USB_INT_SOFI))
    19ce:	82 ff       	sbrs	r24, 2
    19d0:	0a c0       	rjmp	.+20     	; 0x19e6 <__vector_10+0x3e>
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
					case USB_INT_EORSTI:
						return (UDIEN  & (1 << EORSTE));
					case USB_INT_SOFI:
						return (UDIEN  & (1 << SOFE));
    19d2:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    19d6:	82 ff       	sbrs	r24, 2
    19d8:	06 c0       	rjmp	.+12     	; 0x19e6 <__vector_10+0x3e>
						break;
					case USB_INT_EORSTI:
						UDINT  &= ~(1 << EORSTI);
						break;
					case USB_INT_SOFI:
						UDINT  &= ~(1 << SOFI);
    19da:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    19de:	8b 7f       	andi	r24, 0xFB	; 251
    19e0:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						return (USBINT & (1 << VBUSTI));
    19e4:	54 d2       	rcall	.+1192   	; 0x1e8e <USB_Event_Stub>
    19e6:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
		EVENT_USB_Device_StartOfFrame();
	}
	#endif

	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
	if (USB_INT_HasOccurred(USB_INT_VBUSTI) && USB_INT_IsEnabled(USB_INT_VBUSTI))
    19ea:	80 ff       	sbrs	r24, 0
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						return (USBCON & (1 << VBUSTE));
    19ec:	1f c0       	rjmp	.+62     	; 0x1a2c <__vector_10+0x84>
    19ee:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    19f2:	80 ff       	sbrs	r24, 0
			{
				switch (Interrupt)
				{
					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
					case USB_INT_VBUSTI:
						USBINT &= ~(1 << VBUSTI);
    19f4:	1b c0       	rjmp	.+54     	; 0x1a2c <__vector_10+0x84>
    19f6:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
    19fa:	8e 7f       	andi	r24, 0xFE	; 254
    19fc:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <__TEXT_REGION_LENGTH__+0x7e00da>
				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false otherwise.
				 */
				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
				static inline bool USB_VBUS_GetStatus(void)
				{
					return ((USBSTA & (1 << VBUS)) ? true : false);
    1a00:	80 91 d9 00 	lds	r24, 0x00D9	; 0x8000d9 <__TEXT_REGION_LENGTH__+0x7e00d9>
	{
		USB_INT_Clear(USB_INT_VBUSTI);

		if (USB_VBUS_GetStatus())
    1a04:	80 ff       	sbrs	r24, 0

		/* Inline Functions: */
			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_On(void)
			{
				PLLCSR = USB_PLL_PSC;
    1a06:	0d c0       	rjmp	.+26     	; 0x1a22 <__vector_10+0x7a>
    1a08:	80 e1       	ldi	r24, 0x10	; 16
				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
    1a0a:	89 bd       	out	0x29, r24	; 41
    1a0c:	82 e1       	ldi	r24, 0x12	; 18
		{
			if (!(USB_Options & USB_OPT_MANUAL_PLL))
			{
				USB_PLL_On();
				while (!(USB_PLL_IsReady()));
    1a0e:	89 bd       	out	0x29, r24	; 41
    1a10:	09 b4       	in	r0, 0x29	; 41
    1a12:	00 fe       	sbrs	r0, 0
			}

			USB_DeviceState = DEVICE_STATE_Powered;
    1a14:	fd cf       	rjmp	.-6      	; 0x1a10 <__vector_10+0x68>
    1a16:	81 e0       	ldi	r24, 0x01	; 1
    1a18:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <USB_DeviceState>
			EVENT_USB_Device_Connect();
    1a1c:	0e 94 55 03 	call	0x6aa	; 0x6aa <EVENT_USB_Device_Connect>
			}

			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_Off(void)
			{
				PLLCSR = 0;
    1a20:	05 c0       	rjmp	.+10     	; 0x1a2c <__vector_10+0x84>
		else
		{
			if (!(USB_Options & USB_OPT_MANUAL_PLL))
			  USB_PLL_Off();

			USB_DeviceState = DEVICE_STATE_Unattached;
    1a22:	19 bc       	out	0x29, r1	; 41
    1a24:	10 92 ef 08 	sts	0x08EF, r1	; 0x8008ef <USB_DeviceState>
			EVENT_USB_Device_Disconnect();
    1a28:	0e 94 56 03 	call	0x6ac	; 0x6ac <EVENT_USB_Device_Disconnect>
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
    1a2c:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
		}
	}
	#endif

	if (USB_INT_HasOccurred(USB_INT_SUSPI) && USB_INT_IsEnabled(USB_INT_SUSPI))
    1a30:	80 ff       	sbrs	r24, 0
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
    1a32:	18 c0       	rjmp	.+48     	; 0x1a64 <__vector_10+0xbc>
    1a34:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1a38:	80 ff       	sbrs	r24, 0
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  &= ~(1 << SUSPE);
    1a3a:	14 c0       	rjmp	.+40     	; 0x1a64 <__vector_10+0xbc>
    1a3c:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1a40:	8e 7f       	andi	r24, 0xFE	; 254
    1a42:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
						USBCON |= (1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
    1a46:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1a4a:	80 61       	ori	r24, 0x10	; 16
    1a4c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
			#endif

			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Freeze(void)
			{
				USBCON |=  (1 << FRZCLK);
    1a50:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    1a54:	80 62       	ori	r24, 0x20	; 32
    1a56:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>

		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
		USB_DeviceState = DEVICE_STATE_Unattached;
		EVENT_USB_Device_Disconnect();
		#else
		USB_DeviceState = DEVICE_STATE_Suspended;
    1a5a:	19 bc       	out	0x29, r1	; 41
    1a5c:	85 e0       	ldi	r24, 0x05	; 5
		EVENT_USB_Device_Suspend();
    1a5e:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <USB_DeviceState>
					case USB_INT_IDTI:
						return (USBINT & (1 << IDTI));
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
    1a62:	15 d2       	rcall	.+1066   	; 0x1e8e <USB_Event_Stub>
    1a64:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
		#endif
	}

	if (USB_INT_HasOccurred(USB_INT_WAKEUPI) && USB_INT_IsEnabled(USB_INT_WAKEUPI))
    1a68:	84 ff       	sbrs	r24, 4
					case USB_INT_IDTI:
						return (USBCON & (1 << IDTE));
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
    1a6a:	2f c0       	rjmp	.+94     	; 0x1aca <__vector_10+0x122>
    1a6c:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1a70:	84 ff       	sbrs	r24, 4

		/* Inline Functions: */
			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
			static inline void USB_PLL_On(void)
			{
				PLLCSR = USB_PLL_PSC;
    1a72:	2b c0       	rjmp	.+86     	; 0x1aca <__vector_10+0x122>
    1a74:	80 e1       	ldi	r24, 0x10	; 16
				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
    1a76:	89 bd       	out	0x29, r24	; 41
    1a78:	82 e1       	ldi	r24, 0x12	; 18
	{
		if (!(USB_Options & USB_OPT_MANUAL_PLL))
		{
			USB_PLL_On();
			while (!(USB_PLL_IsReady()));
    1a7a:	89 bd       	out	0x29, r24	; 41
    1a7c:	09 b4       	in	r0, 0x29	; 41
    1a7e:	00 fe       	sbrs	r0, 0
			}

			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
			static inline void USB_CLK_Unfreeze(void)
			{
				USBCON &= ~(1 << FRZCLK);
    1a80:	fd cf       	rjmp	.-6      	; 0x1a7c <__vector_10+0xd4>
    1a82:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
    1a86:	8f 7d       	andi	r24, 0xDF	; 223
    1a88:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
						USBINT &= ~(1 << IDTI);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
    1a8c:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    1a90:	8f 7e       	andi	r24, 0xEF	; 239
    1a92:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
						USBCON &= ~(1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
    1a96:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1a9a:	8f 7e       	andi	r24, 0xEF	; 239
    1a9c:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  |= (1 << SUSPE);
    1aa0:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1aa4:	81 60       	ori	r24, 0x01	; 1
    1aa6:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
		USB_INT_Clear(USB_INT_WAKEUPI);

		USB_INT_Disable(USB_INT_WAKEUPI);
		USB_INT_Enable(USB_INT_SUSPI);

		if (USB_Device_ConfigurationNumber)
    1aaa:	80 91 eb 08 	lds	r24, 0x08EB	; 0x8008eb <USB_Device_ConfigurationNumber>
    1aae:	88 23       	and	r24, r24
		  USB_DeviceState = DEVICE_STATE_Configured;
    1ab0:	11 f0       	breq	.+4      	; 0x1ab6 <__vector_10+0x10e>
    1ab2:	84 e0       	ldi	r24, 0x04	; 4
			}

			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline bool USB_Device_IsAddressSet(void)
			{
				return (UDADDR & (1 << ADDEN));
    1ab4:	07 c0       	rjmp	.+14     	; 0x1ac4 <__vector_10+0x11c>
    1ab6:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
		else
		  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Addressed : DEVICE_STATE_Powered;
    1aba:	87 fd       	sbrc	r24, 7
    1abc:	02 c0       	rjmp	.+4      	; 0x1ac2 <__vector_10+0x11a>
    1abe:	81 e0       	ldi	r24, 0x01	; 1
    1ac0:	01 c0       	rjmp	.+2      	; 0x1ac4 <__vector_10+0x11c>

		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
		EVENT_USB_Device_Connect();
		#else
		EVENT_USB_Device_WakeUp();
    1ac2:	83 e0       	ldi	r24, 0x03	; 3
    1ac4:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <USB_DeviceState>
					case USB_INT_WAKEUPI:
						return (UDINT  & (1 << WAKEUPI));
					case USB_INT_SUSPI:
						return (UDINT  & (1 << SUSPI));
					case USB_INT_EORSTI:
						return (UDINT  & (1 << EORSTI));
    1ac8:	e2 d1       	rcall	.+964    	; 0x1e8e <USB_Event_Stub>
		#endif
	}

	if (USB_INT_HasOccurred(USB_INT_EORSTI) && USB_INT_IsEnabled(USB_INT_EORSTI))
    1aca:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
					case USB_INT_WAKEUPI:
						return (UDIEN  & (1 << WAKEUPE));
					case USB_INT_SUSPI:
						return (UDIEN  & (1 << SUSPE));
					case USB_INT_EORSTI:
						return (UDIEN  & (1 << EORSTE));
    1ace:	83 ff       	sbrs	r24, 3
    1ad0:	27 c0       	rjmp	.+78     	; 0x1b20 <__vector_10+0x178>
    1ad2:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
						break;
					case USB_INT_EORSTI:
						UDINT  &= ~(1 << EORSTI);
    1ad6:	83 ff       	sbrs	r24, 3
    1ad8:	23 c0       	rjmp	.+70     	; 0x1b20 <__vector_10+0x178>
    1ada:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    1ade:	87 7f       	andi	r24, 0xF7	; 247
	{
		USB_INT_Clear(USB_INT_EORSTI);

		USB_DeviceState                = DEVICE_STATE_Default;
    1ae0:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    1ae4:	82 e0       	ldi	r24, 0x02	; 2
		USB_Device_ConfigurationNumber = 0;
    1ae6:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <USB_DeviceState>
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDINT  &= ~(1 << WAKEUPI);
						break;
					case USB_INT_SUSPI:
						UDINT  &= ~(1 << SUSPI);
    1aea:	10 92 eb 08 	sts	0x08EB, r1	; 0x8008eb <USB_Device_ConfigurationNumber>
    1aee:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    1af2:	8e 7f       	andi	r24, 0xFE	; 254
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  &= ~(1 << WAKEUPE);
						break;
					case USB_INT_SUSPI:
						UDIEN  &= ~(1 << SUSPE);
    1af4:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7e00e1>
    1af8:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1afc:	8e 7f       	andi	r24, 0xFE	; 254
						USBCON |= (1 << IDTE);
						break;
					#endif
					#if defined(USB_CAN_BE_DEVICE)
					case USB_INT_WAKEUPI:
						UDIEN  |= (1 << WAKEUPE);
    1afe:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1b02:	80 91 e2 00 	lds	r24, 0x00E2	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);

				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
				  return false;

				return Endpoint_ConfigureEndpoint_Prv(Number,
    1b06:	80 61       	ori	r24, 0x10	; 16
    1b08:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
    1b0c:	42 e0       	ldi	r20, 0x02	; 2
						break;
					case USB_INT_SOFI:
						UDIEN  |= (1 << SOFE);
						break;
					case USB_INT_RXSTPI:
						UEIENX |= (1 << RXSTPE);
    1b0e:	60 e0       	ldi	r22, 0x00	; 0
    1b10:	80 e0       	ldi	r24, 0x00	; 0
    1b12:	29 de       	rcall	.-942    	; 0x1766 <Endpoint_ConfigureEndpoint_Prv>
    1b14:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>

		#if defined(INTERRUPT_CONTROL_ENDPOINT)
		USB_INT_Enable(USB_INT_RXSTPI);
		#endif

		EVENT_USB_Device_Reset();
    1b18:	88 60       	ori	r24, 0x08	; 8
		USB_ResetInterface();

		EVENT_USB_UIDChange();
	}
	#endif
}
    1b1a:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1b1e:	b7 d1       	rcall	.+878    	; 0x1e8e <USB_Event_Stub>
    1b20:	ff 91       	pop	r31
    1b22:	ef 91       	pop	r30
    1b24:	bf 91       	pop	r27
    1b26:	af 91       	pop	r26
    1b28:	9f 91       	pop	r25
    1b2a:	8f 91       	pop	r24
    1b2c:	7f 91       	pop	r23
    1b2e:	6f 91       	pop	r22
    1b30:	5f 91       	pop	r21
    1b32:	4f 91       	pop	r20
    1b34:	3f 91       	pop	r19
    1b36:	2f 91       	pop	r18
    1b38:	0f 90       	pop	r0
    1b3a:	0f be       	out	0x3f, r0	; 63
    1b3c:	0f 90       	pop	r0
    1b3e:	1f 90       	pop	r1
    1b40:	18 95       	reti

00001b42 <__vector_11>:
    1b42:	1f 92       	push	r1
    1b44:	0f 92       	push	r0
    1b46:	0f b6       	in	r0, 0x3f	; 63
    1b48:	0f 92       	push	r0
    1b4a:	11 24       	eor	r1, r1
    1b4c:	2f 93       	push	r18
    1b4e:	3f 93       	push	r19
    1b50:	4f 93       	push	r20
    1b52:	5f 93       	push	r21
    1b54:	6f 93       	push	r22
    1b56:	7f 93       	push	r23
    1b58:	8f 93       	push	r24
    1b5a:	9f 93       	push	r25
    1b5c:	af 93       	push	r26
    1b5e:	bf 93       	push	r27
    1b60:	cf 93       	push	r28
    1b62:	df 93       	push	r29
    1b64:	ef 93       	push	r30
    1b66:	ff 93       	push	r31
    1b68:	c0 91 e9 00 	lds	r28, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1b6c:	cf 70       	andi	r28, 0x0F	; 15
    1b6e:	80 91 ec 00 	lds	r24, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1b72:	d8 2f       	mov	r29, r24
    1b74:	d1 70       	andi	r29, 0x01	; 1
    1b76:	80 fd       	sbrc	r24, 0
    1b78:	d0 e8       	ldi	r29, 0x80	; 128
    1b7a:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1b7e:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1b82:	87 7f       	andi	r24, 0xF7	; 247
    1b84:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1b88:	78 94       	sei
    1b8a:	1e d0       	rcall	.+60     	; 0x1bc8 <USB_Device_ProcessControlRequest>
    1b8c:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1b90:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1b94:	88 60       	ori	r24, 0x08	; 8
    1b96:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
    1b9a:	cd 2b       	or	r28, r29
    1b9c:	cf 70       	andi	r28, 0x0F	; 15
    1b9e:	c0 93 e9 00 	sts	0x00E9, r28	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1ba2:	ff 91       	pop	r31
    1ba4:	ef 91       	pop	r30
    1ba6:	df 91       	pop	r29
    1ba8:	cf 91       	pop	r28
    1baa:	bf 91       	pop	r27
    1bac:	af 91       	pop	r26
    1bae:	9f 91       	pop	r25
    1bb0:	8f 91       	pop	r24
    1bb2:	7f 91       	pop	r23
    1bb4:	6f 91       	pop	r22
    1bb6:	5f 91       	pop	r21
    1bb8:	4f 91       	pop	r20
    1bba:	3f 91       	pop	r19
    1bbc:	2f 91       	pop	r18
    1bbe:	0f 90       	pop	r0
    1bc0:	0f be       	out	0x3f, r0	; 63
    1bc2:	0f 90       	pop	r0
    1bc4:	1f 90       	pop	r1
    1bc6:	18 95       	reti

00001bc8 <USB_Device_ProcessControlRequest>:
#if !defined(NO_DEVICE_REMOTE_WAKEUP)
bool    USB_Device_RemoteWakeupEnabled;
#endif

void USB_Device_ProcessControlRequest(void)
{
    1bc8:	1f 93       	push	r17
    1bca:	cf 93       	push	r28
    1bcc:	df 93       	push	r29
    1bce:	cd b7       	in	r28, 0x3d	; 61
    1bd0:	de b7       	in	r29, 0x3e	; 62
    1bd2:	aa 97       	sbiw	r28, 0x2a	; 42
    1bd4:	0f b6       	in	r0, 0x3f	; 63
    1bd6:	f8 94       	cli
    1bd8:	de bf       	out	0x3e, r29	; 62
    1bda:	0f be       	out	0x3f, r0	; 63
    1bdc:	cd bf       	out	0x3d, r28	; 61
    1bde:	e0 ef       	ldi	r30, 0xF0	; 240
    1be0:	f8 e0       	ldi	r31, 0x08	; 8
			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
			 */
			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_Read_8(void)
			{
				return UEDATX;
    1be2:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
	#else
	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;

	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeaderByte++)
	  *(RequestHeader++) = Endpoint_Read_8();
    1be6:	81 93       	st	Z+, r24
	USB_ControlRequest.wIndex        = Endpoint_Read_16_LE();
	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
	#else
	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;

	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeaderByte++)
    1be8:	28 e0       	ldi	r18, 0x08	; 8
    1bea:	e8 3f       	cpi	r30, 0xF8	; 248
    1bec:	f2 07       	cpc	r31, r18
    1bee:	c9 f7       	brne	.-14     	; 0x1be2 <USB_Device_ProcessControlRequest+0x1a>
	  *(RequestHeader++) = Endpoint_Read_8();
	#endif

	EVENT_USB_Device_ControlRequest();
    1bf0:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <EVENT_USB_Device_ControlRequest>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    1bf4:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	if (Endpoint_IsSETUPReceived())
    1bf8:	83 ff       	sbrs	r24, 3
    1bfa:	31 c1       	rjmp	.+610    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
	{
		uint8_t bmRequestType = USB_ControlRequest.bmRequestType;
    1bfc:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <USB_ControlRequest>

		switch (USB_ControlRequest.bRequest)
    1c00:	90 91 f1 08 	lds	r25, 0x08F1	; 0x8008f1 <USB_ControlRequest+0x1>
    1c04:	95 30       	cpi	r25, 0x05	; 5
    1c06:	09 f4       	brne	.+2      	; 0x1c0a <USB_Device_ProcessControlRequest+0x42>
    1c08:	83 c0       	rjmp	.+262    	; 0x1d10 <USB_Device_ProcessControlRequest+0x148>
    1c0a:	30 f4       	brcc	.+12     	; 0x1c18 <USB_Device_ProcessControlRequest+0x50>
    1c0c:	91 30       	cpi	r25, 0x01	; 1
    1c0e:	a9 f1       	breq	.+106    	; 0x1c7a <USB_Device_ProcessControlRequest+0xb2>
    1c10:	68 f0       	brcs	.+26     	; 0x1c2c <USB_Device_ProcessControlRequest+0x64>
    1c12:	93 30       	cpi	r25, 0x03	; 3
    1c14:	91 f1       	breq	.+100    	; 0x1c7a <USB_Device_ProcessControlRequest+0xb2>
    1c16:	23 c1       	rjmp	.+582    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1c18:	98 30       	cpi	r25, 0x08	; 8
    1c1a:	09 f4       	brne	.+2      	; 0x1c1e <USB_Device_ProcessControlRequest+0x56>
    1c1c:	ef c0       	rjmp	.+478    	; 0x1dfc <USB_Device_ProcessControlRequest+0x234>
    1c1e:	99 30       	cpi	r25, 0x09	; 9
    1c20:	09 f4       	brne	.+2      	; 0x1c24 <USB_Device_ProcessControlRequest+0x5c>
    1c22:	fb c0       	rjmp	.+502    	; 0x1e1a <USB_Device_ProcessControlRequest+0x252>
    1c24:	96 30       	cpi	r25, 0x06	; 6
    1c26:	09 f0       	breq	.+2      	; 0x1c2a <USB_Device_ProcessControlRequest+0x62>
    1c28:	1a c1       	rjmp	.+564    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1c2a:	94 c0       	rjmp	.+296    	; 0x1d54 <USB_Device_ProcessControlRequest+0x18c>
		{
			case REQ_GetStatus:
				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    1c2c:	80 38       	cpi	r24, 0x80	; 128
    1c2e:	21 f0       	breq	.+8      	; 0x1c38 <USB_Device_ProcessControlRequest+0x70>
    1c30:	82 38       	cpi	r24, 0x82	; 130
    1c32:	09 f0       	breq	.+2      	; 0x1c36 <USB_Device_ProcessControlRequest+0x6e>
    1c34:	14 c1       	rjmp	.+552    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1c36:	08 c0       	rjmp	.+16     	; 0x1c48 <USB_Device_ProcessControlRequest+0x80>
	Endpoint_ClearOUT();
}

static void USB_Device_GetStatus(void)
{
	uint8_t CurrentStatus = 0;
    1c38:	80 91 ec 08 	lds	r24, 0x08EC	; 0x8008ec <USB_Device_CurrentlySelfPowered>
			if (USB_Device_CurrentlySelfPowered)
			  CurrentStatus |= FEATURE_SELFPOWERED_ENABLED;
			#endif

			#if !defined(NO_DEVICE_REMOTE_WAKEUP)
			if (USB_Device_RemoteWakeupEnabled)
    1c3c:	90 91 ed 08 	lds	r25, 0x08ED	; 0x8008ed <USB_Device_RemoteWakeupEnabled>
    1c40:	99 23       	and	r25, r25
    1c42:	89 f0       	breq	.+34     	; 0x1c66 <USB_Device_ProcessControlRequest+0x9e>
			  CurrentStatus |= FEATURE_REMOTE_WAKEUP_ENABLED;
    1c44:	82 60       	ori	r24, 0x02	; 2
    1c46:	0f c0       	rjmp	.+30     	; 0x1c66 <USB_Device_ProcessControlRequest+0x9e>
			break;
		}
		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT):
		{
			#if !defined(CONTROL_ONLY_DEVICE)
			uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
    1c48:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <USB_ControlRequest+0x4>
    1c4c:	8f 70       	andi	r24, 0x0F	; 15

			if (EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
    1c4e:	87 30       	cpi	r24, 0x07	; 7
    1c50:	08 f0       	brcs	.+2      	; 0x1c54 <USB_Device_ProcessControlRequest+0x8c>
    1c52:	05 c1       	rjmp	.+522    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    1c54:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
			 */
			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsStalled(void)
			{
				return ((UECONX & (1 << STALLRQ)) ? true : false);
    1c58:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
				return;

			Endpoint_SelectEndpoint(EndpointIndex);

			CurrentStatus = Endpoint_IsStalled();
    1c5c:	85 fb       	bst	r24, 5
    1c5e:	88 27       	eor	r24, r24
    1c60:	80 f9       	bld	r24, 0
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    1c62:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    1c66:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1c6a:	97 7f       	andi	r25, 0xF7	; 247
    1c6c:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_16_LE(const uint16_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_16_LE(const uint16_t Data)
			{
				UEDATX = (Data & 0xFF);
    1c70:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 8);
    1c74:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    1c78:	cc c0       	rjmp	.+408    	; 0x1e12 <USB_Device_ProcessControlRequest+0x24a>
				}

				break;
			case REQ_ClearFeature:
			case REQ_SetFeature:
				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    1c7a:	28 2f       	mov	r18, r24
    1c7c:	2d 7f       	andi	r18, 0xFD	; 253
    1c7e:	09 f0       	breq	.+2      	; 0x1c82 <USB_Device_ProcessControlRequest+0xba>
    1c80:	ee c0       	rjmp	.+476    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
	Endpoint_ClearStatusStage();
}

static void USB_Device_ClearSetFeature(void)
{
	switch (USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT)
    1c82:	88 23       	and	r24, r24
    1c84:	19 f0       	breq	.+6      	; 0x1c8c <USB_Device_ProcessControlRequest+0xc4>
    1c86:	82 30       	cpi	r24, 0x02	; 2
    1c88:	61 f0       	breq	.+24     	; 0x1ca2 <USB_Device_ProcessControlRequest+0xda>
    1c8a:	e9 c0       	rjmp	.+466    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
	{
		#if !defined(NO_DEVICE_REMOTE_WAKEUP)
		case REQREC_DEVICE:
		{
			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_DeviceRemoteWakeup)
    1c8c:	80 91 f2 08 	lds	r24, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
    1c90:	81 30       	cpi	r24, 0x01	; 1
    1c92:	09 f0       	breq	.+2      	; 0x1c96 <USB_Device_ProcessControlRequest+0xce>
    1c94:	e4 c0       	rjmp	.+456    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
			  USB_Device_RemoteWakeupEnabled = (USB_ControlRequest.bRequest == REQ_SetFeature);
    1c96:	93 30       	cpi	r25, 0x03	; 3
    1c98:	09 f0       	breq	.+2      	; 0x1c9c <USB_Device_ProcessControlRequest+0xd4>
    1c9a:	80 e0       	ldi	r24, 0x00	; 0
    1c9c:	80 93 ed 08 	sts	0x08ED, r24	; 0x8008ed <USB_Device_RemoteWakeupEnabled>
    1ca0:	2e c0       	rjmp	.+92     	; 0x1cfe <USB_Device_ProcessControlRequest+0x136>
		}
		#endif
		#if !defined(CONTROL_ONLY_DEVICE)
		case REQREC_ENDPOINT:
		{
			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_EndpointHalt)
    1ca2:	80 91 f2 08 	lds	r24, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
    1ca6:	81 11       	cpse	r24, r1
    1ca8:	2a c0       	rjmp	.+84     	; 0x1cfe <USB_Device_ProcessControlRequest+0x136>
			{
				uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
    1caa:	80 91 f4 08 	lds	r24, 0x08F4	; 0x8008f4 <USB_ControlRequest+0x4>
    1cae:	8f 70       	andi	r24, 0x0F	; 15

				if (EndpointIndex == ENDPOINT_CONTROLEP || EndpointIndex >= ENDPOINT_TOTAL_ENDPOINTS)
    1cb0:	2f ef       	ldi	r18, 0xFF	; 255
    1cb2:	28 0f       	add	r18, r24
    1cb4:	26 30       	cpi	r18, 0x06	; 6
    1cb6:	08 f0       	brcs	.+2      	; 0x1cba <USB_Device_ProcessControlRequest+0xf2>
    1cb8:	d2 c0       	rjmp	.+420    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    1cba:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
			 */
			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsEnabled(void)
			{
				return ((UECONX & (1 << EPEN)) ? true : false);
    1cbe:	20 91 eb 00 	lds	r18, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
				  return;

				Endpoint_SelectEndpoint(EndpointIndex);

				if (Endpoint_IsEnabled())
    1cc2:	20 ff       	sbrs	r18, 0
    1cc4:	1c c0       	rjmp	.+56     	; 0x1cfe <USB_Device_ProcessControlRequest+0x136>
				{
					if (USB_ControlRequest.bRequest == REQ_SetFeature)
    1cc6:	93 30       	cpi	r25, 0x03	; 3
    1cc8:	21 f4       	brne	.+8      	; 0x1cd2 <USB_Device_ProcessControlRequest+0x10a>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_StallTransaction(void)
			{
				UECONX |= (1 << STALLRQ);
    1cca:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    1cce:	80 62       	ori	r24, 0x20	; 32
    1cd0:	14 c0       	rjmp	.+40     	; 0x1cfa <USB_Device_ProcessControlRequest+0x132>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearStall(void)
			{
				UECONX |= (1 << STALLRQC);
    1cd2:	90 91 eb 00 	lds	r25, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    1cd6:	90 61       	ori	r25, 0x10	; 16
    1cd8:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
			 */
			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
			{
				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
    1cdc:	21 e0       	ldi	r18, 0x01	; 1
    1cde:	30 e0       	ldi	r19, 0x00	; 0
    1ce0:	a9 01       	movw	r20, r18
    1ce2:	02 c0       	rjmp	.+4      	; 0x1ce8 <USB_Device_ProcessControlRequest+0x120>
    1ce4:	44 0f       	add	r20, r20
    1ce6:	55 1f       	adc	r21, r21
    1ce8:	8a 95       	dec	r24
    1cea:	e2 f7       	brpl	.-8      	; 0x1ce4 <USB_Device_ProcessControlRequest+0x11c>
    1cec:	40 93 ea 00 	sts	0x00EA, r20	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>
				UERST = 0;
    1cf0:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <__TEXT_REGION_LENGTH__+0x7e00ea>

			/** Resets the data toggle of the currently selected endpoint. */
			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ResetDataToggle(void)
			{
				UECONX |= (1 << RSTDT);
    1cf4:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    1cf8:	88 60       	ori	r24, 0x08	; 8
    1cfa:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    1cfe:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    1d02:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1d06:	87 7f       	andi	r24, 0xF7	; 247
    1d08:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);

	Endpoint_ClearSETUP();

	Endpoint_ClearStatusStage();
    1d0c:	9e dd       	rcall	.-1220   	; 0x184a <Endpoint_ClearStatusStage>
					USB_Device_ClearSetFeature();
				}

				break;
			case REQ_SetAddress:
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
    1d0e:	a7 c0       	rjmp	.+334    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1d10:	81 11       	cpse	r24, r1
	}
}

static void USB_Device_SetAddress(void)
{
	uint8_t DeviceAddress = (USB_ControlRequest.wValue & 0x7F);
    1d12:	a5 c0       	rjmp	.+330    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1d14:	10 91 f2 08 	lds	r17, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
			#endif

			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
			{
				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
    1d18:	1f 77       	andi	r17, 0x7F	; 127
    1d1a:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    1d1e:	80 78       	andi	r24, 0x80	; 128
    1d20:	81 2b       	or	r24, r17
    1d22:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    1d26:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1d2a:	87 7f       	andi	r24, 0xF7	; 247

	USB_Device_SetDeviceAddress(DeviceAddress);

	Endpoint_ClearSETUP();

	Endpoint_ClearStatusStage();
    1d2c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    1d30:	8c dd       	rcall	.-1256   	; 0x184a <Endpoint_ClearStatusStage>
    1d32:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	while (!(Endpoint_IsINReady()));
    1d36:	80 ff       	sbrs	r24, 0
			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
			{
				(void)Address;

				UDADDR |= (1 << ADDEN);
    1d38:	fc cf       	rjmp	.-8      	; 0x1d32 <USB_Device_ProcessControlRequest+0x16a>
    1d3a:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
    1d3e:	80 68       	ori	r24, 0x80	; 128
    1d40:	80 93 e3 00 	sts	0x00E3, r24	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>

	USB_Device_EnableDeviceAddress(DeviceAddress);

	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
    1d44:	11 11       	cpse	r17, r1
    1d46:	02 c0       	rjmp	.+4      	; 0x1d4c <USB_Device_ProcessControlRequest+0x184>
    1d48:	82 e0       	ldi	r24, 0x02	; 2
    1d4a:	01 c0       	rjmp	.+2      	; 0x1d4e <USB_Device_ProcessControlRequest+0x186>
    1d4c:	83 e0       	ldi	r24, 0x03	; 3
    1d4e:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <USB_DeviceState>
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
				  USB_Device_SetAddress();

				break;
			case REQ_GetDescriptor:
				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
    1d52:	85 c0       	rjmp	.+266    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1d54:	80 58       	subi	r24, 0x80	; 128
    1d56:	82 30       	cpi	r24, 0x02	; 2
    1d58:	08 f0       	brcs	.+2      	; 0x1d5c <USB_Device_ProcessControlRequest+0x194>
	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIPTORS))
	uint8_t DescriptorAddressSpace;
	#endif

	#if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
    1d5a:	81 c0       	rjmp	.+258    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1d5c:	80 91 f2 08 	lds	r24, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
    1d60:	90 91 f3 08 	lds	r25, 0x08F3	; 0x8008f3 <USB_ControlRequest+0x3>
    1d64:	8c 3d       	cpi	r24, 0xDC	; 220
    1d66:	53 e0       	ldi	r21, 0x03	; 3
    1d68:	95 07       	cpc	r25, r21
	{
		USB_Descriptor_Header_t Header;
		uint16_t                UnicodeString[INTERNAL_SERIAL_LENGTH_BITS / 4];
	} SignatureDescriptor;

	SignatureDescriptor.Header.Type = DTYPE_String;
    1d6a:	71 f5       	brne	.+92     	; 0x1dc8 <USB_Device_ProcessControlRequest+0x200>
    1d6c:	83 e0       	ldi	r24, 0x03	; 3
	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
    1d6e:	8a 83       	std	Y+2, r24	; 0x02
    1d70:	8a e2       	ldi	r24, 0x2A	; 42
			static inline uint_reg_t GetGlobalInterruptMask(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				return SREG;
    1d72:	89 83       	std	Y+1, r24	; 0x01
			static inline void GlobalInterruptDisable(void)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				cli();
    1d74:	4f b7       	in	r20, 0x3f	; 63
				__builtin_ssrf(AVR32_SR_GM_OFFSET);
				#elif (ARCH == ARCH_XMEGA)
				cli();
				#endif

				GCC_MEMORY_BARRIER();
    1d76:	f8 94       	cli
    1d78:	de 01       	movw	r26, r28
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
    1d7a:	13 96       	adiw	r26, 0x03	; 3
			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString)
			{
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
    1d7c:	20 e0       	ldi	r18, 0x00	; 0

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
				{
					uint8_t SerialByte = boot_signature_byte_get(SigReadAddress);
    1d7e:	3e e0       	ldi	r19, 0x0E	; 14
    1d80:	51 e2       	ldi	r21, 0x21	; 33
    1d82:	e3 2f       	mov	r30, r19
    1d84:	f0 e0       	ldi	r31, 0x00	; 0
    1d86:	50 93 57 00 	sts	0x0057, r21	; 0x800057 <__TEXT_REGION_LENGTH__+0x7e0057>

					if (SerialCharNum & 0x01)
    1d8a:	e4 91       	lpm	r30, Z
    1d8c:	20 ff       	sbrs	r18, 0
					{
						SerialByte >>= 4;
    1d8e:	03 c0       	rjmp	.+6      	; 0x1d96 <USB_Device_ProcessControlRequest+0x1ce>
    1d90:	e2 95       	swap	r30
						SigReadAddress++;
    1d92:	ef 70       	andi	r30, 0x0F	; 15
					}

					SerialByte &= 0x0F;
    1d94:	3f 5f       	subi	r19, 0xFF	; 255
    1d96:	ef 70       	andi	r30, 0x0F	; 15
    1d98:	8e 2f       	mov	r24, r30

					UnicodeString[SerialCharNum] = cpu_to_le16((SerialByte >= 10) ?
    1d9a:	90 e0       	ldi	r25, 0x00	; 0
    1d9c:	ea 30       	cpi	r30, 0x0A	; 10
    1d9e:	10 f0       	brcs	.+4      	; 0x1da4 <USB_Device_ProcessControlRequest+0x1dc>
    1da0:	c7 96       	adiw	r24, 0x37	; 55
    1da2:	01 c0       	rjmp	.+2      	; 0x1da6 <USB_Device_ProcessControlRequest+0x1de>
    1da4:	c0 96       	adiw	r24, 0x30	; 48
    1da6:	8d 93       	st	X+, r24
				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
				GlobalInterruptDisable();

				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;

				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNum++)
    1da8:	9d 93       	st	X+, r25
    1daa:	2f 5f       	subi	r18, 0xFF	; 255
    1dac:	24 31       	cpi	r18, 0x14	; 20
			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
			{
				GCC_MEMORY_BARRIER();

				#if (ARCH == ARCH_AVR8)
				SREG = GlobalIntState;
    1dae:	49 f7       	brne	.-46     	; 0x1d82 <USB_Device_ProcessControlRequest+0x1ba>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    1db0:	4f bf       	out	0x3f, r20	; 63
    1db2:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1db6:	87 7f       	andi	r24, 0xF7	; 247
    1db8:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

	USB_Device_GetSerialString(SignatureDescriptor.UnicodeString);

	Endpoint_ClearSETUP();

	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
    1dbc:	6a e2       	ldi	r22, 0x2A	; 42
    1dbe:	70 e0       	ldi	r23, 0x00	; 0
    1dc0:	ce 01       	movw	r24, r28
    1dc2:	01 96       	adiw	r24, 0x01	; 1
    1dc4:	11 dc       	rcall	.-2014   	; 0x15e8 <Endpoint_Write_Control_Stream_LE>
		USB_Device_GetInternalSerialDescriptor();
		return;
	}
	#endif

	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIndex,
    1dc6:	14 c0       	rjmp	.+40     	; 0x1df0 <USB_Device_ProcessControlRequest+0x228>
    1dc8:	60 91 f4 08 	lds	r22, 0x08F4	; 0x8008f4 <USB_ControlRequest+0x4>
    1dcc:	70 91 f5 08 	lds	r23, 0x08F5	; 0x8008f5 <USB_ControlRequest+0x5>
    1dd0:	ae 01       	movw	r20, r28
    1dd2:	4f 5f       	subi	r20, 0xFF	; 255
    1dd4:	5f 4f       	sbci	r21, 0xFF	; 255
    1dd6:	8f db       	rcall	.-2274   	; 0x14f6 <CALLBACK_USB_GetDescriptor>
    1dd8:	bc 01       	movw	r22, r24
    1dda:	89 2b       	or	r24, r25
    1ddc:	09 f4       	brne	.+2      	; 0x1de0 <USB_Device_ProcessControlRequest+0x218>
    1dde:	3f c0       	rjmp	.+126    	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1de0:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1de4:	97 7f       	andi	r25, 0xF7	; 247
	#if defined(USE_RAM_DESCRIPTORS) || !defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
	Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
	#elif defined(USE_EEPROM_DESCRIPTORS)
	Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
	#elif defined(USE_FLASH_DESCRIPTORS)
	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
    1de6:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1dea:	89 81       	ldd	r24, Y+1	; 0x01
    1dec:	9a 81       	ldd	r25, Y+2	; 0x02
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    1dee:	5a dc       	rcall	.-1868   	; 0x16a4 <Endpoint_Write_Control_PStream_LE>
    1df0:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1df4:	8b 77       	andi	r24, 0x7B	; 123
    1df6:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
					USB_Device_GetDescriptor();
				}

				break;
			case REQ_GetConfiguration:
				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
    1dfa:	31 c0       	rjmp	.+98     	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1dfc:	80 38       	cpi	r24, 0x80	; 128
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    1dfe:	79 f5       	brne	.+94     	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1e00:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1e04:	87 7f       	andi	r24, 0xF7	; 247
    1e06:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

static void USB_Device_GetConfiguration(void)
{
	Endpoint_ClearSETUP();

	Endpoint_Write_8(USB_Device_ConfigurationNumber);
    1e0a:	80 91 eb 08 	lds	r24, 0x08EB	; 0x8008eb <USB_Device_ConfigurationNumber>
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    1e0e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    1e12:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1e16:	8e 77       	andi	r24, 0x7E	; 126
				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
				  USB_Device_GetConfiguration();

				break;
			case REQ_SetConfiguration:
				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
    1e18:	77 cf       	rjmp	.-274    	; 0x1d08 <USB_Device_ProcessControlRequest+0x140>
    1e1a:	81 11       	cpse	r24, r1
}

static void USB_Device_SetConfiguration(void)
{
	#if defined(FIXED_NUM_CONFIGURATIONS)
	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
    1e1c:	20 c0       	rjmp	.+64     	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1e1e:	80 91 f2 08 	lds	r24, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
    1e22:	90 91 f3 08 	lds	r25, 0x08F3	; 0x8008f3 <USB_ControlRequest+0x3>
    1e26:	99 27       	eor	r25, r25
    1e28:	02 97       	sbiw	r24, 0x02	; 2
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    1e2a:	cc f4       	brge	.+50     	; 0x1e5e <USB_Device_ProcessControlRequest+0x296>
    1e2c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1e30:	87 7f       	andi	r24, 0xF7	; 247
	#endif
	#endif

	Endpoint_ClearSETUP();

	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
    1e32:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1e36:	80 91 f2 08 	lds	r24, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>

	Endpoint_ClearStatusStage();
    1e3a:	80 93 eb 08 	sts	0x08EB, r24	; 0x8008eb <USB_Device_ConfigurationNumber>

	if (USB_Device_ConfigurationNumber)
    1e3e:	05 dd       	rcall	.-1526   	; 0x184a <Endpoint_ClearStatusStage>
    1e40:	80 91 eb 08 	lds	r24, 0x08EB	; 0x8008eb <USB_Device_ConfigurationNumber>
    1e44:	81 11       	cpse	r24, r1
			}

			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
			static inline bool USB_Device_IsAddressSet(void)
			{
				return (UDADDR & (1 << ADDEN));
    1e46:	06 c0       	rjmp	.+12     	; 0x1e54 <USB_Device_ProcessControlRequest+0x28c>
    1e48:	80 91 e3 00 	lds	r24, 0x00E3	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
	  USB_DeviceState = DEVICE_STATE_Configured;
	else
	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
    1e4c:	87 fd       	sbrc	r24, 7
    1e4e:	02 c0       	rjmp	.+4      	; 0x1e54 <USB_Device_ProcessControlRequest+0x28c>
    1e50:	81 e0       	ldi	r24, 0x01	; 1
    1e52:	01 c0       	rjmp	.+2      	; 0x1e56 <USB_Device_ProcessControlRequest+0x28e>
    1e54:	84 e0       	ldi	r24, 0x04	; 4
    1e56:	80 93 ef 08 	sts	0x08EF, r24	; 0x8008ef <USB_DeviceState>

	EVENT_USB_Device_ConfigurationChanged();
    1e5a:	0e 94 57 03 	call	0x6ae	; 0x6ae <EVENT_USB_Device_ConfigurationChanged>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    1e5e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			default:
				break;
		}
	}

	if (Endpoint_IsSETUPReceived())
    1e62:	83 ff       	sbrs	r24, 3
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    1e64:	0a c0       	rjmp	.+20     	; 0x1e7a <USB_Device_ProcessControlRequest+0x2b2>
    1e66:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1e6a:	87 7f       	andi	r24, 0xF7	; 247
    1e6c:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \ingroup Group_EndpointPacketManagement_AVR8
			 */
			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_StallTransaction(void)
			{
				UECONX |= (1 << STALLRQ);
    1e70:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
    1e74:	80 62       	ori	r24, 0x20	; 32
    1e76:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
	{
		Endpoint_ClearSETUP();
		Endpoint_StallTransaction();
	}
}
    1e7a:	aa 96       	adiw	r28, 0x2a	; 42
    1e7c:	0f b6       	in	r0, 0x3f	; 63
    1e7e:	f8 94       	cli
    1e80:	de bf       	out	0x3e, r29	; 62
    1e82:	0f be       	out	0x3f, r0	; 63
    1e84:	cd bf       	out	0x3d, r28	; 61
    1e86:	df 91       	pop	r29
    1e88:	cf 91       	pop	r28
    1e8a:	1f 91       	pop	r17
    1e8c:	08 95       	ret

00001e8e <USB_Event_Stub>:
#define  __INCLUDE_FROM_EVENTS_C
#define  __INCLUDE_FROM_USB_DRIVER
#include "Events.h"

void USB_Event_Stub(void)
{
    1e8e:	08 95       	ret

00001e90 <USB_USBTask>:
#if defined(USB_CAN_BE_DEVICE) && !defined(DEVICE_STATE_AS_GPIOR)
volatile uint8_t     USB_DeviceState;
#endif

void USB_USBTask(void)
{
    1e90:	cf 93       	push	r28
}

#if defined(USB_CAN_BE_DEVICE)
static void USB_DeviceTask(void)
{
	if (USB_DeviceState == DEVICE_STATE_Unattached)
    1e92:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>
    1e96:	88 23       	and	r24, r24
    1e98:	99 f0       	breq	.+38     	; 0x1ec0 <USB_USBTask+0x30>
			 */
			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
    1e9a:	c0 91 e9 00 	lds	r28, 0x00E9	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1e9e:	cf 70       	andi	r28, 0x0F	; 15
			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
			 */
			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetEndpointDirection(void)
			{
				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
    1ea0:	90 91 ec 00 	lds	r25, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
    1ea4:	89 2f       	mov	r24, r25
    1ea6:	81 70       	andi	r24, 0x01	; 1
    1ea8:	90 fd       	sbrc	r25, 0
    1eaa:	80 e8       	ldi	r24, 0x80	; 128
			 */
			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
    1eac:	c8 2b       	or	r28, r24
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    1eae:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    1eb2:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	uint8_t PrevEndpoint = Endpoint_GetCurrentEndpoint();

	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);

	if (Endpoint_IsSETUPReceived())
	  USB_Device_ProcessControlRequest();
    1eb6:	83 fd       	sbrc	r24, 3
			 */
			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UENUM = (Address & ENDPOINT_EPNUM_MASK);
    1eb8:	87 de       	rcall	.-754    	; 0x1bc8 <USB_Device_ProcessControlRequest>
    1eba:	cf 70       	andi	r28, 0x0F	; 15
    1ebc:	c0 93 e9 00 	sts	0x00E9, r28	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
	#elif defined(USB_CAN_BE_HOST)
		USB_HostTask();
	#elif defined(USB_CAN_BE_DEVICE)
		USB_DeviceTask();
	#endif
}
    1ec0:	cf 91       	pop	r28
    1ec2:	08 95       	ret

00001ec4 <CDC_Device_ConfigureEndpoints>:

void CDC_Device_CreateBlockingStream(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo,
                                     FILE* const Stream)
{
	*Stream = (FILE)FDEV_SETUP_STREAM(CDC_Device_putchar, CDC_Device_getchar_Blocking, _FDEV_SETUP_RW);
	fdev_set_udata(Stream, CDCInterfaceInfo);
    1ec4:	cf 93       	push	r28
    1ec6:	df 93       	push	r29
    1ec8:	ec 01       	movw	r28, r24
    1eca:	fc 01       	movw	r30, r24
    1ecc:	70 96       	adiw	r30, 0x10	; 16
    1ece:	8b e0       	ldi	r24, 0x0B	; 11
    1ed0:	df 01       	movw	r26, r30
    1ed2:	1d 92       	st	X+, r1
    1ed4:	8a 95       	dec	r24
    1ed6:	e9 f7       	brne	.-6      	; 0x1ed2 <CDC_Device_ConfigureEndpoints+0xe>
    1ed8:	82 e0       	ldi	r24, 0x02	; 2
    1eda:	8c 83       	std	Y+4, r24	; 0x04
    1edc:	89 87       	std	Y+9, r24	; 0x09
    1ede:	83 e0       	ldi	r24, 0x03	; 3
    1ee0:	8e 87       	std	Y+14, r24	; 0x0e
    1ee2:	61 e0       	ldi	r22, 0x01	; 1
    1ee4:	ce 01       	movw	r24, r28
    1ee6:	01 96       	adiw	r24, 0x01	; 1
    1ee8:	73 dc       	rcall	.-1818   	; 0x17d0 <Endpoint_ConfigureEndpointTable>
    1eea:	88 23       	and	r24, r24
    1eec:	61 f0       	breq	.+24     	; 0x1f06 <CDC_Device_ConfigureEndpoints+0x42>
    1eee:	61 e0       	ldi	r22, 0x01	; 1
    1ef0:	ce 01       	movw	r24, r28
    1ef2:	06 96       	adiw	r24, 0x06	; 6
    1ef4:	6d dc       	rcall	.-1830   	; 0x17d0 <Endpoint_ConfigureEndpointTable>
    1ef6:	88 23       	and	r24, r24
    1ef8:	31 f0       	breq	.+12     	; 0x1f06 <CDC_Device_ConfigureEndpoints+0x42>
    1efa:	61 e0       	ldi	r22, 0x01	; 1
    1efc:	ce 01       	movw	r24, r28
    1efe:	0b 96       	adiw	r24, 0x0b	; 11
    1f00:	df 91       	pop	r29
    1f02:	cf 91       	pop	r28
    1f04:	65 cc       	rjmp	.-1846   	; 0x17d0 <Endpoint_ConfigureEndpointTable>
    1f06:	80 e0       	ldi	r24, 0x00	; 0
    1f08:	df 91       	pop	r29
    1f0a:	cf 91       	pop	r28
    1f0c:	08 95       	ret

00001f0e <CDC_Device_SendString>:
    1f0e:	db 01       	movw	r26, r22
    1f10:	20 91 ef 08 	lds	r18, 0x08EF	; 0x8008ef <USB_DeviceState>
    1f14:	24 30       	cpi	r18, 0x04	; 4
    1f16:	c9 f4       	brne	.+50     	; 0x1f4a <CDC_Device_SendString+0x3c>
    1f18:	fc 01       	movw	r30, r24
    1f1a:	44 89       	ldd	r20, Z+20	; 0x14
    1f1c:	55 89       	ldd	r21, Z+21	; 0x15
    1f1e:	66 89       	ldd	r22, Z+22	; 0x16
    1f20:	77 89       	ldd	r23, Z+23	; 0x17
    1f22:	45 2b       	or	r20, r21
    1f24:	46 2b       	or	r20, r22
    1f26:	47 2b       	or	r20, r23
    1f28:	81 f0       	breq	.+32     	; 0x1f4a <CDC_Device_SendString+0x3c>
    1f2a:	81 81       	ldd	r24, Z+1	; 0x01
    1f2c:	8f 70       	andi	r24, 0x0F	; 15
    1f2e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1f32:	fd 01       	movw	r30, r26
    1f34:	01 90       	ld	r0, Z+
    1f36:	00 20       	and	r0, r0
    1f38:	e9 f7       	brne	.-6      	; 0x1f34 <CDC_Device_SendString+0x26>
    1f3a:	31 97       	sbiw	r30, 0x01	; 1
    1f3c:	bf 01       	movw	r22, r30
    1f3e:	6a 1b       	sub	r22, r26
    1f40:	7b 0b       	sbc	r23, r27
    1f42:	40 e0       	ldi	r20, 0x00	; 0
    1f44:	50 e0       	ldi	r21, 0x00	; 0
    1f46:	cd 01       	movw	r24, r26
    1f48:	06 cb       	rjmp	.-2548   	; 0x1556 <Endpoint_Write_Stream_LE>
    1f4a:	82 e0       	ldi	r24, 0x02	; 2
    1f4c:	08 95       	ret

00001f4e <CDC_Device_SendByte>:
    1f4e:	0f 93       	push	r16
    1f50:	1f 93       	push	r17
    1f52:	cf 93       	push	r28
    1f54:	20 91 ef 08 	lds	r18, 0x08EF	; 0x8008ef <USB_DeviceState>
    1f58:	24 30       	cpi	r18, 0x04	; 4
    1f5a:	f9 f4       	brne	.+62     	; 0x1f9a <CDC_Device_SendByte+0x4c>
    1f5c:	fc 01       	movw	r30, r24
    1f5e:	04 89       	ldd	r16, Z+20	; 0x14
    1f60:	15 89       	ldd	r17, Z+21	; 0x15
    1f62:	26 89       	ldd	r18, Z+22	; 0x16
    1f64:	37 89       	ldd	r19, Z+23	; 0x17
    1f66:	01 2b       	or	r16, r17
    1f68:	02 2b       	or	r16, r18
    1f6a:	03 2b       	or	r16, r19
    1f6c:	b1 f0       	breq	.+44     	; 0x1f9a <CDC_Device_SendByte+0x4c>
    1f6e:	c6 2f       	mov	r28, r22
    1f70:	81 81       	ldd	r24, Z+1	; 0x01
    1f72:	8f 70       	andi	r24, 0x0F	; 15
    1f74:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1f78:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1f7c:	85 ff       	sbrs	r24, 5
    1f7e:	04 c0       	rjmp	.+8      	; 0x1f88 <CDC_Device_SendByte+0x3a>
    1f80:	c0 93 f1 00 	sts	0x00F1, r28	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    1f84:	80 e0       	ldi	r24, 0x00	; 0
    1f86:	0a c0       	rjmp	.+20     	; 0x1f9c <CDC_Device_SendByte+0x4e>
    1f88:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1f8c:	8e 77       	andi	r24, 0x7E	; 126
    1f8e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1f92:	7a dc       	rcall	.-1804   	; 0x1888 <Endpoint_WaitUntilReady>
    1f94:	88 23       	and	r24, r24
    1f96:	a1 f3       	breq	.-24     	; 0x1f80 <CDC_Device_SendByte+0x32>
    1f98:	01 c0       	rjmp	.+2      	; 0x1f9c <CDC_Device_SendByte+0x4e>
    1f9a:	82 e0       	ldi	r24, 0x02	; 2
    1f9c:	cf 91       	pop	r28
    1f9e:	1f 91       	pop	r17
    1fa0:	0f 91       	pop	r16
    1fa2:	08 95       	ret

00001fa4 <CDC_Device_putchar>:
    1fa4:	fb 01       	movw	r30, r22
    1fa6:	68 2f       	mov	r22, r24
    1fa8:	84 85       	ldd	r24, Z+12	; 0x0c
    1faa:	95 85       	ldd	r25, Z+13	; 0x0d
    1fac:	d0 df       	rcall	.-96     	; 0x1f4e <CDC_Device_SendByte>
    1fae:	21 e0       	ldi	r18, 0x01	; 1
    1fb0:	30 e0       	ldi	r19, 0x00	; 0
    1fb2:	81 11       	cpse	r24, r1
    1fb4:	02 c0       	rjmp	.+4      	; 0x1fba <CDC_Device_putchar+0x16>
    1fb6:	20 e0       	ldi	r18, 0x00	; 0
    1fb8:	30 e0       	ldi	r19, 0x00	; 0
    1fba:	88 27       	eor	r24, r24
    1fbc:	99 27       	eor	r25, r25
    1fbe:	82 1b       	sub	r24, r18
    1fc0:	93 0b       	sbc	r25, r19
    1fc2:	08 95       	ret

00001fc4 <CDC_Device_Flush>:
    1fc4:	20 91 ef 08 	lds	r18, 0x08EF	; 0x8008ef <USB_DeviceState>
    1fc8:	24 30       	cpi	r18, 0x04	; 4
    1fca:	41 f5       	brne	.+80     	; 0x201c <CDC_Device_Flush+0x58>
    1fcc:	fc 01       	movw	r30, r24
    1fce:	44 89       	ldd	r20, Z+20	; 0x14
    1fd0:	55 89       	ldd	r21, Z+21	; 0x15
    1fd2:	66 89       	ldd	r22, Z+22	; 0x16
    1fd4:	77 89       	ldd	r23, Z+23	; 0x17
    1fd6:	45 2b       	or	r20, r21
    1fd8:	46 2b       	or	r20, r22
    1fda:	47 2b       	or	r20, r23
    1fdc:	f9 f0       	breq	.+62     	; 0x201c <CDC_Device_Flush+0x58>
    1fde:	81 81       	ldd	r24, Z+1	; 0x01
    1fe0:	8f 70       	andi	r24, 0x0F	; 15
    1fe2:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    1fe6:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    1fea:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    1fee:	90 e0       	ldi	r25, 0x00	; 0
    1ff0:	92 2b       	or	r25, r18
    1ff2:	89 2b       	or	r24, r25
    1ff4:	89 f0       	breq	.+34     	; 0x2018 <CDC_Device_Flush+0x54>
    1ff6:	90 91 e8 00 	lds	r25, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1ffa:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    1ffe:	8e 77       	andi	r24, 0x7E	; 126
    2000:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2004:	95 fd       	sbrc	r25, 5
    2006:	08 c0       	rjmp	.+16     	; 0x2018 <CDC_Device_Flush+0x54>
    2008:	3f dc       	rcall	.-1922   	; 0x1888 <Endpoint_WaitUntilReady>
    200a:	81 11       	cpse	r24, r1
    200c:	08 c0       	rjmp	.+16     	; 0x201e <CDC_Device_Flush+0x5a>
    200e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2012:	8e 77       	andi	r24, 0x7E	; 126
    2014:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2018:	80 e0       	ldi	r24, 0x00	; 0
    201a:	08 95       	ret
    201c:	82 e0       	ldi	r24, 0x02	; 2
    201e:	08 95       	ret

00002020 <CDC_Device_USBTask>:
    2020:	20 91 ef 08 	lds	r18, 0x08EF	; 0x8008ef <USB_DeviceState>
    2024:	24 30       	cpi	r18, 0x04	; 4
    2026:	89 f4       	brne	.+34     	; 0x204a <CDC_Device_USBTask+0x2a>
    2028:	fc 01       	movw	r30, r24
    202a:	44 89       	ldd	r20, Z+20	; 0x14
    202c:	55 89       	ldd	r21, Z+21	; 0x15
    202e:	66 89       	ldd	r22, Z+22	; 0x16
    2030:	77 89       	ldd	r23, Z+23	; 0x17
    2032:	45 2b       	or	r20, r21
    2034:	46 2b       	or	r20, r22
    2036:	47 2b       	or	r20, r23
    2038:	41 f0       	breq	.+16     	; 0x204a <CDC_Device_USBTask+0x2a>
    203a:	21 81       	ldd	r18, Z+1	; 0x01
    203c:	2f 70       	andi	r18, 0x0F	; 15
    203e:	20 93 e9 00 	sts	0x00E9, r18	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2042:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2046:	20 fd       	sbrc	r18, 0
    2048:	bd cf       	rjmp	.-134    	; 0x1fc4 <CDC_Device_Flush>
    204a:	08 95       	ret

0000204c <CDC_Device_ReceiveByte>:
    204c:	20 91 ef 08 	lds	r18, 0x08EF	; 0x8008ef <USB_DeviceState>
    2050:	24 30       	cpi	r18, 0x04	; 4
    2052:	19 f0       	breq	.+6      	; 0x205a <CDC_Device_ReceiveByte+0xe>
    2054:	8f ef       	ldi	r24, 0xFF	; 255
    2056:	9f ef       	ldi	r25, 0xFF	; 255
    2058:	08 95       	ret
    205a:	fc 01       	movw	r30, r24
    205c:	44 89       	ldd	r20, Z+20	; 0x14
    205e:	55 89       	ldd	r21, Z+21	; 0x15
    2060:	66 89       	ldd	r22, Z+22	; 0x16
    2062:	77 89       	ldd	r23, Z+23	; 0x17
    2064:	45 2b       	or	r20, r21
    2066:	46 2b       	or	r20, r22
    2068:	47 2b       	or	r20, r23
    206a:	a1 f3       	breq	.-24     	; 0x2054 <CDC_Device_ReceiveByte+0x8>
    206c:	86 81       	ldd	r24, Z+6	; 0x06
    206e:	8f 70       	andi	r24, 0x0F	; 15
    2070:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
    2074:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2078:	82 ff       	sbrs	r24, 2
    207a:	ec cf       	rjmp	.-40     	; 0x2054 <CDC_Device_ReceiveByte+0x8>
    207c:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    2080:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	92 2b       	or	r25, r18
    2088:	89 2b       	or	r24, r25
    208a:	21 f0       	breq	.+8      	; 0x2094 <CDC_Device_ReceiveByte+0x48>
    208c:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    2090:	30 e0       	ldi	r19, 0x00	; 0
    2092:	02 c0       	rjmp	.+4      	; 0x2098 <CDC_Device_ReceiveByte+0x4c>
    2094:	2f ef       	ldi	r18, 0xFF	; 255
    2096:	3f ef       	ldi	r19, 0xFF	; 255
    2098:	40 91 f3 00 	lds	r20, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7e00f3>
    209c:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7e00f2>
    20a0:	90 e0       	ldi	r25, 0x00	; 0
    20a2:	94 2b       	or	r25, r20
    20a4:	89 2b       	or	r24, r25
    20a6:	29 f4       	brne	.+10     	; 0x20b2 <CDC_Device_ReceiveByte+0x66>
    20a8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    20ac:	8b 77       	andi	r24, 0x7B	; 123
    20ae:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    20b2:	c9 01       	movw	r24, r18
    20b4:	08 95       	ret

000020b6 <CDC_Device_getchar>:
    20b6:	fc 01       	movw	r30, r24
    20b8:	84 85       	ldd	r24, Z+12	; 0x0c
    20ba:	95 85       	ldd	r25, Z+13	; 0x0d
    20bc:	c7 df       	rcall	.-114    	; 0x204c <CDC_Device_ReceiveByte>
    20be:	97 ff       	sbrs	r25, 7
    20c0:	02 c0       	rjmp	.+4      	; 0x20c6 <CDC_Device_getchar+0x10>
    20c2:	8e ef       	ldi	r24, 0xFE	; 254
    20c4:	9f ef       	ldi	r25, 0xFF	; 255
    20c6:	08 95       	ret

000020c8 <CDC_Device_CreateStream>:
    20c8:	fb 01       	movw	r30, r22
    20ca:	2e e0       	ldi	r18, 0x0E	; 14
    20cc:	db 01       	movw	r26, r22
    20ce:	1d 92       	st	X+, r1
    20d0:	2a 95       	dec	r18
    20d2:	e9 f7       	brne	.-6      	; 0x20ce <CDC_Device_CreateStream+0x6>
    20d4:	23 e0       	ldi	r18, 0x03	; 3
    20d6:	23 83       	std	Z+3, r18	; 0x03
    20d8:	22 ed       	ldi	r18, 0xD2	; 210
    20da:	3f e0       	ldi	r19, 0x0F	; 15
    20dc:	31 87       	std	Z+9, r19	; 0x09
    20de:	20 87       	std	Z+8, r18	; 0x08
    20e0:	2b e5       	ldi	r18, 0x5B	; 91
    20e2:	30 e1       	ldi	r19, 0x10	; 16
    20e4:	33 87       	std	Z+11, r19	; 0x0b
    20e6:	22 87       	std	Z+10, r18	; 0x0a
    20e8:	95 87       	std	Z+13, r25	; 0x0d
    20ea:	84 87       	std	Z+12, r24	; 0x0c
    20ec:	08 95       	ret

000020ee <CDC_Device_Event_Stub>:
	return ReceivedByte;
}
#endif

void CDC_Device_Event_Stub(void)
{
    20ee:	08 95       	ret

000020f0 <CDC_Device_ProcessControlRequest>:
#define  __INCLUDE_FROM_CDC_DRIVER
#define  __INCLUDE_FROM_CDC_DEVICE_C
#include "CDCClassDevice.h"

void CDC_Device_ProcessControlRequest(USB_ClassInfo_CDC_Device_t* const CDCInterfaceInfo)
{
    20f0:	cf 93       	push	r28
    20f2:	df 93       	push	r29
    20f4:	ec 01       	movw	r28, r24
			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsSETUPReceived(void)
			{
				return ((UEINTX & (1 << RXSTPI)) ? true : false);
    20f6:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
	if (!(Endpoint_IsSETUPReceived()))
    20fa:	83 ff       	sbrs	r24, 3
    20fc:	a7 c0       	rjmp	.+334    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
	  return;

	if (USB_ControlRequest.wIndex != CDCInterfaceInfo->Config.ControlInterfaceNumber)
    20fe:	88 81       	ld	r24, Y
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	20 91 f4 08 	lds	r18, 0x08F4	; 0x8008f4 <USB_ControlRequest+0x4>
    2106:	30 91 f5 08 	lds	r19, 0x08F5	; 0x8008f5 <USB_ControlRequest+0x5>
    210a:	28 17       	cp	r18, r24
    210c:	39 07       	cpc	r19, r25
    210e:	09 f0       	breq	.+2      	; 0x2112 <CDC_Device_ProcessControlRequest+0x22>
    2110:	9d c0       	rjmp	.+314    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
	  return;

	switch (USB_ControlRequest.bRequest)
    2112:	80 91 f1 08 	lds	r24, 0x08F1	; 0x8008f1 <USB_ControlRequest+0x1>
    2116:	81 32       	cpi	r24, 0x21	; 33
    2118:	61 f0       	breq	.+24     	; 0x2132 <CDC_Device_ProcessControlRequest+0x42>
    211a:	20 f4       	brcc	.+8      	; 0x2124 <CDC_Device_ProcessControlRequest+0x34>
    211c:	80 32       	cpi	r24, 0x20	; 32
    211e:	09 f4       	brne	.+2      	; 0x2122 <CDC_Device_ProcessControlRequest+0x32>
    2120:	3e c0       	rjmp	.+124    	; 0x219e <CDC_Device_ProcessControlRequest+0xae>
    2122:	94 c0       	rjmp	.+296    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
    2124:	82 32       	cpi	r24, 0x22	; 34
    2126:	09 f4       	brne	.+2      	; 0x212a <CDC_Device_ProcessControlRequest+0x3a>
    2128:	6c c0       	rjmp	.+216    	; 0x2202 <CDC_Device_ProcessControlRequest+0x112>
    212a:	83 32       	cpi	r24, 0x23	; 35
    212c:	09 f4       	brne	.+2      	; 0x2130 <CDC_Device_ProcessControlRequest+0x40>
    212e:	7e c0       	rjmp	.+252    	; 0x222c <CDC_Device_ProcessControlRequest+0x13c>
    2130:	8d c0       	rjmp	.+282    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
	{
		case CDC_REQ_GetLineEncoding:
			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE))
    2132:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <USB_ControlRequest>
    2136:	81 3a       	cpi	r24, 0xA1	; 161
    2138:	09 f0       	breq	.+2      	; 0x213c <CDC_Device_ProcessControlRequest+0x4c>
    213a:	88 c0       	rjmp	.+272    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    213c:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2140:	87 7f       	andi	r24, 0xF7	; 247
    2142:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsINReady(void)
			{
				return ((UEINTX & (1 << TXINI)) ? true : false);
    2146:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();

				while (!(Endpoint_IsINReady()));
    214a:	80 ff       	sbrs	r24, 0
    214c:	fc cf       	rjmp	.-8      	; 0x2146 <CDC_Device_ProcessControlRequest+0x56>

				Endpoint_Write_32_LE(CDCInterfaceInfo->State.LineEncoding.BaudRateBPS);
    214e:	8c 89       	ldd	r24, Y+20	; 0x14
    2150:	9d 89       	ldd	r25, Y+21	; 0x15
    2152:	ae 89       	ldd	r26, Y+22	; 0x16
    2154:	bf 89       	ldd	r27, Y+23	; 0x17
			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_32_LE(const uint32_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_32_LE(const uint32_t Data)
			{
				UEDATX = (Data &  0xFF);
    2156:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 8);
    215a:	49 2f       	mov	r20, r25
    215c:	5a 2f       	mov	r21, r26
    215e:	6b 2f       	mov	r22, r27
    2160:	77 27       	eor	r23, r23
    2162:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 16);
    2166:	ad 01       	movw	r20, r26
    2168:	66 27       	eor	r22, r22
    216a:	77 27       	eor	r23, r23
    216c:	40 93 f1 00 	sts	0x00F1, r20	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				UEDATX = (Data >> 24);
    2170:	8b 2f       	mov	r24, r27
    2172:	99 27       	eor	r25, r25
    2174:	aa 27       	eor	r26, r26
    2176:	bb 27       	eor	r27, r27
    2178:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
    217c:	88 8d       	ldd	r24, Y+24	; 0x18
			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
			 */
			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_Write_8(const uint8_t Data)
			{
				UEDATX = Data;
    217e:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
    2182:	89 8d       	ldd	r24, Y+25	; 0x19
    2184:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);
    2188:	8a 8d       	ldd	r24, Y+26	; 0x1a
    218a:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearIN(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
    218e:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    2192:	8e 77       	andi	r24, 0x7E	; 126
    2194:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2198:	df 91       	pop	r29
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.CharFormat);
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.ParityType);
				Endpoint_Write_8(CDCInterfaceInfo->State.LineEncoding.DataBits);

				Endpoint_ClearIN();
				Endpoint_ClearStatusStage();
    219a:	cf 91       	pop	r28
			}

			break;
		case CDC_REQ_SetLineEncoding:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    219c:	56 cb       	rjmp	.-2388   	; 0x184a <Endpoint_ClearStatusStage>
    219e:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <USB_ControlRequest>
    21a2:	81 32       	cpi	r24, 0x21	; 33
    21a4:	09 f0       	breq	.+2      	; 0x21a8 <CDC_Device_ProcessControlRequest+0xb8>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    21a6:	52 c0       	rjmp	.+164    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
    21a8:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21ac:	87 7f       	andi	r24, 0xF7	; 247
    21ae:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwise.
			 */
			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline bool Endpoint_IsOUTReceived(void)
			{
				return ((UEINTX & (1 << RXOUTI)) ? true : false);
    21b2:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();

				while (!(Endpoint_IsOUTReceived()))
    21b6:	82 fd       	sbrc	r24, 2
				{
					if (USB_DeviceState == DEVICE_STATE_Unattached)
    21b8:	05 c0       	rjmp	.+10     	; 0x21c4 <CDC_Device_ProcessControlRequest+0xd4>
    21ba:	80 91 ef 08 	lds	r24, 0x08EF	; 0x8008ef <USB_DeviceState>
    21be:	81 11       	cpse	r24, r1
    21c0:	f8 cf       	rjmp	.-16     	; 0x21b2 <CDC_Device_ProcessControlRequest+0xc2>
				{
					uint32_t Value;
					uint8_t  Bytes[4];
				} Data;

				Data.Bytes[0] = UEDATX;
    21c2:	44 c0       	rjmp	.+136    	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
    21c4:	30 91 f1 00 	lds	r19, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[1] = UEDATX;
    21c8:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[2] = UEDATX;
    21cc:	90 91 f1 00 	lds	r25, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
				Data.Bytes[3] = UEDATX;
    21d0:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
					  return;
				}

				CDCInterfaceInfo->State.LineEncoding.BaudRateBPS = Endpoint_Read_32_LE();
    21d4:	3c 8b       	std	Y+20, r19	; 0x14
    21d6:	2d 8b       	std	Y+21, r18	; 0x15
    21d8:	9e 8b       	std	Y+22, r25	; 0x16
			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
			 */
			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
			static inline uint8_t Endpoint_Read_8(void)
			{
				return UEDATX;
    21da:	8f 8b       	std	Y+23, r24	; 0x17
    21dc:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    21e0:	88 8f       	std	Y+24, r24	; 0x18
    21e2:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
    21e6:	89 8f       	std	Y+25, r24	; 0x19
    21e8:	80 91 f1 00 	lds	r24, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
			 */
			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearOUT(void)
			{
				#if !defined(CONTROL_ONLY_DEVICE)
					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
    21ec:	8a 8f       	std	Y+26, r24	; 0x1a
    21ee:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
    21f2:	8b 77       	andi	r24, 0x7B	; 123
				CDCInterfaceInfo->State.LineEncoding.CharFormat  = Endpoint_Read_8();
				CDCInterfaceInfo->State.LineEncoding.ParityType  = Endpoint_Read_8();
				CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();

				Endpoint_ClearOUT();
				Endpoint_ClearStatusStage();
    21f4:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    21f8:	28 db       	rcall	.-2480   	; 0x184a <Endpoint_ClearStatusStage>
				CDCInterfaceInfo->State.LineEncoding.DataBits    = Endpoint_Read_8();

				Endpoint_ClearOUT();
				Endpoint_ClearStatusStage();

				EVENT_CDC_Device_LineEncodingChanged(CDCInterfaceInfo);
    21fa:	ce 01       	movw	r24, r28
    21fc:	df 91       	pop	r29
			}

			break;
		case CDC_REQ_SetControlLineState:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    21fe:	cf 91       	pop	r28
    2200:	76 cf       	rjmp	.-276    	; 0x20ee <CDC_Device_Event_Stub>
    2202:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <USB_ControlRequest>
			 *  \note This is not applicable for non CONTROL type endpoints.
			 */
			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
			static inline void Endpoint_ClearSETUP(void)
			{
				UEINTX &= ~(1 << RXSTPI);
    2206:	81 32       	cpi	r24, 0x21	; 33
    2208:	09 f5       	brne	.+66     	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
    220a:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();
    220e:	87 7f       	andi	r24, 0xF7	; 247
    2210:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>

				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;
    2214:	1a db       	rcall	.-2508   	; 0x184a <Endpoint_ClearStatusStage>
    2216:	80 91 f2 08 	lds	r24, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
    221a:	90 91 f3 08 	lds	r25, 0x08F3	; 0x8008f3 <USB_ControlRequest+0x3>

				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
    221e:	99 8b       	std	Y+17, r25	; 0x11
				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
			}

			break;
	}
}
    2220:	88 8b       	std	Y+16, r24	; 0x10
    2222:	ce 01       	movw	r24, r28
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();

				CDCInterfaceInfo->State.ControlLineStates.HostToDevice = USB_ControlRequest.wValue;

				EVENT_CDC_Device_ControLineStateChanged(CDCInterfaceInfo);
    2224:	df 91       	pop	r29
    2226:	cf 91       	pop	r28
			}

			break;
		case CDC_REQ_SendBreak:
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
    2228:	0c 94 5f 03 	jmp	0x6be	; 0x6be <EVENT_CDC_Device_ControLineStateChanged>
    222c:	80 91 f0 08 	lds	r24, 0x08F0	; 0x8008f0 <USB_ControlRequest>
    2230:	81 32       	cpi	r24, 0x21	; 33
    2232:	61 f4       	brne	.+24     	; 0x224c <CDC_Device_ProcessControlRequest+0x15c>
    2234:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();
    2238:	87 7f       	andi	r24, 0xF7	; 247

				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
    223a:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
			}

			break;
	}
}
    223e:	05 db       	rcall	.-2550   	; 0x184a <Endpoint_ClearStatusStage>
    2240:	60 91 f2 08 	lds	r22, 0x08F2	; 0x8008f2 <USB_ControlRequest+0x2>
			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE))
			{
				Endpoint_ClearSETUP();
				Endpoint_ClearStatusStage();

				EVENT_CDC_Device_BreakSent(CDCInterfaceInfo, (uint8_t)USB_ControlRequest.wValue);
    2244:	ce 01       	movw	r24, r28
			}

			break;
	}
}
    2246:	df 91       	pop	r29
    2248:	cf 91       	pop	r28
    224a:	51 cf       	rjmp	.-350    	; 0x20ee <CDC_Device_Event_Stub>
    224c:	df 91       	pop	r29
    224e:	cf 91       	pop	r28
    2250:	08 95       	ret

00002252 <__subsf3>:
    2252:	50 58       	subi	r21, 0x80	; 128

00002254 <__addsf3>:
    2254:	bb 27       	eor	r27, r27
    2256:	aa 27       	eor	r26, r26
    2258:	0e d0       	rcall	.+28     	; 0x2276 <__addsf3x>
    225a:	75 c1       	rjmp	.+746    	; 0x2546 <__fp_round>
    225c:	66 d1       	rcall	.+716    	; 0x252a <__fp_pscA>
    225e:	30 f0       	brcs	.+12     	; 0x226c <__addsf3+0x18>
    2260:	6b d1       	rcall	.+726    	; 0x2538 <__fp_pscB>
    2262:	20 f0       	brcs	.+8      	; 0x226c <__addsf3+0x18>
    2264:	31 f4       	brne	.+12     	; 0x2272 <__addsf3+0x1e>
    2266:	9f 3f       	cpi	r25, 0xFF	; 255
    2268:	11 f4       	brne	.+4      	; 0x226e <__addsf3+0x1a>
    226a:	1e f4       	brtc	.+6      	; 0x2272 <__addsf3+0x1e>
    226c:	5b c1       	rjmp	.+694    	; 0x2524 <__fp_nan>
    226e:	0e f4       	brtc	.+2      	; 0x2272 <__addsf3+0x1e>
    2270:	e0 95       	com	r30
    2272:	e7 fb       	bst	r30, 7
    2274:	51 c1       	rjmp	.+674    	; 0x2518 <__fp_inf>

00002276 <__addsf3x>:
    2276:	e9 2f       	mov	r30, r25
    2278:	77 d1       	rcall	.+750    	; 0x2568 <__fp_split3>
    227a:	80 f3       	brcs	.-32     	; 0x225c <__addsf3+0x8>
    227c:	ba 17       	cp	r27, r26
    227e:	62 07       	cpc	r22, r18
    2280:	73 07       	cpc	r23, r19
    2282:	84 07       	cpc	r24, r20
    2284:	95 07       	cpc	r25, r21
    2286:	18 f0       	brcs	.+6      	; 0x228e <__addsf3x+0x18>
    2288:	71 f4       	brne	.+28     	; 0x22a6 <__addsf3x+0x30>
    228a:	9e f5       	brtc	.+102    	; 0x22f2 <__addsf3x+0x7c>
    228c:	8f c1       	rjmp	.+798    	; 0x25ac <__fp_zero>
    228e:	0e f4       	brtc	.+2      	; 0x2292 <__addsf3x+0x1c>
    2290:	e0 95       	com	r30
    2292:	0b 2e       	mov	r0, r27
    2294:	ba 2f       	mov	r27, r26
    2296:	a0 2d       	mov	r26, r0
    2298:	0b 01       	movw	r0, r22
    229a:	b9 01       	movw	r22, r18
    229c:	90 01       	movw	r18, r0
    229e:	0c 01       	movw	r0, r24
    22a0:	ca 01       	movw	r24, r20
    22a2:	a0 01       	movw	r20, r0
    22a4:	11 24       	eor	r1, r1
    22a6:	ff 27       	eor	r31, r31
    22a8:	59 1b       	sub	r21, r25
    22aa:	99 f0       	breq	.+38     	; 0x22d2 <__addsf3x+0x5c>
    22ac:	59 3f       	cpi	r21, 0xF9	; 249
    22ae:	50 f4       	brcc	.+20     	; 0x22c4 <__addsf3x+0x4e>
    22b0:	50 3e       	cpi	r21, 0xE0	; 224
    22b2:	68 f1       	brcs	.+90     	; 0x230e <__addsf3x+0x98>
    22b4:	1a 16       	cp	r1, r26
    22b6:	f0 40       	sbci	r31, 0x00	; 0
    22b8:	a2 2f       	mov	r26, r18
    22ba:	23 2f       	mov	r18, r19
    22bc:	34 2f       	mov	r19, r20
    22be:	44 27       	eor	r20, r20
    22c0:	58 5f       	subi	r21, 0xF8	; 248
    22c2:	f3 cf       	rjmp	.-26     	; 0x22aa <__addsf3x+0x34>
    22c4:	46 95       	lsr	r20
    22c6:	37 95       	ror	r19
    22c8:	27 95       	ror	r18
    22ca:	a7 95       	ror	r26
    22cc:	f0 40       	sbci	r31, 0x00	; 0
    22ce:	53 95       	inc	r21
    22d0:	c9 f7       	brne	.-14     	; 0x22c4 <__addsf3x+0x4e>
    22d2:	7e f4       	brtc	.+30     	; 0x22f2 <__addsf3x+0x7c>
    22d4:	1f 16       	cp	r1, r31
    22d6:	ba 0b       	sbc	r27, r26
    22d8:	62 0b       	sbc	r22, r18
    22da:	73 0b       	sbc	r23, r19
    22dc:	84 0b       	sbc	r24, r20
    22de:	ba f0       	brmi	.+46     	; 0x230e <__addsf3x+0x98>
    22e0:	91 50       	subi	r25, 0x01	; 1
    22e2:	a1 f0       	breq	.+40     	; 0x230c <__addsf3x+0x96>
    22e4:	ff 0f       	add	r31, r31
    22e6:	bb 1f       	adc	r27, r27
    22e8:	66 1f       	adc	r22, r22
    22ea:	77 1f       	adc	r23, r23
    22ec:	88 1f       	adc	r24, r24
    22ee:	c2 f7       	brpl	.-16     	; 0x22e0 <__addsf3x+0x6a>
    22f0:	0e c0       	rjmp	.+28     	; 0x230e <__addsf3x+0x98>
    22f2:	ba 0f       	add	r27, r26
    22f4:	62 1f       	adc	r22, r18
    22f6:	73 1f       	adc	r23, r19
    22f8:	84 1f       	adc	r24, r20
    22fa:	48 f4       	brcc	.+18     	; 0x230e <__addsf3x+0x98>
    22fc:	87 95       	ror	r24
    22fe:	77 95       	ror	r23
    2300:	67 95       	ror	r22
    2302:	b7 95       	ror	r27
    2304:	f7 95       	ror	r31
    2306:	9e 3f       	cpi	r25, 0xFE	; 254
    2308:	08 f0       	brcs	.+2      	; 0x230c <__addsf3x+0x96>
    230a:	b3 cf       	rjmp	.-154    	; 0x2272 <__addsf3+0x1e>
    230c:	93 95       	inc	r25
    230e:	88 0f       	add	r24, r24
    2310:	08 f0       	brcs	.+2      	; 0x2314 <__addsf3x+0x9e>
    2312:	99 27       	eor	r25, r25
    2314:	ee 0f       	add	r30, r30
    2316:	97 95       	ror	r25
    2318:	87 95       	ror	r24
    231a:	08 95       	ret

0000231c <__cmpsf2>:
    231c:	d9 d0       	rcall	.+434    	; 0x24d0 <__fp_cmp>
    231e:	08 f4       	brcc	.+2      	; 0x2322 <__cmpsf2+0x6>
    2320:	81 e0       	ldi	r24, 0x01	; 1
    2322:	08 95       	ret

00002324 <__divsf3>:
    2324:	0c d0       	rcall	.+24     	; 0x233e <__divsf3x>
    2326:	0f c1       	rjmp	.+542    	; 0x2546 <__fp_round>
    2328:	07 d1       	rcall	.+526    	; 0x2538 <__fp_pscB>
    232a:	40 f0       	brcs	.+16     	; 0x233c <__divsf3+0x18>
    232c:	fe d0       	rcall	.+508    	; 0x252a <__fp_pscA>
    232e:	30 f0       	brcs	.+12     	; 0x233c <__divsf3+0x18>
    2330:	21 f4       	brne	.+8      	; 0x233a <__divsf3+0x16>
    2332:	5f 3f       	cpi	r21, 0xFF	; 255
    2334:	19 f0       	breq	.+6      	; 0x233c <__divsf3+0x18>
    2336:	f0 c0       	rjmp	.+480    	; 0x2518 <__fp_inf>
    2338:	51 11       	cpse	r21, r1
    233a:	39 c1       	rjmp	.+626    	; 0x25ae <__fp_szero>
    233c:	f3 c0       	rjmp	.+486    	; 0x2524 <__fp_nan>

0000233e <__divsf3x>:
    233e:	14 d1       	rcall	.+552    	; 0x2568 <__fp_split3>
    2340:	98 f3       	brcs	.-26     	; 0x2328 <__divsf3+0x4>

00002342 <__divsf3_pse>:
    2342:	99 23       	and	r25, r25
    2344:	c9 f3       	breq	.-14     	; 0x2338 <__divsf3+0x14>
    2346:	55 23       	and	r21, r21
    2348:	b1 f3       	breq	.-20     	; 0x2336 <__divsf3+0x12>
    234a:	95 1b       	sub	r25, r21
    234c:	55 0b       	sbc	r21, r21
    234e:	bb 27       	eor	r27, r27
    2350:	aa 27       	eor	r26, r26
    2352:	62 17       	cp	r22, r18
    2354:	73 07       	cpc	r23, r19
    2356:	84 07       	cpc	r24, r20
    2358:	38 f0       	brcs	.+14     	; 0x2368 <__divsf3_pse+0x26>
    235a:	9f 5f       	subi	r25, 0xFF	; 255
    235c:	5f 4f       	sbci	r21, 0xFF	; 255
    235e:	22 0f       	add	r18, r18
    2360:	33 1f       	adc	r19, r19
    2362:	44 1f       	adc	r20, r20
    2364:	aa 1f       	adc	r26, r26
    2366:	a9 f3       	breq	.-22     	; 0x2352 <__divsf3_pse+0x10>
    2368:	33 d0       	rcall	.+102    	; 0x23d0 <__divsf3_pse+0x8e>
    236a:	0e 2e       	mov	r0, r30
    236c:	3a f0       	brmi	.+14     	; 0x237c <__divsf3_pse+0x3a>
    236e:	e0 e8       	ldi	r30, 0x80	; 128
    2370:	30 d0       	rcall	.+96     	; 0x23d2 <__divsf3_pse+0x90>
    2372:	91 50       	subi	r25, 0x01	; 1
    2374:	50 40       	sbci	r21, 0x00	; 0
    2376:	e6 95       	lsr	r30
    2378:	00 1c       	adc	r0, r0
    237a:	ca f7       	brpl	.-14     	; 0x236e <__divsf3_pse+0x2c>
    237c:	29 d0       	rcall	.+82     	; 0x23d0 <__divsf3_pse+0x8e>
    237e:	fe 2f       	mov	r31, r30
    2380:	27 d0       	rcall	.+78     	; 0x23d0 <__divsf3_pse+0x8e>
    2382:	66 0f       	add	r22, r22
    2384:	77 1f       	adc	r23, r23
    2386:	88 1f       	adc	r24, r24
    2388:	bb 1f       	adc	r27, r27
    238a:	26 17       	cp	r18, r22
    238c:	37 07       	cpc	r19, r23
    238e:	48 07       	cpc	r20, r24
    2390:	ab 07       	cpc	r26, r27
    2392:	b0 e8       	ldi	r27, 0x80	; 128
    2394:	09 f0       	breq	.+2      	; 0x2398 <__divsf3_pse+0x56>
    2396:	bb 0b       	sbc	r27, r27
    2398:	80 2d       	mov	r24, r0
    239a:	bf 01       	movw	r22, r30
    239c:	ff 27       	eor	r31, r31
    239e:	93 58       	subi	r25, 0x83	; 131
    23a0:	5f 4f       	sbci	r21, 0xFF	; 255
    23a2:	2a f0       	brmi	.+10     	; 0x23ae <__divsf3_pse+0x6c>
    23a4:	9e 3f       	cpi	r25, 0xFE	; 254
    23a6:	51 05       	cpc	r21, r1
    23a8:	68 f0       	brcs	.+26     	; 0x23c4 <__divsf3_pse+0x82>
    23aa:	b6 c0       	rjmp	.+364    	; 0x2518 <__fp_inf>
    23ac:	00 c1       	rjmp	.+512    	; 0x25ae <__fp_szero>
    23ae:	5f 3f       	cpi	r21, 0xFF	; 255
    23b0:	ec f3       	brlt	.-6      	; 0x23ac <__divsf3_pse+0x6a>
    23b2:	98 3e       	cpi	r25, 0xE8	; 232
    23b4:	dc f3       	brlt	.-10     	; 0x23ac <__divsf3_pse+0x6a>
    23b6:	86 95       	lsr	r24
    23b8:	77 95       	ror	r23
    23ba:	67 95       	ror	r22
    23bc:	b7 95       	ror	r27
    23be:	f7 95       	ror	r31
    23c0:	9f 5f       	subi	r25, 0xFF	; 255
    23c2:	c9 f7       	brne	.-14     	; 0x23b6 <__divsf3_pse+0x74>
    23c4:	88 0f       	add	r24, r24
    23c6:	91 1d       	adc	r25, r1
    23c8:	96 95       	lsr	r25
    23ca:	87 95       	ror	r24
    23cc:	97 f9       	bld	r25, 7
    23ce:	08 95       	ret
    23d0:	e1 e0       	ldi	r30, 0x01	; 1
    23d2:	66 0f       	add	r22, r22
    23d4:	77 1f       	adc	r23, r23
    23d6:	88 1f       	adc	r24, r24
    23d8:	bb 1f       	adc	r27, r27
    23da:	62 17       	cp	r22, r18
    23dc:	73 07       	cpc	r23, r19
    23de:	84 07       	cpc	r24, r20
    23e0:	ba 07       	cpc	r27, r26
    23e2:	20 f0       	brcs	.+8      	; 0x23ec <__divsf3_pse+0xaa>
    23e4:	62 1b       	sub	r22, r18
    23e6:	73 0b       	sbc	r23, r19
    23e8:	84 0b       	sbc	r24, r20
    23ea:	ba 0b       	sbc	r27, r26
    23ec:	ee 1f       	adc	r30, r30
    23ee:	88 f7       	brcc	.-30     	; 0x23d2 <__divsf3_pse+0x90>
    23f0:	e0 95       	com	r30
    23f2:	08 95       	ret

000023f4 <__fixsfsi>:
    23f4:	04 d0       	rcall	.+8      	; 0x23fe <__fixunssfsi>
    23f6:	68 94       	set
    23f8:	b1 11       	cpse	r27, r1
    23fa:	d9 c0       	rjmp	.+434    	; 0x25ae <__fp_szero>
    23fc:	08 95       	ret

000023fe <__fixunssfsi>:
    23fe:	bc d0       	rcall	.+376    	; 0x2578 <__fp_splitA>
    2400:	88 f0       	brcs	.+34     	; 0x2424 <__fixunssfsi+0x26>
    2402:	9f 57       	subi	r25, 0x7F	; 127
    2404:	90 f0       	brcs	.+36     	; 0x242a <__fixunssfsi+0x2c>
    2406:	b9 2f       	mov	r27, r25
    2408:	99 27       	eor	r25, r25
    240a:	b7 51       	subi	r27, 0x17	; 23
    240c:	a0 f0       	brcs	.+40     	; 0x2436 <__fixunssfsi+0x38>
    240e:	d1 f0       	breq	.+52     	; 0x2444 <__fixunssfsi+0x46>
    2410:	66 0f       	add	r22, r22
    2412:	77 1f       	adc	r23, r23
    2414:	88 1f       	adc	r24, r24
    2416:	99 1f       	adc	r25, r25
    2418:	1a f0       	brmi	.+6      	; 0x2420 <__fixunssfsi+0x22>
    241a:	ba 95       	dec	r27
    241c:	c9 f7       	brne	.-14     	; 0x2410 <__fixunssfsi+0x12>
    241e:	12 c0       	rjmp	.+36     	; 0x2444 <__fixunssfsi+0x46>
    2420:	b1 30       	cpi	r27, 0x01	; 1
    2422:	81 f0       	breq	.+32     	; 0x2444 <__fixunssfsi+0x46>
    2424:	c3 d0       	rcall	.+390    	; 0x25ac <__fp_zero>
    2426:	b1 e0       	ldi	r27, 0x01	; 1
    2428:	08 95       	ret
    242a:	c0 c0       	rjmp	.+384    	; 0x25ac <__fp_zero>
    242c:	67 2f       	mov	r22, r23
    242e:	78 2f       	mov	r23, r24
    2430:	88 27       	eor	r24, r24
    2432:	b8 5f       	subi	r27, 0xF8	; 248
    2434:	39 f0       	breq	.+14     	; 0x2444 <__fixunssfsi+0x46>
    2436:	b9 3f       	cpi	r27, 0xF9	; 249
    2438:	cc f3       	brlt	.-14     	; 0x242c <__fixunssfsi+0x2e>
    243a:	86 95       	lsr	r24
    243c:	77 95       	ror	r23
    243e:	67 95       	ror	r22
    2440:	b3 95       	inc	r27
    2442:	d9 f7       	brne	.-10     	; 0x243a <__fixunssfsi+0x3c>
    2444:	3e f4       	brtc	.+14     	; 0x2454 <__fixunssfsi+0x56>
    2446:	90 95       	com	r25
    2448:	80 95       	com	r24
    244a:	70 95       	com	r23
    244c:	61 95       	neg	r22
    244e:	7f 4f       	sbci	r23, 0xFF	; 255
    2450:	8f 4f       	sbci	r24, 0xFF	; 255
    2452:	9f 4f       	sbci	r25, 0xFF	; 255
    2454:	08 95       	ret

00002456 <__floatunsisf>:
    2456:	e8 94       	clt
    2458:	09 c0       	rjmp	.+18     	; 0x246c <__floatsisf+0x12>

0000245a <__floatsisf>:
    245a:	97 fb       	bst	r25, 7
    245c:	3e f4       	brtc	.+14     	; 0x246c <__floatsisf+0x12>
    245e:	90 95       	com	r25
    2460:	80 95       	com	r24
    2462:	70 95       	com	r23
    2464:	61 95       	neg	r22
    2466:	7f 4f       	sbci	r23, 0xFF	; 255
    2468:	8f 4f       	sbci	r24, 0xFF	; 255
    246a:	9f 4f       	sbci	r25, 0xFF	; 255
    246c:	99 23       	and	r25, r25
    246e:	a9 f0       	breq	.+42     	; 0x249a <__floatsisf+0x40>
    2470:	f9 2f       	mov	r31, r25
    2472:	96 e9       	ldi	r25, 0x96	; 150
    2474:	bb 27       	eor	r27, r27
    2476:	93 95       	inc	r25
    2478:	f6 95       	lsr	r31
    247a:	87 95       	ror	r24
    247c:	77 95       	ror	r23
    247e:	67 95       	ror	r22
    2480:	b7 95       	ror	r27
    2482:	f1 11       	cpse	r31, r1
    2484:	f8 cf       	rjmp	.-16     	; 0x2476 <__floatsisf+0x1c>
    2486:	fa f4       	brpl	.+62     	; 0x24c6 <__floatsisf+0x6c>
    2488:	bb 0f       	add	r27, r27
    248a:	11 f4       	brne	.+4      	; 0x2490 <__floatsisf+0x36>
    248c:	60 ff       	sbrs	r22, 0
    248e:	1b c0       	rjmp	.+54     	; 0x24c6 <__floatsisf+0x6c>
    2490:	6f 5f       	subi	r22, 0xFF	; 255
    2492:	7f 4f       	sbci	r23, 0xFF	; 255
    2494:	8f 4f       	sbci	r24, 0xFF	; 255
    2496:	9f 4f       	sbci	r25, 0xFF	; 255
    2498:	16 c0       	rjmp	.+44     	; 0x24c6 <__floatsisf+0x6c>
    249a:	88 23       	and	r24, r24
    249c:	11 f0       	breq	.+4      	; 0x24a2 <__floatsisf+0x48>
    249e:	96 e9       	ldi	r25, 0x96	; 150
    24a0:	11 c0       	rjmp	.+34     	; 0x24c4 <__floatsisf+0x6a>
    24a2:	77 23       	and	r23, r23
    24a4:	21 f0       	breq	.+8      	; 0x24ae <__floatsisf+0x54>
    24a6:	9e e8       	ldi	r25, 0x8E	; 142
    24a8:	87 2f       	mov	r24, r23
    24aa:	76 2f       	mov	r23, r22
    24ac:	05 c0       	rjmp	.+10     	; 0x24b8 <__floatsisf+0x5e>
    24ae:	66 23       	and	r22, r22
    24b0:	71 f0       	breq	.+28     	; 0x24ce <__floatsisf+0x74>
    24b2:	96 e8       	ldi	r25, 0x86	; 134
    24b4:	86 2f       	mov	r24, r22
    24b6:	70 e0       	ldi	r23, 0x00	; 0
    24b8:	60 e0       	ldi	r22, 0x00	; 0
    24ba:	2a f0       	brmi	.+10     	; 0x24c6 <__floatsisf+0x6c>
    24bc:	9a 95       	dec	r25
    24be:	66 0f       	add	r22, r22
    24c0:	77 1f       	adc	r23, r23
    24c2:	88 1f       	adc	r24, r24
    24c4:	da f7       	brpl	.-10     	; 0x24bc <__floatsisf+0x62>
    24c6:	88 0f       	add	r24, r24
    24c8:	96 95       	lsr	r25
    24ca:	87 95       	ror	r24
    24cc:	97 f9       	bld	r25, 7
    24ce:	08 95       	ret

000024d0 <__fp_cmp>:
    24d0:	99 0f       	add	r25, r25
    24d2:	00 08       	sbc	r0, r0
    24d4:	55 0f       	add	r21, r21
    24d6:	aa 0b       	sbc	r26, r26
    24d8:	e0 e8       	ldi	r30, 0x80	; 128
    24da:	fe ef       	ldi	r31, 0xFE	; 254
    24dc:	16 16       	cp	r1, r22
    24de:	17 06       	cpc	r1, r23
    24e0:	e8 07       	cpc	r30, r24
    24e2:	f9 07       	cpc	r31, r25
    24e4:	c0 f0       	brcs	.+48     	; 0x2516 <__fp_cmp+0x46>
    24e6:	12 16       	cp	r1, r18
    24e8:	13 06       	cpc	r1, r19
    24ea:	e4 07       	cpc	r30, r20
    24ec:	f5 07       	cpc	r31, r21
    24ee:	98 f0       	brcs	.+38     	; 0x2516 <__fp_cmp+0x46>
    24f0:	62 1b       	sub	r22, r18
    24f2:	73 0b       	sbc	r23, r19
    24f4:	84 0b       	sbc	r24, r20
    24f6:	95 0b       	sbc	r25, r21
    24f8:	39 f4       	brne	.+14     	; 0x2508 <__fp_cmp+0x38>
    24fa:	0a 26       	eor	r0, r26
    24fc:	61 f0       	breq	.+24     	; 0x2516 <__fp_cmp+0x46>
    24fe:	23 2b       	or	r18, r19
    2500:	24 2b       	or	r18, r20
    2502:	25 2b       	or	r18, r21
    2504:	21 f4       	brne	.+8      	; 0x250e <__fp_cmp+0x3e>
    2506:	08 95       	ret
    2508:	0a 26       	eor	r0, r26
    250a:	09 f4       	brne	.+2      	; 0x250e <__fp_cmp+0x3e>
    250c:	a1 40       	sbci	r26, 0x01	; 1
    250e:	a6 95       	lsr	r26
    2510:	8f ef       	ldi	r24, 0xFF	; 255
    2512:	81 1d       	adc	r24, r1
    2514:	81 1d       	adc	r24, r1
    2516:	08 95       	ret

00002518 <__fp_inf>:
    2518:	97 f9       	bld	r25, 7
    251a:	9f 67       	ori	r25, 0x7F	; 127
    251c:	80 e8       	ldi	r24, 0x80	; 128
    251e:	70 e0       	ldi	r23, 0x00	; 0
    2520:	60 e0       	ldi	r22, 0x00	; 0
    2522:	08 95       	ret

00002524 <__fp_nan>:
    2524:	9f ef       	ldi	r25, 0xFF	; 255
    2526:	80 ec       	ldi	r24, 0xC0	; 192
    2528:	08 95       	ret

0000252a <__fp_pscA>:
    252a:	00 24       	eor	r0, r0
    252c:	0a 94       	dec	r0
    252e:	16 16       	cp	r1, r22
    2530:	17 06       	cpc	r1, r23
    2532:	18 06       	cpc	r1, r24
    2534:	09 06       	cpc	r0, r25
    2536:	08 95       	ret

00002538 <__fp_pscB>:
    2538:	00 24       	eor	r0, r0
    253a:	0a 94       	dec	r0
    253c:	12 16       	cp	r1, r18
    253e:	13 06       	cpc	r1, r19
    2540:	14 06       	cpc	r1, r20
    2542:	05 06       	cpc	r0, r21
    2544:	08 95       	ret

00002546 <__fp_round>:
    2546:	09 2e       	mov	r0, r25
    2548:	03 94       	inc	r0
    254a:	00 0c       	add	r0, r0
    254c:	11 f4       	brne	.+4      	; 0x2552 <__fp_round+0xc>
    254e:	88 23       	and	r24, r24
    2550:	52 f0       	brmi	.+20     	; 0x2566 <__fp_round+0x20>
    2552:	bb 0f       	add	r27, r27
    2554:	40 f4       	brcc	.+16     	; 0x2566 <__fp_round+0x20>
    2556:	bf 2b       	or	r27, r31
    2558:	11 f4       	brne	.+4      	; 0x255e <__fp_round+0x18>
    255a:	60 ff       	sbrs	r22, 0
    255c:	04 c0       	rjmp	.+8      	; 0x2566 <__fp_round+0x20>
    255e:	6f 5f       	subi	r22, 0xFF	; 255
    2560:	7f 4f       	sbci	r23, 0xFF	; 255
    2562:	8f 4f       	sbci	r24, 0xFF	; 255
    2564:	9f 4f       	sbci	r25, 0xFF	; 255
    2566:	08 95       	ret

00002568 <__fp_split3>:
    2568:	57 fd       	sbrc	r21, 7
    256a:	90 58       	subi	r25, 0x80	; 128
    256c:	44 0f       	add	r20, r20
    256e:	55 1f       	adc	r21, r21
    2570:	59 f0       	breq	.+22     	; 0x2588 <__fp_splitA+0x10>
    2572:	5f 3f       	cpi	r21, 0xFF	; 255
    2574:	71 f0       	breq	.+28     	; 0x2592 <__fp_splitA+0x1a>
    2576:	47 95       	ror	r20

00002578 <__fp_splitA>:
    2578:	88 0f       	add	r24, r24
    257a:	97 fb       	bst	r25, 7
    257c:	99 1f       	adc	r25, r25
    257e:	61 f0       	breq	.+24     	; 0x2598 <__fp_splitA+0x20>
    2580:	9f 3f       	cpi	r25, 0xFF	; 255
    2582:	79 f0       	breq	.+30     	; 0x25a2 <__fp_splitA+0x2a>
    2584:	87 95       	ror	r24
    2586:	08 95       	ret
    2588:	12 16       	cp	r1, r18
    258a:	13 06       	cpc	r1, r19
    258c:	14 06       	cpc	r1, r20
    258e:	55 1f       	adc	r21, r21
    2590:	f2 cf       	rjmp	.-28     	; 0x2576 <__fp_split3+0xe>
    2592:	46 95       	lsr	r20
    2594:	f1 df       	rcall	.-30     	; 0x2578 <__fp_splitA>
    2596:	08 c0       	rjmp	.+16     	; 0x25a8 <__fp_splitA+0x30>
    2598:	16 16       	cp	r1, r22
    259a:	17 06       	cpc	r1, r23
    259c:	18 06       	cpc	r1, r24
    259e:	99 1f       	adc	r25, r25
    25a0:	f1 cf       	rjmp	.-30     	; 0x2584 <__fp_splitA+0xc>
    25a2:	86 95       	lsr	r24
    25a4:	71 05       	cpc	r23, r1
    25a6:	61 05       	cpc	r22, r1
    25a8:	08 94       	sec
    25aa:	08 95       	ret

000025ac <__fp_zero>:
    25ac:	e8 94       	clt

000025ae <__fp_szero>:
    25ae:	bb 27       	eor	r27, r27
    25b0:	66 27       	eor	r22, r22
    25b2:	77 27       	eor	r23, r23
    25b4:	cb 01       	movw	r24, r22
    25b6:	97 f9       	bld	r25, 7
    25b8:	08 95       	ret

000025ba <__gesf2>:
    25ba:	8a df       	rcall	.-236    	; 0x24d0 <__fp_cmp>
    25bc:	08 f4       	brcc	.+2      	; 0x25c0 <__gesf2+0x6>
    25be:	8f ef       	ldi	r24, 0xFF	; 255
    25c0:	08 95       	ret
    25c2:	0e f0       	brts	.+2      	; 0x25c6 <__gesf2+0xc>
    25c4:	a6 c0       	rjmp	.+332    	; 0x2712 <__fp_mpack>
    25c6:	ae cf       	rjmp	.-164    	; 0x2524 <__fp_nan>
    25c8:	68 94       	set
    25ca:	a6 cf       	rjmp	.-180    	; 0x2518 <__fp_inf>

000025cc <log>:
    25cc:	d5 df       	rcall	.-86     	; 0x2578 <__fp_splitA>
    25ce:	c8 f3       	brcs	.-14     	; 0x25c2 <__gesf2+0x8>
    25d0:	99 23       	and	r25, r25
    25d2:	d1 f3       	breq	.-12     	; 0x25c8 <__gesf2+0xe>
    25d4:	c6 f3       	brts	.-16     	; 0x25c6 <__gesf2+0xc>
    25d6:	df 93       	push	r29
    25d8:	cf 93       	push	r28
    25da:	1f 93       	push	r17
    25dc:	0f 93       	push	r16
    25de:	ff 92       	push	r15
    25e0:	c9 2f       	mov	r28, r25
    25e2:	dd 27       	eor	r29, r29
    25e4:	88 23       	and	r24, r24
    25e6:	2a f0       	brmi	.+10     	; 0x25f2 <log+0x26>
    25e8:	21 97       	sbiw	r28, 0x01	; 1
    25ea:	66 0f       	add	r22, r22
    25ec:	77 1f       	adc	r23, r23
    25ee:	88 1f       	adc	r24, r24
    25f0:	da f7       	brpl	.-10     	; 0x25e8 <log+0x1c>
    25f2:	20 e0       	ldi	r18, 0x00	; 0
    25f4:	30 e0       	ldi	r19, 0x00	; 0
    25f6:	40 e8       	ldi	r20, 0x80	; 128
    25f8:	5f eb       	ldi	r21, 0xBF	; 191
    25fa:	9f e3       	ldi	r25, 0x3F	; 63
    25fc:	88 39       	cpi	r24, 0x98	; 152
    25fe:	20 f0       	brcs	.+8      	; 0x2608 <log+0x3c>
    2600:	80 3e       	cpi	r24, 0xE0	; 224
    2602:	30 f0       	brcs	.+12     	; 0x2610 <log+0x44>
    2604:	21 96       	adiw	r28, 0x01	; 1
    2606:	8f 77       	andi	r24, 0x7F	; 127
    2608:	25 de       	rcall	.-950    	; 0x2254 <__addsf3>
    260a:	ec ea       	ldi	r30, 0xAC	; 172
    260c:	f0 e0       	ldi	r31, 0x00	; 0
    260e:	03 c0       	rjmp	.+6      	; 0x2616 <log+0x4a>
    2610:	21 de       	rcall	.-958    	; 0x2254 <__addsf3>
    2612:	e9 ed       	ldi	r30, 0xD9	; 217
    2614:	f0 e0       	ldi	r31, 0x00	; 0
    2616:	8b d0       	rcall	.+278    	; 0x272e <__fp_powser>
    2618:	8b 01       	movw	r16, r22
    261a:	be 01       	movw	r22, r28
    261c:	ec 01       	movw	r28, r24
    261e:	fb 2e       	mov	r15, r27
    2620:	6f 57       	subi	r22, 0x7F	; 127
    2622:	71 09       	sbc	r23, r1
    2624:	75 95       	asr	r23
    2626:	77 1f       	adc	r23, r23
    2628:	88 0b       	sbc	r24, r24
    262a:	99 0b       	sbc	r25, r25
    262c:	16 df       	rcall	.-468    	; 0x245a <__floatsisf>
    262e:	28 e1       	ldi	r18, 0x18	; 24
    2630:	32 e7       	ldi	r19, 0x72	; 114
    2632:	41 e3       	ldi	r20, 0x31	; 49
    2634:	5f e3       	ldi	r21, 0x3F	; 63
    2636:	16 d0       	rcall	.+44     	; 0x2664 <__mulsf3x>
    2638:	af 2d       	mov	r26, r15
    263a:	98 01       	movw	r18, r16
    263c:	ae 01       	movw	r20, r28
    263e:	ff 90       	pop	r15
    2640:	0f 91       	pop	r16
    2642:	1f 91       	pop	r17
    2644:	cf 91       	pop	r28
    2646:	df 91       	pop	r29
    2648:	16 de       	rcall	.-980    	; 0x2276 <__addsf3x>
    264a:	7d cf       	rjmp	.-262    	; 0x2546 <__fp_round>

0000264c <__mulsf3>:
    264c:	0b d0       	rcall	.+22     	; 0x2664 <__mulsf3x>
    264e:	7b cf       	rjmp	.-266    	; 0x2546 <__fp_round>
    2650:	6c df       	rcall	.-296    	; 0x252a <__fp_pscA>
    2652:	28 f0       	brcs	.+10     	; 0x265e <__mulsf3+0x12>
    2654:	71 df       	rcall	.-286    	; 0x2538 <__fp_pscB>
    2656:	18 f0       	brcs	.+6      	; 0x265e <__mulsf3+0x12>
    2658:	95 23       	and	r25, r21
    265a:	09 f0       	breq	.+2      	; 0x265e <__mulsf3+0x12>
    265c:	5d cf       	rjmp	.-326    	; 0x2518 <__fp_inf>
    265e:	62 cf       	rjmp	.-316    	; 0x2524 <__fp_nan>
    2660:	11 24       	eor	r1, r1
    2662:	a5 cf       	rjmp	.-182    	; 0x25ae <__fp_szero>

00002664 <__mulsf3x>:
    2664:	81 df       	rcall	.-254    	; 0x2568 <__fp_split3>
    2666:	a0 f3       	brcs	.-24     	; 0x2650 <__mulsf3+0x4>

00002668 <__mulsf3_pse>:
    2668:	95 9f       	mul	r25, r21
    266a:	d1 f3       	breq	.-12     	; 0x2660 <__mulsf3+0x14>
    266c:	95 0f       	add	r25, r21
    266e:	50 e0       	ldi	r21, 0x00	; 0
    2670:	55 1f       	adc	r21, r21
    2672:	62 9f       	mul	r22, r18
    2674:	f0 01       	movw	r30, r0
    2676:	72 9f       	mul	r23, r18
    2678:	bb 27       	eor	r27, r27
    267a:	f0 0d       	add	r31, r0
    267c:	b1 1d       	adc	r27, r1
    267e:	63 9f       	mul	r22, r19
    2680:	aa 27       	eor	r26, r26
    2682:	f0 0d       	add	r31, r0
    2684:	b1 1d       	adc	r27, r1
    2686:	aa 1f       	adc	r26, r26
    2688:	64 9f       	mul	r22, r20
    268a:	66 27       	eor	r22, r22
    268c:	b0 0d       	add	r27, r0
    268e:	a1 1d       	adc	r26, r1
    2690:	66 1f       	adc	r22, r22
    2692:	82 9f       	mul	r24, r18
    2694:	22 27       	eor	r18, r18
    2696:	b0 0d       	add	r27, r0
    2698:	a1 1d       	adc	r26, r1
    269a:	62 1f       	adc	r22, r18
    269c:	73 9f       	mul	r23, r19
    269e:	b0 0d       	add	r27, r0
    26a0:	a1 1d       	adc	r26, r1
    26a2:	62 1f       	adc	r22, r18
    26a4:	83 9f       	mul	r24, r19
    26a6:	a0 0d       	add	r26, r0
    26a8:	61 1d       	adc	r22, r1
    26aa:	22 1f       	adc	r18, r18
    26ac:	74 9f       	mul	r23, r20
    26ae:	33 27       	eor	r19, r19
    26b0:	a0 0d       	add	r26, r0
    26b2:	61 1d       	adc	r22, r1
    26b4:	23 1f       	adc	r18, r19
    26b6:	84 9f       	mul	r24, r20
    26b8:	60 0d       	add	r22, r0
    26ba:	21 1d       	adc	r18, r1
    26bc:	82 2f       	mov	r24, r18
    26be:	76 2f       	mov	r23, r22
    26c0:	6a 2f       	mov	r22, r26
    26c2:	11 24       	eor	r1, r1
    26c4:	9f 57       	subi	r25, 0x7F	; 127
    26c6:	50 40       	sbci	r21, 0x00	; 0
    26c8:	8a f0       	brmi	.+34     	; 0x26ec <__mulsf3_pse+0x84>
    26ca:	e1 f0       	breq	.+56     	; 0x2704 <__mulsf3_pse+0x9c>
    26cc:	88 23       	and	r24, r24
    26ce:	4a f0       	brmi	.+18     	; 0x26e2 <__mulsf3_pse+0x7a>
    26d0:	ee 0f       	add	r30, r30
    26d2:	ff 1f       	adc	r31, r31
    26d4:	bb 1f       	adc	r27, r27
    26d6:	66 1f       	adc	r22, r22
    26d8:	77 1f       	adc	r23, r23
    26da:	88 1f       	adc	r24, r24
    26dc:	91 50       	subi	r25, 0x01	; 1
    26de:	50 40       	sbci	r21, 0x00	; 0
    26e0:	a9 f7       	brne	.-22     	; 0x26cc <__mulsf3_pse+0x64>
    26e2:	9e 3f       	cpi	r25, 0xFE	; 254
    26e4:	51 05       	cpc	r21, r1
    26e6:	70 f0       	brcs	.+28     	; 0x2704 <__mulsf3_pse+0x9c>
    26e8:	17 cf       	rjmp	.-466    	; 0x2518 <__fp_inf>
    26ea:	61 cf       	rjmp	.-318    	; 0x25ae <__fp_szero>
    26ec:	5f 3f       	cpi	r21, 0xFF	; 255
    26ee:	ec f3       	brlt	.-6      	; 0x26ea <__mulsf3_pse+0x82>
    26f0:	98 3e       	cpi	r25, 0xE8	; 232
    26f2:	dc f3       	brlt	.-10     	; 0x26ea <__mulsf3_pse+0x82>
    26f4:	86 95       	lsr	r24
    26f6:	77 95       	ror	r23
    26f8:	67 95       	ror	r22
    26fa:	b7 95       	ror	r27
    26fc:	f7 95       	ror	r31
    26fe:	e7 95       	ror	r30
    2700:	9f 5f       	subi	r25, 0xFF	; 255
    2702:	c1 f7       	brne	.-16     	; 0x26f4 <__mulsf3_pse+0x8c>
    2704:	fe 2b       	or	r31, r30
    2706:	88 0f       	add	r24, r24
    2708:	91 1d       	adc	r25, r1
    270a:	96 95       	lsr	r25
    270c:	87 95       	ror	r24
    270e:	97 f9       	bld	r25, 7
    2710:	08 95       	ret

00002712 <__fp_mpack>:
    2712:	9f 3f       	cpi	r25, 0xFF	; 255
    2714:	31 f0       	breq	.+12     	; 0x2722 <__fp_mpack_finite+0xc>

00002716 <__fp_mpack_finite>:
    2716:	91 50       	subi	r25, 0x01	; 1
    2718:	20 f4       	brcc	.+8      	; 0x2722 <__fp_mpack_finite+0xc>
    271a:	87 95       	ror	r24
    271c:	77 95       	ror	r23
    271e:	67 95       	ror	r22
    2720:	b7 95       	ror	r27
    2722:	88 0f       	add	r24, r24
    2724:	91 1d       	adc	r25, r1
    2726:	96 95       	lsr	r25
    2728:	87 95       	ror	r24
    272a:	97 f9       	bld	r25, 7
    272c:	08 95       	ret

0000272e <__fp_powser>:
    272e:	df 93       	push	r29
    2730:	cf 93       	push	r28
    2732:	1f 93       	push	r17
    2734:	0f 93       	push	r16
    2736:	ff 92       	push	r15
    2738:	ef 92       	push	r14
    273a:	df 92       	push	r13
    273c:	7b 01       	movw	r14, r22
    273e:	8c 01       	movw	r16, r24
    2740:	68 94       	set
    2742:	05 c0       	rjmp	.+10     	; 0x274e <__fp_powser+0x20>
    2744:	da 2e       	mov	r13, r26
    2746:	ef 01       	movw	r28, r30
    2748:	8d df       	rcall	.-230    	; 0x2664 <__mulsf3x>
    274a:	fe 01       	movw	r30, r28
    274c:	e8 94       	clt
    274e:	a5 91       	lpm	r26, Z+
    2750:	25 91       	lpm	r18, Z+
    2752:	35 91       	lpm	r19, Z+
    2754:	45 91       	lpm	r20, Z+
    2756:	55 91       	lpm	r21, Z+
    2758:	ae f3       	brts	.-22     	; 0x2744 <__fp_powser+0x16>
    275a:	ef 01       	movw	r28, r30
    275c:	8c dd       	rcall	.-1256   	; 0x2276 <__addsf3x>
    275e:	fe 01       	movw	r30, r28
    2760:	97 01       	movw	r18, r14
    2762:	a8 01       	movw	r20, r16
    2764:	da 94       	dec	r13
    2766:	79 f7       	brne	.-34     	; 0x2746 <__fp_powser+0x18>
    2768:	df 90       	pop	r13
    276a:	ef 90       	pop	r14
    276c:	ff 90       	pop	r15
    276e:	0f 91       	pop	r16
    2770:	1f 91       	pop	r17
    2772:	cf 91       	pop	r28
    2774:	df 91       	pop	r29
    2776:	08 95       	ret

00002778 <vfprintf>:
    2778:	a0 e1       	ldi	r26, 0x10	; 16
    277a:	b0 e0       	ldi	r27, 0x00	; 0
    277c:	e1 ec       	ldi	r30, 0xC1	; 193
    277e:	f3 e1       	ldi	r31, 0x13	; 19
    2780:	37 c7       	rjmp	.+3694   	; 0x35f0 <__prologue_saves__>
    2782:	7c 01       	movw	r14, r24
    2784:	1b 01       	movw	r2, r22
    2786:	6a 01       	movw	r12, r20
    2788:	fc 01       	movw	r30, r24
    278a:	17 82       	std	Z+7, r1	; 0x07
    278c:	16 82       	std	Z+6, r1	; 0x06
    278e:	83 81       	ldd	r24, Z+3	; 0x03
    2790:	81 ff       	sbrs	r24, 1
    2792:	2b c3       	rjmp	.+1622   	; 0x2dea <vfprintf+0x672>
    2794:	9e 01       	movw	r18, r28
    2796:	2f 5f       	subi	r18, 0xFF	; 255
    2798:	3f 4f       	sbci	r19, 0xFF	; 255
    279a:	39 01       	movw	r6, r18
    279c:	f7 01       	movw	r30, r14
    279e:	93 81       	ldd	r25, Z+3	; 0x03
    27a0:	f1 01       	movw	r30, r2
    27a2:	93 fd       	sbrc	r25, 3
    27a4:	85 91       	lpm	r24, Z+
    27a6:	93 ff       	sbrs	r25, 3
    27a8:	81 91       	ld	r24, Z+
    27aa:	1f 01       	movw	r2, r30
    27ac:	88 23       	and	r24, r24
    27ae:	09 f4       	brne	.+2      	; 0x27b2 <vfprintf+0x3a>
    27b0:	18 c3       	rjmp	.+1584   	; 0x2de2 <vfprintf+0x66a>
    27b2:	85 32       	cpi	r24, 0x25	; 37
    27b4:	39 f4       	brne	.+14     	; 0x27c4 <vfprintf+0x4c>
    27b6:	93 fd       	sbrc	r25, 3
    27b8:	85 91       	lpm	r24, Z+
    27ba:	93 ff       	sbrs	r25, 3
    27bc:	81 91       	ld	r24, Z+
    27be:	1f 01       	movw	r2, r30
    27c0:	85 32       	cpi	r24, 0x25	; 37
    27c2:	39 f4       	brne	.+14     	; 0x27d2 <vfprintf+0x5a>
    27c4:	b7 01       	movw	r22, r14
    27c6:	90 e0       	ldi	r25, 0x00	; 0
    27c8:	0e 94 84 1c 	call	0x3908	; 0x3908 <fputc>
    27cc:	56 01       	movw	r10, r12
    27ce:	65 01       	movw	r12, r10
    27d0:	e5 cf       	rjmp	.-54     	; 0x279c <vfprintf+0x24>
    27d2:	10 e0       	ldi	r17, 0x00	; 0
    27d4:	51 2c       	mov	r5, r1
    27d6:	91 2c       	mov	r9, r1
    27d8:	ff e1       	ldi	r31, 0x1F	; 31
    27da:	f9 15       	cp	r31, r9
    27dc:	d8 f0       	brcs	.+54     	; 0x2814 <vfprintf+0x9c>
    27de:	8b 32       	cpi	r24, 0x2B	; 43
    27e0:	79 f0       	breq	.+30     	; 0x2800 <vfprintf+0x88>
    27e2:	38 f4       	brcc	.+14     	; 0x27f2 <vfprintf+0x7a>
    27e4:	80 32       	cpi	r24, 0x20	; 32
    27e6:	79 f0       	breq	.+30     	; 0x2806 <vfprintf+0x8e>
    27e8:	83 32       	cpi	r24, 0x23	; 35
    27ea:	a1 f4       	brne	.+40     	; 0x2814 <vfprintf+0x9c>
    27ec:	f9 2d       	mov	r31, r9
    27ee:	f0 61       	ori	r31, 0x10	; 16
    27f0:	2e c0       	rjmp	.+92     	; 0x284e <vfprintf+0xd6>
    27f2:	8d 32       	cpi	r24, 0x2D	; 45
    27f4:	61 f0       	breq	.+24     	; 0x280e <vfprintf+0x96>
    27f6:	80 33       	cpi	r24, 0x30	; 48
    27f8:	69 f4       	brne	.+26     	; 0x2814 <vfprintf+0x9c>
    27fa:	29 2d       	mov	r18, r9
    27fc:	21 60       	ori	r18, 0x01	; 1
    27fe:	2d c0       	rjmp	.+90     	; 0x285a <vfprintf+0xe2>
    2800:	39 2d       	mov	r19, r9
    2802:	32 60       	ori	r19, 0x02	; 2
    2804:	93 2e       	mov	r9, r19
    2806:	89 2d       	mov	r24, r9
    2808:	84 60       	ori	r24, 0x04	; 4
    280a:	98 2e       	mov	r9, r24
    280c:	2a c0       	rjmp	.+84     	; 0x2862 <vfprintf+0xea>
    280e:	e9 2d       	mov	r30, r9
    2810:	e8 60       	ori	r30, 0x08	; 8
    2812:	15 c0       	rjmp	.+42     	; 0x283e <vfprintf+0xc6>
    2814:	97 fc       	sbrc	r9, 7
    2816:	2d c0       	rjmp	.+90     	; 0x2872 <vfprintf+0xfa>
    2818:	20 ed       	ldi	r18, 0xD0	; 208
    281a:	28 0f       	add	r18, r24
    281c:	2a 30       	cpi	r18, 0x0A	; 10
    281e:	88 f4       	brcc	.+34     	; 0x2842 <vfprintf+0xca>
    2820:	96 fe       	sbrs	r9, 6
    2822:	06 c0       	rjmp	.+12     	; 0x2830 <vfprintf+0xb8>
    2824:	3a e0       	ldi	r19, 0x0A	; 10
    2826:	13 9f       	mul	r17, r19
    2828:	20 0d       	add	r18, r0
    282a:	11 24       	eor	r1, r1
    282c:	12 2f       	mov	r17, r18
    282e:	19 c0       	rjmp	.+50     	; 0x2862 <vfprintf+0xea>
    2830:	8a e0       	ldi	r24, 0x0A	; 10
    2832:	58 9e       	mul	r5, r24
    2834:	20 0d       	add	r18, r0
    2836:	11 24       	eor	r1, r1
    2838:	52 2e       	mov	r5, r18
    283a:	e9 2d       	mov	r30, r9
    283c:	e0 62       	ori	r30, 0x20	; 32
    283e:	9e 2e       	mov	r9, r30
    2840:	10 c0       	rjmp	.+32     	; 0x2862 <vfprintf+0xea>
    2842:	8e 32       	cpi	r24, 0x2E	; 46
    2844:	31 f4       	brne	.+12     	; 0x2852 <vfprintf+0xda>
    2846:	96 fc       	sbrc	r9, 6
    2848:	cc c2       	rjmp	.+1432   	; 0x2de2 <vfprintf+0x66a>
    284a:	f9 2d       	mov	r31, r9
    284c:	f0 64       	ori	r31, 0x40	; 64
    284e:	9f 2e       	mov	r9, r31
    2850:	08 c0       	rjmp	.+16     	; 0x2862 <vfprintf+0xea>
    2852:	8c 36       	cpi	r24, 0x6C	; 108
    2854:	21 f4       	brne	.+8      	; 0x285e <vfprintf+0xe6>
    2856:	29 2d       	mov	r18, r9
    2858:	20 68       	ori	r18, 0x80	; 128
    285a:	92 2e       	mov	r9, r18
    285c:	02 c0       	rjmp	.+4      	; 0x2862 <vfprintf+0xea>
    285e:	88 36       	cpi	r24, 0x68	; 104
    2860:	41 f4       	brne	.+16     	; 0x2872 <vfprintf+0xfa>
    2862:	f1 01       	movw	r30, r2
    2864:	93 fd       	sbrc	r25, 3
    2866:	85 91       	lpm	r24, Z+
    2868:	93 ff       	sbrs	r25, 3
    286a:	81 91       	ld	r24, Z+
    286c:	1f 01       	movw	r2, r30
    286e:	81 11       	cpse	r24, r1
    2870:	b3 cf       	rjmp	.-154    	; 0x27d8 <vfprintf+0x60>
    2872:	9b eb       	ldi	r25, 0xBB	; 187
    2874:	98 0f       	add	r25, r24
    2876:	93 30       	cpi	r25, 0x03	; 3
    2878:	20 f4       	brcc	.+8      	; 0x2882 <vfprintf+0x10a>
    287a:	99 2d       	mov	r25, r9
    287c:	90 61       	ori	r25, 0x10	; 16
    287e:	80 5e       	subi	r24, 0xE0	; 224
    2880:	07 c0       	rjmp	.+14     	; 0x2890 <vfprintf+0x118>
    2882:	9b e9       	ldi	r25, 0x9B	; 155
    2884:	98 0f       	add	r25, r24
    2886:	93 30       	cpi	r25, 0x03	; 3
    2888:	08 f0       	brcs	.+2      	; 0x288c <vfprintf+0x114>
    288a:	59 c1       	rjmp	.+690    	; 0x2b3e <vfprintf+0x3c6>
    288c:	99 2d       	mov	r25, r9
    288e:	9f 7e       	andi	r25, 0xEF	; 239
    2890:	96 ff       	sbrs	r25, 6
    2892:	16 e0       	ldi	r17, 0x06	; 6
    2894:	9f 73       	andi	r25, 0x3F	; 63
    2896:	99 2e       	mov	r9, r25
    2898:	85 36       	cpi	r24, 0x65	; 101
    289a:	19 f4       	brne	.+6      	; 0x28a2 <vfprintf+0x12a>
    289c:	90 64       	ori	r25, 0x40	; 64
    289e:	99 2e       	mov	r9, r25
    28a0:	08 c0       	rjmp	.+16     	; 0x28b2 <vfprintf+0x13a>
    28a2:	86 36       	cpi	r24, 0x66	; 102
    28a4:	21 f4       	brne	.+8      	; 0x28ae <vfprintf+0x136>
    28a6:	39 2f       	mov	r19, r25
    28a8:	30 68       	ori	r19, 0x80	; 128
    28aa:	93 2e       	mov	r9, r19
    28ac:	02 c0       	rjmp	.+4      	; 0x28b2 <vfprintf+0x13a>
    28ae:	11 11       	cpse	r17, r1
    28b0:	11 50       	subi	r17, 0x01	; 1
    28b2:	97 fe       	sbrs	r9, 7
    28b4:	07 c0       	rjmp	.+14     	; 0x28c4 <vfprintf+0x14c>
    28b6:	1c 33       	cpi	r17, 0x3C	; 60
    28b8:	50 f4       	brcc	.+20     	; 0x28ce <vfprintf+0x156>
    28ba:	44 24       	eor	r4, r4
    28bc:	43 94       	inc	r4
    28be:	41 0e       	add	r4, r17
    28c0:	27 e0       	ldi	r18, 0x07	; 7
    28c2:	0b c0       	rjmp	.+22     	; 0x28da <vfprintf+0x162>
    28c4:	18 30       	cpi	r17, 0x08	; 8
    28c6:	38 f0       	brcs	.+14     	; 0x28d6 <vfprintf+0x15e>
    28c8:	27 e0       	ldi	r18, 0x07	; 7
    28ca:	17 e0       	ldi	r17, 0x07	; 7
    28cc:	05 c0       	rjmp	.+10     	; 0x28d8 <vfprintf+0x160>
    28ce:	27 e0       	ldi	r18, 0x07	; 7
    28d0:	9c e3       	ldi	r25, 0x3C	; 60
    28d2:	49 2e       	mov	r4, r25
    28d4:	02 c0       	rjmp	.+4      	; 0x28da <vfprintf+0x162>
    28d6:	21 2f       	mov	r18, r17
    28d8:	41 2c       	mov	r4, r1
    28da:	56 01       	movw	r10, r12
    28dc:	84 e0       	ldi	r24, 0x04	; 4
    28de:	a8 0e       	add	r10, r24
    28e0:	b1 1c       	adc	r11, r1
    28e2:	f6 01       	movw	r30, r12
    28e4:	60 81       	ld	r22, Z
    28e6:	71 81       	ldd	r23, Z+1	; 0x01
    28e8:	82 81       	ldd	r24, Z+2	; 0x02
    28ea:	93 81       	ldd	r25, Z+3	; 0x03
    28ec:	04 2d       	mov	r16, r4
    28ee:	a3 01       	movw	r20, r6
    28f0:	b6 d6       	rcall	.+3436   	; 0x365e <__ftoa_engine>
    28f2:	6c 01       	movw	r12, r24
    28f4:	f9 81       	ldd	r31, Y+1	; 0x01
    28f6:	fc 87       	std	Y+12, r31	; 0x0c
    28f8:	f0 ff       	sbrs	r31, 0
    28fa:	02 c0       	rjmp	.+4      	; 0x2900 <vfprintf+0x188>
    28fc:	f3 ff       	sbrs	r31, 3
    28fe:	06 c0       	rjmp	.+12     	; 0x290c <vfprintf+0x194>
    2900:	91 fc       	sbrc	r9, 1
    2902:	06 c0       	rjmp	.+12     	; 0x2910 <vfprintf+0x198>
    2904:	92 fe       	sbrs	r9, 2
    2906:	06 c0       	rjmp	.+12     	; 0x2914 <vfprintf+0x19c>
    2908:	00 e2       	ldi	r16, 0x20	; 32
    290a:	05 c0       	rjmp	.+10     	; 0x2916 <vfprintf+0x19e>
    290c:	0d e2       	ldi	r16, 0x2D	; 45
    290e:	03 c0       	rjmp	.+6      	; 0x2916 <vfprintf+0x19e>
    2910:	0b e2       	ldi	r16, 0x2B	; 43
    2912:	01 c0       	rjmp	.+2      	; 0x2916 <vfprintf+0x19e>
    2914:	00 e0       	ldi	r16, 0x00	; 0
    2916:	8c 85       	ldd	r24, Y+12	; 0x0c
    2918:	8c 70       	andi	r24, 0x0C	; 12
    291a:	19 f0       	breq	.+6      	; 0x2922 <vfprintf+0x1aa>
    291c:	01 11       	cpse	r16, r1
    291e:	43 c2       	rjmp	.+1158   	; 0x2da6 <vfprintf+0x62e>
    2920:	80 c2       	rjmp	.+1280   	; 0x2e22 <vfprintf+0x6aa>
    2922:	97 fe       	sbrs	r9, 7
    2924:	10 c0       	rjmp	.+32     	; 0x2946 <vfprintf+0x1ce>
    2926:	4c 0c       	add	r4, r12
    2928:	fc 85       	ldd	r31, Y+12	; 0x0c
    292a:	f4 ff       	sbrs	r31, 4
    292c:	04 c0       	rjmp	.+8      	; 0x2936 <vfprintf+0x1be>
    292e:	8a 81       	ldd	r24, Y+2	; 0x02
    2930:	81 33       	cpi	r24, 0x31	; 49
    2932:	09 f4       	brne	.+2      	; 0x2936 <vfprintf+0x1be>
    2934:	4a 94       	dec	r4
    2936:	14 14       	cp	r1, r4
    2938:	74 f5       	brge	.+92     	; 0x2996 <vfprintf+0x21e>
    293a:	28 e0       	ldi	r18, 0x08	; 8
    293c:	24 15       	cp	r18, r4
    293e:	78 f5       	brcc	.+94     	; 0x299e <vfprintf+0x226>
    2940:	88 e0       	ldi	r24, 0x08	; 8
    2942:	48 2e       	mov	r4, r24
    2944:	2c c0       	rjmp	.+88     	; 0x299e <vfprintf+0x226>
    2946:	96 fc       	sbrc	r9, 6
    2948:	2a c0       	rjmp	.+84     	; 0x299e <vfprintf+0x226>
    294a:	81 2f       	mov	r24, r17
    294c:	90 e0       	ldi	r25, 0x00	; 0
    294e:	8c 15       	cp	r24, r12
    2950:	9d 05       	cpc	r25, r13
    2952:	9c f0       	brlt	.+38     	; 0x297a <vfprintf+0x202>
    2954:	3c ef       	ldi	r19, 0xFC	; 252
    2956:	c3 16       	cp	r12, r19
    2958:	3f ef       	ldi	r19, 0xFF	; 255
    295a:	d3 06       	cpc	r13, r19
    295c:	74 f0       	brlt	.+28     	; 0x297a <vfprintf+0x202>
    295e:	89 2d       	mov	r24, r9
    2960:	80 68       	ori	r24, 0x80	; 128
    2962:	98 2e       	mov	r9, r24
    2964:	0a c0       	rjmp	.+20     	; 0x297a <vfprintf+0x202>
    2966:	e2 e0       	ldi	r30, 0x02	; 2
    2968:	f0 e0       	ldi	r31, 0x00	; 0
    296a:	ec 0f       	add	r30, r28
    296c:	fd 1f       	adc	r31, r29
    296e:	e1 0f       	add	r30, r17
    2970:	f1 1d       	adc	r31, r1
    2972:	80 81       	ld	r24, Z
    2974:	80 33       	cpi	r24, 0x30	; 48
    2976:	19 f4       	brne	.+6      	; 0x297e <vfprintf+0x206>
    2978:	11 50       	subi	r17, 0x01	; 1
    297a:	11 11       	cpse	r17, r1
    297c:	f4 cf       	rjmp	.-24     	; 0x2966 <vfprintf+0x1ee>
    297e:	97 fe       	sbrs	r9, 7
    2980:	0e c0       	rjmp	.+28     	; 0x299e <vfprintf+0x226>
    2982:	44 24       	eor	r4, r4
    2984:	43 94       	inc	r4
    2986:	41 0e       	add	r4, r17
    2988:	81 2f       	mov	r24, r17
    298a:	90 e0       	ldi	r25, 0x00	; 0
    298c:	c8 16       	cp	r12, r24
    298e:	d9 06       	cpc	r13, r25
    2990:	2c f4       	brge	.+10     	; 0x299c <vfprintf+0x224>
    2992:	1c 19       	sub	r17, r12
    2994:	04 c0       	rjmp	.+8      	; 0x299e <vfprintf+0x226>
    2996:	44 24       	eor	r4, r4
    2998:	43 94       	inc	r4
    299a:	01 c0       	rjmp	.+2      	; 0x299e <vfprintf+0x226>
    299c:	10 e0       	ldi	r17, 0x00	; 0
    299e:	97 fe       	sbrs	r9, 7
    29a0:	06 c0       	rjmp	.+12     	; 0x29ae <vfprintf+0x236>
    29a2:	1c 14       	cp	r1, r12
    29a4:	1d 04       	cpc	r1, r13
    29a6:	34 f4       	brge	.+12     	; 0x29b4 <vfprintf+0x23c>
    29a8:	c6 01       	movw	r24, r12
    29aa:	01 96       	adiw	r24, 0x01	; 1
    29ac:	05 c0       	rjmp	.+10     	; 0x29b8 <vfprintf+0x240>
    29ae:	85 e0       	ldi	r24, 0x05	; 5
    29b0:	90 e0       	ldi	r25, 0x00	; 0
    29b2:	02 c0       	rjmp	.+4      	; 0x29b8 <vfprintf+0x240>
    29b4:	81 e0       	ldi	r24, 0x01	; 1
    29b6:	90 e0       	ldi	r25, 0x00	; 0
    29b8:	01 11       	cpse	r16, r1
    29ba:	01 96       	adiw	r24, 0x01	; 1
    29bc:	11 23       	and	r17, r17
    29be:	31 f0       	breq	.+12     	; 0x29cc <vfprintf+0x254>
    29c0:	21 2f       	mov	r18, r17
    29c2:	30 e0       	ldi	r19, 0x00	; 0
    29c4:	2f 5f       	subi	r18, 0xFF	; 255
    29c6:	3f 4f       	sbci	r19, 0xFF	; 255
    29c8:	82 0f       	add	r24, r18
    29ca:	93 1f       	adc	r25, r19
    29cc:	25 2d       	mov	r18, r5
    29ce:	30 e0       	ldi	r19, 0x00	; 0
    29d0:	82 17       	cp	r24, r18
    29d2:	93 07       	cpc	r25, r19
    29d4:	14 f4       	brge	.+4      	; 0x29da <vfprintf+0x262>
    29d6:	58 1a       	sub	r5, r24
    29d8:	01 c0       	rjmp	.+2      	; 0x29dc <vfprintf+0x264>
    29da:	51 2c       	mov	r5, r1
    29dc:	89 2d       	mov	r24, r9
    29de:	89 70       	andi	r24, 0x09	; 9
    29e0:	41 f4       	brne	.+16     	; 0x29f2 <vfprintf+0x27a>
    29e2:	55 20       	and	r5, r5
    29e4:	31 f0       	breq	.+12     	; 0x29f2 <vfprintf+0x27a>
    29e6:	b7 01       	movw	r22, r14
    29e8:	80 e2       	ldi	r24, 0x20	; 32
    29ea:	90 e0       	ldi	r25, 0x00	; 0
    29ec:	8d d7       	rcall	.+3866   	; 0x3908 <fputc>
    29ee:	5a 94       	dec	r5
    29f0:	f8 cf       	rjmp	.-16     	; 0x29e2 <vfprintf+0x26a>
    29f2:	00 23       	and	r16, r16
    29f4:	21 f0       	breq	.+8      	; 0x29fe <vfprintf+0x286>
    29f6:	b7 01       	movw	r22, r14
    29f8:	80 2f       	mov	r24, r16
    29fa:	90 e0       	ldi	r25, 0x00	; 0
    29fc:	85 d7       	rcall	.+3850   	; 0x3908 <fputc>
    29fe:	93 fc       	sbrc	r9, 3
    2a00:	08 c0       	rjmp	.+16     	; 0x2a12 <vfprintf+0x29a>
    2a02:	55 20       	and	r5, r5
    2a04:	31 f0       	breq	.+12     	; 0x2a12 <vfprintf+0x29a>
    2a06:	b7 01       	movw	r22, r14
    2a08:	80 e3       	ldi	r24, 0x30	; 48
    2a0a:	90 e0       	ldi	r25, 0x00	; 0
    2a0c:	7d d7       	rcall	.+3834   	; 0x3908 <fputc>
    2a0e:	5a 94       	dec	r5
    2a10:	f8 cf       	rjmp	.-16     	; 0x2a02 <vfprintf+0x28a>
    2a12:	97 fe       	sbrs	r9, 7
    2a14:	4a c0       	rjmp	.+148    	; 0x2aaa <vfprintf+0x332>
    2a16:	46 01       	movw	r8, r12
    2a18:	d7 fe       	sbrs	r13, 7
    2a1a:	02 c0       	rjmp	.+4      	; 0x2a20 <vfprintf+0x2a8>
    2a1c:	81 2c       	mov	r8, r1
    2a1e:	91 2c       	mov	r9, r1
    2a20:	c6 01       	movw	r24, r12
    2a22:	88 19       	sub	r24, r8
    2a24:	99 09       	sbc	r25, r9
    2a26:	f3 01       	movw	r30, r6
    2a28:	e8 0f       	add	r30, r24
    2a2a:	f9 1f       	adc	r31, r25
    2a2c:	fe 87       	std	Y+14, r31	; 0x0e
    2a2e:	ed 87       	std	Y+13, r30	; 0x0d
    2a30:	96 01       	movw	r18, r12
    2a32:	24 19       	sub	r18, r4
    2a34:	31 09       	sbc	r19, r1
    2a36:	38 8b       	std	Y+16, r19	; 0x10
    2a38:	2f 87       	std	Y+15, r18	; 0x0f
    2a3a:	01 2f       	mov	r16, r17
    2a3c:	10 e0       	ldi	r17, 0x00	; 0
    2a3e:	11 95       	neg	r17
    2a40:	01 95       	neg	r16
    2a42:	11 09       	sbc	r17, r1
    2a44:	3f ef       	ldi	r19, 0xFF	; 255
    2a46:	83 16       	cp	r8, r19
    2a48:	93 06       	cpc	r9, r19
    2a4a:	21 f4       	brne	.+8      	; 0x2a54 <vfprintf+0x2dc>
    2a4c:	b7 01       	movw	r22, r14
    2a4e:	8e e2       	ldi	r24, 0x2E	; 46
    2a50:	90 e0       	ldi	r25, 0x00	; 0
    2a52:	5a d7       	rcall	.+3764   	; 0x3908 <fputc>
    2a54:	c8 14       	cp	r12, r8
    2a56:	d9 04       	cpc	r13, r9
    2a58:	4c f0       	brlt	.+18     	; 0x2a6c <vfprintf+0x2f4>
    2a5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2a5c:	98 89       	ldd	r25, Y+16	; 0x10
    2a5e:	88 15       	cp	r24, r8
    2a60:	99 05       	cpc	r25, r9
    2a62:	24 f4       	brge	.+8      	; 0x2a6c <vfprintf+0x2f4>
    2a64:	ed 85       	ldd	r30, Y+13	; 0x0d
    2a66:	fe 85       	ldd	r31, Y+14	; 0x0e
    2a68:	81 81       	ldd	r24, Z+1	; 0x01
    2a6a:	01 c0       	rjmp	.+2      	; 0x2a6e <vfprintf+0x2f6>
    2a6c:	80 e3       	ldi	r24, 0x30	; 48
    2a6e:	f1 e0       	ldi	r31, 0x01	; 1
    2a70:	8f 1a       	sub	r8, r31
    2a72:	91 08       	sbc	r9, r1
    2a74:	2d 85       	ldd	r18, Y+13	; 0x0d
    2a76:	3e 85       	ldd	r19, Y+14	; 0x0e
    2a78:	2f 5f       	subi	r18, 0xFF	; 255
    2a7a:	3f 4f       	sbci	r19, 0xFF	; 255
    2a7c:	3e 87       	std	Y+14, r19	; 0x0e
    2a7e:	2d 87       	std	Y+13, r18	; 0x0d
    2a80:	80 16       	cp	r8, r16
    2a82:	91 06       	cpc	r9, r17
    2a84:	24 f0       	brlt	.+8      	; 0x2a8e <vfprintf+0x316>
    2a86:	b7 01       	movw	r22, r14
    2a88:	90 e0       	ldi	r25, 0x00	; 0
    2a8a:	3e d7       	rcall	.+3708   	; 0x3908 <fputc>
    2a8c:	db cf       	rjmp	.-74     	; 0x2a44 <vfprintf+0x2cc>
    2a8e:	c8 14       	cp	r12, r8
    2a90:	d9 04       	cpc	r13, r9
    2a92:	41 f4       	brne	.+16     	; 0x2aa4 <vfprintf+0x32c>
    2a94:	9a 81       	ldd	r25, Y+2	; 0x02
    2a96:	96 33       	cpi	r25, 0x36	; 54
    2a98:	20 f4       	brcc	.+8      	; 0x2aa2 <vfprintf+0x32a>
    2a9a:	95 33       	cpi	r25, 0x35	; 53
    2a9c:	19 f4       	brne	.+6      	; 0x2aa4 <vfprintf+0x32c>
    2a9e:	3c 85       	ldd	r19, Y+12	; 0x0c
    2aa0:	34 ff       	sbrs	r19, 4
    2aa2:	81 e3       	ldi	r24, 0x31	; 49
    2aa4:	b7 01       	movw	r22, r14
    2aa6:	90 e0       	ldi	r25, 0x00	; 0
    2aa8:	48 c0       	rjmp	.+144    	; 0x2b3a <vfprintf+0x3c2>
    2aaa:	8a 81       	ldd	r24, Y+2	; 0x02
    2aac:	81 33       	cpi	r24, 0x31	; 49
    2aae:	19 f0       	breq	.+6      	; 0x2ab6 <vfprintf+0x33e>
    2ab0:	9c 85       	ldd	r25, Y+12	; 0x0c
    2ab2:	9f 7e       	andi	r25, 0xEF	; 239
    2ab4:	9c 87       	std	Y+12, r25	; 0x0c
    2ab6:	b7 01       	movw	r22, r14
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	26 d7       	rcall	.+3660   	; 0x3908 <fputc>
    2abc:	11 11       	cpse	r17, r1
    2abe:	05 c0       	rjmp	.+10     	; 0x2aca <vfprintf+0x352>
    2ac0:	94 fc       	sbrc	r9, 4
    2ac2:	16 c0       	rjmp	.+44     	; 0x2af0 <vfprintf+0x378>
    2ac4:	85 e6       	ldi	r24, 0x65	; 101
    2ac6:	90 e0       	ldi	r25, 0x00	; 0
    2ac8:	15 c0       	rjmp	.+42     	; 0x2af4 <vfprintf+0x37c>
    2aca:	b7 01       	movw	r22, r14
    2acc:	8e e2       	ldi	r24, 0x2E	; 46
    2ace:	90 e0       	ldi	r25, 0x00	; 0
    2ad0:	1b d7       	rcall	.+3638   	; 0x3908 <fputc>
    2ad2:	1e 5f       	subi	r17, 0xFE	; 254
    2ad4:	82 e0       	ldi	r24, 0x02	; 2
    2ad6:	01 e0       	ldi	r16, 0x01	; 1
    2ad8:	08 0f       	add	r16, r24
    2ada:	f3 01       	movw	r30, r6
    2adc:	e8 0f       	add	r30, r24
    2ade:	f1 1d       	adc	r31, r1
    2ae0:	80 81       	ld	r24, Z
    2ae2:	b7 01       	movw	r22, r14
    2ae4:	90 e0       	ldi	r25, 0x00	; 0
    2ae6:	10 d7       	rcall	.+3616   	; 0x3908 <fputc>
    2ae8:	80 2f       	mov	r24, r16
    2aea:	01 13       	cpse	r16, r17
    2aec:	f4 cf       	rjmp	.-24     	; 0x2ad6 <vfprintf+0x35e>
    2aee:	e8 cf       	rjmp	.-48     	; 0x2ac0 <vfprintf+0x348>
    2af0:	85 e4       	ldi	r24, 0x45	; 69
    2af2:	90 e0       	ldi	r25, 0x00	; 0
    2af4:	b7 01       	movw	r22, r14
    2af6:	08 d7       	rcall	.+3600   	; 0x3908 <fputc>
    2af8:	d7 fc       	sbrc	r13, 7
    2afa:	06 c0       	rjmp	.+12     	; 0x2b08 <vfprintf+0x390>
    2afc:	c1 14       	cp	r12, r1
    2afe:	d1 04       	cpc	r13, r1
    2b00:	41 f4       	brne	.+16     	; 0x2b12 <vfprintf+0x39a>
    2b02:	ec 85       	ldd	r30, Y+12	; 0x0c
    2b04:	e4 ff       	sbrs	r30, 4
    2b06:	05 c0       	rjmp	.+10     	; 0x2b12 <vfprintf+0x39a>
    2b08:	d1 94       	neg	r13
    2b0a:	c1 94       	neg	r12
    2b0c:	d1 08       	sbc	r13, r1
    2b0e:	8d e2       	ldi	r24, 0x2D	; 45
    2b10:	01 c0       	rjmp	.+2      	; 0x2b14 <vfprintf+0x39c>
    2b12:	8b e2       	ldi	r24, 0x2B	; 43
    2b14:	b7 01       	movw	r22, r14
    2b16:	90 e0       	ldi	r25, 0x00	; 0
    2b18:	f7 d6       	rcall	.+3566   	; 0x3908 <fputc>
    2b1a:	80 e3       	ldi	r24, 0x30	; 48
    2b1c:	2a e0       	ldi	r18, 0x0A	; 10
    2b1e:	c2 16       	cp	r12, r18
    2b20:	d1 04       	cpc	r13, r1
    2b22:	2c f0       	brlt	.+10     	; 0x2b2e <vfprintf+0x3b6>
    2b24:	8f 5f       	subi	r24, 0xFF	; 255
    2b26:	fa e0       	ldi	r31, 0x0A	; 10
    2b28:	cf 1a       	sub	r12, r31
    2b2a:	d1 08       	sbc	r13, r1
    2b2c:	f7 cf       	rjmp	.-18     	; 0x2b1c <vfprintf+0x3a4>
    2b2e:	b7 01       	movw	r22, r14
    2b30:	90 e0       	ldi	r25, 0x00	; 0
    2b32:	ea d6       	rcall	.+3540   	; 0x3908 <fputc>
    2b34:	b7 01       	movw	r22, r14
    2b36:	c6 01       	movw	r24, r12
    2b38:	c0 96       	adiw	r24, 0x30	; 48
    2b3a:	e6 d6       	rcall	.+3532   	; 0x3908 <fputc>
    2b3c:	49 c1       	rjmp	.+658    	; 0x2dd0 <vfprintf+0x658>
    2b3e:	83 36       	cpi	r24, 0x63	; 99
    2b40:	31 f0       	breq	.+12     	; 0x2b4e <vfprintf+0x3d6>
    2b42:	83 37       	cpi	r24, 0x73	; 115
    2b44:	79 f0       	breq	.+30     	; 0x2b64 <vfprintf+0x3ec>
    2b46:	83 35       	cpi	r24, 0x53	; 83
    2b48:	09 f0       	breq	.+2      	; 0x2b4c <vfprintf+0x3d4>
    2b4a:	52 c0       	rjmp	.+164    	; 0x2bf0 <vfprintf+0x478>
    2b4c:	1f c0       	rjmp	.+62     	; 0x2b8c <vfprintf+0x414>
    2b4e:	56 01       	movw	r10, r12
    2b50:	32 e0       	ldi	r19, 0x02	; 2
    2b52:	a3 0e       	add	r10, r19
    2b54:	b1 1c       	adc	r11, r1
    2b56:	f6 01       	movw	r30, r12
    2b58:	80 81       	ld	r24, Z
    2b5a:	89 83       	std	Y+1, r24	; 0x01
    2b5c:	01 e0       	ldi	r16, 0x01	; 1
    2b5e:	10 e0       	ldi	r17, 0x00	; 0
    2b60:	63 01       	movw	r12, r6
    2b62:	11 c0       	rjmp	.+34     	; 0x2b86 <vfprintf+0x40e>
    2b64:	56 01       	movw	r10, r12
    2b66:	f2 e0       	ldi	r31, 0x02	; 2
    2b68:	af 0e       	add	r10, r31
    2b6a:	b1 1c       	adc	r11, r1
    2b6c:	f6 01       	movw	r30, r12
    2b6e:	c0 80       	ld	r12, Z
    2b70:	d1 80       	ldd	r13, Z+1	; 0x01
    2b72:	96 fe       	sbrs	r9, 6
    2b74:	03 c0       	rjmp	.+6      	; 0x2b7c <vfprintf+0x404>
    2b76:	61 2f       	mov	r22, r17
    2b78:	70 e0       	ldi	r23, 0x00	; 0
    2b7a:	02 c0       	rjmp	.+4      	; 0x2b80 <vfprintf+0x408>
    2b7c:	6f ef       	ldi	r22, 0xFF	; 255
    2b7e:	7f ef       	ldi	r23, 0xFF	; 255
    2b80:	c6 01       	movw	r24, r12
    2b82:	79 d6       	rcall	.+3314   	; 0x3876 <strnlen>
    2b84:	8c 01       	movw	r16, r24
    2b86:	f9 2d       	mov	r31, r9
    2b88:	ff 77       	andi	r31, 0x7F	; 127
    2b8a:	13 c0       	rjmp	.+38     	; 0x2bb2 <vfprintf+0x43a>
    2b8c:	56 01       	movw	r10, r12
    2b8e:	22 e0       	ldi	r18, 0x02	; 2
    2b90:	a2 0e       	add	r10, r18
    2b92:	b1 1c       	adc	r11, r1
    2b94:	f6 01       	movw	r30, r12
    2b96:	c0 80       	ld	r12, Z
    2b98:	d1 80       	ldd	r13, Z+1	; 0x01
    2b9a:	96 fe       	sbrs	r9, 6
    2b9c:	03 c0       	rjmp	.+6      	; 0x2ba4 <vfprintf+0x42c>
    2b9e:	61 2f       	mov	r22, r17
    2ba0:	70 e0       	ldi	r23, 0x00	; 0
    2ba2:	02 c0       	rjmp	.+4      	; 0x2ba8 <vfprintf+0x430>
    2ba4:	6f ef       	ldi	r22, 0xFF	; 255
    2ba6:	7f ef       	ldi	r23, 0xFF	; 255
    2ba8:	c6 01       	movw	r24, r12
    2baa:	4c d6       	rcall	.+3224   	; 0x3844 <strnlen_P>
    2bac:	8c 01       	movw	r16, r24
    2bae:	f9 2d       	mov	r31, r9
    2bb0:	f0 68       	ori	r31, 0x80	; 128
    2bb2:	9f 2e       	mov	r9, r31
    2bb4:	f3 fd       	sbrc	r31, 3
    2bb6:	18 c0       	rjmp	.+48     	; 0x2be8 <vfprintf+0x470>
    2bb8:	85 2d       	mov	r24, r5
    2bba:	90 e0       	ldi	r25, 0x00	; 0
    2bbc:	08 17       	cp	r16, r24
    2bbe:	19 07       	cpc	r17, r25
    2bc0:	98 f4       	brcc	.+38     	; 0x2be8 <vfprintf+0x470>
    2bc2:	b7 01       	movw	r22, r14
    2bc4:	80 e2       	ldi	r24, 0x20	; 32
    2bc6:	90 e0       	ldi	r25, 0x00	; 0
    2bc8:	9f d6       	rcall	.+3390   	; 0x3908 <fputc>
    2bca:	5a 94       	dec	r5
    2bcc:	f5 cf       	rjmp	.-22     	; 0x2bb8 <vfprintf+0x440>
    2bce:	f6 01       	movw	r30, r12
    2bd0:	97 fc       	sbrc	r9, 7
    2bd2:	85 91       	lpm	r24, Z+
    2bd4:	97 fe       	sbrs	r9, 7
    2bd6:	81 91       	ld	r24, Z+
    2bd8:	6f 01       	movw	r12, r30
    2bda:	b7 01       	movw	r22, r14
    2bdc:	90 e0       	ldi	r25, 0x00	; 0
    2bde:	94 d6       	rcall	.+3368   	; 0x3908 <fputc>
    2be0:	51 10       	cpse	r5, r1
    2be2:	5a 94       	dec	r5
    2be4:	01 50       	subi	r16, 0x01	; 1
    2be6:	11 09       	sbc	r17, r1
    2be8:	01 15       	cp	r16, r1
    2bea:	11 05       	cpc	r17, r1
    2bec:	81 f7       	brne	.-32     	; 0x2bce <vfprintf+0x456>
    2bee:	f0 c0       	rjmp	.+480    	; 0x2dd0 <vfprintf+0x658>
    2bf0:	84 36       	cpi	r24, 0x64	; 100
    2bf2:	11 f0       	breq	.+4      	; 0x2bf8 <vfprintf+0x480>
    2bf4:	89 36       	cpi	r24, 0x69	; 105
    2bf6:	59 f5       	brne	.+86     	; 0x2c4e <vfprintf+0x4d6>
    2bf8:	56 01       	movw	r10, r12
    2bfa:	97 fe       	sbrs	r9, 7
    2bfc:	09 c0       	rjmp	.+18     	; 0x2c10 <vfprintf+0x498>
    2bfe:	24 e0       	ldi	r18, 0x04	; 4
    2c00:	a2 0e       	add	r10, r18
    2c02:	b1 1c       	adc	r11, r1
    2c04:	f6 01       	movw	r30, r12
    2c06:	60 81       	ld	r22, Z
    2c08:	71 81       	ldd	r23, Z+1	; 0x01
    2c0a:	82 81       	ldd	r24, Z+2	; 0x02
    2c0c:	93 81       	ldd	r25, Z+3	; 0x03
    2c0e:	0a c0       	rjmp	.+20     	; 0x2c24 <vfprintf+0x4ac>
    2c10:	f2 e0       	ldi	r31, 0x02	; 2
    2c12:	af 0e       	add	r10, r31
    2c14:	b1 1c       	adc	r11, r1
    2c16:	f6 01       	movw	r30, r12
    2c18:	60 81       	ld	r22, Z
    2c1a:	71 81       	ldd	r23, Z+1	; 0x01
    2c1c:	07 2e       	mov	r0, r23
    2c1e:	00 0c       	add	r0, r0
    2c20:	88 0b       	sbc	r24, r24
    2c22:	99 0b       	sbc	r25, r25
    2c24:	f9 2d       	mov	r31, r9
    2c26:	ff 76       	andi	r31, 0x6F	; 111
    2c28:	9f 2e       	mov	r9, r31
    2c2a:	97 ff       	sbrs	r25, 7
    2c2c:	09 c0       	rjmp	.+18     	; 0x2c40 <vfprintf+0x4c8>
    2c2e:	90 95       	com	r25
    2c30:	80 95       	com	r24
    2c32:	70 95       	com	r23
    2c34:	61 95       	neg	r22
    2c36:	7f 4f       	sbci	r23, 0xFF	; 255
    2c38:	8f 4f       	sbci	r24, 0xFF	; 255
    2c3a:	9f 4f       	sbci	r25, 0xFF	; 255
    2c3c:	f0 68       	ori	r31, 0x80	; 128
    2c3e:	9f 2e       	mov	r9, r31
    2c40:	2a e0       	ldi	r18, 0x0A	; 10
    2c42:	30 e0       	ldi	r19, 0x00	; 0
    2c44:	a3 01       	movw	r20, r6
    2c46:	d5 d6       	rcall	.+3498   	; 0x39f2 <__ultoa_invert>
    2c48:	c8 2e       	mov	r12, r24
    2c4a:	c6 18       	sub	r12, r6
    2c4c:	3e c0       	rjmp	.+124    	; 0x2cca <vfprintf+0x552>
    2c4e:	09 2d       	mov	r16, r9
    2c50:	85 37       	cpi	r24, 0x75	; 117
    2c52:	21 f4       	brne	.+8      	; 0x2c5c <vfprintf+0x4e4>
    2c54:	0f 7e       	andi	r16, 0xEF	; 239
    2c56:	2a e0       	ldi	r18, 0x0A	; 10
    2c58:	30 e0       	ldi	r19, 0x00	; 0
    2c5a:	1d c0       	rjmp	.+58     	; 0x2c96 <vfprintf+0x51e>
    2c5c:	09 7f       	andi	r16, 0xF9	; 249
    2c5e:	8f 36       	cpi	r24, 0x6F	; 111
    2c60:	91 f0       	breq	.+36     	; 0x2c86 <vfprintf+0x50e>
    2c62:	18 f4       	brcc	.+6      	; 0x2c6a <vfprintf+0x4f2>
    2c64:	88 35       	cpi	r24, 0x58	; 88
    2c66:	59 f0       	breq	.+22     	; 0x2c7e <vfprintf+0x506>
    2c68:	bc c0       	rjmp	.+376    	; 0x2de2 <vfprintf+0x66a>
    2c6a:	80 37       	cpi	r24, 0x70	; 112
    2c6c:	19 f0       	breq	.+6      	; 0x2c74 <vfprintf+0x4fc>
    2c6e:	88 37       	cpi	r24, 0x78	; 120
    2c70:	11 f0       	breq	.+4      	; 0x2c76 <vfprintf+0x4fe>
    2c72:	b7 c0       	rjmp	.+366    	; 0x2de2 <vfprintf+0x66a>
    2c74:	00 61       	ori	r16, 0x10	; 16
    2c76:	04 ff       	sbrs	r16, 4
    2c78:	09 c0       	rjmp	.+18     	; 0x2c8c <vfprintf+0x514>
    2c7a:	04 60       	ori	r16, 0x04	; 4
    2c7c:	07 c0       	rjmp	.+14     	; 0x2c8c <vfprintf+0x514>
    2c7e:	94 fe       	sbrs	r9, 4
    2c80:	08 c0       	rjmp	.+16     	; 0x2c92 <vfprintf+0x51a>
    2c82:	06 60       	ori	r16, 0x06	; 6
    2c84:	06 c0       	rjmp	.+12     	; 0x2c92 <vfprintf+0x51a>
    2c86:	28 e0       	ldi	r18, 0x08	; 8
    2c88:	30 e0       	ldi	r19, 0x00	; 0
    2c8a:	05 c0       	rjmp	.+10     	; 0x2c96 <vfprintf+0x51e>
    2c8c:	20 e1       	ldi	r18, 0x10	; 16
    2c8e:	30 e0       	ldi	r19, 0x00	; 0
    2c90:	02 c0       	rjmp	.+4      	; 0x2c96 <vfprintf+0x51e>
    2c92:	20 e1       	ldi	r18, 0x10	; 16
    2c94:	32 e0       	ldi	r19, 0x02	; 2
    2c96:	56 01       	movw	r10, r12
    2c98:	07 ff       	sbrs	r16, 7
    2c9a:	09 c0       	rjmp	.+18     	; 0x2cae <vfprintf+0x536>
    2c9c:	84 e0       	ldi	r24, 0x04	; 4
    2c9e:	a8 0e       	add	r10, r24
    2ca0:	b1 1c       	adc	r11, r1
    2ca2:	f6 01       	movw	r30, r12
    2ca4:	60 81       	ld	r22, Z
    2ca6:	71 81       	ldd	r23, Z+1	; 0x01
    2ca8:	82 81       	ldd	r24, Z+2	; 0x02
    2caa:	93 81       	ldd	r25, Z+3	; 0x03
    2cac:	08 c0       	rjmp	.+16     	; 0x2cbe <vfprintf+0x546>
    2cae:	f2 e0       	ldi	r31, 0x02	; 2
    2cb0:	af 0e       	add	r10, r31
    2cb2:	b1 1c       	adc	r11, r1
    2cb4:	f6 01       	movw	r30, r12
    2cb6:	60 81       	ld	r22, Z
    2cb8:	71 81       	ldd	r23, Z+1	; 0x01
    2cba:	80 e0       	ldi	r24, 0x00	; 0
    2cbc:	90 e0       	ldi	r25, 0x00	; 0
    2cbe:	a3 01       	movw	r20, r6
    2cc0:	98 d6       	rcall	.+3376   	; 0x39f2 <__ultoa_invert>
    2cc2:	c8 2e       	mov	r12, r24
    2cc4:	c6 18       	sub	r12, r6
    2cc6:	0f 77       	andi	r16, 0x7F	; 127
    2cc8:	90 2e       	mov	r9, r16
    2cca:	96 fe       	sbrs	r9, 6
    2ccc:	0b c0       	rjmp	.+22     	; 0x2ce4 <vfprintf+0x56c>
    2cce:	09 2d       	mov	r16, r9
    2cd0:	0e 7f       	andi	r16, 0xFE	; 254
    2cd2:	c1 16       	cp	r12, r17
    2cd4:	50 f4       	brcc	.+20     	; 0x2cea <vfprintf+0x572>
    2cd6:	94 fe       	sbrs	r9, 4
    2cd8:	0a c0       	rjmp	.+20     	; 0x2cee <vfprintf+0x576>
    2cda:	92 fc       	sbrc	r9, 2
    2cdc:	08 c0       	rjmp	.+16     	; 0x2cee <vfprintf+0x576>
    2cde:	09 2d       	mov	r16, r9
    2ce0:	0e 7e       	andi	r16, 0xEE	; 238
    2ce2:	05 c0       	rjmp	.+10     	; 0x2cee <vfprintf+0x576>
    2ce4:	dc 2c       	mov	r13, r12
    2ce6:	09 2d       	mov	r16, r9
    2ce8:	03 c0       	rjmp	.+6      	; 0x2cf0 <vfprintf+0x578>
    2cea:	dc 2c       	mov	r13, r12
    2cec:	01 c0       	rjmp	.+2      	; 0x2cf0 <vfprintf+0x578>
    2cee:	d1 2e       	mov	r13, r17
    2cf0:	04 ff       	sbrs	r16, 4
    2cf2:	0d c0       	rjmp	.+26     	; 0x2d0e <vfprintf+0x596>
    2cf4:	fe 01       	movw	r30, r28
    2cf6:	ec 0d       	add	r30, r12
    2cf8:	f1 1d       	adc	r31, r1
    2cfa:	80 81       	ld	r24, Z
    2cfc:	80 33       	cpi	r24, 0x30	; 48
    2cfe:	11 f4       	brne	.+4      	; 0x2d04 <vfprintf+0x58c>
    2d00:	09 7e       	andi	r16, 0xE9	; 233
    2d02:	09 c0       	rjmp	.+18     	; 0x2d16 <vfprintf+0x59e>
    2d04:	02 ff       	sbrs	r16, 2
    2d06:	06 c0       	rjmp	.+12     	; 0x2d14 <vfprintf+0x59c>
    2d08:	d3 94       	inc	r13
    2d0a:	d3 94       	inc	r13
    2d0c:	04 c0       	rjmp	.+8      	; 0x2d16 <vfprintf+0x59e>
    2d0e:	80 2f       	mov	r24, r16
    2d10:	86 78       	andi	r24, 0x86	; 134
    2d12:	09 f0       	breq	.+2      	; 0x2d16 <vfprintf+0x59e>
    2d14:	d3 94       	inc	r13
    2d16:	03 fd       	sbrc	r16, 3
    2d18:	10 c0       	rjmp	.+32     	; 0x2d3a <vfprintf+0x5c2>
    2d1a:	00 ff       	sbrs	r16, 0
    2d1c:	06 c0       	rjmp	.+12     	; 0x2d2a <vfprintf+0x5b2>
    2d1e:	1c 2d       	mov	r17, r12
    2d20:	d5 14       	cp	r13, r5
    2d22:	78 f4       	brcc	.+30     	; 0x2d42 <vfprintf+0x5ca>
    2d24:	15 0d       	add	r17, r5
    2d26:	1d 19       	sub	r17, r13
    2d28:	0c c0       	rjmp	.+24     	; 0x2d42 <vfprintf+0x5ca>
    2d2a:	d5 14       	cp	r13, r5
    2d2c:	50 f4       	brcc	.+20     	; 0x2d42 <vfprintf+0x5ca>
    2d2e:	b7 01       	movw	r22, r14
    2d30:	80 e2       	ldi	r24, 0x20	; 32
    2d32:	90 e0       	ldi	r25, 0x00	; 0
    2d34:	e9 d5       	rcall	.+3026   	; 0x3908 <fputc>
    2d36:	d3 94       	inc	r13
    2d38:	f8 cf       	rjmp	.-16     	; 0x2d2a <vfprintf+0x5b2>
    2d3a:	d5 14       	cp	r13, r5
    2d3c:	10 f4       	brcc	.+4      	; 0x2d42 <vfprintf+0x5ca>
    2d3e:	5d 18       	sub	r5, r13
    2d40:	01 c0       	rjmp	.+2      	; 0x2d44 <vfprintf+0x5cc>
    2d42:	51 2c       	mov	r5, r1
    2d44:	04 ff       	sbrs	r16, 4
    2d46:	0f c0       	rjmp	.+30     	; 0x2d66 <vfprintf+0x5ee>
    2d48:	b7 01       	movw	r22, r14
    2d4a:	80 e3       	ldi	r24, 0x30	; 48
    2d4c:	90 e0       	ldi	r25, 0x00	; 0
    2d4e:	dc d5       	rcall	.+3000   	; 0x3908 <fputc>
    2d50:	02 ff       	sbrs	r16, 2
    2d52:	16 c0       	rjmp	.+44     	; 0x2d80 <vfprintf+0x608>
    2d54:	01 fd       	sbrc	r16, 1
    2d56:	03 c0       	rjmp	.+6      	; 0x2d5e <vfprintf+0x5e6>
    2d58:	88 e7       	ldi	r24, 0x78	; 120
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	02 c0       	rjmp	.+4      	; 0x2d62 <vfprintf+0x5ea>
    2d5e:	88 e5       	ldi	r24, 0x58	; 88
    2d60:	90 e0       	ldi	r25, 0x00	; 0
    2d62:	b7 01       	movw	r22, r14
    2d64:	0c c0       	rjmp	.+24     	; 0x2d7e <vfprintf+0x606>
    2d66:	80 2f       	mov	r24, r16
    2d68:	86 78       	andi	r24, 0x86	; 134
    2d6a:	51 f0       	breq	.+20     	; 0x2d80 <vfprintf+0x608>
    2d6c:	01 ff       	sbrs	r16, 1
    2d6e:	02 c0       	rjmp	.+4      	; 0x2d74 <vfprintf+0x5fc>
    2d70:	8b e2       	ldi	r24, 0x2B	; 43
    2d72:	01 c0       	rjmp	.+2      	; 0x2d76 <vfprintf+0x5fe>
    2d74:	80 e2       	ldi	r24, 0x20	; 32
    2d76:	07 fd       	sbrc	r16, 7
    2d78:	8d e2       	ldi	r24, 0x2D	; 45
    2d7a:	b7 01       	movw	r22, r14
    2d7c:	90 e0       	ldi	r25, 0x00	; 0
    2d7e:	c4 d5       	rcall	.+2952   	; 0x3908 <fputc>
    2d80:	c1 16       	cp	r12, r17
    2d82:	30 f4       	brcc	.+12     	; 0x2d90 <vfprintf+0x618>
    2d84:	b7 01       	movw	r22, r14
    2d86:	80 e3       	ldi	r24, 0x30	; 48
    2d88:	90 e0       	ldi	r25, 0x00	; 0
    2d8a:	be d5       	rcall	.+2940   	; 0x3908 <fputc>
    2d8c:	11 50       	subi	r17, 0x01	; 1
    2d8e:	f8 cf       	rjmp	.-16     	; 0x2d80 <vfprintf+0x608>
    2d90:	ca 94       	dec	r12
    2d92:	f3 01       	movw	r30, r6
    2d94:	ec 0d       	add	r30, r12
    2d96:	f1 1d       	adc	r31, r1
    2d98:	80 81       	ld	r24, Z
    2d9a:	b7 01       	movw	r22, r14
    2d9c:	90 e0       	ldi	r25, 0x00	; 0
    2d9e:	b4 d5       	rcall	.+2920   	; 0x3908 <fputc>
    2da0:	c1 10       	cpse	r12, r1
    2da2:	f6 cf       	rjmp	.-20     	; 0x2d90 <vfprintf+0x618>
    2da4:	15 c0       	rjmp	.+42     	; 0x2dd0 <vfprintf+0x658>
    2da6:	f4 e0       	ldi	r31, 0x04	; 4
    2da8:	f5 15       	cp	r31, r5
    2daa:	50 f5       	brcc	.+84     	; 0x2e00 <vfprintf+0x688>
    2dac:	84 e0       	ldi	r24, 0x04	; 4
    2dae:	58 1a       	sub	r5, r24
    2db0:	93 fe       	sbrs	r9, 3
    2db2:	1e c0       	rjmp	.+60     	; 0x2df0 <vfprintf+0x678>
    2db4:	01 11       	cpse	r16, r1
    2db6:	25 c0       	rjmp	.+74     	; 0x2e02 <vfprintf+0x68a>
    2db8:	2c 85       	ldd	r18, Y+12	; 0x0c
    2dba:	23 ff       	sbrs	r18, 3
    2dbc:	27 c0       	rjmp	.+78     	; 0x2e0c <vfprintf+0x694>
    2dbe:	06 e0       	ldi	r16, 0x06	; 6
    2dc0:	11 e0       	ldi	r17, 0x01	; 1
    2dc2:	39 2d       	mov	r19, r9
    2dc4:	30 71       	andi	r19, 0x10	; 16
    2dc6:	93 2e       	mov	r9, r19
    2dc8:	f8 01       	movw	r30, r16
    2dca:	84 91       	lpm	r24, Z
    2dcc:	81 11       	cpse	r24, r1
    2dce:	21 c0       	rjmp	.+66     	; 0x2e12 <vfprintf+0x69a>
    2dd0:	55 20       	and	r5, r5
    2dd2:	09 f4       	brne	.+2      	; 0x2dd6 <vfprintf+0x65e>
    2dd4:	fc cc       	rjmp	.-1544   	; 0x27ce <vfprintf+0x56>
    2dd6:	b7 01       	movw	r22, r14
    2dd8:	80 e2       	ldi	r24, 0x20	; 32
    2dda:	90 e0       	ldi	r25, 0x00	; 0
    2ddc:	95 d5       	rcall	.+2858   	; 0x3908 <fputc>
    2dde:	5a 94       	dec	r5
    2de0:	f7 cf       	rjmp	.-18     	; 0x2dd0 <vfprintf+0x658>
    2de2:	f7 01       	movw	r30, r14
    2de4:	86 81       	ldd	r24, Z+6	; 0x06
    2de6:	97 81       	ldd	r25, Z+7	; 0x07
    2de8:	23 c0       	rjmp	.+70     	; 0x2e30 <vfprintf+0x6b8>
    2dea:	8f ef       	ldi	r24, 0xFF	; 255
    2dec:	9f ef       	ldi	r25, 0xFF	; 255
    2dee:	20 c0       	rjmp	.+64     	; 0x2e30 <vfprintf+0x6b8>
    2df0:	b7 01       	movw	r22, r14
    2df2:	80 e2       	ldi	r24, 0x20	; 32
    2df4:	90 e0       	ldi	r25, 0x00	; 0
    2df6:	88 d5       	rcall	.+2832   	; 0x3908 <fputc>
    2df8:	5a 94       	dec	r5
    2dfa:	51 10       	cpse	r5, r1
    2dfc:	f9 cf       	rjmp	.-14     	; 0x2df0 <vfprintf+0x678>
    2dfe:	da cf       	rjmp	.-76     	; 0x2db4 <vfprintf+0x63c>
    2e00:	51 2c       	mov	r5, r1
    2e02:	b7 01       	movw	r22, r14
    2e04:	80 2f       	mov	r24, r16
    2e06:	90 e0       	ldi	r25, 0x00	; 0
    2e08:	7f d5       	rcall	.+2814   	; 0x3908 <fputc>
    2e0a:	d6 cf       	rjmp	.-84     	; 0x2db8 <vfprintf+0x640>
    2e0c:	0a e0       	ldi	r16, 0x0A	; 10
    2e0e:	11 e0       	ldi	r17, 0x01	; 1
    2e10:	d8 cf       	rjmp	.-80     	; 0x2dc2 <vfprintf+0x64a>
    2e12:	91 10       	cpse	r9, r1
    2e14:	80 52       	subi	r24, 0x20	; 32
    2e16:	b7 01       	movw	r22, r14
    2e18:	90 e0       	ldi	r25, 0x00	; 0
    2e1a:	76 d5       	rcall	.+2796   	; 0x3908 <fputc>
    2e1c:	0f 5f       	subi	r16, 0xFF	; 255
    2e1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2e20:	d3 cf       	rjmp	.-90     	; 0x2dc8 <vfprintf+0x650>
    2e22:	23 e0       	ldi	r18, 0x03	; 3
    2e24:	25 15       	cp	r18, r5
    2e26:	10 f4       	brcc	.+4      	; 0x2e2c <vfprintf+0x6b4>
    2e28:	83 e0       	ldi	r24, 0x03	; 3
    2e2a:	c1 cf       	rjmp	.-126    	; 0x2dae <vfprintf+0x636>
    2e2c:	51 2c       	mov	r5, r1
    2e2e:	c4 cf       	rjmp	.-120    	; 0x2db8 <vfprintf+0x640>
    2e30:	60 96       	adiw	r28, 0x10	; 16
    2e32:	e2 e1       	ldi	r30, 0x12	; 18
    2e34:	f9 c3       	rjmp	.+2034   	; 0x3628 <__epilogue_restores__>

00002e36 <putval>:
    2e36:	20 fd       	sbrc	r18, 0
    2e38:	09 c0       	rjmp	.+18     	; 0x2e4c <putval+0x16>
    2e3a:	fc 01       	movw	r30, r24
    2e3c:	23 fd       	sbrc	r18, 3
    2e3e:	05 c0       	rjmp	.+10     	; 0x2e4a <putval+0x14>
    2e40:	22 ff       	sbrs	r18, 2
    2e42:	02 c0       	rjmp	.+4      	; 0x2e48 <putval+0x12>
    2e44:	73 83       	std	Z+3, r23	; 0x03
    2e46:	62 83       	std	Z+2, r22	; 0x02
    2e48:	51 83       	std	Z+1, r21	; 0x01
    2e4a:	40 83       	st	Z, r20
    2e4c:	08 95       	ret

00002e4e <mulacc>:
    2e4e:	44 fd       	sbrc	r20, 4
    2e50:	17 c0       	rjmp	.+46     	; 0x2e80 <mulacc+0x32>
    2e52:	46 fd       	sbrc	r20, 6
    2e54:	17 c0       	rjmp	.+46     	; 0x2e84 <mulacc+0x36>
    2e56:	ab 01       	movw	r20, r22
    2e58:	bc 01       	movw	r22, r24
    2e5a:	da 01       	movw	r26, r20
    2e5c:	fb 01       	movw	r30, r22
    2e5e:	aa 0f       	add	r26, r26
    2e60:	bb 1f       	adc	r27, r27
    2e62:	ee 1f       	adc	r30, r30
    2e64:	ff 1f       	adc	r31, r31
    2e66:	10 94       	com	r1
    2e68:	d1 f7       	brne	.-12     	; 0x2e5e <mulacc+0x10>
    2e6a:	4a 0f       	add	r20, r26
    2e6c:	5b 1f       	adc	r21, r27
    2e6e:	6e 1f       	adc	r22, r30
    2e70:	7f 1f       	adc	r23, r31
    2e72:	cb 01       	movw	r24, r22
    2e74:	ba 01       	movw	r22, r20
    2e76:	66 0f       	add	r22, r22
    2e78:	77 1f       	adc	r23, r23
    2e7a:	88 1f       	adc	r24, r24
    2e7c:	99 1f       	adc	r25, r25
    2e7e:	09 c0       	rjmp	.+18     	; 0x2e92 <mulacc+0x44>
    2e80:	33 e0       	ldi	r19, 0x03	; 3
    2e82:	01 c0       	rjmp	.+2      	; 0x2e86 <mulacc+0x38>
    2e84:	34 e0       	ldi	r19, 0x04	; 4
    2e86:	66 0f       	add	r22, r22
    2e88:	77 1f       	adc	r23, r23
    2e8a:	88 1f       	adc	r24, r24
    2e8c:	99 1f       	adc	r25, r25
    2e8e:	31 50       	subi	r19, 0x01	; 1
    2e90:	d1 f7       	brne	.-12     	; 0x2e86 <mulacc+0x38>
    2e92:	62 0f       	add	r22, r18
    2e94:	71 1d       	adc	r23, r1
    2e96:	81 1d       	adc	r24, r1
    2e98:	91 1d       	adc	r25, r1
    2e9a:	08 95       	ret

00002e9c <skip_spaces>:
    2e9c:	0f 93       	push	r16
    2e9e:	1f 93       	push	r17
    2ea0:	cf 93       	push	r28
    2ea2:	df 93       	push	r29
    2ea4:	8c 01       	movw	r16, r24
    2ea6:	c8 01       	movw	r24, r16
    2ea8:	f1 d4       	rcall	.+2530   	; 0x388c <fgetc>
    2eaa:	ec 01       	movw	r28, r24
    2eac:	97 fd       	sbrc	r25, 7
    2eae:	06 c0       	rjmp	.+12     	; 0x2ebc <skip_spaces+0x20>
    2eb0:	ae d4       	rcall	.+2396   	; 0x380e <isspace>
    2eb2:	89 2b       	or	r24, r25
    2eb4:	c1 f7       	brne	.-16     	; 0x2ea6 <skip_spaces+0xa>
    2eb6:	b8 01       	movw	r22, r16
    2eb8:	ce 01       	movw	r24, r28
    2eba:	82 d5       	rcall	.+2820   	; 0x39c0 <ungetc>
    2ebc:	ce 01       	movw	r24, r28
    2ebe:	df 91       	pop	r29
    2ec0:	cf 91       	pop	r28
    2ec2:	1f 91       	pop	r17
    2ec4:	0f 91       	pop	r16
    2ec6:	08 95       	ret

00002ec8 <conv_int>:
    2ec8:	a0 e0       	ldi	r26, 0x00	; 0
    2eca:	b0 e0       	ldi	r27, 0x00	; 0
    2ecc:	e9 e6       	ldi	r30, 0x69	; 105
    2ece:	f7 e1       	ldi	r31, 0x17	; 23
    2ed0:	95 c3       	rjmp	.+1834   	; 0x35fc <__prologue_saves__+0xc>
    2ed2:	7c 01       	movw	r14, r24
    2ed4:	8b 01       	movw	r16, r22
    2ed6:	6a 01       	movw	r12, r20
    2ed8:	d2 2f       	mov	r29, r18
    2eda:	d8 d4       	rcall	.+2480   	; 0x388c <fgetc>
    2edc:	9c 01       	movw	r18, r24
    2ede:	33 27       	eor	r19, r19
    2ee0:	2b 32       	cpi	r18, 0x2B	; 43
    2ee2:	31 05       	cpc	r19, r1
    2ee4:	21 f0       	breq	.+8      	; 0x2eee <conv_int+0x26>
    2ee6:	2d 32       	cpi	r18, 0x2D	; 45
    2ee8:	31 05       	cpc	r19, r1
    2eea:	51 f4       	brne	.+20     	; 0x2f00 <conv_int+0x38>
    2eec:	d0 68       	ori	r29, 0x80	; 128
    2eee:	01 50       	subi	r16, 0x01	; 1
    2ef0:	11 09       	sbc	r17, r1
    2ef2:	11 f4       	brne	.+4      	; 0x2ef8 <conv_int+0x30>
    2ef4:	80 e0       	ldi	r24, 0x00	; 0
    2ef6:	64 c0       	rjmp	.+200    	; 0x2fc0 <conv_int+0xf8>
    2ef8:	c7 01       	movw	r24, r14
    2efa:	c8 d4       	rcall	.+2448   	; 0x388c <fgetc>
    2efc:	97 fd       	sbrc	r25, 7
    2efe:	fa cf       	rjmp	.-12     	; 0x2ef4 <conv_int+0x2c>
    2f00:	cd 2f       	mov	r28, r29
    2f02:	cd 7f       	andi	r28, 0xFD	; 253
    2f04:	2d 2f       	mov	r18, r29
    2f06:	20 73       	andi	r18, 0x30	; 48
    2f08:	09 f5       	brne	.+66     	; 0x2f4c <conv_int+0x84>
    2f0a:	80 33       	cpi	r24, 0x30	; 48
    2f0c:	f9 f4       	brne	.+62     	; 0x2f4c <conv_int+0x84>
    2f0e:	58 01       	movw	r10, r16
    2f10:	81 e0       	ldi	r24, 0x01	; 1
    2f12:	a8 1a       	sub	r10, r24
    2f14:	b1 08       	sbc	r11, r1
    2f16:	09 f4       	brne	.+2      	; 0x2f1a <conv_int+0x52>
    2f18:	40 c0       	rjmp	.+128    	; 0x2f9a <conv_int+0xd2>
    2f1a:	c7 01       	movw	r24, r14
    2f1c:	b7 d4       	rcall	.+2414   	; 0x388c <fgetc>
    2f1e:	97 fd       	sbrc	r25, 7
    2f20:	3c c0       	rjmp	.+120    	; 0x2f9a <conv_int+0xd2>
    2f22:	9c 01       	movw	r18, r24
    2f24:	2f 7d       	andi	r18, 0xDF	; 223
    2f26:	33 27       	eor	r19, r19
    2f28:	28 35       	cpi	r18, 0x58	; 88
    2f2a:	31 05       	cpc	r19, r1
    2f2c:	49 f4       	brne	.+18     	; 0x2f40 <conv_int+0x78>
    2f2e:	c2 64       	ori	r28, 0x42	; 66
    2f30:	02 50       	subi	r16, 0x02	; 2
    2f32:	11 09       	sbc	r17, r1
    2f34:	91 f1       	breq	.+100    	; 0x2f9a <conv_int+0xd2>
    2f36:	c7 01       	movw	r24, r14
    2f38:	a9 d4       	rcall	.+2386   	; 0x388c <fgetc>
    2f3a:	97 ff       	sbrs	r25, 7
    2f3c:	07 c0       	rjmp	.+14     	; 0x2f4c <conv_int+0x84>
    2f3e:	2d c0       	rjmp	.+90     	; 0x2f9a <conv_int+0xd2>
    2f40:	d6 ff       	sbrs	r29, 6
    2f42:	02 c0       	rjmp	.+4      	; 0x2f48 <conv_int+0x80>
    2f44:	c2 60       	ori	r28, 0x02	; 2
    2f46:	01 c0       	rjmp	.+2      	; 0x2f4a <conv_int+0x82>
    2f48:	c2 61       	ori	r28, 0x12	; 18
    2f4a:	85 01       	movw	r16, r10
    2f4c:	81 2c       	mov	r8, r1
    2f4e:	91 2c       	mov	r9, r1
    2f50:	54 01       	movw	r10, r8
    2f52:	20 ed       	ldi	r18, 0xD0	; 208
    2f54:	28 0f       	add	r18, r24
    2f56:	28 30       	cpi	r18, 0x08	; 8
    2f58:	78 f0       	brcs	.+30     	; 0x2f78 <conv_int+0xb0>
    2f5a:	c4 ff       	sbrs	r28, 4
    2f5c:	03 c0       	rjmp	.+6      	; 0x2f64 <conv_int+0x9c>
    2f5e:	b7 01       	movw	r22, r14
    2f60:	2f d5       	rcall	.+2654   	; 0x39c0 <ungetc>
    2f62:	18 c0       	rjmp	.+48     	; 0x2f94 <conv_int+0xcc>
    2f64:	2a 30       	cpi	r18, 0x0A	; 10
    2f66:	40 f0       	brcs	.+16     	; 0x2f78 <conv_int+0xb0>
    2f68:	c6 ff       	sbrs	r28, 6
    2f6a:	f9 cf       	rjmp	.-14     	; 0x2f5e <conv_int+0x96>
    2f6c:	2f 7d       	andi	r18, 0xDF	; 223
    2f6e:	3f ee       	ldi	r19, 0xEF	; 239
    2f70:	32 0f       	add	r19, r18
    2f72:	36 30       	cpi	r19, 0x06	; 6
    2f74:	a0 f7       	brcc	.-24     	; 0x2f5e <conv_int+0x96>
    2f76:	27 50       	subi	r18, 0x07	; 7
    2f78:	4c 2f       	mov	r20, r28
    2f7a:	c5 01       	movw	r24, r10
    2f7c:	b4 01       	movw	r22, r8
    2f7e:	67 df       	rcall	.-306    	; 0x2e4e <mulacc>
    2f80:	4b 01       	movw	r8, r22
    2f82:	5c 01       	movw	r10, r24
    2f84:	c2 60       	ori	r28, 0x02	; 2
    2f86:	01 50       	subi	r16, 0x01	; 1
    2f88:	11 09       	sbc	r17, r1
    2f8a:	51 f0       	breq	.+20     	; 0x2fa0 <conv_int+0xd8>
    2f8c:	c7 01       	movw	r24, r14
    2f8e:	7e d4       	rcall	.+2300   	; 0x388c <fgetc>
    2f90:	97 ff       	sbrs	r25, 7
    2f92:	df cf       	rjmp	.-66     	; 0x2f52 <conv_int+0x8a>
    2f94:	c1 fd       	sbrc	r28, 1
    2f96:	04 c0       	rjmp	.+8      	; 0x2fa0 <conv_int+0xd8>
    2f98:	ad cf       	rjmp	.-166    	; 0x2ef4 <conv_int+0x2c>
    2f9a:	81 2c       	mov	r8, r1
    2f9c:	91 2c       	mov	r9, r1
    2f9e:	54 01       	movw	r10, r8
    2fa0:	c7 ff       	sbrs	r28, 7
    2fa2:	08 c0       	rjmp	.+16     	; 0x2fb4 <conv_int+0xec>
    2fa4:	b0 94       	com	r11
    2fa6:	a0 94       	com	r10
    2fa8:	90 94       	com	r9
    2faa:	80 94       	com	r8
    2fac:	81 1c       	adc	r8, r1
    2fae:	91 1c       	adc	r9, r1
    2fb0:	a1 1c       	adc	r10, r1
    2fb2:	b1 1c       	adc	r11, r1
    2fb4:	2c 2f       	mov	r18, r28
    2fb6:	b5 01       	movw	r22, r10
    2fb8:	a4 01       	movw	r20, r8
    2fba:	c6 01       	movw	r24, r12
    2fbc:	3c df       	rcall	.-392    	; 0x2e36 <putval>
    2fbe:	81 e0       	ldi	r24, 0x01	; 1
    2fc0:	cd b7       	in	r28, 0x3d	; 61
    2fc2:	de b7       	in	r29, 0x3e	; 62
    2fc4:	ec e0       	ldi	r30, 0x0C	; 12
    2fc6:	36 c3       	rjmp	.+1644   	; 0x3634 <__epilogue_restores__+0xc>

00002fc8 <conv_brk>:
    2fc8:	a0 e2       	ldi	r26, 0x20	; 32
    2fca:	b0 e0       	ldi	r27, 0x00	; 0
    2fcc:	e9 ee       	ldi	r30, 0xE9	; 233
    2fce:	f7 e1       	ldi	r31, 0x17	; 23
    2fd0:	11 c3       	rjmp	.+1570   	; 0x35f4 <__prologue_saves__+0x4>
    2fd2:	5c 01       	movw	r10, r24
    2fd4:	4b 01       	movw	r8, r22
    2fd6:	7a 01       	movw	r14, r20
    2fd8:	8e 01       	movw	r16, r28
    2fda:	0f 5f       	subi	r16, 0xFF	; 255
    2fdc:	1f 4f       	sbci	r17, 0xFF	; 255
    2fde:	68 01       	movw	r12, r16
    2fe0:	80 e2       	ldi	r24, 0x20	; 32
    2fe2:	f8 01       	movw	r30, r16
    2fe4:	11 92       	st	Z+, r1
    2fe6:	8a 95       	dec	r24
    2fe8:	e9 f7       	brne	.-6      	; 0x2fe4 <conv_brk+0x1c>
    2fea:	f5 01       	movw	r30, r10
    2fec:	53 80       	ldd	r5, Z+3	; 0x03
    2fee:	40 e0       	ldi	r20, 0x00	; 0
    2ff0:	50 e0       	ldi	r21, 0x00	; 0
    2ff2:	61 2c       	mov	r6, r1
    2ff4:	90 e0       	ldi	r25, 0x00	; 0
    2ff6:	71 2c       	mov	r7, r1
    2ff8:	a1 e0       	ldi	r26, 0x01	; 1
    2ffa:	b0 e0       	ldi	r27, 0x00	; 0
    2ffc:	f9 01       	movw	r30, r18
    2ffe:	53 fc       	sbrc	r5, 3
    3000:	85 91       	lpm	r24, Z+
    3002:	53 fe       	sbrs	r5, 3
    3004:	81 91       	ld	r24, Z+
    3006:	8f 01       	movw	r16, r30
    3008:	48 2e       	mov	r4, r24
    300a:	9f 01       	movw	r18, r30
    300c:	81 11       	cpse	r24, r1
    300e:	03 c0       	rjmp	.+6      	; 0x3016 <conv_brk+0x4e>
    3010:	80 e0       	ldi	r24, 0x00	; 0
    3012:	90 e0       	ldi	r25, 0x00	; 0
    3014:	94 c0       	rjmp	.+296    	; 0x313e <conv_brk+0x176>
    3016:	8e 35       	cpi	r24, 0x5E	; 94
    3018:	19 f4       	brne	.+6      	; 0x3020 <conv_brk+0x58>
    301a:	41 15       	cp	r20, r1
    301c:	51 05       	cpc	r21, r1
    301e:	51 f1       	breq	.+84     	; 0x3074 <conv_brk+0xac>
    3020:	67 2d       	mov	r22, r7
    3022:	70 e0       	ldi	r23, 0x00	; 0
    3024:	64 17       	cp	r22, r20
    3026:	75 07       	cpc	r23, r21
    3028:	3c f4       	brge	.+14     	; 0x3038 <conv_brk+0x70>
    302a:	8d 35       	cpi	r24, 0x5D	; 93
    302c:	61 f1       	breq	.+88     	; 0x3086 <conv_brk+0xbe>
    302e:	8d 32       	cpi	r24, 0x2D	; 45
    3030:	19 f4       	brne	.+6      	; 0x3038 <conv_brk+0x70>
    3032:	99 23       	and	r25, r25
    3034:	11 f1       	breq	.+68     	; 0x307a <conv_brk+0xb2>
    3036:	03 c0       	rjmp	.+6      	; 0x303e <conv_brk+0x76>
    3038:	99 23       	and	r25, r25
    303a:	09 f4       	brne	.+2      	; 0x303e <conv_brk+0x76>
    303c:	6b c0       	rjmp	.+214    	; 0x3114 <conv_brk+0x14c>
    303e:	84 2d       	mov	r24, r4
    3040:	86 95       	lsr	r24
    3042:	86 95       	lsr	r24
    3044:	86 95       	lsr	r24
    3046:	f6 01       	movw	r30, r12
    3048:	e8 0f       	add	r30, r24
    304a:	f1 1d       	adc	r31, r1
    304c:	84 2d       	mov	r24, r4
    304e:	87 70       	andi	r24, 0x07	; 7
    3050:	8d 01       	movw	r16, r26
    3052:	02 c0       	rjmp	.+4      	; 0x3058 <conv_brk+0x90>
    3054:	00 0f       	add	r16, r16
    3056:	11 1f       	adc	r17, r17
    3058:	8a 95       	dec	r24
    305a:	e2 f7       	brpl	.-8      	; 0x3054 <conv_brk+0x8c>
    305c:	c8 01       	movw	r24, r16
    305e:	90 81       	ld	r25, Z
    3060:	89 2b       	or	r24, r25
    3062:	80 83       	st	Z, r24
    3064:	64 14       	cp	r6, r4
    3066:	59 f0       	breq	.+22     	; 0x307e <conv_brk+0xb6>
    3068:	46 14       	cp	r4, r6
    306a:	10 f4       	brcc	.+4      	; 0x3070 <conv_brk+0xa8>
    306c:	43 94       	inc	r4
    306e:	e7 cf       	rjmp	.-50     	; 0x303e <conv_brk+0x76>
    3070:	4a 94       	dec	r4
    3072:	e5 cf       	rjmp	.-54     	; 0x303e <conv_brk+0x76>
    3074:	77 24       	eor	r7, r7
    3076:	73 94       	inc	r7
    3078:	03 c0       	rjmp	.+6      	; 0x3080 <conv_brk+0xb8>
    307a:	91 e0       	ldi	r25, 0x01	; 1
    307c:	01 c0       	rjmp	.+2      	; 0x3080 <conv_brk+0xb8>
    307e:	90 e0       	ldi	r25, 0x00	; 0
    3080:	4f 5f       	subi	r20, 0xFF	; 255
    3082:	5f 4f       	sbci	r21, 0xFF	; 255
    3084:	bb cf       	rjmp	.-138    	; 0x2ffc <conv_brk+0x34>
    3086:	99 23       	and	r25, r25
    3088:	19 f0       	breq	.+6      	; 0x3090 <conv_brk+0xc8>
    308a:	8e 81       	ldd	r24, Y+6	; 0x06
    308c:	80 62       	ori	r24, 0x20	; 32
    308e:	8e 83       	std	Y+6, r24	; 0x06
    3090:	71 10       	cpse	r7, r1
    3092:	03 c0       	rjmp	.+6      	; 0x309a <conv_brk+0xd2>
    3094:	77 24       	eor	r7, r7
    3096:	73 94       	inc	r7
    3098:	19 c0       	rjmp	.+50     	; 0x30cc <conv_brk+0x104>
    309a:	f6 01       	movw	r30, r12
    309c:	9e 01       	movw	r18, r28
    309e:	2f 5d       	subi	r18, 0xDF	; 223
    30a0:	3f 4f       	sbci	r19, 0xFF	; 255
    30a2:	80 81       	ld	r24, Z
    30a4:	80 95       	com	r24
    30a6:	81 93       	st	Z+, r24
    30a8:	2e 17       	cp	r18, r30
    30aa:	3f 07       	cpc	r19, r31
    30ac:	d1 f7       	brne	.-12     	; 0x30a2 <conv_brk+0xda>
    30ae:	f2 cf       	rjmp	.-28     	; 0x3094 <conv_brk+0xcc>
    30b0:	e1 14       	cp	r14, r1
    30b2:	f1 04       	cpc	r15, r1
    30b4:	31 f0       	breq	.+12     	; 0x30c2 <conv_brk+0xfa>
    30b6:	f7 01       	movw	r30, r14
    30b8:	80 83       	st	Z, r24
    30ba:	b7 01       	movw	r22, r14
    30bc:	6f 5f       	subi	r22, 0xFF	; 255
    30be:	7f 4f       	sbci	r23, 0xFF	; 255
    30c0:	7b 01       	movw	r14, r22
    30c2:	71 e0       	ldi	r23, 0x01	; 1
    30c4:	87 1a       	sub	r8, r23
    30c6:	91 08       	sbc	r9, r1
    30c8:	71 2c       	mov	r7, r1
    30ca:	e9 f0       	breq	.+58     	; 0x3106 <conv_brk+0x13e>
    30cc:	c5 01       	movw	r24, r10
    30ce:	de d3       	rcall	.+1980   	; 0x388c <fgetc>
    30d0:	97 fd       	sbrc	r25, 7
    30d2:	17 c0       	rjmp	.+46     	; 0x3102 <conv_brk+0x13a>
    30d4:	fc 01       	movw	r30, r24
    30d6:	ff 27       	eor	r31, r31
    30d8:	23 e0       	ldi	r18, 0x03	; 3
    30da:	f5 95       	asr	r31
    30dc:	e7 95       	ror	r30
    30de:	2a 95       	dec	r18
    30e0:	e1 f7       	brne	.-8      	; 0x30da <conv_brk+0x112>
    30e2:	ec 0d       	add	r30, r12
    30e4:	fd 1d       	adc	r31, r13
    30e6:	20 81       	ld	r18, Z
    30e8:	30 e0       	ldi	r19, 0x00	; 0
    30ea:	ac 01       	movw	r20, r24
    30ec:	47 70       	andi	r20, 0x07	; 7
    30ee:	55 27       	eor	r21, r21
    30f0:	02 c0       	rjmp	.+4      	; 0x30f6 <conv_brk+0x12e>
    30f2:	35 95       	asr	r19
    30f4:	27 95       	ror	r18
    30f6:	4a 95       	dec	r20
    30f8:	e2 f7       	brpl	.-8      	; 0x30f2 <conv_brk+0x12a>
    30fa:	20 fd       	sbrc	r18, 0
    30fc:	d9 cf       	rjmp	.-78     	; 0x30b0 <conv_brk+0xe8>
    30fe:	b5 01       	movw	r22, r10
    3100:	5f d4       	rcall	.+2238   	; 0x39c0 <ungetc>
    3102:	71 10       	cpse	r7, r1
    3104:	85 cf       	rjmp	.-246    	; 0x3010 <conv_brk+0x48>
    3106:	e1 14       	cp	r14, r1
    3108:	f1 04       	cpc	r15, r1
    310a:	11 f0       	breq	.+4      	; 0x3110 <conv_brk+0x148>
    310c:	f7 01       	movw	r30, r14
    310e:	10 82       	st	Z, r1
    3110:	c8 01       	movw	r24, r16
    3112:	15 c0       	rjmp	.+42     	; 0x313e <conv_brk+0x176>
    3114:	68 2f       	mov	r22, r24
    3116:	66 95       	lsr	r22
    3118:	66 95       	lsr	r22
    311a:	66 95       	lsr	r22
    311c:	f6 01       	movw	r30, r12
    311e:	e6 0f       	add	r30, r22
    3120:	f1 1d       	adc	r31, r1
    3122:	68 2f       	mov	r22, r24
    3124:	67 70       	andi	r22, 0x07	; 7
    3126:	8d 01       	movw	r16, r26
    3128:	02 c0       	rjmp	.+4      	; 0x312e <conv_brk+0x166>
    312a:	00 0f       	add	r16, r16
    312c:	11 1f       	adc	r17, r17
    312e:	6a 95       	dec	r22
    3130:	e2 f7       	brpl	.-8      	; 0x312a <conv_brk+0x162>
    3132:	b8 01       	movw	r22, r16
    3134:	70 81       	ld	r23, Z
    3136:	67 2b       	or	r22, r23
    3138:	60 83       	st	Z, r22
    313a:	68 2e       	mov	r6, r24
    313c:	a1 cf       	rjmp	.-190    	; 0x3080 <conv_brk+0xb8>
    313e:	a0 96       	adiw	r28, 0x20	; 32
    3140:	e0 e1       	ldi	r30, 0x10	; 16
    3142:	74 c2       	rjmp	.+1256   	; 0x362c <__epilogue_restores__+0x4>

00003144 <conv_flt>:
    3144:	2f 92       	push	r2
    3146:	3f 92       	push	r3
    3148:	4f 92       	push	r4
    314a:	5f 92       	push	r5
    314c:	6f 92       	push	r6
    314e:	7f 92       	push	r7
    3150:	9f 92       	push	r9
    3152:	af 92       	push	r10
    3154:	bf 92       	push	r11
    3156:	cf 92       	push	r12
    3158:	df 92       	push	r13
    315a:	ef 92       	push	r14
    315c:	ff 92       	push	r15
    315e:	0f 93       	push	r16
    3160:	1f 93       	push	r17
    3162:	cf 93       	push	r28
    3164:	df 93       	push	r29
    3166:	6c 01       	movw	r12, r24
    3168:	8b 01       	movw	r16, r22
    316a:	1a 01       	movw	r2, r20
    316c:	8f d3       	rcall	.+1822   	; 0x388c <fgetc>
    316e:	ec 01       	movw	r28, r24
    3170:	99 27       	eor	r25, r25
    3172:	8b 32       	cpi	r24, 0x2B	; 43
    3174:	91 05       	cpc	r25, r1
    3176:	29 f0       	breq	.+10     	; 0x3182 <conv_flt+0x3e>
    3178:	8d 97       	sbiw	r24, 0x2d	; 45
    317a:	79 f4       	brne	.+30     	; 0x319a <conv_flt+0x56>
    317c:	30 e8       	ldi	r19, 0x80	; 128
    317e:	93 2e       	mov	r9, r19
    3180:	01 c0       	rjmp	.+2      	; 0x3184 <conv_flt+0x40>
    3182:	91 2c       	mov	r9, r1
    3184:	01 50       	subi	r16, 0x01	; 1
    3186:	11 09       	sbc	r17, r1
    3188:	11 f4       	brne	.+4      	; 0x318e <conv_flt+0x4a>
    318a:	80 e0       	ldi	r24, 0x00	; 0
    318c:	fe c0       	rjmp	.+508    	; 0x338a <conv_flt+0x246>
    318e:	c6 01       	movw	r24, r12
    3190:	7d d3       	rcall	.+1786   	; 0x388c <fgetc>
    3192:	ec 01       	movw	r28, r24
    3194:	97 ff       	sbrs	r25, 7
    3196:	02 c0       	rjmp	.+4      	; 0x319c <conv_flt+0x58>
    3198:	f8 cf       	rjmp	.-16     	; 0x318a <conv_flt+0x46>
    319a:	91 2c       	mov	r9, r1
    319c:	ce 01       	movw	r24, r28
    319e:	3f d3       	rcall	.+1662   	; 0x381e <tolower>
    31a0:	89 36       	cpi	r24, 0x69	; 105
    31a2:	91 05       	cpc	r25, r1
    31a4:	31 f0       	breq	.+12     	; 0x31b2 <conv_flt+0x6e>
    31a6:	8e 36       	cpi	r24, 0x6E	; 110
    31a8:	91 05       	cpc	r25, r1
    31aa:	81 f5       	brne	.+96     	; 0x320c <conv_flt+0xc8>
    31ac:	c2 e8       	ldi	r28, 0x82	; 130
    31ae:	d4 e0       	ldi	r29, 0x04	; 4
    31b0:	02 c0       	rjmp	.+4      	; 0x31b6 <conv_flt+0x72>
    31b2:	c5 e8       	ldi	r28, 0x85	; 133
    31b4:	d4 e0       	ldi	r29, 0x04	; 4
    31b6:	21 96       	adiw	r28, 0x01	; 1
    31b8:	fe 01       	movw	r30, r28
    31ba:	31 97       	sbiw	r30, 0x01	; 1
    31bc:	b4 90       	lpm	r11, Z
    31be:	bb 20       	and	r11, r11
    31c0:	b1 f0       	breq	.+44     	; 0x31ee <conv_flt+0xaa>
    31c2:	01 50       	subi	r16, 0x01	; 1
    31c4:	11 09       	sbc	r17, r1
    31c6:	79 f0       	breq	.+30     	; 0x31e6 <conv_flt+0xa2>
    31c8:	c6 01       	movw	r24, r12
    31ca:	60 d3       	rcall	.+1728   	; 0x388c <fgetc>
    31cc:	7c 01       	movw	r14, r24
    31ce:	97 fd       	sbrc	r25, 7
    31d0:	0a c0       	rjmp	.+20     	; 0x31e6 <conv_flt+0xa2>
    31d2:	25 d3       	rcall	.+1610   	; 0x381e <tolower>
    31d4:	99 27       	eor	r25, r25
    31d6:	eb 2d       	mov	r30, r11
    31d8:	f0 e0       	ldi	r31, 0x00	; 0
    31da:	8e 17       	cp	r24, r30
    31dc:	9f 07       	cpc	r25, r31
    31de:	59 f3       	breq	.-42     	; 0x31b6 <conv_flt+0x72>
    31e0:	b6 01       	movw	r22, r12
    31e2:	c7 01       	movw	r24, r14
    31e4:	ed d3       	rcall	.+2010   	; 0x39c0 <ungetc>
    31e6:	c8 58       	subi	r28, 0x88	; 136
    31e8:	d4 40       	sbci	r29, 0x04	; 4
    31ea:	79 f6       	brne	.-98     	; 0x318a <conv_flt+0x46>
    31ec:	03 c0       	rjmp	.+6      	; 0x31f4 <conv_flt+0xb0>
    31ee:	c5 58       	subi	r28, 0x85	; 133
    31f0:	d4 40       	sbci	r29, 0x04	; 4
    31f2:	29 f0       	breq	.+10     	; 0x31fe <conv_flt+0xba>
    31f4:	80 e0       	ldi	r24, 0x00	; 0
    31f6:	90 e0       	ldi	r25, 0x00	; 0
    31f8:	a0 e8       	ldi	r26, 0x80	; 128
    31fa:	bf e7       	ldi	r27, 0x7F	; 127
    31fc:	04 c0       	rjmp	.+8      	; 0x3206 <conv_flt+0xc2>
    31fe:	80 e0       	ldi	r24, 0x00	; 0
    3200:	90 e0       	ldi	r25, 0x00	; 0
    3202:	a0 ec       	ldi	r26, 0xC0	; 192
    3204:	bf e7       	ldi	r27, 0x7F	; 127
    3206:	bc 01       	movw	r22, r24
    3208:	cd 01       	movw	r24, r26
    320a:	af c0       	rjmp	.+350    	; 0x336a <conv_flt+0x226>
    320c:	41 2c       	mov	r4, r1
    320e:	51 2c       	mov	r5, r1
    3210:	32 01       	movw	r6, r4
    3212:	e1 2c       	mov	r14, r1
    3214:	f1 2c       	mov	r15, r1
    3216:	2c 2f       	mov	r18, r28
    3218:	20 53       	subi	r18, 0x30	; 48
    321a:	2a 30       	cpi	r18, 0x0A	; 10
    321c:	08 f5       	brcc	.+66     	; 0x3260 <conv_flt+0x11c>
    321e:	e9 2d       	mov	r30, r9
    3220:	e2 60       	ori	r30, 0x02	; 2
    3222:	be 2e       	mov	r11, r30
    3224:	89 2d       	mov	r24, r9
    3226:	88 70       	andi	r24, 0x08	; 8
    3228:	92 fe       	sbrs	r9, 2
    322a:	06 c0       	rjmp	.+12     	; 0x3238 <conv_flt+0xf4>
    322c:	81 11       	cpse	r24, r1
    322e:	1f c0       	rjmp	.+62     	; 0x326e <conv_flt+0x12a>
    3230:	ff ef       	ldi	r31, 0xFF	; 255
    3232:	ef 1a       	sub	r14, r31
    3234:	ff 0a       	sbc	r15, r31
    3236:	1b c0       	rjmp	.+54     	; 0x326e <conv_flt+0x12a>
    3238:	88 23       	and	r24, r24
    323a:	19 f0       	breq	.+6      	; 0x3242 <conv_flt+0xfe>
    323c:	81 e0       	ldi	r24, 0x01	; 1
    323e:	e8 1a       	sub	r14, r24
    3240:	f1 08       	sbc	r15, r1
    3242:	40 e2       	ldi	r20, 0x20	; 32
    3244:	c3 01       	movw	r24, r6
    3246:	b2 01       	movw	r22, r4
    3248:	02 de       	rcall	.-1020   	; 0x2e4e <mulacc>
    324a:	2b 01       	movw	r4, r22
    324c:	3c 01       	movw	r6, r24
    324e:	68 39       	cpi	r22, 0x98	; 152
    3250:	79 49       	sbci	r23, 0x99	; 153
    3252:	89 49       	sbci	r24, 0x99	; 153
    3254:	99 41       	sbci	r25, 0x19	; 25
    3256:	58 f0       	brcs	.+22     	; 0x326e <conv_flt+0x12a>
    3258:	f9 2d       	mov	r31, r9
    325a:	f6 60       	ori	r31, 0x06	; 6
    325c:	bf 2e       	mov	r11, r31
    325e:	07 c0       	rjmp	.+14     	; 0x326e <conv_flt+0x12a>
    3260:	2e 3f       	cpi	r18, 0xFE	; 254
    3262:	81 f4       	brne	.+32     	; 0x3284 <conv_flt+0x140>
    3264:	93 fc       	sbrc	r9, 3
    3266:	0e c0       	rjmp	.+28     	; 0x3284 <conv_flt+0x140>
    3268:	29 2d       	mov	r18, r9
    326a:	28 60       	ori	r18, 0x08	; 8
    326c:	b2 2e       	mov	r11, r18
    326e:	01 50       	subi	r16, 0x01	; 1
    3270:	11 09       	sbc	r17, r1
    3272:	39 f0       	breq	.+14     	; 0x3282 <conv_flt+0x13e>
    3274:	c6 01       	movw	r24, r12
    3276:	0a d3       	rcall	.+1556   	; 0x388c <fgetc>
    3278:	ec 01       	movw	r28, r24
    327a:	9b 2c       	mov	r9, r11
    327c:	97 ff       	sbrs	r25, 7
    327e:	cb cf       	rjmp	.-106    	; 0x3216 <conv_flt+0xd2>
    3280:	01 c0       	rjmp	.+2      	; 0x3284 <conv_flt+0x140>
    3282:	9b 2c       	mov	r9, r11
    3284:	91 fe       	sbrs	r9, 1
    3286:	81 cf       	rjmp	.-254    	; 0x318a <conv_flt+0x46>
    3288:	ce 01       	movw	r24, r28
    328a:	8f 7d       	andi	r24, 0xDF	; 223
    328c:	99 27       	eor	r25, r25
    328e:	85 34       	cpi	r24, 0x45	; 69
    3290:	91 05       	cpc	r25, r1
    3292:	09 f0       	breq	.+2      	; 0x3296 <conv_flt+0x152>
    3294:	3e c0       	rjmp	.+124    	; 0x3312 <conv_flt+0x1ce>
    3296:	58 01       	movw	r10, r16
    3298:	81 e0       	ldi	r24, 0x01	; 1
    329a:	a8 1a       	sub	r10, r24
    329c:	b1 08       	sbc	r11, r1
    329e:	09 f4       	brne	.+2      	; 0x32a2 <conv_flt+0x15e>
    32a0:	74 cf       	rjmp	.-280    	; 0x318a <conv_flt+0x46>
    32a2:	c6 01       	movw	r24, r12
    32a4:	f3 d2       	rcall	.+1510   	; 0x388c <fgetc>
    32a6:	ec 01       	movw	r28, r24
    32a8:	97 fd       	sbrc	r25, 7
    32aa:	6f cf       	rjmp	.-290    	; 0x318a <conv_flt+0x46>
    32ac:	99 27       	eor	r25, r25
    32ae:	8b 32       	cpi	r24, 0x2B	; 43
    32b0:	91 05       	cpc	r25, r1
    32b2:	29 f0       	breq	.+10     	; 0x32be <conv_flt+0x17a>
    32b4:	8d 97       	sbiw	r24, 0x2d	; 45
    32b6:	61 f4       	brne	.+24     	; 0x32d0 <conv_flt+0x18c>
    32b8:	e9 2d       	mov	r30, r9
    32ba:	e0 61       	ori	r30, 0x10	; 16
    32bc:	9e 2e       	mov	r9, r30
    32be:	58 01       	movw	r10, r16
    32c0:	f2 e0       	ldi	r31, 0x02	; 2
    32c2:	af 1a       	sub	r10, r31
    32c4:	b1 08       	sbc	r11, r1
    32c6:	09 f4       	brne	.+2      	; 0x32ca <conv_flt+0x186>
    32c8:	60 cf       	rjmp	.-320    	; 0x318a <conv_flt+0x46>
    32ca:	c6 01       	movw	r24, r12
    32cc:	df d2       	rcall	.+1470   	; 0x388c <fgetc>
    32ce:	ec 01       	movw	r28, r24
    32d0:	ce 01       	movw	r24, r28
    32d2:	c0 97       	sbiw	r24, 0x30	; 48
    32d4:	0a 97       	sbiw	r24, 0x0a	; 10
    32d6:	08 f0       	brcs	.+2      	; 0x32da <conv_flt+0x196>
    32d8:	58 cf       	rjmp	.-336    	; 0x318a <conv_flt+0x46>
    32da:	85 01       	movw	r16, r10
    32dc:	a1 2c       	mov	r10, r1
    32de:	b1 2c       	mov	r11, r1
    32e0:	b5 01       	movw	r22, r10
    32e2:	bb 0c       	add	r11, r11
    32e4:	88 0b       	sbc	r24, r24
    32e6:	99 0b       	sbc	r25, r25
    32e8:	2c 2f       	mov	r18, r28
    32ea:	20 53       	subi	r18, 0x30	; 48
    32ec:	40 e2       	ldi	r20, 0x20	; 32
    32ee:	af dd       	rcall	.-1186   	; 0x2e4e <mulacc>
    32f0:	5b 01       	movw	r10, r22
    32f2:	01 50       	subi	r16, 0x01	; 1
    32f4:	11 09       	sbc	r17, r1
    32f6:	31 f0       	breq	.+12     	; 0x3304 <conv_flt+0x1c0>
    32f8:	c6 01       	movw	r24, r12
    32fa:	c8 d2       	rcall	.+1424   	; 0x388c <fgetc>
    32fc:	ec 01       	movw	r28, r24
    32fe:	c0 97       	sbiw	r24, 0x30	; 48
    3300:	0a 97       	sbiw	r24, 0x0a	; 10
    3302:	70 f3       	brcs	.-36     	; 0x32e0 <conv_flt+0x19c>
    3304:	94 fe       	sbrs	r9, 4
    3306:	03 c0       	rjmp	.+6      	; 0x330e <conv_flt+0x1ca>
    3308:	b1 94       	neg	r11
    330a:	a1 94       	neg	r10
    330c:	b1 08       	sbc	r11, r1
    330e:	ea 0c       	add	r14, r10
    3310:	fb 1c       	adc	r15, r11
    3312:	01 2b       	or	r16, r17
    3314:	29 f0       	breq	.+10     	; 0x3320 <conv_flt+0x1dc>
    3316:	d7 fd       	sbrc	r29, 7
    3318:	03 c0       	rjmp	.+6      	; 0x3320 <conv_flt+0x1dc>
    331a:	b6 01       	movw	r22, r12
    331c:	ce 01       	movw	r24, r28
    331e:	50 d3       	rcall	.+1696   	; 0x39c0 <ungetc>
    3320:	c3 01       	movw	r24, r6
    3322:	b2 01       	movw	r22, r4
    3324:	98 d8       	rcall	.-3792   	; 0x2456 <__floatunsisf>
    3326:	f7 fe       	sbrs	r15, 7
    3328:	06 c0       	rjmp	.+12     	; 0x3336 <conv_flt+0x1f2>
    332a:	f1 94       	neg	r15
    332c:	e1 94       	neg	r14
    332e:	f1 08       	sbc	r15, r1
    3330:	c1 ea       	ldi	r28, 0xA1	; 161
    3332:	d4 e0       	ldi	r29, 0x04	; 4
    3334:	02 c0       	rjmp	.+4      	; 0x333a <conv_flt+0x1f6>
    3336:	c9 eb       	ldi	r28, 0xB9	; 185
    3338:	d4 e0       	ldi	r29, 0x04	; 4
    333a:	6e 01       	movw	r12, r28
    333c:	28 e1       	ldi	r18, 0x18	; 24
    333e:	c2 1a       	sub	r12, r18
    3340:	d1 08       	sbc	r13, r1
    3342:	00 e2       	ldi	r16, 0x20	; 32
    3344:	10 e0       	ldi	r17, 0x00	; 0
    3346:	e0 16       	cp	r14, r16
    3348:	f1 06       	cpc	r15, r17
    334a:	48 f0       	brcs	.+18     	; 0x335e <conv_flt+0x21a>
    334c:	fe 01       	movw	r30, r28
    334e:	25 91       	lpm	r18, Z+
    3350:	35 91       	lpm	r19, Z+
    3352:	45 91       	lpm	r20, Z+
    3354:	54 91       	lpm	r21, Z
    3356:	7a d9       	rcall	.-3340   	; 0x264c <__mulsf3>
    3358:	e0 1a       	sub	r14, r16
    335a:	f1 0a       	sbc	r15, r17
    335c:	f4 cf       	rjmp	.-24     	; 0x3346 <conv_flt+0x202>
    335e:	24 97       	sbiw	r28, 0x04	; 4
    3360:	16 95       	lsr	r17
    3362:	07 95       	ror	r16
    3364:	cc 16       	cp	r12, r28
    3366:	dd 06       	cpc	r13, r29
    3368:	71 f7       	brne	.-36     	; 0x3346 <conv_flt+0x202>
    336a:	97 fe       	sbrs	r9, 7
    336c:	05 c0       	rjmp	.+10     	; 0x3378 <conv_flt+0x234>
    336e:	dc 01       	movw	r26, r24
    3370:	cb 01       	movw	r24, r22
    3372:	b0 58       	subi	r27, 0x80	; 128
    3374:	bc 01       	movw	r22, r24
    3376:	cd 01       	movw	r24, r26
    3378:	21 14       	cp	r2, r1
    337a:	31 04       	cpc	r3, r1
    337c:	29 f0       	breq	.+10     	; 0x3388 <conv_flt+0x244>
    337e:	f1 01       	movw	r30, r2
    3380:	60 83       	st	Z, r22
    3382:	71 83       	std	Z+1, r23	; 0x01
    3384:	82 83       	std	Z+2, r24	; 0x02
    3386:	93 83       	std	Z+3, r25	; 0x03
    3388:	81 e0       	ldi	r24, 0x01	; 1
    338a:	df 91       	pop	r29
    338c:	cf 91       	pop	r28
    338e:	1f 91       	pop	r17
    3390:	0f 91       	pop	r16
    3392:	ff 90       	pop	r15
    3394:	ef 90       	pop	r14
    3396:	df 90       	pop	r13
    3398:	cf 90       	pop	r12
    339a:	bf 90       	pop	r11
    339c:	af 90       	pop	r10
    339e:	9f 90       	pop	r9
    33a0:	7f 90       	pop	r7
    33a2:	6f 90       	pop	r6
    33a4:	5f 90       	pop	r5
    33a6:	4f 90       	pop	r4
    33a8:	3f 90       	pop	r3
    33aa:	2f 90       	pop	r2
    33ac:	08 95       	ret

000033ae <vfscanf>:
    33ae:	a0 e0       	ldi	r26, 0x00	; 0
    33b0:	b0 e0       	ldi	r27, 0x00	; 0
    33b2:	ec ed       	ldi	r30, 0xDC	; 220
    33b4:	f9 e1       	ldi	r31, 0x19	; 25
    33b6:	20 c1       	rjmp	.+576    	; 0x35f8 <__prologue_saves__+0x8>
    33b8:	5c 01       	movw	r10, r24
    33ba:	eb 01       	movw	r28, r22
    33bc:	4a 01       	movw	r8, r20
    33be:	fc 01       	movw	r30, r24
    33c0:	17 82       	std	Z+7, r1	; 0x07
    33c2:	16 82       	std	Z+6, r1	; 0x06
    33c4:	61 2c       	mov	r6, r1
    33c6:	f5 01       	movw	r30, r10
    33c8:	03 81       	ldd	r16, Z+3	; 0x03
    33ca:	fe 01       	movw	r30, r28
    33cc:	03 fd       	sbrc	r16, 3
    33ce:	85 91       	lpm	r24, Z+
    33d0:	03 ff       	sbrs	r16, 3
    33d2:	81 91       	ld	r24, Z+
    33d4:	18 2f       	mov	r17, r24
    33d6:	ef 01       	movw	r28, r30
    33d8:	88 23       	and	r24, r24
    33da:	09 f4       	brne	.+2      	; 0x33de <vfscanf+0x30>
    33dc:	00 c1       	rjmp	.+512    	; 0x35de <vfscanf+0x230>
    33de:	90 e0       	ldi	r25, 0x00	; 0
    33e0:	16 d2       	rcall	.+1068   	; 0x380e <isspace>
    33e2:	89 2b       	or	r24, r25
    33e4:	19 f0       	breq	.+6      	; 0x33ec <vfscanf+0x3e>
    33e6:	c5 01       	movw	r24, r10
    33e8:	59 dd       	rcall	.-1358   	; 0x2e9c <skip_spaces>
    33ea:	ed cf       	rjmp	.-38     	; 0x33c6 <vfscanf+0x18>
    33ec:	15 32       	cpi	r17, 0x25	; 37
    33ee:	41 f4       	brne	.+16     	; 0x3400 <vfscanf+0x52>
    33f0:	fe 01       	movw	r30, r28
    33f2:	03 fd       	sbrc	r16, 3
    33f4:	15 91       	lpm	r17, Z+
    33f6:	03 ff       	sbrs	r16, 3
    33f8:	11 91       	ld	r17, Z+
    33fa:	ef 01       	movw	r28, r30
    33fc:	15 32       	cpi	r17, 0x25	; 37
    33fe:	71 f4       	brne	.+28     	; 0x341c <vfscanf+0x6e>
    3400:	c5 01       	movw	r24, r10
    3402:	44 d2       	rcall	.+1160   	; 0x388c <fgetc>
    3404:	97 fd       	sbrc	r25, 7
    3406:	e9 c0       	rjmp	.+466    	; 0x35da <vfscanf+0x22c>
    3408:	41 2f       	mov	r20, r17
    340a:	50 e0       	ldi	r21, 0x00	; 0
    340c:	9c 01       	movw	r18, r24
    340e:	33 27       	eor	r19, r19
    3410:	24 17       	cp	r18, r20
    3412:	35 07       	cpc	r19, r21
    3414:	c1 f2       	breq	.-80     	; 0x33c6 <vfscanf+0x18>
    3416:	b5 01       	movw	r22, r10
    3418:	d3 d2       	rcall	.+1446   	; 0x39c0 <ungetc>
    341a:	e1 c0       	rjmp	.+450    	; 0x35de <vfscanf+0x230>
    341c:	1a 32       	cpi	r17, 0x2A	; 42
    341e:	41 f4       	brne	.+16     	; 0x3430 <vfscanf+0x82>
    3420:	03 fd       	sbrc	r16, 3
    3422:	15 91       	lpm	r17, Z+
    3424:	03 ff       	sbrs	r16, 3
    3426:	11 91       	ld	r17, Z+
    3428:	ef 01       	movw	r28, r30
    342a:	77 24       	eor	r7, r7
    342c:	73 94       	inc	r7
    342e:	01 c0       	rjmp	.+2      	; 0x3432 <vfscanf+0x84>
    3430:	71 2c       	mov	r7, r1
    3432:	e1 2c       	mov	r14, r1
    3434:	f1 2c       	mov	r15, r1
    3436:	20 ed       	ldi	r18, 0xD0	; 208
    3438:	21 0f       	add	r18, r17
    343a:	2a 30       	cpi	r18, 0x0A	; 10
    343c:	80 f4       	brcc	.+32     	; 0x345e <vfscanf+0xb0>
    343e:	f7 2d       	mov	r31, r7
    3440:	f2 60       	ori	r31, 0x02	; 2
    3442:	7f 2e       	mov	r7, r31
    3444:	b7 01       	movw	r22, r14
    3446:	80 e0       	ldi	r24, 0x00	; 0
    3448:	90 e0       	ldi	r25, 0x00	; 0
    344a:	40 e2       	ldi	r20, 0x20	; 32
    344c:	00 dd       	rcall	.-1536   	; 0x2e4e <mulacc>
    344e:	7b 01       	movw	r14, r22
    3450:	fe 01       	movw	r30, r28
    3452:	03 fd       	sbrc	r16, 3
    3454:	15 91       	lpm	r17, Z+
    3456:	03 ff       	sbrs	r16, 3
    3458:	11 91       	ld	r17, Z+
    345a:	ef 01       	movw	r28, r30
    345c:	ec cf       	rjmp	.-40     	; 0x3436 <vfscanf+0x88>
    345e:	71 fe       	sbrs	r7, 1
    3460:	04 c0       	rjmp	.+8      	; 0x346a <vfscanf+0xbc>
    3462:	e1 14       	cp	r14, r1
    3464:	f1 04       	cpc	r15, r1
    3466:	21 f4       	brne	.+8      	; 0x3470 <vfscanf+0xc2>
    3468:	ba c0       	rjmp	.+372    	; 0x35de <vfscanf+0x230>
    346a:	ee 24       	eor	r14, r14
    346c:	ea 94       	dec	r14
    346e:	fe 2c       	mov	r15, r14
    3470:	18 36       	cpi	r17, 0x68	; 104
    3472:	19 f0       	breq	.+6      	; 0x347a <vfscanf+0xcc>
    3474:	1c 36       	cpi	r17, 0x6C	; 108
    3476:	61 f0       	breq	.+24     	; 0x3490 <vfscanf+0xe2>
    3478:	14 c0       	rjmp	.+40     	; 0x34a2 <vfscanf+0xf4>
    347a:	fe 01       	movw	r30, r28
    347c:	03 fd       	sbrc	r16, 3
    347e:	15 91       	lpm	r17, Z+
    3480:	03 ff       	sbrs	r16, 3
    3482:	11 91       	ld	r17, Z+
    3484:	ef 01       	movw	r28, r30
    3486:	18 36       	cpi	r17, 0x68	; 104
    3488:	61 f4       	brne	.+24     	; 0x34a2 <vfscanf+0xf4>
    348a:	87 2d       	mov	r24, r7
    348c:	88 60       	ori	r24, 0x08	; 8
    348e:	78 2e       	mov	r7, r24
    3490:	97 2d       	mov	r25, r7
    3492:	94 60       	ori	r25, 0x04	; 4
    3494:	79 2e       	mov	r7, r25
    3496:	fe 01       	movw	r30, r28
    3498:	03 fd       	sbrc	r16, 3
    349a:	15 91       	lpm	r17, Z+
    349c:	03 ff       	sbrs	r16, 3
    349e:	11 91       	ld	r17, Z+
    34a0:	ef 01       	movw	r28, r30
    34a2:	11 23       	and	r17, r17
    34a4:	09 f4       	brne	.+2      	; 0x34a8 <vfscanf+0xfa>
    34a6:	9b c0       	rjmp	.+310    	; 0x35de <vfscanf+0x230>
    34a8:	61 2f       	mov	r22, r17
    34aa:	70 e0       	ldi	r23, 0x00	; 0
    34ac:	80 e7       	ldi	r24, 0x70	; 112
    34ae:	94 e0       	ldi	r25, 0x04	; 4
    34b0:	be d1       	rcall	.+892    	; 0x382e <strchr_P>
    34b2:	89 2b       	or	r24, r25
    34b4:	09 f4       	brne	.+2      	; 0x34b8 <vfscanf+0x10a>
    34b6:	93 c0       	rjmp	.+294    	; 0x35de <vfscanf+0x230>
    34b8:	70 fc       	sbrc	r7, 0
    34ba:	07 c0       	rjmp	.+14     	; 0x34ca <vfscanf+0x11c>
    34bc:	f4 01       	movw	r30, r8
    34be:	c0 80       	ld	r12, Z
    34c0:	d1 80       	ldd	r13, Z+1	; 0x01
    34c2:	c4 01       	movw	r24, r8
    34c4:	02 96       	adiw	r24, 0x02	; 2
    34c6:	4c 01       	movw	r8, r24
    34c8:	02 c0       	rjmp	.+4      	; 0x34ce <vfscanf+0x120>
    34ca:	c1 2c       	mov	r12, r1
    34cc:	d1 2c       	mov	r13, r1
    34ce:	1e 36       	cpi	r17, 0x6E	; 110
    34d0:	49 f4       	brne	.+18     	; 0x34e4 <vfscanf+0x136>
    34d2:	f5 01       	movw	r30, r10
    34d4:	46 81       	ldd	r20, Z+6	; 0x06
    34d6:	57 81       	ldd	r21, Z+7	; 0x07
    34d8:	60 e0       	ldi	r22, 0x00	; 0
    34da:	70 e0       	ldi	r23, 0x00	; 0
    34dc:	27 2d       	mov	r18, r7
    34de:	c6 01       	movw	r24, r12
    34e0:	aa dc       	rcall	.-1708   	; 0x2e36 <putval>
    34e2:	71 cf       	rjmp	.-286    	; 0x33c6 <vfscanf+0x18>
    34e4:	13 36       	cpi	r17, 0x63	; 99
    34e6:	b1 f4       	brne	.+44     	; 0x3514 <vfscanf+0x166>
    34e8:	71 fc       	sbrc	r7, 1
    34ea:	03 c0       	rjmp	.+6      	; 0x34f2 <vfscanf+0x144>
    34ec:	ee 24       	eor	r14, r14
    34ee:	e3 94       	inc	r14
    34f0:	f1 2c       	mov	r15, r1
    34f2:	c5 01       	movw	r24, r10
    34f4:	cb d1       	rcall	.+918    	; 0x388c <fgetc>
    34f6:	97 fd       	sbrc	r25, 7
    34f8:	70 c0       	rjmp	.+224    	; 0x35da <vfscanf+0x22c>
    34fa:	c1 14       	cp	r12, r1
    34fc:	d1 04       	cpc	r13, r1
    34fe:	29 f0       	breq	.+10     	; 0x350a <vfscanf+0x15c>
    3500:	f6 01       	movw	r30, r12
    3502:	80 83       	st	Z, r24
    3504:	c6 01       	movw	r24, r12
    3506:	01 96       	adiw	r24, 0x01	; 1
    3508:	6c 01       	movw	r12, r24
    350a:	91 e0       	ldi	r25, 0x01	; 1
    350c:	e9 1a       	sub	r14, r25
    350e:	f1 08       	sbc	r15, r1
    3510:	81 f7       	brne	.-32     	; 0x34f2 <vfscanf+0x144>
    3512:	5f c0       	rjmp	.+190    	; 0x35d2 <vfscanf+0x224>
    3514:	1b 35       	cpi	r17, 0x5B	; 91
    3516:	51 f4       	brne	.+20     	; 0x352c <vfscanf+0x17e>
    3518:	9e 01       	movw	r18, r28
    351a:	a6 01       	movw	r20, r12
    351c:	b7 01       	movw	r22, r14
    351e:	c5 01       	movw	r24, r10
    3520:	53 dd       	rcall	.-1370   	; 0x2fc8 <conv_brk>
    3522:	ec 01       	movw	r28, r24
    3524:	89 2b       	or	r24, r25
    3526:	09 f0       	breq	.+2      	; 0x352a <vfscanf+0x17c>
    3528:	54 c0       	rjmp	.+168    	; 0x35d2 <vfscanf+0x224>
    352a:	4e c0       	rjmp	.+156    	; 0x35c8 <vfscanf+0x21a>
    352c:	c5 01       	movw	r24, r10
    352e:	b6 dc       	rcall	.-1684   	; 0x2e9c <skip_spaces>
    3530:	97 fd       	sbrc	r25, 7
    3532:	53 c0       	rjmp	.+166    	; 0x35da <vfscanf+0x22c>
    3534:	1f 36       	cpi	r17, 0x6F	; 111
    3536:	c9 f1       	breq	.+114    	; 0x35aa <vfscanf+0x1fc>
    3538:	40 f4       	brcc	.+16     	; 0x354a <vfscanf+0x19c>
    353a:	14 36       	cpi	r17, 0x64	; 100
    353c:	91 f1       	breq	.+100    	; 0x35a2 <vfscanf+0x1f4>
    353e:	19 36       	cpi	r17, 0x69	; 105
    3540:	b9 f1       	breq	.+110    	; 0x35b0 <vfscanf+0x202>
    3542:	18 35       	cpi	r17, 0x58	; 88
    3544:	09 f0       	breq	.+2      	; 0x3548 <vfscanf+0x19a>
    3546:	3a c0       	rjmp	.+116    	; 0x35bc <vfscanf+0x20e>
    3548:	28 c0       	rjmp	.+80     	; 0x359a <vfscanf+0x1ec>
    354a:	13 37       	cpi	r17, 0x73	; 115
    354c:	a9 f0       	breq	.+42     	; 0x3578 <vfscanf+0x1ca>
    354e:	18 f4       	brcc	.+6      	; 0x3556 <vfscanf+0x1a8>
    3550:	10 37       	cpi	r17, 0x70	; 112
    3552:	19 f1       	breq	.+70     	; 0x359a <vfscanf+0x1ec>
    3554:	33 c0       	rjmp	.+102    	; 0x35bc <vfscanf+0x20e>
    3556:	15 37       	cpi	r17, 0x75	; 117
    3558:	21 f1       	breq	.+72     	; 0x35a2 <vfscanf+0x1f4>
    355a:	18 37       	cpi	r17, 0x78	; 120
    355c:	f1 f0       	breq	.+60     	; 0x359a <vfscanf+0x1ec>
    355e:	2e c0       	rjmp	.+92     	; 0x35bc <vfscanf+0x20e>
    3560:	c1 14       	cp	r12, r1
    3562:	d1 04       	cpc	r13, r1
    3564:	29 f0       	breq	.+10     	; 0x3570 <vfscanf+0x1c2>
    3566:	f6 01       	movw	r30, r12
    3568:	00 83       	st	Z, r16
    356a:	c6 01       	movw	r24, r12
    356c:	01 96       	adiw	r24, 0x01	; 1
    356e:	6c 01       	movw	r12, r24
    3570:	91 e0       	ldi	r25, 0x01	; 1
    3572:	e9 1a       	sub	r14, r25
    3574:	f1 08       	sbc	r15, r1
    3576:	59 f0       	breq	.+22     	; 0x358e <vfscanf+0x1e0>
    3578:	c5 01       	movw	r24, r10
    357a:	88 d1       	rcall	.+784    	; 0x388c <fgetc>
    357c:	8c 01       	movw	r16, r24
    357e:	97 fd       	sbrc	r25, 7
    3580:	06 c0       	rjmp	.+12     	; 0x358e <vfscanf+0x1e0>
    3582:	45 d1       	rcall	.+650    	; 0x380e <isspace>
    3584:	89 2b       	or	r24, r25
    3586:	61 f3       	breq	.-40     	; 0x3560 <vfscanf+0x1b2>
    3588:	b5 01       	movw	r22, r10
    358a:	c8 01       	movw	r24, r16
    358c:	19 d2       	rcall	.+1074   	; 0x39c0 <ungetc>
    358e:	c1 14       	cp	r12, r1
    3590:	d1 04       	cpc	r13, r1
    3592:	f9 f0       	breq	.+62     	; 0x35d2 <vfscanf+0x224>
    3594:	f6 01       	movw	r30, r12
    3596:	10 82       	st	Z, r1
    3598:	1c c0       	rjmp	.+56     	; 0x35d2 <vfscanf+0x224>
    359a:	f7 2d       	mov	r31, r7
    359c:	f0 64       	ori	r31, 0x40	; 64
    359e:	7f 2e       	mov	r7, r31
    35a0:	07 c0       	rjmp	.+14     	; 0x35b0 <vfscanf+0x202>
    35a2:	87 2d       	mov	r24, r7
    35a4:	80 62       	ori	r24, 0x20	; 32
    35a6:	78 2e       	mov	r7, r24
    35a8:	03 c0       	rjmp	.+6      	; 0x35b0 <vfscanf+0x202>
    35aa:	97 2d       	mov	r25, r7
    35ac:	90 61       	ori	r25, 0x10	; 16
    35ae:	79 2e       	mov	r7, r25
    35b0:	27 2d       	mov	r18, r7
    35b2:	a6 01       	movw	r20, r12
    35b4:	b7 01       	movw	r22, r14
    35b6:	c5 01       	movw	r24, r10
    35b8:	87 dc       	rcall	.-1778   	; 0x2ec8 <conv_int>
    35ba:	04 c0       	rjmp	.+8      	; 0x35c4 <vfscanf+0x216>
    35bc:	a6 01       	movw	r20, r12
    35be:	b7 01       	movw	r22, r14
    35c0:	c5 01       	movw	r24, r10
    35c2:	c0 dd       	rcall	.-1152   	; 0x3144 <conv_flt>
    35c4:	81 11       	cpse	r24, r1
    35c6:	05 c0       	rjmp	.+10     	; 0x35d2 <vfscanf+0x224>
    35c8:	f5 01       	movw	r30, r10
    35ca:	83 81       	ldd	r24, Z+3	; 0x03
    35cc:	80 73       	andi	r24, 0x30	; 48
    35ce:	29 f4       	brne	.+10     	; 0x35da <vfscanf+0x22c>
    35d0:	06 c0       	rjmp	.+12     	; 0x35de <vfscanf+0x230>
    35d2:	70 fc       	sbrc	r7, 0
    35d4:	f8 ce       	rjmp	.-528    	; 0x33c6 <vfscanf+0x18>
    35d6:	63 94       	inc	r6
    35d8:	f6 ce       	rjmp	.-532    	; 0x33c6 <vfscanf+0x18>
    35da:	66 20       	and	r6, r6
    35dc:	19 f0       	breq	.+6      	; 0x35e4 <vfscanf+0x236>
    35de:	86 2d       	mov	r24, r6
    35e0:	90 e0       	ldi	r25, 0x00	; 0
    35e2:	02 c0       	rjmp	.+4      	; 0x35e8 <vfscanf+0x23a>
    35e4:	8f ef       	ldi	r24, 0xFF	; 255
    35e6:	9f ef       	ldi	r25, 0xFF	; 255
    35e8:	cd b7       	in	r28, 0x3d	; 61
    35ea:	de b7       	in	r29, 0x3e	; 62
    35ec:	ee e0       	ldi	r30, 0x0E	; 14
    35ee:	20 c0       	rjmp	.+64     	; 0x3630 <__epilogue_restores__+0x8>

000035f0 <__prologue_saves__>:
    35f0:	2f 92       	push	r2
    35f2:	3f 92       	push	r3
    35f4:	4f 92       	push	r4
    35f6:	5f 92       	push	r5
    35f8:	6f 92       	push	r6
    35fa:	7f 92       	push	r7
    35fc:	8f 92       	push	r8
    35fe:	9f 92       	push	r9
    3600:	af 92       	push	r10
    3602:	bf 92       	push	r11
    3604:	cf 92       	push	r12
    3606:	df 92       	push	r13
    3608:	ef 92       	push	r14
    360a:	ff 92       	push	r15
    360c:	0f 93       	push	r16
    360e:	1f 93       	push	r17
    3610:	cf 93       	push	r28
    3612:	df 93       	push	r29
    3614:	cd b7       	in	r28, 0x3d	; 61
    3616:	de b7       	in	r29, 0x3e	; 62
    3618:	ca 1b       	sub	r28, r26
    361a:	db 0b       	sbc	r29, r27
    361c:	0f b6       	in	r0, 0x3f	; 63
    361e:	f8 94       	cli
    3620:	de bf       	out	0x3e, r29	; 62
    3622:	0f be       	out	0x3f, r0	; 63
    3624:	cd bf       	out	0x3d, r28	; 61
    3626:	09 94       	ijmp

00003628 <__epilogue_restores__>:
    3628:	2a 88       	ldd	r2, Y+18	; 0x12
    362a:	39 88       	ldd	r3, Y+17	; 0x11
    362c:	48 88       	ldd	r4, Y+16	; 0x10
    362e:	5f 84       	ldd	r5, Y+15	; 0x0f
    3630:	6e 84       	ldd	r6, Y+14	; 0x0e
    3632:	7d 84       	ldd	r7, Y+13	; 0x0d
    3634:	8c 84       	ldd	r8, Y+12	; 0x0c
    3636:	9b 84       	ldd	r9, Y+11	; 0x0b
    3638:	aa 84       	ldd	r10, Y+10	; 0x0a
    363a:	b9 84       	ldd	r11, Y+9	; 0x09
    363c:	c8 84       	ldd	r12, Y+8	; 0x08
    363e:	df 80       	ldd	r13, Y+7	; 0x07
    3640:	ee 80       	ldd	r14, Y+6	; 0x06
    3642:	fd 80       	ldd	r15, Y+5	; 0x05
    3644:	0c 81       	ldd	r16, Y+4	; 0x04
    3646:	1b 81       	ldd	r17, Y+3	; 0x03
    3648:	aa 81       	ldd	r26, Y+2	; 0x02
    364a:	b9 81       	ldd	r27, Y+1	; 0x01
    364c:	ce 0f       	add	r28, r30
    364e:	d1 1d       	adc	r29, r1
    3650:	0f b6       	in	r0, 0x3f	; 63
    3652:	f8 94       	cli
    3654:	de bf       	out	0x3e, r29	; 62
    3656:	0f be       	out	0x3f, r0	; 63
    3658:	cd bf       	out	0x3d, r28	; 61
    365a:	ed 01       	movw	r28, r26
    365c:	08 95       	ret

0000365e <__ftoa_engine>:
    365e:	28 30       	cpi	r18, 0x08	; 8
    3660:	08 f0       	brcs	.+2      	; 0x3664 <__ftoa_engine+0x6>
    3662:	27 e0       	ldi	r18, 0x07	; 7
    3664:	33 27       	eor	r19, r19
    3666:	da 01       	movw	r26, r20
    3668:	99 0f       	add	r25, r25
    366a:	31 1d       	adc	r19, r1
    366c:	87 fd       	sbrc	r24, 7
    366e:	91 60       	ori	r25, 0x01	; 1
    3670:	00 96       	adiw	r24, 0x00	; 0
    3672:	61 05       	cpc	r22, r1
    3674:	71 05       	cpc	r23, r1
    3676:	39 f4       	brne	.+14     	; 0x3686 <__ftoa_engine+0x28>
    3678:	32 60       	ori	r19, 0x02	; 2
    367a:	2e 5f       	subi	r18, 0xFE	; 254
    367c:	3d 93       	st	X+, r19
    367e:	30 e3       	ldi	r19, 0x30	; 48
    3680:	2a 95       	dec	r18
    3682:	e1 f7       	brne	.-8      	; 0x367c <__ftoa_engine+0x1e>
    3684:	08 95       	ret
    3686:	9f 3f       	cpi	r25, 0xFF	; 255
    3688:	30 f0       	brcs	.+12     	; 0x3696 <__ftoa_engine+0x38>
    368a:	80 38       	cpi	r24, 0x80	; 128
    368c:	71 05       	cpc	r23, r1
    368e:	61 05       	cpc	r22, r1
    3690:	09 f0       	breq	.+2      	; 0x3694 <__ftoa_engine+0x36>
    3692:	3c 5f       	subi	r19, 0xFC	; 252
    3694:	3c 5f       	subi	r19, 0xFC	; 252
    3696:	3d 93       	st	X+, r19
    3698:	91 30       	cpi	r25, 0x01	; 1
    369a:	08 f0       	brcs	.+2      	; 0x369e <__ftoa_engine+0x40>
    369c:	80 68       	ori	r24, 0x80	; 128
    369e:	91 1d       	adc	r25, r1
    36a0:	df 93       	push	r29
    36a2:	cf 93       	push	r28
    36a4:	1f 93       	push	r17
    36a6:	0f 93       	push	r16
    36a8:	ff 92       	push	r15
    36aa:	ef 92       	push	r14
    36ac:	19 2f       	mov	r17, r25
    36ae:	98 7f       	andi	r25, 0xF8	; 248
    36b0:	96 95       	lsr	r25
    36b2:	e9 2f       	mov	r30, r25
    36b4:	96 95       	lsr	r25
    36b6:	96 95       	lsr	r25
    36b8:	e9 0f       	add	r30, r25
    36ba:	ff 27       	eor	r31, r31
    36bc:	e8 59       	subi	r30, 0x98	; 152
    36be:	fe 4f       	sbci	r31, 0xFE	; 254
    36c0:	99 27       	eor	r25, r25
    36c2:	33 27       	eor	r19, r19
    36c4:	ee 24       	eor	r14, r14
    36c6:	ff 24       	eor	r15, r15
    36c8:	a7 01       	movw	r20, r14
    36ca:	e7 01       	movw	r28, r14
    36cc:	05 90       	lpm	r0, Z+
    36ce:	08 94       	sec
    36d0:	07 94       	ror	r0
    36d2:	28 f4       	brcc	.+10     	; 0x36de <__ftoa_engine+0x80>
    36d4:	36 0f       	add	r19, r22
    36d6:	e7 1e       	adc	r14, r23
    36d8:	f8 1e       	adc	r15, r24
    36da:	49 1f       	adc	r20, r25
    36dc:	51 1d       	adc	r21, r1
    36de:	66 0f       	add	r22, r22
    36e0:	77 1f       	adc	r23, r23
    36e2:	88 1f       	adc	r24, r24
    36e4:	99 1f       	adc	r25, r25
    36e6:	06 94       	lsr	r0
    36e8:	a1 f7       	brne	.-24     	; 0x36d2 <__ftoa_engine+0x74>
    36ea:	05 90       	lpm	r0, Z+
    36ec:	07 94       	ror	r0
    36ee:	28 f4       	brcc	.+10     	; 0x36fa <__ftoa_engine+0x9c>
    36f0:	e7 0e       	add	r14, r23
    36f2:	f8 1e       	adc	r15, r24
    36f4:	49 1f       	adc	r20, r25
    36f6:	56 1f       	adc	r21, r22
    36f8:	c1 1d       	adc	r28, r1
    36fa:	77 0f       	add	r23, r23
    36fc:	88 1f       	adc	r24, r24
    36fe:	99 1f       	adc	r25, r25
    3700:	66 1f       	adc	r22, r22
    3702:	06 94       	lsr	r0
    3704:	a1 f7       	brne	.-24     	; 0x36ee <__ftoa_engine+0x90>
    3706:	05 90       	lpm	r0, Z+
    3708:	07 94       	ror	r0
    370a:	28 f4       	brcc	.+10     	; 0x3716 <__ftoa_engine+0xb8>
    370c:	f8 0e       	add	r15, r24
    370e:	49 1f       	adc	r20, r25
    3710:	56 1f       	adc	r21, r22
    3712:	c7 1f       	adc	r28, r23
    3714:	d1 1d       	adc	r29, r1
    3716:	88 0f       	add	r24, r24
    3718:	99 1f       	adc	r25, r25
    371a:	66 1f       	adc	r22, r22
    371c:	77 1f       	adc	r23, r23
    371e:	06 94       	lsr	r0
    3720:	a1 f7       	brne	.-24     	; 0x370a <__ftoa_engine+0xac>
    3722:	05 90       	lpm	r0, Z+
    3724:	07 94       	ror	r0
    3726:	20 f4       	brcc	.+8      	; 0x3730 <__ftoa_engine+0xd2>
    3728:	49 0f       	add	r20, r25
    372a:	56 1f       	adc	r21, r22
    372c:	c7 1f       	adc	r28, r23
    372e:	d8 1f       	adc	r29, r24
    3730:	99 0f       	add	r25, r25
    3732:	66 1f       	adc	r22, r22
    3734:	77 1f       	adc	r23, r23
    3736:	88 1f       	adc	r24, r24
    3738:	06 94       	lsr	r0
    373a:	a9 f7       	brne	.-22     	; 0x3726 <__ftoa_engine+0xc8>
    373c:	84 91       	lpm	r24, Z
    373e:	10 95       	com	r17
    3740:	17 70       	andi	r17, 0x07	; 7
    3742:	41 f0       	breq	.+16     	; 0x3754 <__ftoa_engine+0xf6>
    3744:	d6 95       	lsr	r29
    3746:	c7 95       	ror	r28
    3748:	57 95       	ror	r21
    374a:	47 95       	ror	r20
    374c:	f7 94       	ror	r15
    374e:	e7 94       	ror	r14
    3750:	1a 95       	dec	r17
    3752:	c1 f7       	brne	.-16     	; 0x3744 <__ftoa_engine+0xe6>
    3754:	ee e0       	ldi	r30, 0x0E	; 14
    3756:	f1 e0       	ldi	r31, 0x01	; 1
    3758:	68 94       	set
    375a:	15 90       	lpm	r1, Z+
    375c:	15 91       	lpm	r17, Z+
    375e:	35 91       	lpm	r19, Z+
    3760:	65 91       	lpm	r22, Z+
    3762:	95 91       	lpm	r25, Z+
    3764:	05 90       	lpm	r0, Z+
    3766:	7f e2       	ldi	r23, 0x2F	; 47
    3768:	73 95       	inc	r23
    376a:	e1 18       	sub	r14, r1
    376c:	f1 0a       	sbc	r15, r17
    376e:	43 0b       	sbc	r20, r19
    3770:	56 0b       	sbc	r21, r22
    3772:	c9 0b       	sbc	r28, r25
    3774:	d0 09       	sbc	r29, r0
    3776:	c0 f7       	brcc	.-16     	; 0x3768 <__ftoa_engine+0x10a>
    3778:	e1 0c       	add	r14, r1
    377a:	f1 1e       	adc	r15, r17
    377c:	43 1f       	adc	r20, r19
    377e:	56 1f       	adc	r21, r22
    3780:	c9 1f       	adc	r28, r25
    3782:	d0 1d       	adc	r29, r0
    3784:	7e f4       	brtc	.+30     	; 0x37a4 <__ftoa_engine+0x146>
    3786:	70 33       	cpi	r23, 0x30	; 48
    3788:	11 f4       	brne	.+4      	; 0x378e <__ftoa_engine+0x130>
    378a:	8a 95       	dec	r24
    378c:	e6 cf       	rjmp	.-52     	; 0x375a <__ftoa_engine+0xfc>
    378e:	e8 94       	clt
    3790:	01 50       	subi	r16, 0x01	; 1
    3792:	30 f0       	brcs	.+12     	; 0x37a0 <__ftoa_engine+0x142>
    3794:	08 0f       	add	r16, r24
    3796:	0a f4       	brpl	.+2      	; 0x379a <__ftoa_engine+0x13c>
    3798:	00 27       	eor	r16, r16
    379a:	02 17       	cp	r16, r18
    379c:	08 f4       	brcc	.+2      	; 0x37a0 <__ftoa_engine+0x142>
    379e:	20 2f       	mov	r18, r16
    37a0:	23 95       	inc	r18
    37a2:	02 2f       	mov	r16, r18
    37a4:	7a 33       	cpi	r23, 0x3A	; 58
    37a6:	28 f0       	brcs	.+10     	; 0x37b2 <__ftoa_engine+0x154>
    37a8:	79 e3       	ldi	r23, 0x39	; 57
    37aa:	7d 93       	st	X+, r23
    37ac:	2a 95       	dec	r18
    37ae:	e9 f7       	brne	.-6      	; 0x37aa <__ftoa_engine+0x14c>
    37b0:	10 c0       	rjmp	.+32     	; 0x37d2 <__ftoa_engine+0x174>
    37b2:	7d 93       	st	X+, r23
    37b4:	2a 95       	dec	r18
    37b6:	89 f6       	brne	.-94     	; 0x375a <__ftoa_engine+0xfc>
    37b8:	06 94       	lsr	r0
    37ba:	97 95       	ror	r25
    37bc:	67 95       	ror	r22
    37be:	37 95       	ror	r19
    37c0:	17 95       	ror	r17
    37c2:	17 94       	ror	r1
    37c4:	e1 18       	sub	r14, r1
    37c6:	f1 0a       	sbc	r15, r17
    37c8:	43 0b       	sbc	r20, r19
    37ca:	56 0b       	sbc	r21, r22
    37cc:	c9 0b       	sbc	r28, r25
    37ce:	d0 09       	sbc	r29, r0
    37d0:	98 f0       	brcs	.+38     	; 0x37f8 <__ftoa_engine+0x19a>
    37d2:	23 95       	inc	r18
    37d4:	7e 91       	ld	r23, -X
    37d6:	73 95       	inc	r23
    37d8:	7a 33       	cpi	r23, 0x3A	; 58
    37da:	08 f0       	brcs	.+2      	; 0x37de <__ftoa_engine+0x180>
    37dc:	70 e3       	ldi	r23, 0x30	; 48
    37de:	7c 93       	st	X, r23
    37e0:	20 13       	cpse	r18, r16
    37e2:	b8 f7       	brcc	.-18     	; 0x37d2 <__ftoa_engine+0x174>
    37e4:	7e 91       	ld	r23, -X
    37e6:	70 61       	ori	r23, 0x10	; 16
    37e8:	7d 93       	st	X+, r23
    37ea:	30 f0       	brcs	.+12     	; 0x37f8 <__ftoa_engine+0x19a>
    37ec:	83 95       	inc	r24
    37ee:	71 e3       	ldi	r23, 0x31	; 49
    37f0:	7d 93       	st	X+, r23
    37f2:	70 e3       	ldi	r23, 0x30	; 48
    37f4:	2a 95       	dec	r18
    37f6:	e1 f7       	brne	.-8      	; 0x37f0 <__ftoa_engine+0x192>
    37f8:	11 24       	eor	r1, r1
    37fa:	ef 90       	pop	r14
    37fc:	ff 90       	pop	r15
    37fe:	0f 91       	pop	r16
    3800:	1f 91       	pop	r17
    3802:	cf 91       	pop	r28
    3804:	df 91       	pop	r29
    3806:	99 27       	eor	r25, r25
    3808:	87 fd       	sbrc	r24, 7
    380a:	90 95       	com	r25
    380c:	08 95       	ret

0000380e <isspace>:
    380e:	91 11       	cpse	r25, r1
    3810:	4e c1       	rjmp	.+668    	; 0x3aae <__ctype_isfalse>
    3812:	80 32       	cpi	r24, 0x20	; 32
    3814:	19 f0       	breq	.+6      	; 0x381c <isspace+0xe>
    3816:	89 50       	subi	r24, 0x09	; 9
    3818:	85 50       	subi	r24, 0x05	; 5
    381a:	d0 f7       	brcc	.-12     	; 0x3810 <isspace+0x2>
    381c:	08 95       	ret

0000381e <tolower>:
    381e:	91 11       	cpse	r25, r1
    3820:	08 95       	ret
    3822:	81 54       	subi	r24, 0x41	; 65
    3824:	8a 51       	subi	r24, 0x1A	; 26
    3826:	08 f4       	brcc	.+2      	; 0x382a <tolower+0xc>
    3828:	80 5e       	subi	r24, 0xE0	; 224
    382a:	85 5a       	subi	r24, 0xA5	; 165
    382c:	08 95       	ret

0000382e <strchr_P>:
    382e:	fc 01       	movw	r30, r24
    3830:	05 90       	lpm	r0, Z+
    3832:	06 16       	cp	r0, r22
    3834:	21 f0       	breq	.+8      	; 0x383e <strchr_P+0x10>
    3836:	00 20       	and	r0, r0
    3838:	d9 f7       	brne	.-10     	; 0x3830 <strchr_P+0x2>
    383a:	c0 01       	movw	r24, r0
    383c:	08 95       	ret
    383e:	31 97       	sbiw	r30, 0x01	; 1
    3840:	cf 01       	movw	r24, r30
    3842:	08 95       	ret

00003844 <strnlen_P>:
    3844:	fc 01       	movw	r30, r24
    3846:	05 90       	lpm	r0, Z+
    3848:	61 50       	subi	r22, 0x01	; 1
    384a:	70 40       	sbci	r23, 0x00	; 0
    384c:	01 10       	cpse	r0, r1
    384e:	d8 f7       	brcc	.-10     	; 0x3846 <strnlen_P+0x2>
    3850:	80 95       	com	r24
    3852:	90 95       	com	r25
    3854:	8e 0f       	add	r24, r30
    3856:	9f 1f       	adc	r25, r31
    3858:	08 95       	ret

0000385a <strncmp>:
    385a:	fb 01       	movw	r30, r22
    385c:	dc 01       	movw	r26, r24
    385e:	41 50       	subi	r20, 0x01	; 1
    3860:	50 40       	sbci	r21, 0x00	; 0
    3862:	30 f0       	brcs	.+12     	; 0x3870 <strncmp+0x16>
    3864:	8d 91       	ld	r24, X+
    3866:	01 90       	ld	r0, Z+
    3868:	80 19       	sub	r24, r0
    386a:	19 f4       	brne	.+6      	; 0x3872 <strncmp+0x18>
    386c:	00 20       	and	r0, r0
    386e:	b9 f7       	brne	.-18     	; 0x385e <strncmp+0x4>
    3870:	88 1b       	sub	r24, r24
    3872:	99 0b       	sbc	r25, r25
    3874:	08 95       	ret

00003876 <strnlen>:
    3876:	fc 01       	movw	r30, r24
    3878:	61 50       	subi	r22, 0x01	; 1
    387a:	70 40       	sbci	r23, 0x00	; 0
    387c:	01 90       	ld	r0, Z+
    387e:	01 10       	cpse	r0, r1
    3880:	d8 f7       	brcc	.-10     	; 0x3878 <strnlen+0x2>
    3882:	80 95       	com	r24
    3884:	90 95       	com	r25
    3886:	8e 0f       	add	r24, r30
    3888:	9f 1f       	adc	r25, r31
    388a:	08 95       	ret

0000388c <fgetc>:
    388c:	cf 93       	push	r28
    388e:	df 93       	push	r29
    3890:	ec 01       	movw	r28, r24
    3892:	2b 81       	ldd	r18, Y+3	; 0x03
    3894:	20 ff       	sbrs	r18, 0
    3896:	33 c0       	rjmp	.+102    	; 0x38fe <fgetc+0x72>
    3898:	26 ff       	sbrs	r18, 6
    389a:	0a c0       	rjmp	.+20     	; 0x38b0 <fgetc+0x24>
    389c:	2f 7b       	andi	r18, 0xBF	; 191
    389e:	2b 83       	std	Y+3, r18	; 0x03
    38a0:	8e 81       	ldd	r24, Y+6	; 0x06
    38a2:	9f 81       	ldd	r25, Y+7	; 0x07
    38a4:	01 96       	adiw	r24, 0x01	; 1
    38a6:	9f 83       	std	Y+7, r25	; 0x07
    38a8:	8e 83       	std	Y+6, r24	; 0x06
    38aa:	8a 81       	ldd	r24, Y+2	; 0x02
    38ac:	90 e0       	ldi	r25, 0x00	; 0
    38ae:	29 c0       	rjmp	.+82     	; 0x3902 <fgetc+0x76>
    38b0:	22 ff       	sbrs	r18, 2
    38b2:	0f c0       	rjmp	.+30     	; 0x38d2 <fgetc+0x46>
    38b4:	e8 81       	ld	r30, Y
    38b6:	f9 81       	ldd	r31, Y+1	; 0x01
    38b8:	80 81       	ld	r24, Z
    38ba:	08 2e       	mov	r0, r24
    38bc:	00 0c       	add	r0, r0
    38be:	99 0b       	sbc	r25, r25
    38c0:	00 97       	sbiw	r24, 0x00	; 0
    38c2:	19 f4       	brne	.+6      	; 0x38ca <fgetc+0x3e>
    38c4:	20 62       	ori	r18, 0x20	; 32
    38c6:	2b 83       	std	Y+3, r18	; 0x03
    38c8:	1a c0       	rjmp	.+52     	; 0x38fe <fgetc+0x72>
    38ca:	31 96       	adiw	r30, 0x01	; 1
    38cc:	f9 83       	std	Y+1, r31	; 0x01
    38ce:	e8 83       	st	Y, r30
    38d0:	0e c0       	rjmp	.+28     	; 0x38ee <fgetc+0x62>
    38d2:	ea 85       	ldd	r30, Y+10	; 0x0a
    38d4:	fb 85       	ldd	r31, Y+11	; 0x0b
    38d6:	09 95       	icall
    38d8:	97 ff       	sbrs	r25, 7
    38da:	09 c0       	rjmp	.+18     	; 0x38ee <fgetc+0x62>
    38dc:	2b 81       	ldd	r18, Y+3	; 0x03
    38de:	01 96       	adiw	r24, 0x01	; 1
    38e0:	11 f0       	breq	.+4      	; 0x38e6 <fgetc+0x5a>
    38e2:	80 e2       	ldi	r24, 0x20	; 32
    38e4:	01 c0       	rjmp	.+2      	; 0x38e8 <fgetc+0x5c>
    38e6:	80 e1       	ldi	r24, 0x10	; 16
    38e8:	82 2b       	or	r24, r18
    38ea:	8b 83       	std	Y+3, r24	; 0x03
    38ec:	08 c0       	rjmp	.+16     	; 0x38fe <fgetc+0x72>
    38ee:	2e 81       	ldd	r18, Y+6	; 0x06
    38f0:	3f 81       	ldd	r19, Y+7	; 0x07
    38f2:	2f 5f       	subi	r18, 0xFF	; 255
    38f4:	3f 4f       	sbci	r19, 0xFF	; 255
    38f6:	3f 83       	std	Y+7, r19	; 0x07
    38f8:	2e 83       	std	Y+6, r18	; 0x06
    38fa:	99 27       	eor	r25, r25
    38fc:	02 c0       	rjmp	.+4      	; 0x3902 <fgetc+0x76>
    38fe:	8f ef       	ldi	r24, 0xFF	; 255
    3900:	9f ef       	ldi	r25, 0xFF	; 255
    3902:	df 91       	pop	r29
    3904:	cf 91       	pop	r28
    3906:	08 95       	ret

00003908 <fputc>:
    3908:	0f 93       	push	r16
    390a:	1f 93       	push	r17
    390c:	cf 93       	push	r28
    390e:	df 93       	push	r29
    3910:	fb 01       	movw	r30, r22
    3912:	23 81       	ldd	r18, Z+3	; 0x03
    3914:	21 fd       	sbrc	r18, 1
    3916:	03 c0       	rjmp	.+6      	; 0x391e <fputc+0x16>
    3918:	8f ef       	ldi	r24, 0xFF	; 255
    391a:	9f ef       	ldi	r25, 0xFF	; 255
    391c:	2c c0       	rjmp	.+88     	; 0x3976 <fputc+0x6e>
    391e:	22 ff       	sbrs	r18, 2
    3920:	16 c0       	rjmp	.+44     	; 0x394e <fputc+0x46>
    3922:	46 81       	ldd	r20, Z+6	; 0x06
    3924:	57 81       	ldd	r21, Z+7	; 0x07
    3926:	24 81       	ldd	r18, Z+4	; 0x04
    3928:	35 81       	ldd	r19, Z+5	; 0x05
    392a:	42 17       	cp	r20, r18
    392c:	53 07       	cpc	r21, r19
    392e:	44 f4       	brge	.+16     	; 0x3940 <fputc+0x38>
    3930:	a0 81       	ld	r26, Z
    3932:	b1 81       	ldd	r27, Z+1	; 0x01
    3934:	9d 01       	movw	r18, r26
    3936:	2f 5f       	subi	r18, 0xFF	; 255
    3938:	3f 4f       	sbci	r19, 0xFF	; 255
    393a:	31 83       	std	Z+1, r19	; 0x01
    393c:	20 83       	st	Z, r18
    393e:	8c 93       	st	X, r24
    3940:	26 81       	ldd	r18, Z+6	; 0x06
    3942:	37 81       	ldd	r19, Z+7	; 0x07
    3944:	2f 5f       	subi	r18, 0xFF	; 255
    3946:	3f 4f       	sbci	r19, 0xFF	; 255
    3948:	37 83       	std	Z+7, r19	; 0x07
    394a:	26 83       	std	Z+6, r18	; 0x06
    394c:	14 c0       	rjmp	.+40     	; 0x3976 <fputc+0x6e>
    394e:	8b 01       	movw	r16, r22
    3950:	ec 01       	movw	r28, r24
    3952:	fb 01       	movw	r30, r22
    3954:	00 84       	ldd	r0, Z+8	; 0x08
    3956:	f1 85       	ldd	r31, Z+9	; 0x09
    3958:	e0 2d       	mov	r30, r0
    395a:	09 95       	icall
    395c:	89 2b       	or	r24, r25
    395e:	e1 f6       	brne	.-72     	; 0x3918 <fputc+0x10>
    3960:	d8 01       	movw	r26, r16
    3962:	16 96       	adiw	r26, 0x06	; 6
    3964:	8d 91       	ld	r24, X+
    3966:	9c 91       	ld	r25, X
    3968:	17 97       	sbiw	r26, 0x07	; 7
    396a:	01 96       	adiw	r24, 0x01	; 1
    396c:	17 96       	adiw	r26, 0x07	; 7
    396e:	9c 93       	st	X, r25
    3970:	8e 93       	st	-X, r24
    3972:	16 97       	sbiw	r26, 0x06	; 6
    3974:	ce 01       	movw	r24, r28
    3976:	df 91       	pop	r29
    3978:	cf 91       	pop	r28
    397a:	1f 91       	pop	r17
    397c:	0f 91       	pop	r16
    397e:	08 95       	ret

00003980 <sprintf>:
    3980:	ae e0       	ldi	r26, 0x0E	; 14
    3982:	b0 e0       	ldi	r27, 0x00	; 0
    3984:	e5 ec       	ldi	r30, 0xC5	; 197
    3986:	fc e1       	ldi	r31, 0x1C	; 28
    3988:	41 ce       	rjmp	.-894    	; 0x360c <__prologue_saves__+0x1c>
    398a:	0d 89       	ldd	r16, Y+21	; 0x15
    398c:	1e 89       	ldd	r17, Y+22	; 0x16
    398e:	86 e0       	ldi	r24, 0x06	; 6
    3990:	8c 83       	std	Y+4, r24	; 0x04
    3992:	1a 83       	std	Y+2, r17	; 0x02
    3994:	09 83       	std	Y+1, r16	; 0x01
    3996:	8f ef       	ldi	r24, 0xFF	; 255
    3998:	9f e7       	ldi	r25, 0x7F	; 127
    399a:	9e 83       	std	Y+6, r25	; 0x06
    399c:	8d 83       	std	Y+5, r24	; 0x05
    399e:	ae 01       	movw	r20, r28
    39a0:	47 5e       	subi	r20, 0xE7	; 231
    39a2:	5f 4f       	sbci	r21, 0xFF	; 255
    39a4:	6f 89       	ldd	r22, Y+23	; 0x17
    39a6:	78 8d       	ldd	r23, Y+24	; 0x18
    39a8:	ce 01       	movw	r24, r28
    39aa:	01 96       	adiw	r24, 0x01	; 1
    39ac:	0e 94 bc 13 	call	0x2778	; 0x2778 <vfprintf>
    39b0:	ef 81       	ldd	r30, Y+7	; 0x07
    39b2:	f8 85       	ldd	r31, Y+8	; 0x08
    39b4:	e0 0f       	add	r30, r16
    39b6:	f1 1f       	adc	r31, r17
    39b8:	10 82       	st	Z, r1
    39ba:	2e 96       	adiw	r28, 0x0e	; 14
    39bc:	e4 e0       	ldi	r30, 0x04	; 4
    39be:	42 ce       	rjmp	.-892    	; 0x3644 <__epilogue_restores__+0x1c>

000039c0 <ungetc>:
    39c0:	fb 01       	movw	r30, r22
    39c2:	23 81       	ldd	r18, Z+3	; 0x03
    39c4:	20 ff       	sbrs	r18, 0
    39c6:	12 c0       	rjmp	.+36     	; 0x39ec <ungetc+0x2c>
    39c8:	26 fd       	sbrc	r18, 6
    39ca:	10 c0       	rjmp	.+32     	; 0x39ec <ungetc+0x2c>
    39cc:	8f 3f       	cpi	r24, 0xFF	; 255
    39ce:	3f ef       	ldi	r19, 0xFF	; 255
    39d0:	93 07       	cpc	r25, r19
    39d2:	61 f0       	breq	.+24     	; 0x39ec <ungetc+0x2c>
    39d4:	82 83       	std	Z+2, r24	; 0x02
    39d6:	2f 7d       	andi	r18, 0xDF	; 223
    39d8:	20 64       	ori	r18, 0x40	; 64
    39da:	23 83       	std	Z+3, r18	; 0x03
    39dc:	26 81       	ldd	r18, Z+6	; 0x06
    39de:	37 81       	ldd	r19, Z+7	; 0x07
    39e0:	21 50       	subi	r18, 0x01	; 1
    39e2:	31 09       	sbc	r19, r1
    39e4:	37 83       	std	Z+7, r19	; 0x07
    39e6:	26 83       	std	Z+6, r18	; 0x06
    39e8:	99 27       	eor	r25, r25
    39ea:	08 95       	ret
    39ec:	8f ef       	ldi	r24, 0xFF	; 255
    39ee:	9f ef       	ldi	r25, 0xFF	; 255
    39f0:	08 95       	ret

000039f2 <__ultoa_invert>:
    39f2:	fa 01       	movw	r30, r20
    39f4:	aa 27       	eor	r26, r26
    39f6:	28 30       	cpi	r18, 0x08	; 8
    39f8:	51 f1       	breq	.+84     	; 0x3a4e <__ultoa_invert+0x5c>
    39fa:	20 31       	cpi	r18, 0x10	; 16
    39fc:	81 f1       	breq	.+96     	; 0x3a5e <__ultoa_invert+0x6c>
    39fe:	e8 94       	clt
    3a00:	6f 93       	push	r22
    3a02:	6e 7f       	andi	r22, 0xFE	; 254
    3a04:	6e 5f       	subi	r22, 0xFE	; 254
    3a06:	7f 4f       	sbci	r23, 0xFF	; 255
    3a08:	8f 4f       	sbci	r24, 0xFF	; 255
    3a0a:	9f 4f       	sbci	r25, 0xFF	; 255
    3a0c:	af 4f       	sbci	r26, 0xFF	; 255
    3a0e:	b1 e0       	ldi	r27, 0x01	; 1
    3a10:	3e d0       	rcall	.+124    	; 0x3a8e <__ultoa_invert+0x9c>
    3a12:	b4 e0       	ldi	r27, 0x04	; 4
    3a14:	3c d0       	rcall	.+120    	; 0x3a8e <__ultoa_invert+0x9c>
    3a16:	67 0f       	add	r22, r23
    3a18:	78 1f       	adc	r23, r24
    3a1a:	89 1f       	adc	r24, r25
    3a1c:	9a 1f       	adc	r25, r26
    3a1e:	a1 1d       	adc	r26, r1
    3a20:	68 0f       	add	r22, r24
    3a22:	79 1f       	adc	r23, r25
    3a24:	8a 1f       	adc	r24, r26
    3a26:	91 1d       	adc	r25, r1
    3a28:	a1 1d       	adc	r26, r1
    3a2a:	6a 0f       	add	r22, r26
    3a2c:	71 1d       	adc	r23, r1
    3a2e:	81 1d       	adc	r24, r1
    3a30:	91 1d       	adc	r25, r1
    3a32:	a1 1d       	adc	r26, r1
    3a34:	20 d0       	rcall	.+64     	; 0x3a76 <__ultoa_invert+0x84>
    3a36:	09 f4       	brne	.+2      	; 0x3a3a <__ultoa_invert+0x48>
    3a38:	68 94       	set
    3a3a:	3f 91       	pop	r19
    3a3c:	2a e0       	ldi	r18, 0x0A	; 10
    3a3e:	26 9f       	mul	r18, r22
    3a40:	11 24       	eor	r1, r1
    3a42:	30 19       	sub	r19, r0
    3a44:	30 5d       	subi	r19, 0xD0	; 208
    3a46:	31 93       	st	Z+, r19
    3a48:	de f6       	brtc	.-74     	; 0x3a00 <__ultoa_invert+0xe>
    3a4a:	cf 01       	movw	r24, r30
    3a4c:	08 95       	ret
    3a4e:	46 2f       	mov	r20, r22
    3a50:	47 70       	andi	r20, 0x07	; 7
    3a52:	40 5d       	subi	r20, 0xD0	; 208
    3a54:	41 93       	st	Z+, r20
    3a56:	b3 e0       	ldi	r27, 0x03	; 3
    3a58:	0f d0       	rcall	.+30     	; 0x3a78 <__ultoa_invert+0x86>
    3a5a:	c9 f7       	brne	.-14     	; 0x3a4e <__ultoa_invert+0x5c>
    3a5c:	f6 cf       	rjmp	.-20     	; 0x3a4a <__ultoa_invert+0x58>
    3a5e:	46 2f       	mov	r20, r22
    3a60:	4f 70       	andi	r20, 0x0F	; 15
    3a62:	40 5d       	subi	r20, 0xD0	; 208
    3a64:	4a 33       	cpi	r20, 0x3A	; 58
    3a66:	18 f0       	brcs	.+6      	; 0x3a6e <__ultoa_invert+0x7c>
    3a68:	49 5d       	subi	r20, 0xD9	; 217
    3a6a:	31 fd       	sbrc	r19, 1
    3a6c:	40 52       	subi	r20, 0x20	; 32
    3a6e:	41 93       	st	Z+, r20
    3a70:	02 d0       	rcall	.+4      	; 0x3a76 <__ultoa_invert+0x84>
    3a72:	a9 f7       	brne	.-22     	; 0x3a5e <__ultoa_invert+0x6c>
    3a74:	ea cf       	rjmp	.-44     	; 0x3a4a <__ultoa_invert+0x58>
    3a76:	b4 e0       	ldi	r27, 0x04	; 4
    3a78:	a6 95       	lsr	r26
    3a7a:	97 95       	ror	r25
    3a7c:	87 95       	ror	r24
    3a7e:	77 95       	ror	r23
    3a80:	67 95       	ror	r22
    3a82:	ba 95       	dec	r27
    3a84:	c9 f7       	brne	.-14     	; 0x3a78 <__ultoa_invert+0x86>
    3a86:	00 97       	sbiw	r24, 0x00	; 0
    3a88:	61 05       	cpc	r22, r1
    3a8a:	71 05       	cpc	r23, r1
    3a8c:	08 95       	ret
    3a8e:	9b 01       	movw	r18, r22
    3a90:	ac 01       	movw	r20, r24
    3a92:	0a 2e       	mov	r0, r26
    3a94:	06 94       	lsr	r0
    3a96:	57 95       	ror	r21
    3a98:	47 95       	ror	r20
    3a9a:	37 95       	ror	r19
    3a9c:	27 95       	ror	r18
    3a9e:	ba 95       	dec	r27
    3aa0:	c9 f7       	brne	.-14     	; 0x3a94 <__ultoa_invert+0xa2>
    3aa2:	62 0f       	add	r22, r18
    3aa4:	73 1f       	adc	r23, r19
    3aa6:	84 1f       	adc	r24, r20
    3aa8:	95 1f       	adc	r25, r21
    3aaa:	a0 1d       	adc	r26, r0
    3aac:	08 95       	ret

00003aae <__ctype_isfalse>:
    3aae:	99 27       	eor	r25, r25
    3ab0:	88 27       	eor	r24, r24

00003ab2 <__ctype_istrue>:
    3ab2:	08 95       	ret

00003ab4 <_exit>:
    3ab4:	f8 94       	cli

00003ab6 <__stop_program>:
    3ab6:	ff cf       	rjmp	.-2      	; 0x3ab6 <__stop_program>
